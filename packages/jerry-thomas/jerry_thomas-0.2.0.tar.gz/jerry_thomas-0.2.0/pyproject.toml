[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jerry-thomas"
version = "0.2.0"
description = "Jerry-Thomas: a stream-first, plugin-friendly data pipeline (mixology-themed CLI)"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Anders Skott Lind" }]
dependencies = [
  "numpy>=1.24,<3.0",
  "pydantic>=2.0",
  "PyYAML>=5.4",
  "tqdm>=4.0",
  "jinja2>=3.0",
]

[project.optional-dependencies]
# Extra helpers for ML adapters in datapipeline.integrations
ml = [
  "pandas>=2.0",
  "torch>=2.0",
]

[project.scripts]
jerry = "datapipeline.cli.app:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
datapipeline = [
  "templates/dataset_config.yaml",
  "templates/plugin_skeleton/**",
  "templates/stubs/**"
]

[project.entry-points."datapipeline.filters"]

[project.entry-points."datapipeline.transforms.record"]
lag = "datapipeline.transforms.record.lag:apply_lag"
floor_time = "datapipeline.transforms.record.floor_time:floor_time"
filter = "datapipeline.transforms.filter:filter"

[project.entry-points."datapipeline.transforms.stream"]
ensure_ticks = "datapipeline.transforms.stream.ensure_ticks:ensure_ticks"
fill = "datapipeline.transforms.stream.fill:FillTransformer"
granularity = "datapipeline.transforms.stream.granularity:FeatureGranularityTransform"
lint = "datapipeline.transforms.stream.lint:StreamLint"

[project.entry-points."datapipeline.transforms.feature"]
scale = "datapipeline.transforms.feature.scaler:StandardScalerTransform"
sequence = "datapipeline.transforms.sequence:WindowTransformer"

[project.entry-points."datapipeline.transforms.vector"]
drop_missing = "datapipeline.transforms.vector:VectorDropMissingTransform"
fill_constant = "datapipeline.transforms.vector:VectorFillConstantTransform"
fill_history = "datapipeline.transforms.vector:VectorFillHistoryTransform"
fill_horizontal = "datapipeline.transforms.vector:VectorFillAcrossPartitionsTransform"

[project.entry-points."datapipeline.mappers"]
"time.synthetic" = "datapipeline.mappers.noop:identity"
"encode_time" = "datapipeline.mappers.synthetic.time:encode"

[project.entry-points."datapipeline.loaders"]
"synthetic.time" = "datapipeline.sources.synthetic.time.loader:make_time_loader"
"composed.loader" = "datapipeline.sources.factory:build_loader"

[project.entry-points."datapipeline.parsers"]
"synthetic.time" = "datapipeline.sources.synthetic.time.parser:TimeRowParser"
identity = "datapipeline.parsers.identity:IdentityParser"

[tool.pytest.ini_options]
pythonpath = ["src"]
[project.entry-points."datapipeline.transforms.debug"]
identity = "datapipeline.transforms.debug.identity:IdentityGuardTransform"
lint = "datapipeline.transforms.debug.lint:StreamLint"
