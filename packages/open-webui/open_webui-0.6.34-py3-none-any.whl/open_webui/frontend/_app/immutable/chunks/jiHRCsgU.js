import{e as i}from"./BzMu2T5T.js";const s=async(r,o,e,t)=>{let n=null;const a=await fetch(`${i}/knowledge/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({name:o,description:e,access_control:t})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(n=c.detail,null));if(n)throw n;return a},h=async(r="")=>{let o=null;const e=await fetch(`${i}/knowledge/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return e},d=async(r="")=>{let o=null;const e=await fetch(`${i}/knowledge/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return e},u=async(r,o)=>{let e=null;const t=await fetch(`${i}/knowledge/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return t},p=async(r,o,e)=>{let t=null;const n=await fetch(`${i}/knowledge/${o}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({name:e!=null&&e.name?e.name:void 0,description:e!=null&&e.description?e.description:void 0,data:e!=null&&e.data?e.data:void 0,access_control:e.access_control})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(t=a.detail,null));if(t)throw t;return n},w=async(r,o,e)=>{let t=null;const n=await fetch(`${i}/knowledge/${o}/file/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(t=a.detail,null));if(t)throw t;return n},y=async(r,o,e)=>{let t=null;const n=await fetch(`${i}/knowledge/${o}/file/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(t=a.detail,null));if(t)throw t;return n},j=async(r,o,e)=>{let t=null;const n=await fetch(`${i}/knowledge/${o}/file/remove`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(t=a.detail,null));if(t)throw t;return n},g=async(r,o)=>{let e=null;const t=await fetch(`${i}/knowledge/${o}/reset`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return t},$=async(r,o)=>{let e=null;const t=await fetch(`${i}/knowledge/${o}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return t},f=async r=>{let o=null;const e=await fetch(`${i}/knowledge/reindex`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,null));if(o)throw o;return e};export{d as a,u as b,s as c,$ as d,w as e,j as f,h as g,p as h,f as i,g as r,y as u};
//# sourceMappingURL=jiHRCsgU.js.map
