import{S as d,i as p,s as v,x as m,e as h,c as b,a as g,d as f,g as I,z as E,A as $,B as D,q,r as w,N as y,w as L,_ as M,H as S}from"./BsAB9Z30.js";import"./IHki7fMi.js";function k(r){let n,a;const o=r[2].default,t=m(o,r,r[1],null);return{c(){n=h("div"),t&&t.c()},l(e){n=b(e,"DIV",{});var s=g(n);t&&t.l(s),s.forEach(f)},m(e,s){I(e,n,s),t&&t.m(n,null),r[3](n),a=!0},p(e,[s]){t&&t.p&&(!a||s&2)&&E(t,o,e,e[1],a?D(o,e[1],s,null):$(e[1]),null)},i(e){a||(q(t,e),a=!0)},o(e){w(t,e),a=!1},d(e){e&&f(n),t&&t.d(e),r[3](null)}}}function z(r,n,a){let{$$slots:o={},$$scope:t}=n;const e=y();let s,i,c;L(()=>{i=new IntersectionObserver((l,A)=>{l.forEach(_=>{_.isIntersecting?c=setInterval(()=>{e("visible")},100):clearInterval(c)})},{root:null,rootMargin:"0px",threshold:.1}),i.observe(s)}),M(()=>{i&&i.disconnect(),c&&clearInterval(c)});function u(l){S[l?"unshift":"push"](()=>{s=l,a(0,s)})}return r.$$set=l=>{"$$scope"in l&&a(1,t=l.$$scope)},[s,t,o,u]}class H extends d{constructor(n){super(),p(this,n,z,k,v,{})}}export{H as L};
//# sourceMappingURL=LNJKunkS.js.map
