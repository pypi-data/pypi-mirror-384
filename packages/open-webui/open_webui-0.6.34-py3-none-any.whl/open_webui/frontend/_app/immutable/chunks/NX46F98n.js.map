{"version":3,"file":"NX46F98n.js","sources":["../../../../../../node_modules/@sveltejs/svelte-virtual-list/VirtualList.svelte","../../../../../../src/lib/components/common/EmojiPicker.svelte"],"sourcesContent":["<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items;\n\texport let height = '100%';\n\texport let itemHeight = undefined;\n\n\tlet foo;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i +=1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\n\tsvelte-virtual-list-viewport {\n\t\tposition: relative;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling:touch;\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-contents, svelte-virtual-list-row {\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-row {\n\t\toverflow: hidden;\n\t}\n</style>\n\n<svelte-virtual-list-viewport\n\tbind:this={viewport}\n\tbind:offsetHeight={viewport_height}\n\ton:scroll={handle_scroll}\n\tstyle=\"height: {height};\"\n>\n\t<svelte-virtual-list-contents\n\t\tbind:this={contents}\n\t\tstyle=\"padding-top: {top}px; padding-bottom: {bottom}px;\"\n\t>\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n","<script lang=\"ts\">\n\timport { DropdownMenu } from 'bits-ui';\n\timport VirtualList from '@sveltejs/svelte-virtual-list';\n\n\timport { getContext } from 'svelte';\n\n\timport { flyAndScale } from '$lib/utils/transitions';\n\timport { WEBUI_BASE_URL } from '$lib/constants';\n\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\n\timport emojiGroups from '$lib/emoji-groups.json';\n\timport emojiShortCodes from '$lib/emoji-shortcodes.json';\n\n\tconst i18n = getContext('i18n');\n\n\texport let onClose = () => {};\n\texport let onSubmit = (name) => {};\n\texport let side = 'top';\n\texport let align = 'start';\n\texport let user = null;\n\n\tlet show = false;\n\tlet emojis = emojiShortCodes;\n\tlet search = '';\n\tlet flattenedEmojis = [];\n\tlet emojiRows = [];\n\n\t// Reactive statement to filter the emojis based on search query\n\t$: {\n\t\tif (search) {\n\t\t\temojis = Object.keys(emojiShortCodes).reduce((acc, key) => {\n\t\t\t\tif (key.includes(search.toLowerCase())) {\n\t\t\t\t\tacc[key] = emojiShortCodes[key];\n\t\t\t\t} else {\n\t\t\t\t\tif (Array.isArray(emojiShortCodes[key])) {\n\t\t\t\t\t\tconst filtered = emojiShortCodes[key].filter((emoji) =>\n\t\t\t\t\t\t\temoji.includes(search.toLowerCase())\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (filtered.length) {\n\t\t\t\t\t\t\tacc[key] = filtered;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (emojiShortCodes[key].includes(search.toLowerCase())) {\n\t\t\t\t\t\t\tacc[key] = emojiShortCodes[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\t} else {\n\t\t\temojis = emojiShortCodes;\n\t\t}\n\t}\n\t// Flatten emoji groups and group them into rows of 8 for virtual scrolling\n\t$: {\n\t\tflattenedEmojis = [];\n\t\tObject.keys(emojiGroups).forEach((group) => {\n\t\t\tconst groupEmojis = emojiGroups[group].filter((emoji) => emojis[emoji]);\n\t\t\tif (groupEmojis.length > 0) {\n\t\t\t\tflattenedEmojis.push({ type: 'group', label: group });\n\t\t\t\tflattenedEmojis.push(\n\t\t\t\t\t...groupEmojis.map((emoji) => ({\n\t\t\t\t\t\ttype: 'emoji',\n\t\t\t\t\t\tname: emoji,\n\t\t\t\t\t\tshortCodes:\n\t\t\t\t\t\t\ttypeof emojiShortCodes[emoji] === 'string'\n\t\t\t\t\t\t\t\t? [emojiShortCodes[emoji]]\n\t\t\t\t\t\t\t\t: emojiShortCodes[emoji]\n\t\t\t\t\t}))\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\t// Group emojis into rows of 8\n\t\temojiRows = [];\n\t\tlet currentRow = [];\n\t\tflattenedEmojis.forEach((item) => {\n\t\t\tif (item.type === 'emoji') {\n\t\t\t\tcurrentRow.push(item);\n\t\t\t\tif (currentRow.length === 8) {\n\t\t\t\t\temojiRows.push(currentRow);\n\t\t\t\t\tcurrentRow = [];\n\t\t\t\t}\n\t\t\t} else if (item.type === 'group') {\n\t\t\t\tif (currentRow.length > 0) {\n\t\t\t\t\temojiRows.push(currentRow); // Push the remaining row\n\t\t\t\t\tcurrentRow = [];\n\t\t\t\t}\n\t\t\t\temojiRows.push([item]); // Add the group label as a separate row\n\t\t\t}\n\t\t});\n\t\tif (currentRow.length > 0) {\n\t\t\temojiRows.push(currentRow); // Push the final row\n\t\t}\n\t}\n\tconst ROW_HEIGHT = 48; // Approximate height for a row with multiple emojis\n\t// Handle emoji selection\n\tfunction selectEmoji(emoji) {\n\t\tconst selectedCode = emoji.shortCodes[0];\n\t\tonSubmit(selectedCode);\n\t\tshow = false;\n\t}\n</script>\n\n<DropdownMenu.Root\n\tbind:open={show}\n\tcloseFocus={false}\n\tonOpenChange={(state) => {\n\t\tif (!state) {\n\t\t\tsearch = '';\n\t\t\tonClose();\n\t\t}\n\t}}\n\ttypeahead={false}\n>\n\t<DropdownMenu.Trigger>\n\t\t<slot />\n\t</DropdownMenu.Trigger>\n\t<DropdownMenu.Content\n\t\tclass=\"max-w-full w-80 bg-gray-50 dark:bg-gray-850 rounded-lg z-9999 shadow-lg dark:text-white\"\n\t\tsideOffset={8}\n\t\t{side}\n\t\t{align}\n\t\ttransition={flyAndScale}\n\t>\n\t\t<div class=\"mb-1 px-3 pt-2 pb-2\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"w-full text-sm bg-transparent outline-hidden\"\n\t\t\t\tplaceholder={$i18n.t('Search all emojis')}\n\t\t\t\tbind:value={search}\n\t\t\t/>\n\t\t</div>\n\t\t<!-- Virtualized Emoji List -->\n\t\t<div class=\"w-full flex justify-start h-96 overflow-y-auto px-3 pb-3 text-sm\">\n\t\t\t{#if emojiRows.length === 0}\n\t\t\t\t<div class=\"text-center text-xs text-gray-500 dark:text-gray-400\">\n\t\t\t\t\t{$i18n.t('No results')}\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<div class=\"w-full flex ml-0.5\">\n\t\t\t\t\t<VirtualList rowHeight={ROW_HEIGHT} items={emojiRows} height={384} let:item>\n\t\t\t\t\t\t<div class=\"w-full\">\n\t\t\t\t\t\t\t{#if item.length === 1 && item[0].type === 'group'}\n\t\t\t\t\t\t\t\t<!-- Render group header -->\n\t\t\t\t\t\t\t\t<div class=\"text-xs font-medium mb-2 text-gray-500 dark:text-gray-400\">\n\t\t\t\t\t\t\t\t\t{item[0].label}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<!-- Render emojis in a row -->\n\t\t\t\t\t\t\t\t<div class=\"flex items-center gap-1.5 w-full\">\n\t\t\t\t\t\t\t\t\t{#each item as emojiItem}\n\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\tcontent={emojiItem.shortCodes.map((code) => `:${code}:`).join(', ')}\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"p-1.5 rounded-lg cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700 transition\"\n\t\t\t\t\t\t\t\t\t\t\t\ton:click={() => selectEmoji(emojiItem)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"{WEBUI_BASE_URL}/assets/emojis/{emojiItem.name.toLowerCase()}.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={emojiItem.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"size-5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</VirtualList>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</DropdownMenu.Content>\n</DropdownMenu.Root>\n"],"names":["get_default_slot_context","ctx","insert_hydration","target","svelte_virtual_list_row","anchor","get_key","i","svelte_virtual_list_viewport","append_hydration","svelte_virtual_list_contents","items","$$props","height","itemHeight","start","end","height_map","rows","viewport","contents","viewport_height","visible","mounted","top","bottom","average_height","refresh","scrollTop","tick","content_height","row","row_height","$$invalidate","remaining","handle_scroll","old_start","v","y","expected_height","actual_height","d","onMount","$$value","data","ROW_HEIGHT","div","set_data","t","t_value","each_blocks","src_url_equal","img","img_src_value","WEBUI_BASE_URL","attr","img_alt_value","button","dirty","func","tooltip_changes","div0","input","div1","flyAndScale","code","i18n","getContext","onClose","onSubmit","name","side","align","user","show","emojis","emojiShortCodes","search","flattenedEmojis","emojiRows","selectEmoji","emoji","selectedCode","click_handler","emojiItem","state","value","acc","key","filtered","emojiGroups","group","groupEmojis","currentRow","item"],"mappings":"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","x_google_ignoreList":[0]}