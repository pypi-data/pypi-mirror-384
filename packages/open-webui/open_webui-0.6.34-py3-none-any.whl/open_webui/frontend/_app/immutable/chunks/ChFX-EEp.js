import{e as r}from"./BzMu2T5T.js";const i=async(a,e)=>{let o=null;const n=await fetch(`${r}/prompts/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...e,command:`/${e.command}`})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,null));if(o)throw o;return n},s=async(a="")=>{let e=null;const o=await fetch(`${r}/prompts/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return o},h=async(a="")=>{let e=null;const o=await fetch(`${r}/prompts/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return o},l=async(a,e)=>{let o=null;const n=await fetch(`${r}/prompts/command/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return n},p=async(a,e)=>{let o=null;const n=await fetch(`${r}/prompts/command/${e.command}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...e,command:`/${e.command}`})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return n},u=async(a,e)=>{let o=null;e=e.charAt(0)==="/"?e.slice(1):e;const n=await fetch(`${r}/prompts/command/${e}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return n};export{l as a,h as b,i as c,u as d,s as g,p as u};
//# sourceMappingURL=ChFX-EEp.js.map
