import{e as a,g as c}from"./BzMu2T5T.js";const l=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/import`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({config:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},u=async r=>{let e=null;const o=await fetch(`${a}/configs/export`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},f=async r=>{let e=null;const o=await fetch(`${a}/configs/connections`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},y=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/connections`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},d=async r=>{let e=null;const o=await fetch(`${a}/configs/tool_servers`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},w=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/tool_servers`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},p=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/tool_servers/verify`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},g=async(r,e,o=null)=>{let t=null;const n=o?`?type=${o}`:"",s=await fetch(`${a}/configs/oauth/clients/register${n}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(t=i.detail,null));if(t)throw t;return s},j=(r,e=null)=>{const o=e?`${e}:${r}`:r;return`${c}/oauth/clients/${o}/authorize`},$=async r=>{let e=null;const o=await fetch(`${a}/configs/code_execution`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},C=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/code_execution`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},T=async r=>{let e=null;const o=await fetch(`${a}/configs/models`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},m=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/models`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},S=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/suggestions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({suggestions:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t},A=async r=>{let e=null;const o=await fetch(`${a}/configs/banners`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return o},B=async(r,e)=>{let o=null;const t=await fetch(`${a}/configs/banners`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({banners:e})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(o=n.detail,null));if(o)throw o;return t};export{B as a,T as b,m as c,f as d,u as e,y as f,A as g,$ as h,l as i,C as j,d as k,w as l,j as m,g as r,S as s,p as v};
//# sourceMappingURL=X1mgxyb2.js.map
