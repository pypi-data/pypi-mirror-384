import{A as i}from"./BzMu2T5T.js";const h=async a=>{let n=null;const e=await fetch(`${i}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e},l=async(a,n)=>{let e=null;const t=await fetch(`${i}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(e=o.detail,null));if(e)throw e;return t},u=async(a,n,e)=>{const t=new FormData;t.append("file",n),e&&t.append("language",e);let o=null;const s=await fetch(`${i}/transcriptions`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${a}`},body:t}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(o=r.detail,null));if(o)throw o;return s},d=async(a="",n="alloy",e="",t)=>{let o=null;const s=await fetch(`${i}/speech`,{method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({input:e,voice:n,...t})}).then(async r=>{if(!r.ok)throw await r.json();return r}).catch(r=>(o=r.detail,null));if(o)throw o;return s},p=async(a="")=>{let n=null;const e=await fetch(`${i}/models`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e},f=async(a="")=>{let n=null;const e=await fetch(`${i}/voices`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,null));if(n)throw n;return e};export{p as a,f as b,h as g,d as s,u as t,l as u};
//# sourceMappingURL=BmX3s3f-.js.map
