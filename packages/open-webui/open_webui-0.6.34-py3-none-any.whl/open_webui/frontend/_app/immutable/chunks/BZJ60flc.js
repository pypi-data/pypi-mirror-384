import{e as i}from"./BzMu2T5T.js";const s=async(r,o)=>{let e=null;const t=await fetch(`${i}/groups/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(e=n.detail,null));if(e)throw e;return t},u=async(r="")=>{let o=null;const e=await fetch(`${i}/groups/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,null));if(o)throw o;return e},p=async(r,o,e)=>{let t=null;const n=await fetch(`${i}/groups/id/${o}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({...e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(t=a.detail,null));if(t)throw t;return n},h=async(r,o)=>{let e=null;const t=await fetch(`${i}/groups/id/${o}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,null));if(e)throw e;return t};export{s as c,h as d,u as g,p as u};
//# sourceMappingURL=BZJ60flc.js.map
