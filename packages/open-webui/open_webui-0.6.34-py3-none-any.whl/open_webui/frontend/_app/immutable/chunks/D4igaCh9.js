import{I as i}from"./BzMu2T5T.js";const c=async(a="")=>{let n=null;const e=await fetch(`${i}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return e},l=async(a="",n)=>{let e=null;const t=await fetch(`${i}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return t},s=async(a="")=>{let n=null;const e=await fetch(`${i}/config/url/verify`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return e},h=async(a="")=>{let n=null;const e=await fetch(`${i}/image/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return e},f=async(a="",n)=>{let e=null;const t=await fetch(`${i}/image/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return t},p=async(a="")=>{let n=null;const e=await fetch(`${i}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return e},u=async(a="",n)=>{let e=null;const t=await fetch(`${i}/generations`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({prompt:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return t};export{h as a,p as b,f as c,c as g,u as i,l as u,s as v};
//# sourceMappingURL=D4igaCh9.js.map
