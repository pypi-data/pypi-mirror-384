<!--
Multiple checkboxes widget

Paramètres obligatoires :
 - 'values' : liste de tuples (key, value), un pour les name/label de chaque checkbox

Paramètres facultatifs :
 - 'values_descriptions' : liste de string, une pour la description de chaque checkbox
 - 'has_column' : 3 possibilités :
      - False ou non présent : pas de colonnes
      - True : avec colonnes automatiques (nombre de colonnes selon la taille d'affichage disponible)
      - 'large' : avec colonnes automatiques mais plus larges (pour les textes plus longs)
-->
<div tal:define="css_class css_class|field.widget.css_class;
                 style style|field.widget.style;
                 oid oid|field.oid;
                 column_class getattr(field.widget, 'has_column', False);
                 inline getattr(field.widget, 'inline', False);
                 autofocus autofocus|field.autofocus"
     tal:omit-tag="not inline">
  ${field.start_sequence()}

  <div tal:attributes="class 'layout flex auto_cols ' + column_class if column_class else ''">
    <div tal:repeat="choice values | field.widget.values"
         tal:omit-tag="inline"
         class="checkbox">
      <label for="${oid}-${repeat.choice.index}"
             tal:define="(value, title) choice"
             tal:attributes="class inline and 'checkbox-inline'">
        <input tal:attributes="checked value in cstruct;
               class css_class;
               style style;
               autofocus not repeat.choice.index and autofocus;
               attributes|field.widget.attributes|{};"
               type="checkbox"
               name="checkbox"
               value="${value}"
               id="${oid}-${repeat.choice.index}"/>
        <span>${structure:title}</span>
      </label>
      <p tal:condition="getattr(field.widget, 'values_descriptions', [])"
        class="help-block" >
        ${structure:field.widget.values_descriptions[repeat.choice.index]}  
      </p>
    </div>
  </div>
  ${field.end_sequence()}
</div>
