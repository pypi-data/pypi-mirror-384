name: Deploy on Tag

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    build:
        name: Build distribution
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - name: リポジトリをチェックアウト
              uses: actions/checkout@v4

            - name: uv をインストール
              uses: astral-sh/setup-uv@v5
              with:
                  version: "latest"
                  # キャッシュを有効にする
                  enable-cache: true

            - name: Python をセットアップ
              run: uv python install

            - name: 依存関係をインストール
              run: uv sync --all-extras --dev

            - name: コード品質チェック (ruff)
              # pyproject.tomlの設定を明示的に使用
              run: uv run ruff check wandas tests --config=pyproject.toml

            - name: 型チェック (mypy)
              # pyproject.tomlの設定を明示的に使用
              run: uv run mypy --config-file=pyproject.toml

            - name: テスト実行 (pytest)
              # pytestは自動的にpyproject.tomlを検出します
              run: uv run pytest

            - name: Build a binary wheel and a source tarball
              run: uv build

            - name: Store the distribution packages
              uses: actions/upload-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/

    test-installation:
        name: Test installation from wheel
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: リポジトリをチェックアウト
              uses: actions/checkout@v4

            - name: uv をインストール
              uses: astral-sh/setup-uv@v5
              with:
                  version: "latest"
                  # キャッシュを有効にする
                  enable-cache: true

            - name: Python をセットアップ
              run: uv python install

            - name: Download wheel artifact
              uses: actions/download-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/

            - name: Create virtual environment
              run: uv venv test-install-env

            - name: Install Git dependency (waveform-analysis)
              shell: bash
              run: |
                  source test-install-env/bin/activate
                  uv pip install git+https://github.com/endolith/waveform-analysis.git@master

            - name: Activate virtual environment and install wheel
              run: |
                  source test-install-env/bin/activate
                  uv pip install dist/*.whl

            - name: Run import test
              run: |
                  source test-install-env/bin/activate
                  uv run python scripts/test_installation.py


    publish-to-pypi:
        name: >-
            Publish Python distribution to PyPI
        if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
        needs:
        - test-installation
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/project/wandas/  # Replace <package-name> with your PyPI project name
        permissions:
            id-token: write  # IMPORTANT: mandatory for trusted publishing

        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            password: ${{secrets.PYPI_API_TOKEN}}


    github-release:
        name: >-
            Sign the Python distribution with Sigstore
            and upload them to GitHub Release
        needs:
        - publish-to-pypi
        runs-on: ubuntu-latest

        permissions:
            contents: write  # IMPORTANT: mandatory for making GitHub Releases
            id-token: write  # IMPORTANT: mandatory for sigstore

        steps:
            - name: Download all the dists
              uses: actions/download-artifact@v4
              with:
                name: python-package-distributions
                path: dist/
            - name: Sign the dists with Sigstore
              uses: sigstore/gh-action-sigstore-python@v3.0.0
              with:
                inputs: >-
                    ./dist/*.tar.gz
                    ./dist/*.whl
            - name: Create GitHub Release and Upload Assets
              uses: softprops/action-gh-release@v2
              with:
                # GITHUB_TOKEN はデフォルトで使用されるが、明示的に指定
                # token: ${{ secrets.GITHUB_TOKEN }}
                tag_name: ${{ github.ref_name }} # トリガーとなったタグ名を使用
                generate_release_notes: true # リリースノートを自動生成
                files: dist/* # distディレクトリ内の全ファイル (署名含む) をアップロード
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # パーミッションで与えられたトークンを使用
