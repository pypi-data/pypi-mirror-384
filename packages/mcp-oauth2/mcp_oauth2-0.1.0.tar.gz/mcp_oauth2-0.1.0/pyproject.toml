[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-oauth2"
version = "0.1.0"
description = "Minimal, secure OAuth2 authorization library for MCP servers"
readme = "README.md"
requires-python = ">=3.13.5"
license = {file = "LICENSE"}
authors = [
    {name = "MCP OAuth2 Team", email = "team@mcp-oauth2.dev"},
]
keywords = ["oauth2", "jwt", "mcp", "fastapi", "authentication"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security :: Cryptography",
]
dependencies = [
    "fastapi>=0.104.0",
    "pydantic>=2.5.0",
    "pyjwt[crypto]>=2.8.0",
    "httpx>=0.25.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]

[project.urls]
Homepage = "https://github.com/mcp-oauth2/mcp-oauth2"
Documentation = "https://mcp-oauth2.readthedocs.io"
Repository = "https://github.com/mcp-oauth2/mcp-oauth2.git"
"Bug Tracker" = "https://github.com/mcp-oauth2/mcp-oauth2/issues"

[tool.hatch.build.targets.wheel]
packages = ["mcp_oauth2"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jwt.*",
    "cryptography.*",
    "httpx.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pyrefly]
python-version = "3.13.0"
ignore-missing-imports = [
    "jwt.*",
    "cryptography.*",
    "httpx.*",
]

[tool.coverage.run]
source = ["mcp_oauth2"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.7.0",
    "ruff>=0.1.0",
    "httpx>=0.25.0",
    "coverage>=7.10.7",
]
