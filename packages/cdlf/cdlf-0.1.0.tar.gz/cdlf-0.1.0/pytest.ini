[pytest]
# Pytest configuration for CDLF test suite

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Paths to search for tests
testpaths = tests

# Minimum Python version
minversion = 7.0

# Show extra test summary info
addopts =
    -ra
    --strict-markers
    --strict-config
    --showlocals
    --tb=short
    -v

# Custom markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for workflows
    slow: Tests that take significant time (>1s)
    statistical: Tests validating statistical properties (coverage guarantees)
    adaptive: Tests for adaptive conformal prediction
    specialized: Tests for specialized CP variants
    tensorflow: Tests requiring TensorFlow
    production: Tests for production features (monitoring, serving)
    regression: Tests for regression tasks
    classification: Tests for classification tasks
    parametrize: Parametrized tests across multiple scenarios
    asyncio: Async tests requiring asyncio

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:tensorflow.*
    ignore::UserWarning:sklearn.*

# Coverage options
[coverage:run]
source = cdlf
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    pass
    \.\.\.
