[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "target-synthesis-agent"
version = "1.0.1"
description = "AI-powered target variable creation and synthesis agent"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "StepFunction AI", email = "rajesh@stepfunction.ai"}
]
maintainers = [
    {name = "StepFunction AI", email = "rajesh@stepfunction.ai"}
]
keywords = ["machine learning", "target synthesis", "AI", "ML", "automation", "target variables"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

requires-python = ">=3.11"
dependencies = [
    "sfn-blueprint>=0.6.6",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "pydantic>=2.0.0",
    "scikit-learn>=1.5.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/stepfnAI/target_synthesis_agent"
Documentation = "https://github.com/stepfnAI/target_synthesis_agent#readme"
Repository = "https://github.com/stepfnAI/target_synthesis_agent.git"
"Bug Tracker" = "https://github.com/stepfnAI/target_synthesis_agent/issues"

[project.scripts]
target-synthesis-agent = "target_synthesis_agent.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
