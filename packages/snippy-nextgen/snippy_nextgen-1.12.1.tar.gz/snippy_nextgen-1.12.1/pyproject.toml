[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "snippy-nextgen"
dynamic = ["version"]
description = 'The Next Generation of Microbial Variant Calling with Snippy'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = [
  "snippy",
  "variant calling",
  "bioinformatics",
  "genomics",
  "microbial genomics",
]
authors = [
  { name = "Wytamma Wirth", email = "wytamma.wirth@me.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click",
  "packaging",
  "pydantic",
  "biopython",
]

[project.urls]
Documentation = "https://github.com/centre-pathogen-genomics/snippy-ng#readme"
Issues = "https://github.com/centre-pathogen-genomics/snippy-ng/issues"
Source = "https://github.com/centre-pathogen-genomics/snippy-ng"

[project.scripts]
snippy-ng = "snippy_ng.cli:snippy_ng"

[tool.hatch.version]
path = "src/snippy_ng/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/snippy_ng"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "mkdocstrings==0.22.0",
  "mkdocstrings-python==1.3.*",
  "mkdocs_autorefs==1.3.1",
  "mkdocs-material",
  "python-semantic-release",
  "glasscandle",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage xml",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/snippy_ng tests}"

[tool.coverage.run]
source_pkgs = ["snippy_ng", "tests"]
branch = true
parallel = true
omit = [
  "src/snippy_ng/__about__.py",
]

[tool.coverage.paths]
snippy_ng = ["src/snippy_ng", "*/snippy-ng/src/snippy_ng"]
tests = ["tests", "*/snippy-ng/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.semantic_release]
version_variables = ["src/snippy_ng/__about__.py:__version__"]
repository = "git@github.com:centre-pathogen-genomics/snippy-ng.git"

[tool.semantic_release.remote]
ignore_token_for_push = true 

[tool.pixi.project]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64"]

[tool.pixi.tasks]

[tool.pixi.dependencies]
# python dependencies
click   = { version = "*", channel = "conda-forge" }
packaging =  { version = "*", channel = "conda-forge" }
pydantic  = { version = "*", channel = "conda-forge" }
biopython = { version = "*", channel = "conda-forge" }
# external dependencies
samtools = { version = "<1.21", channel = "bioconda" }
samclip = { version = ">=0.4.0", channel = "bioconda" }
bwa = { version = ">=0.7.19,<0.8", channel = "bioconda" }
freebayes = { version = ">=1.3.2", channel = "bioconda" }
bcftools = { version = ">=1.21,<2", channel = "bioconda" }
minimap2 = { version = ">=2.30,<3", channel = "bioconda" }
fastp = { version = ">=0.20.0,<2", channel = "bioconda" }
seqkit = { version = ">=2.10.0,<3", channel = "bioconda" }
rasusa = { version = ">=2.1.1,<3", channel = "bioconda"}
bedtools = {version = ">=2.31.1,<3", channel = "bioconda"}
