[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llmring"
version = "1.1.1"
description = "Unified Python interface for OpenAI, Anthropic, Google, and Ollama LLMs"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Juan Reyero", email = "juan@juanreyero.com" }
]
maintainers = [
    { name = "Juan Reyero", email = "juan@juanreyero.com" }
]
keywords = ["llm", "ai", "openai", "anthropic", "claude", "gpt", "gemini", "ollama", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"

# Runtime dependencies - simplified without database
dependencies = [
    "anthropic>=0.67.0",
    "openai>=1.99.0",
    "google-genai>=0.1.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.8.0",
    "ollama>=0.4.0",
    "toml>=0.10.2",
    "cryptography>=41.0.0",
    "click>=8.2.1",
    "rich>=14.1.0",
    "prompt-toolkit>=3.0.51",
    "tenacity>=9.1.2",
    "websockets>=15.0.1",
    "typing-extensions>=4.14.1",
    "tiktoken>=0.5.0",
    "jsonschema>=4.0.0",
    "cachetools>=5.5.2",
]

[project.urls]
Homepage = "https://llmring.ai"
Documentation = "https://github.com/juanre/llmring"
Repository = "https://github.com/juanre/llmring"
Issues = "https://github.com/juanre/llmring/issues"

[project.scripts]
llmring = "llmring.cli:main"
mcp-client = "llmring.mcp.client.cli:main"

[project.optional-dependencies]
http = [
    "fastapi>=0.100.0",
    "uvicorn>=0.30.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "claude-code-sdk>=0.0.10",
    "isort>=6.0.1",
    "mypy>=1.17.1",
    "pillow>=11.2.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-mock>=3.10",
    "pyright>=1.1",
    "reportlab>=4.4.3",
    "ruff>=0.12.9",
    "types-toml>=0.10.8.20240310",
    "twine>=6.2.0",
    "pre-commit>=4.3.0",
    "llmring-server>=0.1.2",
]

[tool.hatch.build.targets.wheel]
packages = ["src/llmring"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.hatch.build]
include = [
    "src/llmring/**/*.py",
    "src/llmring/**/*.lock",  # Include lockfiles in package distribution
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "llm: marks tests as LLM-related",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
    "google: marks tests as Google-specific",
    "ollama: marks tests as Ollama-specific",
    "openai: marks tests as OpenAI-specific",
    "anthropic: marks tests as Anthropic-specific",
]
filterwarnings = [
    "ignore:websockets.legacy is deprecated:DeprecationWarning",
    "ignore:websockets.server.WebSocketServerProtocol is deprecated:DeprecationWarning",
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["llmring"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 100
target-version = "py310"
