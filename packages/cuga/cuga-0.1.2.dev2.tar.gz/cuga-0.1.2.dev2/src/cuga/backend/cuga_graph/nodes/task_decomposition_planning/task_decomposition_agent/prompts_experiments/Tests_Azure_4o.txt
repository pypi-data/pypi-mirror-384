# Your task
* **intent**: 'Navigate to the Books subreddit, identify the newest post, and upvote it.
* **start url**: Reddit home page

1.	Locate and navigate to the Books subreddit from the Reddit home page.
    o	inputs: {"subreddit_name": "Books"}
    o	outputs: None
    o	checkpoint: Confirm you are on the Books subreddit page.
2.	Identify the newest post in the Books subreddit.
    o	inputs: None
    o	outputs: {"newest_post_id": ?, "post_details": ?}
    o	checkpoint: Confirm you have identified the newest post.
3.	Upvote the newest post.
    o	inputs: {"post_id": ?}
    o	outputs: None
    o	checkpoint: Verify the post has been successfully upvoted.

# Your task
* **intent**: 'Tell me the count of comments that have received more downvotes than upvotes for the user who made the latest post on the Showerthoughts forum.
* **start url**: Reddit home page
 
1.	Navigate to the Showerthoughts forum on Reddit.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Confirm you are on the Showerthoughts forum page.
2.	Identify the latest post made on the Showerthoughts forum.
    o	inputs: None
    o	outputs: {"latest_post_id": ?, "author_username": ?}
    o	checkpoint: Confirm the author username of the latest post is retrieved.
3.	Search for the user profile of the author who made the latest post.
    o	inputs: {"author_username": ?}
    o	outputs: None
    o	checkpoint: Confirm you are on the user profile page of the author.
4.	Retrieve the list of comments made by the user.
    o	inputs: {"author_username": ?}
    o	outputs: {"comments": [{"comment_id": ?, "upvotes": ?, "downvotes": ?}, ...]}
    o	checkpoint: Confirm the list of comments and their respective upvotes and downvotes are retrieved.
5.	Count the number of comments that have received more downvotes than upvotes.
    o	inputs: {"comments": [{"comment_id": ?, "upvotes": ?, "downvotes": ?}, ...]}
    o	outputs: {"count": ?}
    o	checkpoint: Confirm the count of comments with more downvotes than upvotes is determined.
6.	ANSWER: "count"


# Your task
* **intent**: 'How long does it take to walk from Carnegie Mellon University to starbucks on Craig Street?'
* **start url**: Maps home page

1.	Locate the directions button on the Maps home page.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Confirm that the directions interface is open.
2.	Enter "Carnegie Mellon University" in the 'from' field and "Starbucks on Craig Street" in the 'to' field.
    o	inputs: {"from": "Carnegie Mellon University", "to": "Starbucks on Craig Street"}
    o	outputs: None
    o	checkpoint: Confirm that the route has been generated.
3.	Set the mode of transportation to "walking".
    o	inputs: None
    o	outputs: None
    o	checkpoint: Confirm that the route is optimized for walking.
4.	Retrieve the estimated walking time from the generated directions.
    o	inputs: None
    o	outputs: {"walking_time": ?}
    o	checkpoint: Confirm that the walking time is displayed.
5.	ANSWER: "walking_time"


# Your task
* **intent**: 'Get the total payment amount of the last 2 completed orders'
* **start url**: Shopping Administration home page

 1.	Navigate to the order management section in the Shopping Administration application.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Confirm you are in the order management section.
2.	Identify the last 2 completed orders from the order list.
    o	inputs: None
    o	outputs: {"order_ids": [?, ?], "order_statuses": [?, ?]}
    o	checkpoint: Confirm that both orders are marked as complete.
3.	Retrieve the total payment amount for each of the last 2 completed orders.
    o	inputs: {"order_ids": [?, ?]}
    o	outputs: {"order_totals": [?, ?]}
    o	checkpoint: Confirm you have retrieved the total payment amounts for both orders.
4.	Calculate the sum of the total payment amounts for the last 2 completed orders.
    o	inputs: {"order_totals": [?, ?]}
    o	outputs: {"total_payment_amount": ?}
    o	checkpoint: Confirm the calculation of the total payment amount.
5.	ANSWER: "total_payment_amount $"

# Your task
* **intent**: 'create a repository named Awesome_DIY_ideas that includes a README file with the links to the most active 6 DIY ideas on DIY subreddit?'
* **start url**: Gitlab home page
 
1.	Create a new repository named "Awesome_DIY_ideas" on GitLab.
    o	inputs: {"repository_name": "Awesome_DIY_ideas"}
    o	outputs: {"repository_url": ?}
    o	checkpoint: Verify that the repository "Awesome_DIY_ideas" has been successfully created on GitLab.
2.	Navigate to the Reddit application and access the DIY subreddit.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Confirm you are on the DIY subreddit page.
3.	Identify the 6 most active DIY ideas on the DIY subreddit.
    o	inputs: None
    o	outputs: {"active_DIY_ideas": [{"title": ?, "link": ?}, ...]}
    o	checkpoint: Verify that you have obtained the links to the 6 most active DIY ideas.
4.	Navigate back to the GitLab repository "Awesome_DIY_ideas".
    o	inputs: {"repository_url": ?}
    o	outputs: None
    o	checkpoint: Confirm you are back in the repository "Awesome_DIY_ideas".
5.	Create a README file in the repository with the links to the 6 most active DIY ideas.
    o	inputs: {"active_DIY_ideas": [{"title": ?, "link": ?}, ...]}
    o	outputs: None
    o	checkpoint: Verify that the README file has been created and includes the links to the 6 most active DIY ideas.

# Your task
* **intent**: 'Follow ['Jakub Klinkovsk', 'convexegg', 'Vinta Chen', 'yjlou', 'Abishek S'] on Gitlab'
* **start url**: Gitlab home page

1.	Search for the user profile of 'Jakub Klinkovsk' on GitLab.
    o	inputs: {"username": "Jakub Klinkovsk"}
    o	outputs: none
    o	checkpoint: verify you are at the user profile page of 'Jakub Klinkovsk'
2.	Follow the user 'Jakub Klinkovsk' on GitLab.
    o	inputs: None
    o	outputs: None
o	    checkpoint: Verify confirmation message or indication of being a follower
3.	Search for the user profile of 'convexegg' on GitLab.
    o	inputs: {"username": "convexegg"}
    o	outputs: none
    o	checkpoint: verify you are at the user profile page of 'convexegg'
4.	Follow the user 'convexegg' on GitLab.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Verify confirmation message or indication of being a follower
5.	Search for the user profile of 'Vinta Chen' on GitLab.
    o	inputs: {"username": "Vinta Chen"}
    o	outputs: none
    o	checkpoint: verify you are at the user profile page of 'Vinta Chen'
6.	Follow the user 'Vinta Chen' on GitLab.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Verify confirmation message or indication of being a follower
7.	Search for the user profile of 'yjlou' on GitLab.
    o	inputs: {"username": "yjlou"}
    o	outputs: none
    o	checkpoint: verify you are at the user profile page of 'yjlou'
8.	Follow the user 'yjlou' on GitLab.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Verify confirmation message or indication of being a follower
9.	Search for the user profile of 'Abishek S' on GitLab.
    o	inputs: {"username": "Abishek S"}
    o	outputs: none
    o	checkpoint: verify you are at the user profile page of 'Abishek S'
10.	Follow the user 'Abishek S' on GitLab.
    o	inputs: None
    o	outputs: None
    o	checkpoint: Verify confirmation message or indication of being a follower
