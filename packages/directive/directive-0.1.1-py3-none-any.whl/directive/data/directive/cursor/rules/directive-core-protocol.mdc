---
description: Directive Core Protocol (Gates before code)
alwaysApply: true
---

Scope: Applies to all implementation work in this repo. Treat the following as hard gates.

Authoritative sources (read first):
- Technical best practices â†’ @directive/reference/agent_context.md
- Your workflow & gates (how to code the Directive way) â†’ @directive/reference/agent_operating_procedure.md

ðŸš¨ FIRST STEP â€” FEATURE BRANCH (BEFORE ANYTHING ELSE):
- Check current branch: `git branch --show-current`
- If not on a feature branch, create one from main: `feature/<spec-name>` (must match spec folder)
- NEVER work directly on main or master

Preâ€‘implementation gates (must exist and be approved before any code):
1) Spec â†’ `/directive/specs/<feature>/spec.md`
2) Impact Analysis â†’ `/directive/specs/<feature>/impact.md`
3) TDR (highâ€‘level, decisive about interfaces) â†’ `/directive/specs/<feature>/tdr.md`

Location for new feature docs:
- Create all new Spec, Impact, and TDR files under `/directive/specs/<feature>/` (one subfolder per feature).

Collaboration and approval:
- Draft each document (Spec, Impact, TDR) collaboratively with the engineer.
- Work on one document at a time; do not start the next until the engineer explicitly accepts the current deliverable.

Postâ€‘approval implementation rules:
- Follow strict TDD: write a failing test â†’ minimal implementation â†’ refactor.
- Map each Spec acceptance criterion to at least one test ID.
- Keep PRs small; use conventional commits; keep CI green.
- Update the TDR if key decisions change.

Templates:
@directive/reference/templates/spec_template.md
@directive/reference/templates/impact_template.md
@directive/reference/templates/tdr_template.md
@directive/reference/templates/implementation_summary_template.md