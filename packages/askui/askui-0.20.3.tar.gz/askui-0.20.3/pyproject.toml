[project]
name = "askui"
description = "Automate computer tasks in Python"
authors = [
    {name = "askui GmbH", email = "info@askui.com"},
]
dependencies = [
    "anthropic>=0.54.0",
    "fastapi>=0.115.12",
    "fastmcp>=2.3.0",
    "gradio-client>=1.4.3",
    "grpcio>=1.73.1",
    "httpx>=0.28.1",
    "Jinja2>=3.1.4",
    "openai>=1.61.1",
    "pillow>=11.0.0",
    "py-machineid>=0.7.0",
    "pydantic-settings>=2.9.1",
    "pydantic>=2.11.0",
    "pyperclip>=1.9.0",
    "python-dateutil>=2.9.0.post0",
    "requests>=2.32.3",
    "segment-analytics-python>=2.3.4",
    "tenacity>=9.1.2",
    "jsonref>=1.1.0",
    "protobuf>=6.31.1",
    "google-genai>=1.20.0",
    "filetype>=1.2.0",
    "markitdown[xls,xlsx,docx]>=0.1.2",
    "asyncer==0.0.8",
    "bson>=0.5.10",
    "aiofiles>=24.1.0",
    "anyio==4.10.0",  # We need to pin this version otherwise listing mcp tools using fastmcp within runner fails
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/askui/__init__.py"




[tool.pdm]
distribution = true

[tool.pdm.scripts]
test = "pytest -n auto"
"test:cov" = "pytest -n auto --cov=src/askui --cov-report=html"
"test:cov:view" = "python -m http.server --directory htmlcov"
"test:e2e" = "pytest -n auto tests/e2e"
"test:e2e:cov" = "pytest -n auto tests/e2e --cov=src/askui --cov-report=html"
"test:integration" = "pytest -n auto tests/integration"
"test:integration:cov" = "pytest -n auto tests/integration --cov=src/askui --cov-report=html"
"test:unit" = "pytest -n auto tests/unit"
"test:unit:cov" = "pytest -n auto tests/unit --cov=src/askui --cov-report=html"
format = "ruff format src tests"
lint = "ruff check src tests"
"lint:fix" = "ruff check --fix src tests"
typecheck = "mypy"
"typecheck:all" = "mypy ."
"chat:api" = "python -m askui.chat"
"qa:fix" = { composite = [
    "typecheck:all",
    "format",
    "lint:fix",
] }
"grpc:gen" = "bash scripts/grpc-gen.sh"
"json:gen" = "datamodel-codegen --output-model-type pydantic_v2.BaseModel --input src/askui/tools/askui/askui_ui_controller_grpc/json_schema/ --input-file-type jsonschema --output src/askui/tools/askui/askui_ui_controller_grpc/generated/"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "ruff>=0.9.5",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "pytest-cov>=4.1.0",
    "mypy>=1.9.0",
    "types-requests>=2.31.0.20240311",
    "types-python-dateutil>=2.8.19.20240106",
    "types-Pillow>=10.2.0.20240311",
    "types-protobuf>=4.24.0.20240311",
    "grpc-stubs>=1.53.0.3",
    "types-pyperclip>=1.8.2.20240311",
    "pytest-timeout>=2.4.0",
    "types-pynput>=1.8.1.20250318",
    "playwright>=1.41.0",
    "pytest-asyncio>=1.1.0",
    "datamodel-code-generator>=0.31.2",
    "grpcio-tools>=1.73.1",
    "types-aiofiles>=24.1.0.20250822",
]


[tool.pytest.ini_options]
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]
timeout = 60
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/askui/tools/askui/askui_ui_controller_grpc/generated"
]

# Same as Black.
line-length = 88

# Assume Python 3.10
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
# Enable all rules
select = ["ALL"]
ignore = [
    "ANN", # Type annotations - handled by mypy
    "COM812", # Unused import
    "D",   # Documentation - we'll handle this separately
    "ERA", # Commented out code
    "FBT", # Boolean trap
    "ICN", # Import conventions
    "ISC", # Implicit string concatenation
    "N",   # Naming
    "PGH", # PyGithub
    "PL",  # Pylint
    "PT",  # Pytest
    "Q",   # Quotes
    "RUF", # Ruff-specific rules
    "S",   # Bandit
    "SIM", # Simplify
    "T",   # Pycodestyle
    "TID", # isort
    "UP",  # Pyupgrade
    "W",   # Pycodestyle
    "YTT", # flake8-2020
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"src/askui/agent.py" = ["E501"]
"src/askui/android_agent.py" = ["E501"]
"src/askui/chat/*" = ["E501", "F401", "F403"]
"src/askui/locators/locators.py" = ["E501"]
"src/askui/locators/relatable.py" = ["E501", "SLF001"]
"src/askui/locators/serializers.py" = ["E501", "SLF001"]
"src/askui/models/anthropic/computer_agent.py" = ["E501"]
"src/askui/models/askui/ai_element_utils.py" = ["E501"]
"src/askui/models/huggingface/spaces_api.py" = ["E501"]
"src/askui/models/shared/android_agent.py" = ["E501"]
"src/askui/models/ui_tars_ep/ui_tars_api.py" = ["E501"]
"src/askui/prompts/system.py" = ["E501"]
"src/askui/reporting.py" = ["E501"]
"src/askui/telemetry/telemetry.py" = ["E501"]
"src/askui/tools/askui/askui_ui_controller_grpc/*" = ["ALL"]
"src/askui/utils/image_utils.py" = ["E501"]
"src/askui/web_agent.py" = ["E501"]
"tests/*" = ["S101", "PLR2004", "SLF001"]
"tests/e2e/agent/test_get.py" = ["E501"]
"tests/e2e/agent/test_locate_with_relations.py" = ["E501"]
"tests/unit/locators/serializers/test_askui_locator_serializer.py" = ["E501"]
"tests/unit/locators/serializers/test_locator_string_representation.py" = ["E501"]
"tests/unit/locators/test_locators.py" = ["E501"]
"tests/unit/utils/test_image_utils.py" = ["E501"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["askui"]
known-third-party = ["pytest", "mypy"]

[project.optional-dependencies]
all = ["askui[android,chat,pynput,web]"]
android = [
    "pure-python-adb>=0.3.0.dev0"
]
chat = [
    "askui[android,web]",
    "uvicorn>=0.34.3",
    "anyio>=4.10.0",
    "structlog>=25.4.0",
    "asgi-correlation-id>=4.3.4",
    "prometheus-fastapi-instrumentator>=7.1.0",
    "starlette-context>=0.4.0",
]
pynput = [
    "mss>=10.0.0",
    "pynput>=1.8.1",
]
web = [
    "playwright>=1.41.0",
]
