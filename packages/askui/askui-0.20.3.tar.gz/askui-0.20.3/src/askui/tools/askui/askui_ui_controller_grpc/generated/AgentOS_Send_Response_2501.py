# generated by datamodel-codegen:
#   filename:  AgentOS-Send-Response-2501.json
#   timestamp: 2025-07-15T14:07:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Union

from pydantic import BaseModel, ConfigDict, RootModel, conint, constr


class Name(Enum):
    GetMousePosition = 'GetMousePosition'


class Name7(Enum):
    SetMousePosition = 'SetMousePosition'


class Name8(Enum):
    AddRenderObject = 'AddRenderObject'


class Name9(Enum):
    UpdateRenderObject = 'UpdateRenderObject'


class Name10(Enum):
    DeleteRenderObject = 'DeleteRenderObject'


class Name11(Enum):
    ClearRenderObjects = 'ClearRenderObjects'


class Length(RootModel[Union[constr(pattern=r'^(\d+(\.\d+)?(px|%)|auto)$'), int, float]]):
    root: Union[constr(pattern=r'^(\d+(\.\d+)?(px|%)|auto)$'), int, float]


class Location2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    x: Length
    y: Length


class RenderObjectId(RootModel[conint(ge=0, le=18446744073709551615)]):
    root: conint(ge=0, le=18446744073709551615)


class ActionId(RootModel[conint(ge=0, le=2147483647)]):
    root: conint(ge=0, le=2147483647)


class Response(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    position: Location2


class Command(BaseModel):
    name: Name
    actionId: ActionId
    response: Response


class Command7(BaseModel):
    name: Name7
    actionId: ActionId


class Response1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: RenderObjectId


class Command8(BaseModel):
    name: Name8
    actionId: ActionId
    response: Response1


class Command9(BaseModel):
    name: Name9
    actionId: ActionId


class Command10(BaseModel):
    name: Name10
    actionId: ActionId


class Command11(BaseModel):
    name: Name11
    actionId: ActionId


class Message(BaseModel):
    command: Union[Command, Command7, Command8, Command9, Command10, Command11]


class AskuiAgentosSendResponseSchema(BaseModel):
    message: Message
