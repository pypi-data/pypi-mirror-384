[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ayz-auth"
version = "2.0.1"

description = "FastAPI middleware for Stytch B2B authentication with Redis caching, MongoDB entitlements, and team context"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Ayzenberg", email = "dev@ayzenberg.com" }]
keywords = ["fastapi", "stytch", "authentication", "middleware", "b2b", "entitlements", "authorization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
]

dependencies = [
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "stytch>=5.0.0",
    "redis>=4.5.0",
    "httpx>=0.24.0",
    "python-multipart>=0.0.6",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
mongodb = [
    "motor>=3.0.0",
    "pymongo>=4.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "fakeredis>=2.10.0",
    "mongomock-motor>=0.0.21",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/ayzenberg/ayz-auth"
Repository = "https://github.com/ayzenberg/ayz-auth"
Issues = "https://github.com/ayzenberg/ayz-auth/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ayz_auth"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Ignore third-party library issues
ignore_missing_imports = true
# Skip checking the virtual environment
exclude = [".venv/", "build/", "dist/"]

# Per-module options
[[tool.mypy.overrides]]
module = "ayz_auth.auth.stytch_verifier"
warn_return_any = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "B904", # raise from within except without from
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.12",
]
