Metadata-Version: 2.4
Name: annotree
Version: 0.1.0
Summary: Generate annotated file tree structures with descriptions from file comments
Project-URL: Homepage, https://github.com/yourusername/annotree
Project-URL: Documentation, https://github.com/yourusername/annotree/tree/main/docs
Project-URL: Bug Reports, https://github.com/yourusername/annotree/issues
Project-URL: Source, https://github.com/yourusername/annotree
Author-email: Your Name <your.email@example.com>
License-Expression: MIT
License-File: LICENSE
Keywords: annotations,directory,documentation,gitignore,structure,tree,treeignore
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Documentation
Classifier: Topic :: Utilities
Requires-Python: >=3.8
Requires-Dist: gitignore-parser>=0.1.0
Requires-Dist: pytest>=8.3.5
Description-Content-Type: text/markdown

# annotree

[![PyPI version](https://badge.fury.io/py/annotree.svg)](https://badge.fury.io/py/annotree)
[![Python Support](https://img.shields.io/pypi/pyversions/annotree.svg)](https://pypi.org/project/annotree/)

Generate beautiful, annotated file tree structures with descriptions extracted from file comments. Perfect for documentation, README files, and project overviews!

## Quick Start

```bash
# Install with uv (recommended)
uv pip install annotree

# Or with pip
pip install annotree

# Generate tree
annotree
```

## Features

‚ú® **Automatic Annotations** - Extracts descriptions from the first line of each file  
üìÅ **Directory Descriptions** - Reads folder descriptions from `__init__.py` files  
üö´ **Smart Ignore Support** - Auto-detects `.treeignore` or `.gitignore`  
üé® **Clean Output** - Beautiful tree structure with aligned annotations  
‚öôÔ∏è **Customizable** - Control depth, output format, and annotation positioning  
üêç **Python API & CLI** - Use as a library or command-line tool  

## Installation

### Using uv (recommended - fast!)

```bash
uv pip install annotree
```

### Using pip

```bash
pip install annotree
```

### For Development

```bash
git clone https://github.com/yourusername/annotree.git
cd annotree
uv pip install -e .
```

## Usage

### Command Line

```bash
# Basic usage - auto-detects .treeignore or .gitignore
annotree

# Specify output file
annotree -o structure.txt

# Use specific ignore file
annotree -i .gitignore

# Limit depth
annotree -l 3

# Directories only
annotree -d

# Custom annotation alignment
annotree -a 60 -o tree.txt
```

### Python API

```python
from pathlib import Path
from annotree import tree

# Basic usage - auto-detects .treeignore or .gitignore
tree(Path.cwd(), output_file="tree.txt")

# With custom options
tree(
    Path.cwd(),
    ignore_file=".treeignore",
    level=3,
    output_file="tree.txt",
    annotation_start=50
)

# Directories only
tree(
    Path.cwd(),
    limit_to_directories=True,
    output_file="dirs_only.txt"
)
```

## .treeignore File

Create a `.treeignore` file in your project root for tree-specific filtering (separate from `.gitignore`):

```
# .treeignore example
__pycache__/
*.pyc
.pytest_cache/
.venv/
node_modules/
dist/
build/
```

If `.treeignore` exists, it's used automatically. Otherwise, `.gitignore` is used if present.

## Documentation

- [Quick Start Guide](docs/QUICKSTART.md)
- [Development Guide](docs/DEVELOPMENT.md)
- [Publishing to PyPI](docs/PUBLISHING.md)
- [After Publishing Guide](docs/AFTER_PUBLISHING.md)

## Example Output

```
my-project
‚îú‚îÄ src                                  # Main application source code
‚îÇ   ‚îú‚îÄ __init__.py                      # Package initialization
‚îÇ   ‚îú‚îÄ main.py                          # Application entry point
‚îÇ   ‚îî‚îÄ utils                            # Utility functions and helpers
‚îÇ       ‚îú‚îÄ __init__.py                  # Utils package initialization
‚îÇ       ‚îî‚îÄ helpers.py                   # Common helper functions
‚îú‚îÄ tests                                # Test suite
‚îÇ   ‚îî‚îÄ test_main.py                     # Tests for main module
‚îî‚îÄ README.md                            # Project documentation

2 directories, 6 files
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Links

- **PyPI**: https://pypi.org/project/annotree/ (after publishing)
- **GitHub**: https://github.com/yourusername/annotree
- **Documentation**: [docs/](docs/)
- **Issues**: https://github.com/yourusername/annotree/issues
