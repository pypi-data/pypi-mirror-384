(undo-tree-save-format-version . 1)
"513dae3f7ef9dfd128fba61446c053c72de82ba4"
[nil nil nil nil (26618 62450 16280 853000) 0 nil]
([nil nil ((#("
" 0 1 (fontified nil)) . 93) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("from collections.abc import Callable" 0 4 (face font-lock-keyword-face fontified t) 4 5 (face unicode-whitespace-subdued-space fontified t) 5 20 (fontified t) 20 21 (face unicode-whitespace-subdued-space fontified t) 21 27 (face font-lock-keyword-face fontified t) 27 28 (face unicode-whitespace-subdued-space fontified t) 28 36 (fontified t)) . 93) (t 26618 62416 705522 300000)) nil (26618 62450 16278 893000) 0 nil])
([nil nil ((#(" " 0 1 (jinx--pending t face unicode-whitespace-subdued-space fontified nil)) . -261) (undo-tree-id0 . -1) (#(" " 0 1 (jinx--pending t face unicode-whitespace-subdued-space fontified t)) . -262) (undo-tree-id1 . -1) (nil rear-nonsticky nil 258 . 259) (nil fontified nil 251 . 259) (nil fontified nil 250 . 251) (nil fontified nil 244 . 250) (nil fontified nil 243 . 244) (nil fontified nil 228 . 243) (nil fontified nil 227 . 228) (nil fontified nil 223 . 227) (223 . 259)) nil (26618 62450 15446 102000) 0 nil])
([nil nil ((223 . 227) 259) nil (26618 62450 15416 552000) 0 nil])
([nil nil ((266 . 268) (263 . 264)) nil (26618 62450 15411 842000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62463 924552 127000) (139 . 296) (#("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" 0 7 (fontified t) 7 8 (face unicode-whitespace-subdued-space fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (face unicode-whitespace-subdued-space fontified t) 15 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 25 (face unicode-whitespace-subdued-space fontified t) 25 31 (fontified t) 31 32 (face unicode-whitespace-subdued-space fontified t) 32 38 (face font-lock-keyword-face fontified t) 38 39 (face unicode-whitespace-subdued-space fontified t) 39 53 (fontified t) 53 54 (face unicode-whitespace-subdued-space fontified t) 54 66 (fontified t) 66 68 (face font-lock-keyword-face fontified t) 68 69 (face unicode-whitespace-subdued-space fontified t) 69 84 (fontified t) 84 88 (face unicode-whitespace-subdued-space fontified t) 88 92 (face font-lock-keyword-face fontified t) 92 93 (face unicode-whitespace-subdued-space fontified t) 93 108 (fontified t) 108 109 (face unicode-whitespace-subdued-space fontified t) 109 115 (face font-lock-keyword-face fontified t) 115 116 (face unicode-whitespace-subdued-space fontified t) 116 123 (fontified t) 123 124 (rear-nonsticky t fontified t) 124 125 (fontified t) 125 129 (face unicode-whitespace-subdued-space fontified t) 129 133 (face font-lock-keyword-face fontified t) 133 134 (face unicode-whitespace-subdued-space fontified t) 134 136 (fontified t) 136 137 (face unicode-whitespace-subdued-space fontified t) 137 143 (face font-lock-keyword-face fontified t) 143 144 (face unicode-whitespace-subdued-space fontified t) 144 157 (fontified t)) . 139) (undo-tree-id40 . -148) (t 26618 62450 21543 349000)) nil (26618 62748 190655 694000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62535 350597 248000) (139 . 296) (#("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" 0 7 (jinx--pending t fontified t) 7 8 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 8 14 (jinx--pending t face font-lock-keyword-face fontified t) 14 15 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 15 20 (jinx--pending t fontified t) 20 24 (jinx--pending t face font-lock-keyword-face fontified t) 24 25 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 25 31 (jinx--pending t fontified t) 31 32 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 32 38 (jinx--pending t face font-lock-keyword-face fontified t) 38 39 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 39 53 (jinx--pending t fontified t) 53 54 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 54 66 (jinx--pending t fontified t) 66 68 (jinx--pending t face font-lock-keyword-face fontified t) 68 69 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 69 84 (jinx--pending t fontified t) 84 88 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 88 92 (jinx--pending t face font-lock-keyword-face fontified t) 92 93 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 93 108 (jinx--pending t fontified t) 108 109 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 109 115 (jinx--pending t face font-lock-keyword-face fontified t) 115 116 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 116 125 (jinx--pending t fontified t) 125 129 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 129 133 (jinx--pending t face font-lock-keyword-face fontified t) 133 134 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 134 136 (jinx--pending t fontified t) 136 137 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 137 143 (jinx--pending t face font-lock-keyword-face fontified t) 143 144 (jinx--pending t face unicode-whitespace-subdued-space fontified t) 144 157 (jinx--pending t fontified t)) . 139) (t 26618 62466 213553 570000)) nil (26618 62748 190653 994000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62550 570606 864000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 62537 136598 376000)) nil (26618 62748 190652 804000) 0 nil])
([nil nil ((139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 62552 314607 966000)) nil (26618 62748 190652 114000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62567 267617 412000)) nil (26618 62748 190650 574000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62607 978643 131000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 62569 282618 685000)) nil (26618 62748 190649 114000) 0 nil])
([nil nil ((#("__date__ = \"2024/07/13 22:48:35 hoel\"
__author__ = \"Berthold Höllmann\"
__copyright__ = \"Copyright © 2017, 2022 by Berthold Höllmann\"
__credits__ = [\"Berthold Höllmann\"]
__maintainer__ = \"Berthold Höllmann\"
__email__ = \"berhoel@gmail.com\"
" 0 8 (face font-lock-variable-name-face fontified t) 8 9 (face unicode-whitespace-subdued-space fontified t) 9 10 (face font-lock-operator-face fontified t) 10 11 (face unicode-whitespace-subdued-space fontified t) 11 22 (face font-lock-string-face fontified t) 22 23 (face unicode-whitespace-subdued-space fontified t) 23 31 (face font-lock-string-face fontified t) 31 32 (face unicode-whitespace-subdued-space fontified t) 32 37 (face font-lock-string-face fontified t) 37 38 (fontified t) 38 48 (face font-lock-variable-name-face fontified t) 48 49 (face unicode-whitespace-subdued-space fontified t) 49 50 (face font-lock-operator-face fontified t) 50 51 (face unicode-whitespace-subdued-space fontified t) 51 60 (face font-lock-string-face fontified t) 60 61 (face unicode-whitespace-subdued-space fontified t) 61 70 (face font-lock-string-face fontified t) 70 71 (fontified t) 71 84 (face font-lock-variable-name-face fontified t) 84 85 (face unicode-whitespace-subdued-space fontified t) 85 86 (face font-lock-operator-face fontified t) 86 87 (face unicode-whitespace-subdued-space fontified t) 87 97 (face font-lock-string-face fontified t) 97 98 (face unicode-whitespace-subdued-space fontified t) 98 99 (face font-lock-string-face fontified t) 99 100 (face unicode-whitespace-subdued-space fontified t) 100 105 (face font-lock-string-face fontified t) 105 106 (face unicode-whitespace-subdued-space fontified t) 106 110 (face font-lock-string-face fontified t) 110 111 (face unicode-whitespace-subdued-space fontified t) 111 113 (face font-lock-string-face fontified t) 113 114 (face unicode-whitespace-subdued-space fontified t) 114 122 (face font-lock-string-face fontified t) 122 123 (face unicode-whitespace-subdued-space fontified t) 123 132 (face font-lock-string-face fontified t) 132 133 (fontified t) 133 144 (face font-lock-variable-name-face fontified t) 144 145 (face unicode-whitespace-subdued-space fontified t) 145 146 (face font-lock-operator-face fontified t) 146 147 (face unicode-whitespace-subdued-space fontified t) 147 148 (face (rainbow-delimiters-depth-1-face) fontified t) 148 157 (face font-lock-string-face fontified t) 157 158 (face unicode-whitespace-subdued-space fontified t) 158 167 (face font-lock-string-face fontified t) 167 168 (face (rainbow-delimiters-depth-1-face) fontified t) 168 169 (fontified t) 169 183 (face font-lock-variable-name-face fontified t) 183 184 (face unicode-whitespace-subdued-space fontified t) 184 185 (face font-lock-operator-face fontified t) 185 186 (face unicode-whitespace-subdued-space fontified t) 186 195 (face font-lock-string-face fontified t) 195 196 (face unicode-whitespace-subdued-space fontified t) 196 205 (face font-lock-string-face fontified t) 205 206 (fontified t) 206 215 (face font-lock-variable-name-face fontified t) 215 216 (face unicode-whitespace-subdued-space fontified t) 216 217 (face font-lock-operator-face fontified t) 217 218 (face unicode-whitespace-subdued-space fontified t) 218 237 (face font-lock-string-face fontified t) 237 238 (fontified t)) . 298) (undo-tree-id33 . -38) (undo-tree-id34 . -48) (undo-tree-id35 . -38) (undo-tree-id36 . -48) (undo-tree-id37 . -169) (undo-tree-id38 . -238) (undo-tree-id39 . -238) 536 (t 26618 62609 322643 981000)) nil (26618 62748 190644 64000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62827 212182 45000) (#("
" 0 1 (fontified t)) . 299) (t 26618 62823 263779 146000) (139 . 296) (#("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" 0 7 (fontified t) 7 8 (face unicode-whitespace-subdued-space fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 15 (face unicode-whitespace-subdued-space fontified t) 15 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 25 (face unicode-whitespace-subdued-space fontified t) 25 31 (fontified t) 31 32 (face unicode-whitespace-subdued-space fontified t) 32 38 (face font-lock-keyword-face fontified t) 38 39 (face unicode-whitespace-subdued-space fontified t) 39 53 (fontified t) 53 54 (face unicode-whitespace-subdued-space fontified t) 54 66 (fontified t) 66 68 (face font-lock-keyword-face fontified t) 68 69 (face unicode-whitespace-subdued-space fontified t) 69 84 (fontified t) 84 88 (face unicode-whitespace-subdued-space fontified t) 88 92 (face font-lock-keyword-face fontified t) 92 93 (face unicode-whitespace-subdued-space fontified t) 93 108 (fontified t) 108 109 (face unicode-whitespace-subdued-space fontified t) 109 115 (face font-lock-keyword-face fontified t) 115 116 (face unicode-whitespace-subdued-space fontified t) 116 125 (fontified t) 125 129 (face unicode-whitespace-subdued-space fontified t) 129 133 (face font-lock-keyword-face fontified t) 133 134 (face unicode-whitespace-subdued-space fontified t) 134 136 (fontified t) 136 137 (face unicode-whitespace-subdued-space fontified t) 137 143 (face font-lock-keyword-face fontified t) 143 144 (face unicode-whitespace-subdued-space fontified t) 144 157 (fontified t)) . 139) (t 26618 62748 255731 756000)) nil (26618 63337 627665 882000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 62934 160849 209000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 62830 325783 608000)) nil (26618 63337 627664 682000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 63017 771902 34000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 62937 304851 195000)) nil (26618 63337 627663 192000) 0 nil])
([nil nil ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 63069 928934 987000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 63019 634903 211000)) nil (26618 63337 627661 402000) 0 nil])
([nil current ((139 . 296) (#("typing import TYPE_CHECKING, NamedTuple
from pathlib import Path

if TYPE_CHECKING:
    from io import TextIOWrapper
    from collections.abc import Callable" 0 157 (fontified nil)) . 139) (t 26618 63120 239966 772000) (139 . 296) ("pathlib import Path
from typing import TYPE_CHECKING, NamedTuple

if TYPE_CHECKING:
    from collections.abc import Callable
    from io import TextIOWrapper" . 139) (t 26618 63072 296936 483000)) nil (26618 63337 627656 262000) 0 nil])
nil
