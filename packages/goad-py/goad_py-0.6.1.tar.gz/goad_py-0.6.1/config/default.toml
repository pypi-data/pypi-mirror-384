# Configuration file for the GOAD simulation.
# This file contains the default values for all config options.
# The user should not modify this config, but may make a local copy of it
#   in this directory called `local.toml`.
# If `local.toml` exists, GOAD will use the values specified in that file.
# Environment variables can be set to override values in this file.
#   eg. `export GOAD_WAVELENGTH=632.8`
# Configuration options specified on the command line will override values given
#   in this file, as well as those set by environment variables.

wavelength = 0.532 # wavelength in dimension of the geometry file
medium_refr_index = [
    1.0,
    0.0,
] # refractive index of the medium [real, imaginary]
particle_refr_index = [
    [
        1.31,
        0.0,
    ],
] # Refractive index of the particle/s (real and imaginary parts)
# For files containing multiple shapes, use a nested list for different values
# for each shape, eg. [[1.31,0.0],[1.5,0.001]]
geom_name = "examples/data/hex.obj" # Geometry file name for the particle
beam_power_threshold = 0.0001          # Threshold for truncation by beam power
beam_area_threshold_fac = 0.0001      # Factor for truncating beams by area
cutoff = 0.99999                        # Total power cutoff fraction
max_rec = 10                         # Maximum number of recursions
max_tir = 10                         # Maximum number of total internal reflections
distortion = 0.0                    # Distortion factor for the geometry
directory = "goad_run"              # Directory for output files
# seed = 6                            # Seed (comment out for no seed)
geom_scale = [1,1,1]        # Scale factor for the geometry
# fov_factor = 1.0 # Field of view factor for diffraction (comment out for no truncation)
mapping = "ApertureDiffraction" # ApertureDiffraction / GeometricOptics
coherence = true # Enable coherence for near to far field mapping

[binning] # Binning configuration

[binning.scheme] # Uncomment the desired binning scheme below


# [binning.scheme.Simple] # Simple square grid binning
# num_theta = 180 # Number of theta bins
# num_phi = 5    # Number of phi bins

[binning.scheme.Interval] # Interval binning with specified theta and phi spacings
thetas = [0,180]
theta_spacings =[2]
phis = [0, 360]
phi_spacings = [4]

# [binning.scheme.Custom] # Custom binning with specified bin edges [[theta_min, theta_max], [phi_min, phi_max]]
# bins = [
#     [[0.0, 10.0], [0.0, 90.0]],      # First bin: theta 0-10°, phi 0-90°
#     [[0.0, 10.0], [90.0, 180.0]],    # Second bin: theta 0-10°, phi 90-180°
#     [[10.0, 20.0], [0.0, 90.0]],     # Third bin: theta 10-20°, phi 0-90°
#     [[10.0, 20.0], [90.0, 180.0]],   # Fourth bin: theta 10-20°, phi 90-180°
# ]
# file = "phips_bins_edges.toml" # Or load bins from external file (relative to working directory)


[orientation] # Orientation configuration
euler_convention = "ZYZ" # Euler angle convention

[orientation.scheme] # Uncomment the desired orientation scheme below

[orientation.scheme.Discrete] # Discrete orientation with specified Euler angles
eulers = [[30,30,0]]

# [orientation.scheme.Uniform] # Random uniform distribution
# num_orients = 100 # Number of orientations to generate

# ===================================
# OUTPUT CONFIGURATION
# ===================================
[output]
# Summary file (human-readable text) - DEFAULT: true
results_summary = true

# JSON files for structured data access - DEFAULT: false
settings_json = true   # Enable to dump settings.json (entire config)
powers_json = true     # Enable to dump powers.json (power distribution)
params_json = true     # Enable to dump params.json (derived parameters)

# Mueller matrix files (custom format) - DEFAULT: true
mueller_2d = true       # Enable 2D Mueller matrix files
mueller_1d = true       # Enable 1D integrated Mueller matrix files

# Control which Mueller components are written - DEFAULT: all true
[output.mueller_components]
total = true           # Total scattering (mueller_scatgrid)
beam = true            # Beam component (mueller_scatgrid_beam)
external = true        # External diffraction (mueller_scatgrid_ext)
