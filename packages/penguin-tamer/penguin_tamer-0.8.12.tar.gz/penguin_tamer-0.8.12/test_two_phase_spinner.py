"""
–¢–µ—Å—Ç –¥–≤—É—Ö—Ñ–∞–∑–Ω–æ–≥–æ —Å–ø–∏–Ω–Ω–µ—Ä–∞ –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –°–ø–∏–Ω–Ω–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–∑—É "Connecting..."
2. –ó–∞—Ç–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —Ñ–∞–∑—É "Thinking..."
3. –û–±–µ —Ñ–∞–∑—ã –∏–º–µ—é—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
"""

import sys
import json
import yaml
from pathlib import Path
from rich.console import Console
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent / "src"))

from penguin_tamer.demo_system import create_demo_manager  # noqa: E402


def create_test_demo():
    """–°–æ–∑–¥–∞—ë—Ç –¥–µ–º–æ-—Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∞."""
    test_dir = Path(__file__).parent / "test_two_phase"
    test_dir.mkdir(exist_ok=True)
    (test_dir / "demo").mkdir(exist_ok=True)

    demo_data = {
        "version": "2.0",
        "events": [
            {"type": "input", "text": "–ü—Ä–∏–≤–µ—Ç!"},
            {"type": "output", "text": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"},
            {"type": "input", "text": "–û—Ç–ª–∏—á–Ω–æ!"},
            {"type": "output", "text": "–†–∞–¥ —Å–ª—ã—à–∞—Ç—å! üòä"}
        ]
    }

    demo_file = test_dir / "demo" / "test.json"
    with open(demo_file, 'w', encoding='utf-8') as f:
        json.dump(demo_data, f, indent=2, ensure_ascii=False)

    return test_dir, demo_file


def test_two_phase_spinner():
    """–¢–µ—Å—Ç –¥–≤—É—Ö—Ñ–∞–∑–Ω–æ–≥–æ —Å–ø–∏–Ω–Ω–µ—Ä–∞."""
    console = Console()
    config_dir, demo_file = create_test_demo()
    config_demo_path = Path(__file__).parent / "src" / "penguin_tamer" / "demo_system" / "config_demo.yaml"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    with open(config_demo_path, 'r', encoding='utf-8') as f:
        config_data = yaml.safe_load(f)

    original_values = {
        'spinner_enabled': config_data['playback'].get('spinner_enabled', True),
        'spinner_phase1_text': config_data['playback'].get('spinner_phase1_text', 'Connecting...'),
        'spinner_phase1_min_duration': config_data['playback'].get('spinner_phase1_min_duration', 0.3),
        'spinner_phase1_max_duration': config_data['playback'].get('spinner_phase1_max_duration', 0.8),
        'spinner_phase2_text': config_data['playback'].get('spinner_phase2_text', 'Thinking...'),
        'spinner_phase2_min_duration': config_data['playback'].get('spinner_phase2_min_duration', 0.5),
        'spinner_phase2_max_duration': config_data['playback'].get('spinner_phase2_max_duration', 2.0),
    }

    try:
        # ==================== TEST 1 ====================
        print("\n" + "=" * 80)
        print("TEST 1: –î–≤—É—Ö—Ñ–∞–∑–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä —Å –¥–ª–∏–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ (–¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏)")
        print("=" * 80)
        print("–§–∞–∑–∞ 1: 'Connecting...' (1.0-1.5s)")
        print("–§–∞–∑–∞ 2: 'Thinking...' (1.5-2.0s)")
        print("-" * 80)

        config_data['playback']['spinner_enabled'] = True
        config_data['playback']['spinner_phase1_text'] = "Connecting..."
        config_data['playback']['spinner_phase1_min_duration'] = 1.0
        config_data['playback']['spinner_phase1_max_duration'] = 1.5
        config_data['playback']['spinner_phase2_text'] = "Thinking..."
        config_data['playback']['spinner_phase2_min_duration'] = 1.5
        config_data['playback']['spinner_phase2_max_duration'] = 2.0

        with open(config_demo_path, 'w', encoding='utf-8') as f:
            yaml.dump(config_data, f, allow_unicode=True, default_flow_style=False)

        start = time.time()
        demo_manager = create_demo_manager(
            mode="play",
            console=console,
            config_dir=config_dir,
            demo_file=demo_file,
            play_first_input=True  # –ü–µ—Ä–µ–¥–∞—ë–º —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä
        )
        demo_manager.play()
        duration = time.time() - start

        print(f"\n‚úÖ TEST 1: –ó–∞–≤–µ—Ä—à—ë–Ω –∑–∞ ~{duration:.1f}s")
        print("   –í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ —É–≤–∏–¥–µ—Ç—å:")
        print("   1. 'Connecting...' —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π (~1-1.5s)")
        print("   2. 'Thinking...' —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π (~1.5-2s)")
        print("   3. –ó–∞—Ç–µ–º –æ—Ç–≤–µ—Ç LLM")

        # ==================== TEST 2 ====================
        print("\n" + "=" * 80)
        print("TEST 2: –ë—ã—Å—Ç—Ä—ã–π –¥–≤—É—Ö—Ñ–∞–∑–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä")
        print("=" * 80)
        print("–§–∞–∑–∞ 1: 'Connecting...' (0.3-0.5s)")
        print("–§–∞–∑–∞ 2: 'Thinking...' (0.4-0.6s)")
        print("-" * 80)

        config_data['playback']['spinner_phase1_min_duration'] = 0.3
        config_data['playback']['spinner_phase1_max_duration'] = 0.5
        config_data['playback']['spinner_phase2_min_duration'] = 0.4
        config_data['playback']['spinner_phase2_max_duration'] = 0.6

        with open(config_demo_path, 'w', encoding='utf-8') as f:
            yaml.dump(config_data, f, allow_unicode=True, default_flow_style=False)

        start = time.time()
        demo_manager = create_demo_manager(
            mode="play",
            console=console,
            config_dir=config_dir,
            demo_file=demo_file
        )
        demo_manager.play()
        duration = time.time() - start

        print(f"\n‚úÖ TEST 2: –ó–∞–≤–µ—Ä—à—ë–Ω –∑–∞ ~{duration:.1f}s (–±—ã—Å—Ç—Ä–µ–µ —á–µ–º TEST 1)")

        # ==================== TEST 3 ====================
        print("\n" + "=" * 80)
        print("TEST 3: –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã —Ñ–∞–∑")
        print("=" * 80)
        print("–§–∞–∑–∞ 1: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...' (0.5s)")
        print("–§–∞–∑–∞ 2: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞...' (0.8s)")
        print("-" * 80)

        config_data['playback']['spinner_phase1_text'] = "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É..."
        config_data['playback']['spinner_phase1_min_duration'] = 0.5
        config_data['playback']['spinner_phase1_max_duration'] = 0.5
        config_data['playback']['spinner_phase2_text'] = "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."
        config_data['playback']['spinner_phase2_min_duration'] = 0.8
        config_data['playback']['spinner_phase2_max_duration'] = 0.8

        with open(config_demo_path, 'w', encoding='utf-8') as f:
            yaml.dump(config_data, f, allow_unicode=True, default_flow_style=False)

        start = time.time()
        demo_manager = create_demo_manager(
            mode="play",
            console=console,
            config_dir=config_dir,
            demo_file=demo_file
        )
        demo_manager.play()
        duration = time.time() - start

        print(f"\n‚úÖ TEST 3: –ó–∞–≤–µ—Ä—à—ë–Ω –∑–∞ ~{duration:.1f}s")
        print("   –í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ —É–≤–∏–¥–µ—Ç—å —Ä—É—Å—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã —Ñ–∞–∑!")

        # ==================== TEST 4 ====================
        print("\n" + "=" * 80)
        print("TEST 4: –î–≤—É—Ö—Ñ–∞–∑–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä —Å –ø—Ä–æ–ø—É—Å–∫–æ–º –ø–µ—Ä–≤–æ–≥–æ input")
        print("=" * 80)

        config_data['playback']['spinner_phase1_text'] = "Connecting..."
        config_data['playback']['spinner_phase1_min_duration'] = 0.5
        config_data['playback']['spinner_phase1_max_duration'] = 0.7
        config_data['playback']['spinner_phase2_text'] = "Thinking..."
        config_data['playback']['spinner_phase2_min_duration'] = 0.6
        config_data['playback']['spinner_phase2_max_duration'] = 0.8

        with open(config_demo_path, 'w', encoding='utf-8') as f:
            yaml.dump(config_data, f, allow_unicode=True, default_flow_style=False)

        start = time.time()
        demo_manager = create_demo_manager(
            mode="play",
            console=console,
            config_dir=config_dir,
            demo_file=demo_file,
            play_first_input=False  # –ü–µ—Ä–µ–¥–∞—ë–º —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä
        )
        demo_manager.play()
        duration = time.time() - start

        print(f"\n‚úÖ TEST 4: –ó–∞–≤–µ—Ä—à—ë–Ω –∑–∞ ~{duration:.1f}s")
        print("   –°–ø–∏–Ω–Ω–µ—Ä –ø–æ–∫–∞–∑–∞–Ω –¥–∞–∂–µ –±–µ–∑ –ø–µ—Ä–≤–æ–≥–æ input!")

    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        for key, value in original_values.items():
            config_data['playback'][key] = value
        with open(config_demo_path, 'w', encoding='utf-8') as f:
            yaml.dump(config_data, f, allow_unicode=True, default_flow_style=False)

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    print("\n" + "=" * 80)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("=" * 80)
    print("\nüìù –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–≤—É—Ö—Ñ–∞–∑–Ω–æ–≥–æ —Å–ø–∏–Ω–Ω–µ—Ä–∞:")
    print("  ‚úÖ –§–∞–∑–∞ 1: 'Connecting...' (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)")
    print("  ‚úÖ –§–∞–∑–∞ 2: 'Thinking...' (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)")
    print("  ‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã")
    print("  ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ –ø–µ—Ä–≤–æ–≥–æ input")
    print("  ‚úÖ –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ —Ñ–∞–∑ –±–µ–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤")
    print("\nüí° –î–≤—É—Ö—Ñ–∞–∑–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä –∫–∞–∫ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!")


if __name__ == "__main__":
    test_two_phase_spinner()
