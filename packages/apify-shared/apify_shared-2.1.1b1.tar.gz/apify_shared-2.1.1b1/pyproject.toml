[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "apify_shared"
version = "2.1.1b1"
description = "Tools and constants shared across Apify projects."
authors = [{ name = "Apify Technologies s.r.o.", email = "support@apify.com" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "apify",
    "automation",
    "chrome",
    "crawlee",
    "crawler",
    "headless",
    "scraper",
    "scraping",
]
dependencies = []

[project.urls]
"Apify Homepage" = "https://apify.com"
"Changelog" = "https://github.com/apify/apify-shared-python/blob/master/CHANGELOG.md"
"Discord" = "https://discord.com/invite/jyEM2PRvMU"
"Issue Tracker" = "https://github.com/apify/apify-shared-python/issues"
"Source Code" = "https://github.com/apify/apify-shared-python"

[dependency-groups]
dev = [
    "dycw-pytest-only~=2.1.0",
    "mypy~=1.17.0",
    "pre-commit~=4.3.0",
    "pytest-asyncio~=1.1.0",
    "pytest-cov~=6.2.0",
    "pytest-timeout~=2.4.0",
    "pytest-xdist~=3.8.0",
    "pytest~=8.4.0",
    "ruff~=0.12.0",
    "setuptools", # setuptools are used by pytest, but not explicitly required

]

[tool.ruff]
line-length = 120
include = ["src/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # This rule may cause conflicts when used with the formatter
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D107",   # Missing docstring in `__init__`
    "D203",   # One blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "D413",   # Missing blank line after last section
    "EM",     # flake8-errmsg
    "ISC001", # This rule may cause conflicts when used with the formatter
    "S105",   # Possible hardcoded password assigned to
    "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Unused imports
]
"**/{tests}/*" = [
    "D",       # Everything from the pydocstyle
    "INP001",  # File {filename} is part of an implicit namespace package, add an __init__.py
    "S101",    # Use of assert detected
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.pytest.ini_options]
addopts = "-ra"
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
timeout = 300

[tool.mypy]
python_version = "3.10"
files = ["src", "tests"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
