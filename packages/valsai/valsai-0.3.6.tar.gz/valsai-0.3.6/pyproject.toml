[build-system]
requires = ["setuptools>=61", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "valsai"
authors = [
  { name = "Langston Nashold" },
  { name = "Rayan Krishnan" }
]
description = "SDK for the Vals AI Platform"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
dynamic = ["version"]

dependencies = [
  "Click",
  "gql",
  "tqdm",
  "requests",
  "pandas",
  "descope",
  "pydantic",
  "httpx",
  "tabulate",
  "inspect-ai",
  "aiohttp",
  "aiofiles",
  "pytest-asyncio>=1.1.0",
  "asyncstdlib>=3.13.1",
  "opentelemetry-api",
  "opentelemetry-sdk",
  "opentelemetry-exporter-otlp",
  "opentelemetry-instrumentation",
]
[dependency-groups]
dev = ["pytest", "ariadne-codegen", "ruff", "basedpyright", "openai"]
parsing = ["pypdf", "pypandoc-binary"]

[project.scripts]
vals = "vals.cli.main:cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["vals*"]

[tool.setuptools_scm]
root = ".."  # Point to monorepo root
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"
# When publishing, use pattern matching for SDK tags
tag_regex = "^sdk-v(?P<version>.*)$"
# Start from last known version
fallback_version = "0.3.0"


[tool.ruff]
exclude = ["vals/graphql_client"]

[tool.basedpyright]
typeCheckingMode = "basic"
exclude = ["examples", "vals/graphql_client", ".*"]
include = ["vals"]
reportAny = false
