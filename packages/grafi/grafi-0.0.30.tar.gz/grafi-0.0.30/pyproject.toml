[project]
name = "grafi"
version = "0.0.30"
description = "Grafi - a flexible, event-driven framework that enables the creation of domain-specific AI agents through composable agentic workflows."
authors = [{name = "Craig Li", email = "craig@binome.dev"}]
license = {text = "Mozilla Public License Version 2.0"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.11.5",
    "openai>=1.88.0",
    "docstring-parser>=0.16",
    "openinference-instrumentation-openai>=0.1.30",
    "arize-otel>=0.10.0",
    "loguru>=0.7.3",
    "jsonpickle>=4.1.0",
    "arize-phoenix-otel>=0.13.1",
    "anyio>=4.9.0",
    "cloudpickle>=3.1.1",
]

[dependency-groups]
dev = [
    "anthropic>=0.69.0",
    "arize-phoenix>=12.5.0",
    "chromadb>=1.1.1",
    "duckduckgo-search>=8.1.1",
    "fastmcp>=2.12.4",
    "google-genai>=1.43.0",
    "googlesearch-python>=1.3.0",
    "h11>=0.16.0",
    "llama-index-core>=0.12.48",
    "llama-index-embeddings-openai>=0.3.1",
    "llama-index-llms-openai>=0.4.7",
    "markdown>=3.8.2",
    "mcp>=1.11.0",
    "mypy>=1.18.2",
    "ollama>=0.6.0",
    "pre-commit>=4.2.0",
    "psycopg2-binary>=2.9.10",
    "asyncpg>=0.29.0",
    "pycountry>=24.6.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.12.2",
    "sqlalchemy>=2.0.41",
    "tavily-python>=0.7.12",
]
docs = [
    "mkdoc>=0.1",
]

[tool.ruff]
lint.select = [ "E", "F", "I", "TID251" ]
lint.ignore = [ "E501" ]
line-length = 88
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.TypedDict".msg = "Use typing_extensions.TypedDict instead."

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
disallow_untyped_defs = true
explicit_package_bases = true
warn_no_return = false
warn_unused_ignores = true
warn_redundant_casts = true
allow_redefinition = true
disable_error_code = "typeddict-item, return-value, override, has-type"

[[tool.mypy.overrides]]
module = "arize.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tavily.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "llama_index.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "googlesearch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpickle.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cloudpickle.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest-watcher]
now = true
delay = 0.1
patterns = ["*.py"]


[tool.flake8]
max-line-length = 88
ignore = [
    "E203",
    "E501",
    "W503",
    "E701",
    "E704",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "ANN401",
    "DUO109",
]
per-file-ignores = "**/__init__.py:F401"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv"
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
lines_after_imports = 2
force_single_line = true



[tool.hatch.build.targets.wheel]
packages = ["grafi"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
