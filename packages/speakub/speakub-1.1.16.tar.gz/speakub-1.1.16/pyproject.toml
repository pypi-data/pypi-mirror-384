




[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "speakub"
version = "1.1.16"
description = "A rich terminal EPUB reader with TTS support"
authors = [
    {name = "Sam Weng", email = "eyes1971@gmail.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Environment :: Console",
]
keywords = ["epub", "ebook", "reader", "terminal", "tts", "text-to-speech"]

dependencies = [
    "beautifulsoup4>=4.9.0",
    "wcwidth>=0.2.0",
    "html2text>=2020.1.16",
    "rich>=13.0.0",
    "textual>=0.40.0",
    "ebooklib>=0.18.0",
]

[project.optional-dependencies]
tts = [
    "edge-tts>=6.1.0",
    "pygame>=2.0.0",
]
images = [
    "fabulous",
    "Pillow>=8.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
]
all = [
    "speakub[tts,images,dev]"
]

[project.urls]
Homepage = "https://github.com/eyes1971/SpeakUB"
Repository = "https://github.com/eyes1971/SpeakUB.git"
Documentation = "https://speakub.readthedocs.io/"
"Bug Tracker" = "https://github.com/eyes1971/SpeakUB/issues"

[project.scripts]
speakub = "speakub.cli:main"

[tool.setuptools.packages.find]
include = ["speakub*"]
exclude = ["tests*"]



[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["speakub"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fabulous.*",
    "pygame.*",
    "edge_tts.*",
    "wcwidth.*",
    "html2text.*",
    "bs4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=speakub",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async (using pytest-asyncio)",
]

[tool.coverage.run]
source = ["speakub"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
