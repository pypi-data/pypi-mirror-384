[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "typytypy"
dynamic = ["version"]
description = "A Bespoke Character-by-Character Text Printer."
readme = "README_PYPI.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
authors = [
    {name = "KitscherEins"},
]
maintainers = [
    {name = "KitscherEins"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Console Fonts",
    "Topic :: Artistic Software",
    "Topic :: Documentation",
    "Topic :: Printing",
    "Topic :: Terminals",
    "Topic :: Text Processing",
]
keywords = [
    "animation",
    "API",
    "application",
    "character personality",
    "configurable",
    "console",
    "custom",
    "kitschcode",
    "output",
    "presets",
    "printing",
    "profile",
    "realistic",
    "real-time",
    "simulation",
    "terminal",
    "text",
    "timing",
    "typewriter",
    "typing",
]
requires-python = ">=3.10"
dependencies = []

[project.urls]
Homepage = "https://github.com/VDundDB/typytypy-py"
Documentation = "https://VDundDB.github.io/typytypy-py"
Repository = "https://github.com/VDundDB/typytypy-py"
PyPI = "https://pypi.org/project/typytypy"
Issues = "https://github.com/VDundDB/typytypy-py/issues"
Changelog = "https://github.com/VDundDB/typytypy-py/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
]
docs = [
    "sphinx>=8.2.3",
    "sphinx-autobuild>=2025.8.25",
    "sphinx-design>=0.6.1",
    "sphinx-togglebutton>=0.3.2",
    "sphinx-copybutton>=0.5.2",
    "myst-parser>=4.0.1",
    "furo>=2025.9.25",
]
dev = [
    "typytypy[test,docs]",
    "ruff>=0.14.0",
    "black>=25.9.0",
    "mypy>=1.18.2",
    "vermin>=1.6.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/typytypy"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs/source",
    "/docs/make.bat",
    "/docs/Makefile",
    "/assets",
    "/README.md",
    "/README_PYPI.md",
    "/LICENSE",
    "/CHANGELOG.md",
    "/pyproject.toml",
]

[tool.hatch.version]
path = "src/typytypy/__init__.py"

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors (PEP 8 style)
    "F",   # pyflakes (logical errors)  
    "I",   # isort (import ordering)
    "D",   # pydocstyle (PEP 257 docstrings)
    "ANN", # flake8-annotations (type hints for Pythonic code)
    "B",   # flake8-bugbear (bug patterns)
    "UP",  # pyupgrade (modernize code for newer Python versions)
]

exclude = [
    ".git",
    ".venv", 
    "__pycache__",
    "*.pyc",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in init files
"src/__init__.py" = ["D104"]  # Empty namespace marker
"tests/__init__.py" = ["D104"]  # Empty test namespace marker
"tests/typytypy/__init__.py" = ["D104"]  # Empty test subpackage marker
"tests/*.py" = ["ANN"]    # Skip type annotations in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"] 
python_functions = ["test_*"]
addopts = [
    "--cov=src.typytypy",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-branch",
    "--cov-fail-under=89",
    "-v",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_any_unimported = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_untyped_calls = false
