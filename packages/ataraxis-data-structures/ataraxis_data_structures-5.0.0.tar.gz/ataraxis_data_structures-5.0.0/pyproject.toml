# Defines the build system used for the project.
[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

# Project metdata section. Provides the general ID information about the project.
[project]
name = "ataraxis-data-structures"
version = "5.0.0"
description = "Provides classes and structures for storing, manipulating, and sharing data between Python processes."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.15"
authors = [
    { name = "Ivan Kondratyev", email = "ik278@cornell.edu" },
]
maintainers = [
    { name = "Ivan Kondratyev", email = "ik278@cornell.edu" },
]

keywords = ['data structures', 'data manipulation', 'data logging', 'shared memory', 'ataraxis']

classifiers = [
    # Development status
    "Development Status :: 5 - Production/Stable",
    # Intended audience and project topic
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    # License
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    # Supported Python Versions
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    # Supported OS systems
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    # Typing
    "Typing :: Typed"
]

# Runtime project dependencies.
dependencies = [
    "numpy>=2,<3",
    "ataraxis-base-utilities>=5,<6",
    "ataraxis-time>=5,<6",
    "dacite>=1,<2",
    "pyyaml>=6,<7",
    "tqdm>=4,<5",
]

[project.urls]
Homepage = "https://github.com/Sun-Lab-NBB/ataraxis-data-structures"
Documentation = "https://ataraxis-data-structures-api-docs.netlify.app/"

# Specifies additional dependencies that can be installed alongside the main library.
[project.optional-dependencies]

# Dependencies that support developing this project.
dev = [
    # Tox
    "tox>=4,<5",
    "uv>=0,<1",
    "tox-uv>=1,<2",

    # Development Automation
    "ataraxis-automation>=7,<8",

    # Types
    "types-pyyaml>=6,<7",
    "types-tqdm>=4,<5",

]

# In the future, callable scripts can be added here
[project.scripts]

# Specifies files that should not be included in the source-code distribution, but are also not part of gitignore.
[tool.hatch.build.targets.sdist]
exclude = [".github", "recipe"]

# Specifies the library structure.
[tool.hatch.build.targets.wheel]
packages = ["src/ataraxis_data_structures", "examples"]

# Ruff Configuration.
[tool.ruff]
line-length = 120         # The maximum column length is set to 120 for this project
indent-width = 4          # Same as black, indents are 4 spaces
target-version = "py312"  # Targets the lowest supported version of python
src = ["src"]             # The name of the source directory

# Excludes 'service' .py files, such as the sphinx configuration file from linting.
extend-exclude = ["conf.py"]

# Checks for all potential violations and uses the exclusions below to target-disable specific ones.
lint.select = ["ALL"]

# General ignore directives
lint.ignore = [
    "W291",    # Conflicts with docstring formatting
    "COM812",  # Conflicts with the formatter
    "ISC001",  # Conflicts with the formatter
    "TID252",  # Conflicts with library import management strategy
    "ANN401",  # Interferes with intended library behavior
    "C901",    # Sometimes complex functions are necessary
    "PLR0913", # Sometimes complex functions are necessary
    "PLR0912", # Sometimes complex functions are necessary
    "PLR0915", # Sometimes complex type defenitions are necessary
    "PLR0911", # Sometimes complex return graphs are necessary
    "COM812",  # Conflicts with the formatter
    "ISC001",  # Conflicts with the formatter
    "PT001",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "D107",    # Project-specific, __init__ is documented inside the main class docstring where applicable
    "D205",    # Bugs out for file descriptions
    "PLW0603", # While global statement usage is not ideal, it greatly streamlines certain development patterns
]

# Additional formatting configurations
[tool.ruff.format]
quote-style = "double"             # Uses double quotes for strings
indent-style = "space"             # Uses space for indents
skip-magic-trailing-comma = false  # Like black, ignores trailing commas
line-ending = "auto"               # Automatically detects and standardizes line-ending character

# Docstrings and comments' line length
[tool.ruff.lint.pycodestyle]
max-doc-length = 120  # Maximum documentation line length, the same as code

# Docstrings style
[tool.ruff.lint.pydocstyle]
convention = "google"

# Additional, file-specific 'ignore' directives
[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]

[tool.ruff.lint.isort]
case-sensitive = true              # Takes case into account when sorting imports
combine-as-imports = true          # Combines multiple "as" imports for the same package
force-wrap-aliases = true          # Wraps "as" imports so that each uses a separate line (after combining for package)
force-sort-within-sections = true  # Forces "as" and "from" imports for the same package to be close
length-sort = true                 # Places shorter imports first

# MyPy configuration section.
[tool.mypy]
# Strict mode settings (equivalent to --strict)
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

# Extra checks (equivalent to --extra-checks)
extra_checks = true

# Pretty output (equivalent to --pretty)
pretty = true

exclude = [
    "ataraxis-data-structures-\\d+", # Ignores temporary folder created by setuptools when building the sdist
    "venv.*/",                       # Ignores virtual environments
    "build/",                        # Ignores the sdist directory
    "dist/",                         # Ignores the wheel directory
    "docs/",                         # Ignores the sphinx / doxygen directory
    "stubs/",                        # Ignores stubs directory (stubgen output target)
    "recipe/",                       # Ignores recipe directory (grayskull output target)
    "tests/",                        # Ignores the test directory.
]

# This is used by the 'test' tox tasks to aggregate coverage data produced during pytest runtimes.
[tool.coverage.paths]

# Maps coverage measured in site-packages to source files in src
source = ["src/", ".tox/*/lib/python*/site-packages/"]

# Same as above, specifies the output directory for the coverage .html report
[tool.coverage.html]
directory = "reports/coverage_html"

# Specifies additional ignore directives
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __del__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]
