stages:
  - prepare-release
  - release

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - when: never

pypi:
  stage: release
  image:
    name: python:alpine
  before_script:
    - pip install twine build
  script:
    - python -m build
    - twine upload -u __token__ -p ${PYPI_JUPYTERJSC_TOKEN} dist/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+((a|b|rc)\d+|\.post\d+)?$/'


###
#
# Prepare release notes
#
###

prepare_job:
  stage: prepare-release
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+(\.post\d+)?$/'
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" -X POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG"'
  artifacts:
    paths:
    - release_notes.md

###
#
# Create release
#
###

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+(\.post\d+)?$/'
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'jupyter-jsc-custom python package $CI_COMMIT_TAG'
          url: "https://pypi.org/project/jupyter-jsc-custom/${CI_COMMIT_TAG}/"
