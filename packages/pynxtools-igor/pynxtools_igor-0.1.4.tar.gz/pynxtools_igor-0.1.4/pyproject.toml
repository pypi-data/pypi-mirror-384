[build-system]
requires = ["setuptools>=78.1.1", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pynxtools-igor"
dynamic = ["version"]
authors = [
    { name = "The NOMAD Authors" },
]
description = "pynxtools plugin for reading igor pro waves and packed experiments"
readme = "README.md"
license= {text = "Apache-2.0"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pynxtools>=0.12.0",
    "igor2>=0.5.8",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "ruff>=0.12.0",
    "pytest",
    "pytest-cov",
    "types-pyyaml",
    "pre-commit",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocs-macros-plugin",
    "pymdown-extensions",
    "mkdocs-click"
]

[project.urls]
"Homepage" = "https://github.com/FAIRmat-NFDI/pynxtools-igor"
"Bug Tracker" = "https://github.com/FAIRmat-NFDI/pynxtools-igor/issues"

[project.entry-points."pynxtools.reader"]
igor = "pynxtools_igor.reader:IgorReader"

[project.entry-points.'nomad.plugin']
igor_example = "pynxtools_igor.nomad.entrypoints:igor_example"

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools_scm]

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
    "NPY201", # upgrade to numpy >2
]
ignore = [
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
