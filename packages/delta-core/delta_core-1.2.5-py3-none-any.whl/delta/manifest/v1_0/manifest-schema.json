{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "http://www.gael-systems.com/delta-twin/manifest.json",
  "type": "object",
  "title": "DeltaTwin Manifest Schema",
  "required": [
    "name",
    "description",
    "license"
  ],
  "additionalProperties": false,
  "properties": {
    "deltaVersion": {
      "enum": ["1.0"]
    },
    "name": {
      "type": "string",
      "title": "The name of the Delta twin",
      "description": "The name of this delta twin used to be displayed to the end users."
    },
    "description": {
      "type": "string",
      "title": "The description of the Delta Twin",
      "description": "The details regarding this Delta Twin"
    },
    "license": {
      "type": "object",
      "title": "This delta twin license",
      "required": [
        "name",
        "url",
        "copyrights"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": "LGPLv3",
          "title": "The license name",
          "description": "The name of the license applied to this Delta Twin"
        },
        "description": {
          "type": "string",
          "default": "The default license for DeltaTwin is LGPLv3",
          "title": "The description of the license",
          "description": "The description of the license applied to this Delta Twin"
        },
        "url": {
          "type": "string",
          "default": "https://www.gnu.org/licenses/gpl-3.0.txt",
          "title": "The url to licence",
          "description": "The URL to the license applied to this Delta Twin"
        },
        "copyrights": {
          "type": "array",
          "default": [
            {
              "years": [2021, 2022, 2023, 2024],
              "company": "GAEL Systems"
            },
            {
              "years": [2021],
              "company": "ESA/ESRIN"
            }
          ],
          "title": "This Delta Twin copyrights",
          "description": "Declare who owns the intellectual property of this delta twin, it includes the effective date of the ownership.",
          "items": {
            "type": "object",
            "required": [
              "years",
              "company"
            ],
            "properties": {
              "years": {
                "type": "array",
                "description": "List of the effective dates of the ownership.",
                "items": {
                  "type": "integer",
                  "$ref": "#/definitions/year",
                  "uniqueItems": true
                },
                "title": "The year Schema"
              },
              "company": {
                "type": "string",
                "title": "The company Schema",
                "description": "The owner company name."
              }
            }
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "$ref": "#/definitions/data-folder",
      "description": "Input resources managed in this delta twin by delta drive component."
    },
    "artifacts": {
      "type": "object",
      "$ref": "#/definitions/data-folder",
      "description": "Output resources of the models produced by this delta twin and managed by delta drive component."
    },
    "models": {
      "type": "object",
      "required": [
        "path",
        "type",
        "parameters"
      ],
      "description": "Model to be executed to run this delta twin.",
      "properties": {
        "path": {
          "type": "string",
          "title": "path where is located the models"
        },
        "type": {
          "type": "string",
          "title": "name of the runner model (nifi, python or shell)"
        },
        "parameters": {
          "type": "object",
          "title": "runner parameters (depends of the runner implementation"
        }
      }
    }
  },

  "definitions": {
    "year" : {
      "type": "number",
      "minimum": 1970,
      "maximum": 2100
    },
    "data-folder": {
      "type": "object",
      "title": "The resources Schema",
      "description": "Delta Twin resources list and access configuration policy.",
      "required": [
        "path",
        "items"
      ],
      "properties": {
        "path": {
          "type": "string",
          "default": "resources",
          "title": "The path Schema"
        },
        "items": {
          "type": "array",
          "title": "The items Schema",
          "items": {
            "type": "object",
            "title": "The data resources information",
            "required": [
              "name",
              "source_url"
            ],
            "properties": {
              "name": {
                "type": "string",
                "title": "The name Schema"
              },
              "source_url": {
                "type": "string",
                "title": "The source_url Schema"
              },
              "cache": {
                "type": "object",
                "title": "The cache management definition",
                "required": [
                  "fetch",
                  "eviction"
                ],
                "properties": {
                  "fetch": {
                    "type": "object",
                    "title": "The fetch Schema",
                    "description": "Fetch can be configured thanks to its fetching-mode (see mode details), and it can be reset periodically.",
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "title": "The fetch mode",
                        "description" : "Fetch mode defines the way the data is recovered from its source.",
                        "enum": [
                          "now",
                          "on-demand",
                          "force",
                          "never"
                        ]
                      },
                      "reset": {
                        "type": "string",
                        "format": "duration",
                        "title": "The reset period",
                        "description": "The reset period is the time to spend between the data reload when the twin is running. The reset uses ISO 8601 Augmented Backus-Naur Form"
                      }
                    }
                  },
                  "eviction": {
                    "type": "object",
                    "title": "The eviction Schema",
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "enum": [
                          "none",
                          "lru",
                          "lfu",
                          "fifo"
                        ],
                        "title": "The eviction mode"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}