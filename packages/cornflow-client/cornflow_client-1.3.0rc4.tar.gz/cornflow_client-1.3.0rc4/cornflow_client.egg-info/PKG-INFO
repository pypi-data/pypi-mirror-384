Metadata-Version: 2.4
Name: cornflow-client
Version: 1.3.0rc4
Summary: Client to connect to a cornflow server
Home-page: https://github.com/baobabsoluciones/cornflow
Author: baobab soluciones
Author-email: sistemas@baobabsoluciones.es
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: requests<=2.32.4
Requires-Dist: genson<=1.2.2
Requires-Dist: jsonschema<=4.21.1
Requires-Dist: marshmallow<=3.20.2
Requires-Dist: pytups<=0.86.2
Requires-Dist: ortools<=9.8.3296
Requires-Dist: PuLP<=2.9.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

cornflow client
================

The aim of this repository is to have a client to use to connect to a deployed cornflow webserver

Requirements
~~~~~~~~~~~~

* python >= 3.8

Install cornflow-client
~~~~~~~~~~~~~~~~~~~~~~~~

To install the package do::

    python3 -m pip install cornflow-client

Use cornflow-client
~~~~~~~~~~~~~~~~~~~~

To use, first you have to import the package::

    from cornflow_client import CornFlow

Then you have to start up the client and login or sing up::

    client = CornFlow(url="URL_TO_THE_WEB_SERVER")
    client.sign_up(username, email, password)
    client.login(username, password)

And then finally you can use the cornflow webserver and start solving problems::

    instance_id = client.create_instance(data)
    execution_id = client.create_execution(instance_id, execution_config)
    status = client.get_status(execution_id)
    results = client.get_results(execution_id)
