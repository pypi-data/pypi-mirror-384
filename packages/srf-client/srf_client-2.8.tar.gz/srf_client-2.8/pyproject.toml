[build-system]
requires = ["setuptools>=61.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "srf-client"
dynamic = ["version"]
description = "Centre for Sustainable Road Freight - Data Platform client"
requires-python = ">=3.8"
license = { text = "MIT License" }
authors = [
    { name = "James Howe", email = "jmh205@cam.ac.uk" }
]
maintainers = [
    { name = "Centre for Sustainable Road Freight", email = "tech@csrf.ac.uk" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: GraalPy",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Natural Language :: English"
]
dependencies = [
    "attrs >=20.1.0",
    "CacheControl",
    "geopy <3",
    "immutabledict <3",
    "iso8601; python_version<'3.11'",
    "lazy-object-proxy ~=1.4",
    "pyhumps >=1.6, <4",
    "requests ~=2.22"
]

[project.urls]
Homepage = "https://data.csrf.ac.uk"
Documentation = "https://data.csrf.ac.uk/python/docs"

[project.optional-dependencies]
oauth = ["requests-oauthlib ~=2.0"]
pandas = ["pandas >=1.2, <3"]
dev = [  # need pip 25.1+ (drop py38) for [dependency-groups]
    "coverage[toml] ~=7.0",
    "flake8 ~=7.0",
    "flake8-docstrings ~=1.0",
    "flake8-pyproject ~=1.0",
    "pydocstyle ~=6.1",
    "pytest ~=7.2",
    "pytest-cov ~=4.0",
    "pytest-mock ~=3.0",
    "requests-mock >=1.9.2, <2",
    "requests-oauthlib ~=2.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
junit_family = "xunit2"

[tool.coverage.run]
branch = true
source = ["srf_client"]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "raise AssertionError",
    "raise ModuleNotFoundError",
    "raise NotImplementedError"
]

[tool.flake8]
format = "pylint"
ignore = [
    "D100",  # Missing docstring in public module
    "D105",  # Missing docstring in magic method
]
per-file-ignores = [
    "srf_client/__init__.py: F401, F403, F405",  # unused / star imports
    "srf_client/filter.py: D107",  # Missing docstring in __init__
    "srf_client/sort.py: D107"  # Missing docstring in __init__
]
