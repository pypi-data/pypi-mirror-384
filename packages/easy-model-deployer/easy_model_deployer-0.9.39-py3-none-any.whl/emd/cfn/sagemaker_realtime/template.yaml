AWSTemplateFormatVersion: '2010-09-09'
Description: Easy Model Deployer model deployment stack for Amazon SageMaker. The invoke endpoint can be found in the stack Outputs. Please go to https://github.com/aws-samples/easy-model-deployer for more information.

Parameters:
  ECRImageURI:
    Type: String
    Description: The URI of the ECR image to be used for the SageMaker Endpoint
  InstanceType:
    Type: String
    Description: The instance type to be used for the SageMaker Endpoint
  ModelId:
    Type: String
    Description: The emd model ID to be used for the SageMaker Endpoint
  ModelTag:
    Type: String
    Description: The model tag to be used for the SageMaker Endpoint
  FrameWorkType:
    Type: String
    Description: The framework type to be used for the SageMaker Endpoint
  ServiceType:
    Type: String
    Description: The service type to be used for the SageMaker Endpoint
  EngineType:
    Type: String
    Description: The engine type to be used for the SageMaker Endpoint
  Region:
    Type: String
    Description: The region to be used for the SageMaker Endpoint
  MinCapacity:
    Type: Number
    Description: The minimum capacity of the endpoint
    Default: 1
  MaxCapacity:
    Type: Number
    Description: The maximum capacity of the endpoint
    Default: 1
  AutoScalingTargetValue:
    Type: Number
    Description: The target value for the autoscaling
    Default: 10
  SageMakerEndpointName:
    Type: String
    Description: The name of the SageMaker Endpoint
    Default: "Auto-generate"
  DNSName:
    Type: String
    Description: The DNS name of the public load balancer. To use HTTPS, create an SSL certificate in AWS Certificate Manager and attach it to the load balancer.
  LambdaDeploymentHelperArn:
    Type: String
    Description: The ARN of the Lambda function for capacity provider association
  APIKey:
    Type: String
    Default: ""
    NoEcho: true
    Description: API key to be used for invoking the model

Conditions:
  UseDefaultEndpointName: !Equals [!Ref SageMakerEndpointName, "Auto-generate"]
  HasAPIKey: !Not [!Equals [!Ref APIKey, ""]]
  IsChinaRegion: !Or
    - !Equals [!Ref "AWS::Region", "cn-north-1"]
    - !Equals [!Ref "AWS::Region", "cn-northwest-1"]

Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
          - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSageMakerFullAccess
          - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3ReadOnlyAccess
          - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  SageMakerModel:
    Type: AWS::SageMaker::Model
    Properties:
      ModelName: !Sub '${AWS::StackName}-model'
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      PrimaryContainer:
        Image: !Ref ECRImageURI
        Environment:
          API_HOST: '0.0.0.0'
          API_PORT: '8080'
          MODEL_ID: !Ref ModelId
          INSTANCE_TYPE: !Ref InstanceType

  SageMakerEndpointConfig:
    Type: AWS::SageMaker::EndpointConfig
    Properties:
      EndpointConfigName: !Sub '${AWS::StackName}-config'
      ProductionVariants:
        - InitialInstanceCount: 1
          InitialVariantWeight: 1
          InstanceType: !Ref InstanceType
          ModelName: !GetAtt SageMakerModel.ModelName
          VariantName: AllTraffic
          ContainerStartupHealthCheckTimeoutInSeconds: 600

  SageMakerEndpoint:
    Type: AWS::SageMaker::Endpoint
    Properties:
      EndpointName: !If
        - UseDefaultEndpointName
        - !Sub '${AWS::StackName}-endpoint'
        - !Ref SageMakerEndpointName
      EndpointConfigName: !GetAtt SageMakerEndpointConfig.EndpointConfigName


  # EndpointAutoScaling:
  #   Type: AWS::ApplicationAutoScaling::ScalableTarget
  #   Properties:
  #     MaxCapacity: !Ref MaxCapacity
  #     MinCapacity: 1
  #     ResourceId: !Sub "endpoint/${SageMakerEndpoint}/variant/AllTraffic"
  #     RoleARN: <your-application-autoscaling-role-arn>
  #     ScalableDimension: "sagemaker:variant:DesiredInstanceCount"
  #     ServiceNamespace: "sagemaker"
  EndpointAutoScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      RoleARN: !GetAtt ExecutionRole.Arn
      ResourceId: !Sub "endpoint/${SageMakerEndpoint.EndpointName}/variant/AllTraffic"
      ScalableDimension: "sagemaker:variant:DesiredInstanceCount"
      ServiceNamespace: "sagemaker"

 # Type: AWS::ApplicationAutoScaling::Policy
    # Properties:
    #   PolicyName: "RequestCountAutoScalingPolicy"
    #   PolicyType: "TargetTrackingScaling"
    #   ScalingTargetId: !Ref EndpointAutoScaling
    #   TargetTrackingScalingPolicyConfiguration:
    #     TargetValue: !Ref AutoScalingTargetValue
    #     PredefinedMetricSpecification:
    #       PredefinedMetricType: "SageMakerVariantInvocationsPerInstance"
    #     ScaleInCooldown: 60
    #     ScaleOutCooldown: 60
  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: "RequestCountAutoScalingPolicy"
      PolicyType: "TargetTrackingScaling"
      ScalingTargetId: !Ref EndpointAutoScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: !Ref AutoScalingTargetValue
        PredefinedMetricSpecification:
          PredefinedMetricType: "SageMakerVariantInvocationsPerInstance"
        ScaleInCooldown: 600
        ScaleOutCooldown: 600

  SetApiKey:
    Type: Custom::SetApiKey
    Condition: HasAPIKey
    Properties:
      ServiceToken: !Ref LambdaDeploymentHelperArn
      ModelName: !Join ['', [!Ref ModelId, '/', !Ref ModelTag]]
      APIKey: !Ref APIKey

Outputs:
  Model:
    Description: The unique model ID that determines which model will process your request in the OpenAI-compatible API.
    Value: !Join ['', [!Ref ModelId, '/', !Ref ModelTag]]
  BaseURL:
    Description: Please use this URL for the OpenAI-compatible model API, like /v1/chat/completions. To use HTTPS, create an SSL certificate in AWS Certificate Manager and attach it to the load balancer.
    Value: !Join ['', ['http://', !Ref DNSName]]
  SageMakerEndpointName:
    Description: You can use invoke the endpoint by using the SageMaker runtime API.
    Value: !GetAtt SageMakerEndpoint.EndpointName
  ModelAPIKey:
    Condition: HasAPIKey
    Description: "API key for accessing model is securely stored in AWS Secrets Manager and can be managed through the provided link."
    Value: !If
      - IsChinaRegion
      - !Sub "https://console.amazonaws.cn/secretsmanager/secret?name=EMD-APIKey-Secrets&region=${AWS::Region}"
      - !Sub "https://console.aws.amazon.com/secretsmanager/secret?name=EMD-APIKey-Secrets&region=${AWS::Region}"
