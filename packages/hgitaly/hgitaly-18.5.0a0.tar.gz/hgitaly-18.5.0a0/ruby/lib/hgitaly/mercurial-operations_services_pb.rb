# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: mercurial-operations.proto for package 'hgitaly'

require 'grpc'
require 'mercurial-operations_pb'

module Hgitaly
  module MercurialOperationsService
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'hgitaly.MercurialOperationsService'

      # Provide all information for a possible merge
      #
      # Will be used in mergeability checks and last-minute checks if needed.
      rpc :MergeAnalysis, ::Hgitaly::MergeAnalysisRequest, ::Hgitaly::MergeAnalysisResponse
      # Invalidate cache for MergeAnalysis
      #
      # Will be used in mergeability checks and last-minute checks if needed.
      rpc :InvalidateMergeAnalysis, ::Hgitaly::InvalidateMergeAnalysisRequest, ::Hgitaly::InvalidateMergeAnalysisResponse
      # Publish a changeset
      #
      # As any publication in Mercurial, it also publishes all ancestors that
      # were not already public.
      rpc :PublishChangeset, ::Hgitaly::PublishChangesetRequest, ::Hgitaly::PublishChangesetResponse
      # Censor a changeset
      #
      # Equivalent of `hg censor`
      rpc :Censor, ::Hgitaly::CensorRequest, ::Hgitaly::CensorResponse
      # MergeBranch plays the same role as OperationService.UserMergeBranch with the following differences:
      #
      # - It is not a 2-phase operation, hence not streaming
      # - The Request message has a slighly different set of options
      rpc :MergeBranch, ::Hgitaly::MergeBranchRequest, ::Hgitaly::MergeBranchResponse
      # Rebase plays the same role as OperationsService.UserRebaseConfirmable
      rpc :Rebase, ::Hgitaly::RebaseRequest, ::Hgitaly::RebaseResponse
      # GetWorkingDirectory hands over a working directory, checked out to
      # the wished changeset.
      #
      # The server manages a pool of working directories for efficient update.
      # The client has exclusivity over the working directory it has been handed,
      # and is expected to release it.
      rpc :GetWorkingDirectory, ::Hgitaly::GetWorkingDirectoryRequest, ::Hgitaly::GetWorkingDirectoryResponse
      # ReleaseWorkingDirectory allows the server to put a working directoy back
      # in the pool for later reuse.
      rpc :ReleaseWorkingDirectory, ::Hgitaly::ReleaseWorkingDirectoryRequest, ::Hgitaly::ReleaseWorkingDirectoryResponse
    end

    Stub = Service.rpc_stub_class
  end
end
