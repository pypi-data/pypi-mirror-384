# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: mercurial-aux-git.proto for package 'hgitaly'

require 'grpc'
require 'mercurial-aux-git_pb'

module Hgitaly
  module MercurialAuxGitService
    # Methods working on auxiliary Git repositories
    #
    # The auxiliary Git repositories are mostly meant to support mirroring
    # to external Git services.
    # These are set aside so that Gitaly does not handle them.
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'hgitaly.MercurialAuxGitService'

      rpc :AuxGitCreateBundle, ::Gitaly::CreateBundleRequest, stream(::Gitaly::CreateBundleResponse)
      rpc :AuxGitCreateFromBundle, stream(::Gitaly::CreateRepositoryFromBundleRequest), ::Gitaly::CreateRepositoryFromBundleResponse
      rpc :AuxGitRepositorySize, ::Gitaly::RepositorySizeRequest, ::Gitaly::RepositorySizeResponse
      # / Resolve Mercurial commit ID from Git commit ID and conversely
      rpc :AuxGitCommitMapping, ::Hgitaly::AuxGitCommitMappingRequest, ::Hgitaly::AuxGitCommitMappingResponse
    end

    Stub = Service.rpc_stub_class
  end
end
