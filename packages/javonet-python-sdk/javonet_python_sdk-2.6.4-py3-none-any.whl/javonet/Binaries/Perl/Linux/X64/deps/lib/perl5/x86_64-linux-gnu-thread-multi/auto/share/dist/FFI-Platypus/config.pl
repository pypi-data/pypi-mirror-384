do { my $x = {
  'abi' => {
    'default_abi' => '2',
    'efi64' => '3',
    'gnuw64' => '4',
    'unix64' => '2',
    'win64' => '3'
  },
  'align' => {
    'double' => '8',
    'double complex' => '8',
    'float' => '4',
    'float complex' => '4',
    'long double' => '16',
    'long double complex' => '16',
    'pointer' => '8',
    'sint16' => '2',
    'sint32' => '4',
    'sint64' => '8',
    'sint8' => '1',
    'uint16' => '2',
    'uint32' => '4',
    'uint64' => '8',
    'uint8' => '1'
  },
  'config_dlext' => [
    'so'
  ],
  'probe' => {
    'abi' => 1,
    'alloca' => 1,
    'bigendian' => 0,
    'bigendian64' => 0,
    'complex' => 1,
    'longdouble' => 1,
    'recordvalue' => 1,
    'strnlen' => 1,
    'variadic' => 1
  },
  'test-key' => 'test-value',
  'type_map' => {
    'blkcnt_t' => 'sint64',
    'blksize_t' => 'sint64',
    'bool' => 'uint8',
    'char' => 'sint8',
    'dev_t' => 'uint64',
    'double' => 'double',
    'double complex' => 'complex_double',
    'enum' => 'uint32',
    'float' => 'float',
    'float complex' => 'complex_float',
    'gid_t' => 'uint32',
    'ino_t' => 'uint64',
    'int' => 'sint32',
    'int16_t' => 'sint16',
    'int32_t' => 'sint32',
    'int64_t' => 'sint64',
    'int8_t' => 'sint8',
    'intmax_t' => 'sint64',
    'intptr_t' => 'sint64',
    'long' => 'sint64',
    'long double' => 'longdouble',
    'long double complex' => 'complex_longdouble',
    'long long' => 'sint64',
    'mode_t' => 'uint32',
    'nlink_t' => 'uint64',
    'off_t' => 'sint64',
    'ptrdiff_t' => 'sint64',
    'senum' => 'sint32',
    'short' => 'sint16',
    'signed char' => 'sint8',
    'signed int' => 'sint32',
    'signed long' => 'sint64',
    'signed long long' => 'sint64',
    'signed short' => 'sint16',
    'size_t' => 'uint64',
    'ssize_t' => 'sint64',
    'time_t' => 'sint64',
    'uchar' => 'uint8',
    'uid_t' => 'uint32',
    'uint' => 'uint32',
    'uint16_t' => 'uint16',
    'uint32_t' => 'uint32',
    'uint64_t' => 'uint64',
    'uint8_t' => 'uint8',
    'uintmax_t' => 'uint64',
    'uintptr_t' => 'uint64',
    'ulong' => 'uint64',
    'unsigned char' => 'uint8',
    'unsigned int' => 'uint32',
    'unsigned long' => 'uint64',
    'unsigned long long' => 'uint64',
    'unsigned short' => 'uint16',
    'ushort' => 'uint16',
    'wchar_t' => 'sint32',
    'wint_t' => 'uint32'
  }
};
$x;}