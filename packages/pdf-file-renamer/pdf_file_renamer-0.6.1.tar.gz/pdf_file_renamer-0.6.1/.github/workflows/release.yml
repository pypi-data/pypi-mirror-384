name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests
        run: uv run pytest tests/

      - name: Build package
        run: uv build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv run twine upload dist/*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          body: |
            ## What's Changed

            Release version ${{ steps.get_version.outputs.VERSION }}

            See the [REFACTORING_SUMMARY.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/REFACTORING_SUMMARY.md) for architecture details.

            ### Installation

            **From PyPI:**
            ```bash
            pip install pdf-renamer==${{ steps.get_version.outputs.VERSION }}
            ```

            **Using uvx (no installation required):**
            ```bash
            uvx pdf-renamer@${{ steps.get_version.outputs.VERSION }}
            ```
