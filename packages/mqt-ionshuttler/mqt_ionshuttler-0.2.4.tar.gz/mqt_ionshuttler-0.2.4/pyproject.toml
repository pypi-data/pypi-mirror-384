[build-system]
requires = ["uv_build>=0.9.2,<0.10.0"]
build-backend = "uv_build"

[project]
name = "mqt-ionshuttler"
version = "0.2.4"
authors = [
    { name = "Daniel Schoenberger", email = "daniel.schoenberger@tum.de"}
]
description = "A solver for the shuttling problem in QCCD quantum computers"
keywords = ["MQT", "quantum computing", "compilation", "shuttling", "design automation", "SAT solver"]
readme = "README.md"
license = "MIT"
license-files = ["LICENSE.md"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Typing :: Typed",
]
dependencies = [
    "qiskit>=1.0.0",
    "numpy>=1.26",
    "numpy>=2.1; python_version >= '3.13'",
    "numpy>=2.3.2; python_version >= '3.14'",
    "z3-solver>=4.15.3",
    "matplotlib>=3.7.1",
    "matplotlib>=3.8; python_version >= '3.12'",
    "matplotlib>=3.10; python_version >= '3.13'",
    "matplotlib>=3.10.5; python_version >= '3.14'",
    "networkx>=3.0",
    "more_itertools>=10.1.0"
]
requires-python = ">=3.10"

[project.scripts]
mqt-ionshuttler-exact = "mqt.ionshuttler.single_shuttler.__main__:main"
mqt-ionshuttler-heuristic = "mqt.ionshuttler.multi_shuttler.__main__:main"

[project.urls]
Discussions = "https://github.com/munich-quantum-toolkit/ionshuttler/discussions"
Documentation = "https://mqt.readthedocs.io/projects/ionshuttler"
Homepage = "https://github.com/munich-quantum-toolkit/ionshuttler"
Issues = "https://github.com/munich-quantum-toolkit/ionshuttler/issues"


[tool.uv]
required-version = ">=0.8.17"

[tool.uv.build-backend]
module-name = "mqt.ionshuttler"
source-include = [
  "inputs/**",
]

[tool.uv.sources]
mqt-ionshuttler = { workspace = true }


[tool.pytest.ini_options]
minversion = "7.2"
testpaths = ["tests/"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--numprocesses=auto", # Automatically use all available CPU cores for parallel testing
]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = [
    "error",
]


[tool.coverage]
run.source = ["mqt.ionshuttler"]
run.disable_warnings = [
    "no-sysmon",
]
report.exclude_also = [
    '\.\.\.',
    'if TYPE_CHECKING:',
    'raise AssertionError',
    'raise NotImplementedError',
]
show_missing = true
skip_empty = true
precision = 1


[tool.mypy]
files = ["src/mqt", "tests", "noxfile.py"]
mypy_path = ["$MYPY_CONFIG_FILE_DIR/src"]
python_version = "3.10"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["qiskit.*", "z3.*"]
ignore_missing_imports = true


[tool.typos]
default.extend-ignore-re = [
    "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$", # ignore line
    "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on" # ignore block
]

[tool.typos.default.extend-words]
wille = "wille"
aer = "aer"
ket   = "ket"


[tool.repo-review]
ignore = ["GH200"]


[tool.ruff]
line-length = 120
preview = true
unsafe-fixes = true

[tool.ruff.lint]
select = [
    "E", "F", "W",  # flake8
    "A",            # flake8-builtins
    "ARG",          # flake8-unused-arguments
    "B", "B904",    # flake8-bugbear
    "C4",           # flake8-comprehensions
    "EM",           # flake8-errmsg
    "EXE",          # flake8-executable
    "I",            # isort
    "ICN",          # flake8-import-conventions
    "ISC",          # flake8-implicit-str-concat
    "N",            # flake8-naming
    "PGH",          # pygrep-hooks
    "PIE",          # flake8-pie
    "PL",           # pylint
    "PT",           # flake8-pytest-style
    "PTH",          # flake8-use-pathlib
    "PYI",          # flake8-pyi
    "Q",            # flake8-quotes
    "RET",          # flake8-return
    "RSE",          # flake8-raise
    "RUF",          # Ruff-specific
    "SIM",          # flake8-simplify
    "TC",           # flake8-type-checking
    "TID",          # flake8-tidy-imports
    "TRY",          # tryceratops
    "UP",           # pyupgrade
    "YTT"           # flake8-2020
]
ignore = [
    # Default ignores
    "C90",     # <...> too complex
    "COM812",  # Conflicts with formatter
    "CPY001",  # Missing copyright notice at top of file
    "ISC001",  # Conflicts with formatter
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "PLC0415", # Import should be at top of file
    "S101",    # Use of assert detected
    "S404",    # `subprocess` module is possibly insecure
    "TID252",  # Prefer absolute imports over relative imports from parent modules
    # Additional temporary ignores
    # After a refactor, these should no longer be necessary
    "ARG001",   # Unused function argument
    "E501",     # Line too long
    "PLR1702",  # Too many nested blocks
    "PLR6301",  # Method [...] could be a function, class method, or static method
]
future-annotations = true

[tool.ruff.lint.isort]
known-first-party = ["mqt.ionshuttler"]

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["T20", "INP001"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.check-sdist]
git-only = [
    ".gitignore",
    ".license-tools-config.json",
    ".readthedocs.yaml",
    "docs/*",
    "sitecustomize.py",
    "tests/*",
    "uv.lock",
]


[dependency-groups]
docs = [
    "furo>=2024.8.6",
    "myst-nb>=1.2.0",
    "setuptools-scm>=8.2",
    "sphinx-autoapi>=3.6.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "sphinxcontrib-bibtex>=2.6.3",
    "sphinxcontrib-svg2pdfconverter>=1.3.0",
    "sphinxext-opengraph>=0.10.0",
    "graphviz>=0.20.3",
    "sphinx>=8.1.3",
    "sphinx>=8.2.3; python_version >= '3.11'",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.7.0",
]
dev = [
    {include-group = "docs"},
    {include-group = "test"},
]
