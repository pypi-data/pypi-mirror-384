Metadata-Version: 2.4
Name: vbrpytools
Version: 3.7.0
Summary: Package grouping functions that I'm using in multiple places
Project-URL: Documentation, https://github.com/vbrett/vbrpytools/blob/master/README.md
Project-URL: source, https://github.com/vbrett/vbrpytools
Project-URL: Repository, https://github.com/vbrett/vbrpytools.git
Project-URL: Issues, https://github.com/vbrett/vbrpytools/issues
Author-email: Vincent Brettnacher <vincent.brettnacher@veoneer.com>
License: MIT License
        
        Copyright (c) 2024 Vincent Brettnacher
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: development,personal,tools,utilities
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: Operating System :: Microsoft :: Windows :: Windows 11
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.10
Requires-Dist: humanize>=4.10.0
Requires-Dist: openpyxl>=3.1.5
Description-Content-Type: text/markdown

# vbrpytools

vbrpytools is a Python library of general functions that I use in all my other packages.

- [vbrpytools](#vbrpytools)
  - [Install Package](#install-package)
  - [Use Package](#use-package)
    - [misctools](#misctools)
    - [dicjsontools](#dicjsontools)
    - [exceltojson](#exceltojson)
  - [License](#license)

## Install Package

```bash
pip install vbrpytools
```

## Use Package

Functions are grouped in the following modules:

### misctools

Support library to ease development

- verbose management
- progress bar display
- open with file preservation
- input argument management
- command line execution
- Handling stdout encoding to match PYTHONIOENCODING envvar (needed when bundling python script in a exe)

```python
from vbrpytools import misctools

# decorator to manage verbose & display execution information
@misctools.with_verbose

# decorator to execute a function through run_and_display_progress (see below)
@misctools.with_waiting_message

# Call in a loop to create terminal progress bar or revolving character
misctools.iterate_and_display_progress(iterable)

# Call a function in a separate thread and display a progress message while executing
misctools.run_and_display_progress(func)

# Rename a file by adding a timestamp to its name
misctools.timestamp_filename(filename)

# Make a copy of an existing file before opening it in write mode + enforce encoding to UTF-8 by default
misctools.open_preserve(filename)

# all-in-one argument definition, parse & read
misctools.get_args(arg_defs)

# Yields successive chunks from a list until all is parsed
misctools.divide_list(list, size)

# Put the input string in the clipboard
misctools.copy_to_clipboard(string)

# colorize a string if output in a terminal supporting ANSI escape characters
misctools.colorize(string)
misctools.Colors()  # List of supported colors

# If program is running in piping mode enforce stdout encoding to PYTHONIOENCODING.
misctools.force_stdout_encoding()

# Execute a command line in a separate subprocess and return the STD OUT
misctools.execute_cmd(cmd)

# Ask a yes/no question via and return answer.
misctools.query_yes_no(question)

# Transform a string into a date, trying to decode it.
misctools.parse_str_date(string)
```

### dicjsontools

Support library to ease dict & JSON management:

- dictionary manipulation (extraction, merge, ...)
- json file load, save, update

```python
from vbrpytools import dicjsontools

# Retrieve a subdict of a given dic "master" key
dicjsontools.sub_dict(dic, key, subkeys)

# merges 2 dictionaries, dict_b into dict_a
dicjsontools.merge_dict(dic_a, dic_b, options)

# Creates a dic from a list of key by nesting them
dicjsontools.create_nested_dict(keys, last_key_val)

# transform all relevant dictionary keys from string to integer
dicjsontools.dict_keys_to_int(dic)

# Load a json file into a dictionary with key conversion
dicjsontools.load_json_file(filename)

# Append a json dictionary to an existing json file
dicjsontools.append_json_file(filename, dic)

# Dump a dictionary in a json file
dicjsontools.save_json_file(dic, filename)
```

### exceltojson

Open an excel file table and save it as a json file
Available as executable script.

```bash
exceltojson *args*
python -m exceltojson *args*
```

## License

ref: [LICENSE](.\LICENSE)
`vbrpytools` is distributed under the terms of MIT.
