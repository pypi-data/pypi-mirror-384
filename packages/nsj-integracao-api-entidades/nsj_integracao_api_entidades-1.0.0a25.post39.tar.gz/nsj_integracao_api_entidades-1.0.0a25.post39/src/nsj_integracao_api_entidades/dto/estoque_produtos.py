
import datetime
import uuid

from nsj_rest_lib.decorator.dto import DTO
from nsj_rest_lib.descriptor.dto_field import DTOField
from nsj_rest_lib.descriptor.dto_field_validators import DTOFieldValidators
from nsj_rest_lib.dto.dto_base import DTOBase



# Configuracoes execucao
from nsj_integracao_api_entidades.config import (tenant_is_partition_data)

@DTO()
class ProdutoDTO(DTOBase):
    # Atributos da entidade
    id: uuid.UUID = DTOField(
      pk=True,
      entity_field='produto',
      resume=True,
      not_null=True,
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tenant: int = DTOField(
      partition_data=tenant_is_partition_data,
      resume=True,
      not_null=True,)
    id_grupo: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    codigo: str = DTOField(
      candidate_key=True,
      strip=False,
      resume=True,
      not_null=True,)
    especificacao: str = DTOField()
    tipoproduto: int = DTOField()
    bloqueado: bool = DTOField()
    origemmercadoria: int = DTOField()
    codigodebarras: str = DTOField()
    codigogtin: str = DTOField()
    volume_marca: str = DTOField()
    dnf_dif: str = DTOField()
    volume_pesobruto: float = DTOField()
    volume_pesoliquido: float = DTOField()
    grupodeinventario: int = DTOField()
    capacidadevolume: float = DTOField()
    estoqueminimo: float = DTOField()
    estoquemaximo: float = DTOField()
    grade: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    controlanumerodeserie: bool = DTOField()
    controlalote: bool = DTOField()
    unidadedemedida: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tipodemedicamento: int = DTOField()
    tipodemedicamento_ggrem: str = DTOField()
    tipodemedicamento_maxaoconsumidor: float = DTOField()
    codigoanpdecombustivel: str = DTOField()
    bebidas_tabeladeincidencia: int = DTOField()
    bebidas_grupo: str = DTOField()
    bebidas_marca: str = DTOField()
    energia_comunicacao_telecomunicacao_st_icms: str = DTOField()
    id_fabricante: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tipi: str = DTOField()
    familia: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    consignado: int = DTOField()
    figuratributaria: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    precovenda: float = DTOField()
    volume_especie: str = DTOField()
    autovolumedocfis: bool = DTOField()
    categoriadeproduto: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    observacao: str = DTOField()
    observacao_naofiscal: str = DTOField()
    invisivel: bool = DTOField()
    codigo_antigo: str = DTOField()
    especificacaotecnica: str = DTOField()
    estoquereposicao: float = DTOField()
    cest: str = DTOField()
    tipo: int = DTOField()
    epi_certificado_aprovacao: str = DTOField()
    epi_periodicidade: int = DTOField()
    epi_tipo_uso: str = DTOField()
    controlaativos: bool = DTOField()
    codigo_fabricante: str = DTOField()
    observacao_etiqueta: str = DTOField()
    tipo_periodo_validade: int = DTOField()
    periodo_validade: int = DTOField()
    etiquetalayoutpadrao: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    lastupdate: datetime.datetime = DTOField()
    setores: str = DTOField()
    descontomaximo: float = DTOField(
      not_null=True,)
    percentualcomissao: float = DTOField()
    classificacaofinanceiracompra: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    classificacaofinanceiravenda: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    id_fornecedor_principal: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    lead_time: int = DTOField()
    estoque_de_seguranca: float = DTOField()
    multiplo_de_compra: int = DTOField()
    valorultimacompra: float = DTOField()
    custoultimacompra: float = DTOField()
    margemlucro: float = DTOField()
    markup: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    unidadetributada: str = DTOField()
    razaounidade: float = DTOField()
    importacao_hash: str = DTOField()
    gtin_trib: str = DTOField()
    indicador_escala_relevante: int = DTOField()
    enviarlote: bool = DTOField()
    tipodemedicamento_codigoanvisa: str = DTOField()
    markupprecovenda: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    centrocustovenda: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    volume_razao: float = DTOField(
      not_null=True,)
    id_codigobeneficio: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    codigobeneficio: str = DTOField()
    id_conjunto: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    precosugeridorevenda: float = DTOField()
    tipolote: int = DTOField(
      not_null=True,)
    validadelote: int = DTOField()
    quantidadelote: int = DTOField()
    codigolote: int = DTOField()
    item_seguranca: bool = DTOField()
    planodeinspecao: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    classificacaofragilidade: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)

