
import datetime
import uuid

from nsj_rest_lib.decorator.dto import DTO
from nsj_rest_lib.descriptor.dto_field import DTOField
from nsj_rest_lib.descriptor.dto_field_validators import DTOFieldValidators
from nsj_rest_lib.dto.dto_base import DTOBase



# Configuracoes execucao
from nsj_integracao_api_entidades.config import (tenant_is_partition_data)

@DTO()
class EstabelecimentoDTO(DTOBase):
    # Atributos da entidade
    id: uuid.UUID = DTOField(
      pk=True,
      entity_field='estabelecimento',
      resume=True,
      not_null=True,
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tenant: int = DTOField(
      partition_data=tenant_is_partition_data,
      resume=True,
      not_null=True,)
    codigo: str = DTOField(
      candidate_key=True,
      strip=False,
      resume=True,
      not_null=True,)
    descricao: str = DTOField()
    tipoidentificacao: int = DTOField()
    raizcnpj: str = DTOField()
    ordemcnpj: str = DTOField()
    cpf: str = DTOField()
    caepf: str = DTOField()
    cidade: str = DTOField()
    inscricaoestadual: str = DTOField()
    inscricaomunicipal: str = DTOField()
    nomefantasia: str = DTOField()
    email: str = DTOField()
    site: str = DTOField()
    tipologradouro: str = DTOField()
    logradouro: str = DTOField()
    numero: str = DTOField()
    complemento: str = DTOField()
    bairro: str = DTOField()
    cep: str = DTOField()
    tiposimples: int = DTOField()
    dddtel: str = DTOField()
    telefone: str = DTOField()
    dddfax: str = DTOField()
    fax: str = DTOField()
    bloqueado: int = DTOField()
    selecionarcfop: int = DTOField()
    ramoatividade: str = DTOField()
    qualificacao: int = DTOField()
    naturezapj: int = DTOField()
    anofiscal: int = DTOField()
    inicio_atividades: datetime.datetime = DTOField()
    final_atividades: datetime.datetime = DTOField()
    dataregistro: datetime.datetime = DTOField()
    suframa: str = DTOField()
    atividademunicipal: str = DTOField()
    atividadeestadual: str = DTOField()
    registro: str = DTOField()
    representante: str = DTOField()
    cpfrepresentante: str = DTOField()
    dddtelrepresentante: str = DTOField()
    telefonerepresentante: str = DTOField()
    ramalrepresentante: str = DTOField()
    dddfaxrepresentante: str = DTOField()
    faxrepresentante: str = DTOField()
    emailrepresentante: str = DTOField()
    caixapostal: str = DTOField()
    ufcaixapostal: str = DTOField()
    cepcaixapostal: str = DTOField()
    fpas: str = DTOField()
    acidentetrabalho: str = DTOField()
    numeroproprietarios: int = DTOField()
    numerofamiliares: int = DTOField()
    numeroconta: str = DTOField()
    tipopagamento: str = DTOField()
    codigoterceiros: str = DTOField()
    porte: int = DTOField()
    fazpartepat: bool = DTOField()
    aliquotafilantropica: float = DTOField()
    capitalsocial: float = DTOField()
    observacao: str = DTOField()
    pagapis: bool = DTOField()
    tipoconta: int = DTOField()
    inicioexercicio: datetime.datetime = DTOField()
    cei: str = DTOField()
    datanascimentorepresentante: datetime.datetime = DTOField()
    sexorepresentante: int = DTOField()
    contacorrentepagadora: str = DTOField()
    ibge: str = DTOField()
    cnae: str = DTOField()
    identificacaoregistro: int = DTOField()
    agencia: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    contador: str = DTOField()
    empresa: uuid.UUID = DTOField(
      not_null=True,
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    contribuinteipi: bool = DTOField()
    sindicato: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tipocontroleponto: int = DTOField()
    centralizacontribuicaosindical: bool = DTOField()
    nomecontato: str = DTOField()
    cpfcontato: str = DTOField()
    telefonefixocontato: str = DTOField()
    dddtelfixocontato: str = DTOField()
    telefonecelularcontato: str = DTOField()
    dddtelcelularcontato: str = DTOField()
    faxcontato: str = DTOField()
    dddfaxcontato: str = DTOField()
    emailcontato: str = DTOField()
    classificado: str = DTOField()
    excessosublimite: bool = DTOField()
    aliquotaaplicavel: float = DTOField()
    alelocodigopessoajuridica: int = DTOField()
    alelonumerofilial: int = DTOField()
    lastupdate: datetime.datetime = DTOField()
    nisrepresentante: str = DTOField()
    dataimplantacaosaldo: datetime.datetime = DTOField()
    regraponto: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    centralizadorsefip: bool = DTOField()
    codigoexterno: str = DTOField()
    contribuinteicms: bool = DTOField()
    desabilitado_persona: bool = DTOField()
    estabelecimento_multinota: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    id_centro_custo: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    id_pessoa: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    importacao_hash: str = DTOField()
    indicatiocontratacaoaprendiz: int = DTOField()
    indicativocontratacaopcd: int = DTOField()
    instituicaoeducativa: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    matriz: bool = DTOField()
    periodoapuracaopontoproprio: bool = DTOField()
    processoaprendiz: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    processocontratacaopcd: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    processofap: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    processorat: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    tipocaepf: int = DTOField()
    geo_localizacao: dict = DTOField()
    gestor: uuid.UUID = DTOField(
      strip=True,
      min=36,
      max=36,
      validator=DTOFieldValidators().validate_uuid,)
    identificacaonasajongestor: str = DTOField()

