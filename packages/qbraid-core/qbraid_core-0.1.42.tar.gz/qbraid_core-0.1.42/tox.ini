[tox]
minversion = 4.2.0
envlist =
    unit-tests
    docs
    linters
    format-check
skip_missing_interpreter = true

[testenv]
commands_pre = python -m pip install .
basepython = python3
pass_env =
    REFRESH
    JUPYTERHUB_USER
    QBRAID_API_KEY
    QBRAID_RUN_REMOTE_TESTS

[testenv:unit-tests]
description = Run pytests and generate coverage report.
extras =
    test
    runner
    environments
    mcp
commands =
    pytest

[testenv:docs]
description = Use sphinx to build the HTML docs.
extras =
    docs
commands =
    sphinx-build -W -b html docs/ docs/build/html {posargs}

[testenv:isort]
envdir = .tox/linters
skip_install = true
deps = isort
commands =
    isort . {posargs} qbraid_core tests bin

[testenv:pylint]
envdir = .tox/linters
skip_install = true
deps = pylint
commands =
    pylint {posargs} qbraid_core tests bin

[testenv:black]
envdir = .tox/linters
skip_install = true
deps = black
commands =
    black qbraid_core tests bin {posargs}

[testenv:mypy]
envdir = .tox/linters
skip_install = true
deps = mypy
commands =
    mypy qbraid_core tests bin {posargs}

[testenv:ruff]
envdir = .tox/linters
skip_install = true
deps = ruff
commands =
    ruff check qbraid_core tests bin {posargs}

[testenv:headers]
envdir = .tox/linters
skip_install = true
deps = qbraid-cli>=0.8.5
commands =
    qbraid admin headers qbraid_core tests bin --skip=qbraid_core/_version.py {posargs}

[testenv:linters]
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:headers]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:headers]commands} {posargs:--fix}

[testenv:format-check]
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:pylint]deps}
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:mypy]deps}
    {[testenv:ruff]deps}
    {[testenv:headers]deps}
commands =
    {[testenv:pylint]commands}
    {[testenv:isort]commands} {posargs:--check-only}
    {[testenv:black]commands} {posargs:--check}
    {[testenv:mypy]commands}
    {[testenv:ruff]commands}
    {[testenv:headers]commands}