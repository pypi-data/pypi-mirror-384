Metadata-Version: 2.4
Name: pychanasync
Version: 1.0.0b1
Summary: pychanasync` is a lightweight python package which brings _Go-style_ channels to python's _asyncio_ concurrency world. It is an async-channel implementation, providing a channel shaped tool for channel shaped problems.
Author-email: Gwalisam Matthew <gwalisammatthew2@gmail.com>
License: MIT
Project-URL: homepage, https://gwali-1.github.io/PY_CHANNELS_ASYNC
Project-URL: repository, https://github.com/Gwali-1/PY_CHANNELS_ASYNC
Project-URL: Issues, https://github.com/Gwali-1/PY_CHANNELS_ASYNC/issues
Project-URL: documentation, https://gwali-1.github.io/PY_CHANNELS_ASYNC
Keywords: async,channel,concurrency,non-blocking,python,asyncio
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

[![Run Tests](https://github.com/Gwali-1/PY_CHANNELS_ASYNC/actions/workflows/test-and-lint.yml/badge.svg)](https://github.com/Gwali-1/PY_CHANNELS_ASYNC/actions/workflows/test-and-lint.yml)

# PY_CHANNELS_ASYNC

_An async-native python channel implementation._

_Providing a non blocking, coroutine friendly way for tasks to communicate and synchronize._

_Exposes APIs to facilitate concurrent task communication through message passing
like channels in Go._

_Works seamlessly with existing async await concurrency model in python (using asyncio)._

_Pipeline to stream data in a producer consumer pattern_

## set up

Install package locally in editable mode

`pipenv install -e .`

Run in isolated dev enviroment

`pipenv run ****`
