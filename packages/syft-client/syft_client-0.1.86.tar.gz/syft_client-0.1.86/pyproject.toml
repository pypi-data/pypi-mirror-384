[build-system]
requires = ["setuptools>=64.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "syft-client"
version = "0.1.86"
description = "A simple client library for setting up secure communication channels using Google Drive"
readme = "README.md"
authors = [
    {name = "OpenMined", email = "info@openmined.org"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
keywords = ["privacy", "federated-learning", "google-drive", "communication"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security :: Cryptography",
    "Topic :: Communications :: File Sharing"
]
dependencies = [
    "google-api-python-client>=2.95.0",
    "google-auth>=2.22.0",
    "google-auth-oauthlib>=1.0.0",
    "dnspython>=2.3.0",
    "cryptography>=41.0.0",
    "rich>=13.0.0",
    "watchdog>=3.0.0",
    "syft-serve>=0.3.11",
    "requests>=2.32.4",
    "pandas"
]

[project.optional-dependencies]
job = [
    "syft-job"
]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "coverage>=7.0.0"
]
dev = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "ipython>=8.0.0",
    "tqdm>=4.64.0"
]
all = [
    "syft-client[test,dev,job]"
]


[tool.uv.sources]
"syft-job" = { git = "https://github.com/OpenMined/syft-job" , branch = "main" }

[project.urls]
Homepage = "https://github.com/OpenMined/syft-client"
Repository = "https://github.com/OpenMined/syft-client"
Documentation = "https://github.com/OpenMined/syft-client#readme"
"Bug Tracker" = "https://github.com/OpenMined/syft-client/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["syft_client*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, mocked)",
    "integration: Integration tests (slow, real API)",
    "cleanup: Tests that require cleanup",
    "slow: Tests that take a long time to run"
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=syft_client",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["syft_client"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["syft_client"]
skip_glob = ["**/__pycache__/**"]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "W504"   # line break after binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "googleapiclient.*",
    "syft_widget.*"
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "build", "dist", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used (needed in tests)

[tool.bandit.assert_used]
skips = ["*/test_*.py", "*/tests/*"]
