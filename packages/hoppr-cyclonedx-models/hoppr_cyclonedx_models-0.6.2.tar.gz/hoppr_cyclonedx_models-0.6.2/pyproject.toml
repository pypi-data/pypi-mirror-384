[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "hoppr-cyclonedx-models"
version = "0.6.2"
description = "CycloneDX Pydantic models for easy use in your Python project."
authors = ["LMCO Open Source <open.source@lmco.com>"]
license = "MIT"
readme = "README.md"
repository = "https://gitlab.com/hoppr/hoppr-cyclonedx-models"

keywords = [
  "pydantic",
  "models",
  "cyclonedx",
  "software bill of materials"
]

classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Framework :: Pydantic",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Code Generators",
  "Typing :: Typed",
]

[[tool.poetry.packages]]
include = "hoppr_cyclonedx_models"

[tool.poetry.dependencies]
python = "^3.8.0"
typing-extensions = "^4.7.1"

[tool.poetry.dependencies.pydantic]
extras = ["email"]
version = "^1.10.2"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
datamodel-code-generator = "0.21.5"
jinja2-cli = "^0.8.2"

[tool.poetry.group.dev.dependencies.isort]
version = "^5.12.0"
python = "^3.8.0"

[tool.poetry.group.test.dependencies]
pylint = "^2.14.4"
pytest = "^7.4.2"
pytest-cov = "^4.0.0"
pytest-pretty = "^1.1.0"

[tool.poetry.group.typing.dependencies.mypy]
extras = ["reports"]
version = "^1.4.1"

[tool.black]
color = true
exclude = "\\.pyi"
line-length = 120
skip-string-normalization = false
target-version = ["py38"]

[tool.coverage.report]
exclude_also = [
  "def __str__\\(self\\) -> str:",
  "def _missing_\\(cls, value: object\\):",
  "if __name__ == .__main__.:",
  "if not TYPE_CHECKING:",
  "if self.debug:",
  "if settings.DEBUG:",
  "if TYPE_CHECKING:",
  "pragma: no cover",
  "raise NotImplementedError",
]
fail_under = 95
omit = ["hoppr_cyclonedx_models/cyclonedx_*/*"]
precision = 2
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
command_line = "--module pytest --junit-xml=test.xml"
omit = ["hoppr_cyclonedx_models/cyclonedx_*/*"]
source = ["hoppr_cyclonedx_models"]

[tool.datamodel-codegen]
base-class = "hoppr_cyclonedx_models.base.CycloneDXBaseModel"
collapse-root-models = true
custom-file-header-path = "datamodel-header.txt"
custom-template-dir = "templates"
disable-appending-item-suffix = true
disable-warnings = true
enable-version-header = true
enum-field-as-literal = "one"
field-constraints = true
input-file-type = "jsonschema"
reuse-model = true
set-default-enum-member = true
target-python-version = "3.7"
use-annotated = true
use-default = true
use-default-kwarg = true
use-one-literal-as-default = true
use-schema-description = true
wrap-string-literal = true

[tool.isort]
atomic = true
combine_as_imports = true
lines_between_types = 1
line_length = 120
profile = "black"
py_version = 37
skip_gitignore = true

[tool.mypy]
enable_error_code = ["ignore-without-code"]
explicit_package_bases = true
follow_imports = "silent"
namespace_packages = true
no_implicit_reexport = true
packages = ["hoppr_cyclonedx_models", "tests"]
plugins = ["pydantic.mypy"]
pretty = true
python_version = "3.10"
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["hoppr_cyclonedx_models.*"]
disable_error_code = ["assignment"]

[[tool.mypy.overrides]]
module = ["tests.*"]
allow_untyped_defs = true
allow_incomplete_defs = true
allow_untyped_calls = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pylint.main]
extension-pkg-allow-list = ["pydantic"]
ignore-paths = ["hoppr_cyclonedx_models/cyclonedx_1_[3-9].py", "hoppr_cyclonedx_models/spdx.py"]
init-hook = """\
  from pylint.config import find_default_config_files;\
  import sys;\
  sys.path.append(str(list(find_default_config_files())[0].parent / 'hoppr_cyclonedx_models'))\
  """
jobs = 0
py-version = "3.7"

[tool.pylint.format]
max-line-length = 120

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  "--cov=hoppr_cyclonedx_models",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--cov-fail-under=100",
  "--ignore-glob=cyclonedx_1_*",
  "--import-mode=importlib",
  "--junit-xml=test.xml"
]
console_output_style = "progress"
junit_family = "xunit2"
pythonpath = ["."]
testpaths = ["tests"]
