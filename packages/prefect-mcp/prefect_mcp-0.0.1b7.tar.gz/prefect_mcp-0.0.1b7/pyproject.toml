[project]
name = "prefect-mcp"
description = "MCP server for interacting with Prefect"
readme = "README.md"
dynamic = ["version"]
authors = [{ name = "Prefect Technologies", email = "help@prefect.io" }]
requires-python = ">=3.10"
dependencies = ["fastmcp>=2.12.3", "prefect>=3.4.22"]


[project.scripts]
prefect-mcp-server = "prefect_mcp_server.__main__:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project.optional-dependencies]
logfire = ["logfire"]

[dependency-groups]
dev = [
    "ipython",
    "pre-commit>=4.3.0",
    "pydantic-ai>=1.0.10",
    "pytest-asyncio>=0.21.0",
    "pytest-env>=1.2.0",
    "pytest-recording>=0.13.4",
    "pytest-rerunfailures>=16.0.1",
    "pytest-sugar>=0.9.0",
    "pytest-timeout>=2.4.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.12.9",
    "syrupy>=5.0.0",
    "ty>=0.0.1a19",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/prefect_mcp_server"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["src"]


[tool.ty.src]
include = ["src", "tests"]
exclude = ["**/node_modules", "**/__pycache__", ".venv", ".git", "dist"]

[tool.ty.environment]
python-version = "3.10"

[tool.ty.rules]
# invalid-argument-type = "ignore"
# no-matching-overload = "ignore"
# unknown-argument = "ignore"
# unresolved-attribute = "ignore"

# call-non-callable = "ignore"
# missing-argument = "ignore"

[tool.ruff.lint]
extend-select = ["I", "UP"]

[tool.ruff.lint.per-file-ignores]

[tool.uv.workspace]
members = [
    "packages/docs_mcp_server",
    "packages/ingestion_pipeline",
]
# "__init__.py" = ["F401", "I001", "RUF013"]
# "src/prefect_mcp_server/__init__.py" = ["E402"]
