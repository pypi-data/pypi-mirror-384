[project]
name = "picolynx"
description = "Auto-attach microcontrollers to WSL."
authors = [{name = "Andrew Ridyard", email = "andyrids.uncapped698@passmail.net"}]
maintainers = [{name = "Andrew Ridyard", email = "andyrids.uncapped698@passmail.net"}]
dynamic = ["version"]
license = "GPL-3.0-or-later"
license-files = ["LICEN[CS]E*"]
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
classifiers=[
    # 3 - Alpha | 4 - Beta | 5 - Production/Stable
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    # Python versions
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: System :: Hardware :: Universal Serial Bus (USB)",
    "Topic :: System :: Monitoring"
]
keywords = ["microcontroller", "rpi", "textual", "tui", "usbipd-win", "wsl"]
dependencies = [
    "pydantic>=2.11.9",
    "pyserial>=3.5",
    "pywin32>=311; sys_platform == 'win32'",
    "textual>=5.3.0",
]

[dependency-groups]
dev = [
    "hatch>=1.14.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.5",
    "textual-dev>=1.7.0",
    "types-pywin32>=311.0.0.20250822",
]

[project.urls]
Repository = "https://github.com/andyrids/picolynx"
Issues = "https://github.com/andyrids/picolynx/-/issues"

[project.scripts]
picolynx = "picolynx.__main__:main"

[tool.ruff]
exclude = ["lib", "env"]
indent-width = 4
line-length = 80

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"

[tool.ruff.lint]
select = [
    "D1",   # pydocstyle (undocumented ruleset)
    "D300", # pydocstyle (triple-single-quotes)
    "D403", # pydocstyle (first-word-uncapitalized)
    "D419", # pydocstyle (empty-docstring)
    "E",    # pycodestyle (error ruleset)
    "ERA",  # commented out code
    #"F401", # pyflakes (unused-import)
    "I002", # isort (missing-required-import)
    "W",    # pycodestyle (warning ruleset)
    "C90",  # McCabe complexity (complex-structure)
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{test_}*" = ["D100", "D102", "E501"]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
platforms = ["win32", "win_amd64", "win_arm", "win_arm64"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
version_scheme = "guess-next-dev"
