[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = ["E4", "E7", "E9", "F"]
lint.ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    "__pypackages__",
    ".vscode",
]
line-length = 120
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$" # Allow unused variables when underscore-prefixed.
target-version = "py311"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
atomic = true
profile = "black"
known_first_party = ["dmi_open_data"]

[tool.pyright]
exclude = [
    "**/__pycache__",
    "**/env",
    "**/.env",
    "**/.venv",
    "**/__pycache__",
    "**/build",
    "**/dist"
]
venvPath = "."
venv = "venv"
pythonVersion = "3.11"
pythonPlatform = "Linux"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
stubPath = "."

# Diagnostic Rules
strictListInference = false
strictDictionaryInference = false
strictSetInference = false
analyzeUnannotatedFunctions = true
strictParameterNoneValue = true
enableTypeIgnoreComments = true
reportMissingModuleSource = "warning"
reportMissingImports = "error"
reportUndefinedVariable = "error"
reportAssertAlwaysTrue = "warning"
reportInvalidStringEscapeSequence = "warning"
reportInvalidTypeVarUse = "warning"
reportMissingTypeStubs = "none"
reportSelfClsParameterName = "warning"
reportUnsupportedDunderAll = "warning"
reportUnusedExpression = "warning"
reportWildcardImportFromLibrary = "warning"
reportGeneralTypeIssues = "error"
reportOptionalSubscript = "error"
reportOptionalMemberAccess = "error"
reportOptionalCall = "error"
reportOptionalIterable = "error"
reportOptionalContextManager = "error"
reportOptionalOperand = "error"
reportTypedDictNotRequiredAccess = "error"
reportPrivateImportUsage = "none"
reportUnboundVariable = "error"
reportUnusedCoroutine = "error"
reportConstantRedefinition = "none"
reportDuplicateImport = "none"
reportFunctionMemberAccess = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportIncompleteStub = "none"
reportInconsistentConstructor = "none"
reportInvalidStubStatement = "none"
reportMatchNotExhaustive = "none"
reportMissingParameterType = "none"
reportMissingTypeArgument = "none"
reportOverlappingOverload = "none"
reportPrivateUsage = "none"
reportShadowedImports = "none"
reportTypeCommentUsage = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportUnnecessaryCast = "none"
reportUnnecessaryComparison = "none"
reportUnnecessaryContains = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedClass = "none"
reportUnusedImport = "none"
reportUnusedFunction = "none"
reportUnusedVariable = "none"
reportUntypedBaseClass = "none"
reportUntypedClassDecorator = "none"
reportUntypedFunctionDecorator = "none"
reportUntypedNamedTuple = "none"
reportCallInDefaultInitializer = "none"
reportImplicitStringConcatenation = "none"
reportMissingSuperCall = "none"
reportPropertyTypeMismatch = "none"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryTypeIgnoreComment = "none"
reportUnusedCallResult = "none"
