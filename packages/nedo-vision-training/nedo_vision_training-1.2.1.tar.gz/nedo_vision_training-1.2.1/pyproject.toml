[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nedo-vision-training"
dynamic = ["version"]
description = "A comprehensive training service library for AI models in the Nedo Vision platform"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Willy Achmat Fauzi", email = "willy.achmat@gmail.com"}
]
maintainers = [
    {name = "Willy Achmat Fauzi", email = "willy.achmat@gmail.com"}
]
keywords = [
    "computer-vision",
    "machine-learning", 
    "ai",
    "training",
    "deep-learning",
    "object-detection",
    "neural-networks",
    "pytorch",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "grpcio>=1.59.0,<2.0.0",
    "grpcio-tools>=1.59.0,<2.0.0",
    "pika>=1.3.0,<2.0.0",
    "rfdetr>=1.2.0,<2.0.0",
    "boto3>=1.28.0,<2.0.0",
    "pynvml>=11.4.0,<12.0.0",
    "psutil>=5.8.0,<6.0.0",
    "torch>=2.0.0,<3.0.0",
    "torchvision>=0.15.0,<1.0.0",
    "numpy>=1.21.0,<2.0.0",
    "pillow>=9.0.0,<11.0.0",
    "opencv-python>=4.8.0,<5.0.0",
    "requests>=2.31.0,<3.0.0",
    "tqdm>=4.65.0,<5.0.0",
]

[project.optional-dependencies]
gpu = [
    "torch==2.3.1",
    "torchvision==0.18.1",
]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "flake8>=4.0.0",
    "pre-commit>=2.17.0",
]

[project.urls]
Homepage = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-training-service"
Documentation = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-training-service/-/blob/main/README.md"
Repository = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-training-service"
"Bug Reports" = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-training-service/-/issues"

[project.scripts]
nedo-trainer = "nedo_vision_training.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["nedo_vision_training*"]

[tool.setuptools.dynamic]
version = {attr = "nedo_vision_training.__version__"}

[tool.setuptools.package-data]
nedo_vision_training = [
    "*.yaml",
    "*.yml", 
    "*.json",
    "*.txt",
    "**/*.yaml",
    "**/*.yml",
    "**/*.json", 
    "**/*.txt",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nedo_vision_training"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
