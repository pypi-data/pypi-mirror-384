# coding: utf-8

"""
Notehub API

The OpenAPI definition for the Notehub.io API.

The version of the OpenAPI document: 1.2.0
Contact: engineering@blues.io
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from notehub_py.models.device_dfu_history import DeviceDfuHistory


class TestDeviceDfuHistory(unittest.TestCase):
    """DeviceDfuHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceDfuHistory:
        """Test DeviceDfuHistory
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `DeviceDfuHistory`
        """
        model = DeviceDfuHistory()
        if include_optional:
            return DeviceDfuHistory(
                current = notehub_py.models.device_dfu_history_current.DeviceDfuHistory_current(
                    builder = '', 
                    built = '', 
                    description = '', 
                    organization = '', 
                    product = '', 
                    version = '', ),
                device_uid = '',
                history = [
                    notehub_py.models.device_dfu_state_machine.DeviceDfuStateMachine(
                        current_version = '', 
                        initiated = '', 
                        requested_version = '', 
                        updates = [
                            notehub_py.models.device_dfu_state_machine_node.DeviceDfuStateMachineNode(
                                datetime = '', 
                                description = '', 
                                phase = '', 
                                status = '', )
                            ], )
                    ]
            )
        else:
            return DeviceDfuHistory(
        )
        """

    def testDeviceDfuHistory(self):
        """Test DeviceDfuHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
