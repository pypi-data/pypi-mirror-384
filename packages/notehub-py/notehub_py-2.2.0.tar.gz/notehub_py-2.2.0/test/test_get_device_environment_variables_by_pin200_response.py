# coding: utf-8

"""
Notehub API

The OpenAPI definition for the Notehub.io API.

The version of the OpenAPI document: 1.2.0
Contact: engineering@blues.io
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from notehub_py.models.get_device_environment_variables_by_pin200_response import (
    GetDeviceEnvironmentVariablesByPin200Response,
)


class TestGetDeviceEnvironmentVariablesByPin200Response(unittest.TestCase):
    """GetDeviceEnvironmentVariablesByPin200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> GetDeviceEnvironmentVariablesByPin200Response:
        """Test GetDeviceEnvironmentVariablesByPin200Response
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetDeviceEnvironmentVariablesByPin200Response`
        """
        model = GetDeviceEnvironmentVariablesByPin200Response()
        if include_optional:
            return GetDeviceEnvironmentVariablesByPin200Response(
                environment_variables = {
                    'key' : ''
                    },
                environment_variables_effective = {
                    'key' : ''
                    },
                environment_variables_env_default = {
                    'key' : ''
                    }
            )
        else:
            return GetDeviceEnvironmentVariablesByPin200Response(
                environment_variables = {
                    'key' : ''
                    },
                environment_variables_env_default = {
                    'key' : ''
                    },
        )
        """

    def testGetDeviceEnvironmentVariablesByPin200Response(self):
        """Test GetDeviceEnvironmentVariablesByPin200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
