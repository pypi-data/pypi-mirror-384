[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "constellaration"
dynamic = ["version"]
description = 'Code for analyzing and evaluating stellarator plasma shapes'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Maria Pascu", email = "mariap@proximafusion.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pybind11<3.0.0", # Breaking change in 3.0.0 triggers an incompatibility with booz-xform on MAC https://github.com/hiddenSymmetries/booz_xform/pull/21
  "booz-xform==0.0.9",
  "datasets==3.5.1",
  "desc-opt",
  "ipython",
  "ipykernel",
  "interpax==0.3.8",
  "jax<=0.6.0",
  "jaxtyping",
  "kaleido",
  "matplotlib==3.9.2",
  "nbformat",
  "nevergrad",
  "numpy==2.1.3",
  "orjson==3.10.16",
  "plotly<7.0.0",
  "pydantic",
  # need an unreleased version to fix `cma` compatibility with numpy 2.0
  "pymoo==0.6.1.5.dev0",
  "pandas==2.2.3",
  "qicna==0.3.4",
  "scipy",
  "scikit-activeml==0.5.2",
  "scikit-build-core==0.10",
  "scikit-learn==1.5.2",
  # Use newer simsopt for Python 3.13 compatibility
  "simsopt==1.8.1; python_version < '3.13'",
  "simsopt==1.9.0; python_version >= '3.13'",
  "seaborn==0.13.2",
  "vmecpp==0.4.7",
]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Documentation = "https://github.com/proximafusion/constellaration#readme"
Issues = "https://github.com/proximafusion/constellaration/issues"
Source = "https://github.com/proximafusion/constellaration"

[tool.hatch.version]
path = "src/constellaration/__about__.py"

[project.optional-dependencies]
test = ["pytest"]
lint = ["pre-commit"]

[tool.hatch.envs.default]
path = "venv"

[tool.hatch.envs.test]
dependencies = ["pytest"]

[tool.hatch.envs.lint]
extra-dependencies = [
  "ruff"
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.hatch.build]
packages = ["src/constellaration"]
include = [
  "src/constellaration/**",
  "README.md",
  "LICENSE",
]

[tool.coverage.run]
source_pkgs = ["constellaration", "tests"]
branch = true
parallel = true
omit = [
  "src/constellaration/__about__.py",
]

[tool.coverage.paths]
constellaration = ["src/constellaration", "*/constellaration/src/constellaration"]
tests = ["tests", "*/constellaration/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "EXE",      # flake8-executable
  "E501",     # line-too-long
  "FURB",     # refurb
  "G",        # flake8-logging-format
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "YTT",      # flake8-2020
]
ignore = [
  "F722",     # Disable 'forward-annotation-syntax-error' for jaxtyping compatibility, see https://docs.kidger.site/jaxtyping/faq/#flake8-or-ruff-are-throwing-an-error
]

[tool.isort]
profile = "black"

[tool.pyright]
typeCheckingMode = "basic"
venvPath = "."
venv = "venv"
