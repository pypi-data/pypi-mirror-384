
# Autogenerated by mlir-tblgen; don't manually edit.

from enum import IntEnum, auto, IntFlag
from ._ods_common import _cext as _ods_cext
from ..ir import register_attribute_builder
_ods_ir = _ods_cext.ir

class CollectiveElementType(IntEnum):
    """valid CollectiveElementType"""

    Sint8 = 0
    Uint8 = 1
    Sint16 = 2
    Uint16 = 3
    Sint32 = 4
    Uint32 = 5
    Sint64 = 6
    Uint64 = 7
    Float16 = 8
    Float32 = 9
    Float64 = 10
    BFloat16 = 11

    def __str__(self):
        if self is CollectiveElementType.Sint8:
            return "si8"
        if self is CollectiveElementType.Uint8:
            return "ui8"
        if self is CollectiveElementType.Sint16:
            return "si16"
        if self is CollectiveElementType.Uint16:
            return "ui16"
        if self is CollectiveElementType.Sint32:
            return "si32"
        if self is CollectiveElementType.Uint32:
            return "ui32"
        if self is CollectiveElementType.Sint64:
            return "si64"
        if self is CollectiveElementType.Uint64:
            return "ui64"
        if self is CollectiveElementType.Float16:
            return "f16"
        if self is CollectiveElementType.Float32:
            return "f32"
        if self is CollectiveElementType.Float64:
            return "f64"
        if self is CollectiveElementType.BFloat16:
            return "bf16"
        raise ValueError("Unknown CollectiveElementType enum entry.")



@register_attribute_builder("FLOW_CollectiveElementTypeAttr")
def _flow_collectiveelementtypeattr(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(32, context=context), int(x))

class CollectiveReductionOp(IntEnum):
    """valid CollectiveReductionOp"""

    None_ = 0
    ReductionSum = 1
    ReductionProduct = 2
    ReductionMinimum = 3
    ReductionMaximum = 4
    ReductionAverage = 5

    def __str__(self):
        if self is CollectiveReductionOp.None_:
            return "none"
        if self is CollectiveReductionOp.ReductionSum:
            return "sum"
        if self is CollectiveReductionOp.ReductionProduct:
            return "product"
        if self is CollectiveReductionOp.ReductionMinimum:
            return "minimum"
        if self is CollectiveReductionOp.ReductionMaximum:
            return "maximum"
        if self is CollectiveReductionOp.ReductionAverage:
            return "average"
        raise ValueError("Unknown CollectiveReductionOp enum entry.")



@register_attribute_builder("FLOW_CollectiveReductionOpAttr")
def _flow_collectivereductionopattr(x, context):
    return _ods_ir.IntegerAttr.get(_ods_ir.IntegerType.get_signless(32, context=context), int(x))

