[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# Optional dev groups (works nicely with uv; pip will ignore this section)
[dependency-groups]
dev = [
  "ruff>=0.11.2",
  "mypy>=1.12.1",
  "pre-commit>=4.3.0"
]

[project]
name = "kedro-mcp"
version = "0.1.1"  # bump on release
description = "MCP server with Kedro prompts and tools (local stdio, zero-install via uvx)."
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
authors = [{ name = "Kedro" }]
keywords = ["Kedro", "MCP", "Model Context Protocol", "GenAI", "AI", "data science", "data engineering"]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]

# Single runtime dependency: FastMCP (the server just returns Markdown guidance)
dependencies = ["fastmcp>=0.3"]

[project.scripts]
# Local stdio entrypoint for MCP clients (run via `uvx kedro-mcp@latest`)
kedro-mcp = "kedro_mcp.server:main_stdio"

[project.urls]
Homepage = "https://github.com/kedro-org/kedro-mcp"

# ---- setuptools package discovery & data ----
[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
# include the Markdown guidance files in the wheel
kedro_mcp = ["prompts/*.md"]

# -------------------
# Mypy configuration
# -------------------
[tool.mypy]
disable_error_code = ["misc"]
disallow_untyped_defs = true
exclude = ["^docs/"]
ignore_missing_imports = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

# -------------------
# Ruff configuration
# -------------------
[tool.ruff]
line-length = 88
show-fixes = true

[tool.ruff.format]
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
select = [
  "F",   # Pyflakes
  "W",   # pycodestyle
  "E",   # pycodestyle
  "I",   # isort
  "UP",  # pyupgrade
  "PL",  # Pylint
  "T201",# print statement
  "S",   # flake8-bandit
  "TCH", # flake8-type-checking
  "RUF"  # Ruff-specific rules
]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["kedro_mcp"]

[tool.ruff.lint.per-file-ignores]
"{tests,docs,tools,static,features}/*" = ["T201", "S101", "S108"]
"{tests,docs}/*" = ["PLR2004", "PLR0913"]