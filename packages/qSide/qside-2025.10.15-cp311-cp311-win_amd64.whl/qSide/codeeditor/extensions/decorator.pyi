from ...qt import QTextCharFormat as QTextCharFormat, QTimer as QTimer
from ...textcursor import QTextDocumentCursor as QTextDocumentCursor
from ..extension import QCodeExtension as QCodeExtension
from ..textdecoration import QTextDecoration as QTextDecoration

class Decorator(QCodeExtension):
    A_NAME: str
    CARET_LINE: str
    WORD_OCCURRENCES: str
    decorations: dict[str, QTextDecoration | list[QTextDecoration]]
    def __init__(self, editor: QCodeEditor) -> None: ...
    def initialize(self): ...
    def shutdown(self) -> None: ...
    def highlightCaretLine(self) -> None: ...
    def highlightOccurrences(self) -> None: ...
    def setHighlightCaretLineEnabled(self, enabled: bool): ...
    def isHighlightCaretLineEnabled(self) -> bool: ...
    def setHighlightOccurrencesEnabled(self, enabled: bool): ...
    def isHighlightOccurrencesEnabled(self) -> bool: ...
    def update(self) -> None: ...
    @staticmethod
    def orderFunction(sel): ...
