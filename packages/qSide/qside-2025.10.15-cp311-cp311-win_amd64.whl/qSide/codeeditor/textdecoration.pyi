from ..qt import QColor as QColor, QPen as QPen, QTextCharFormat as QTextCharFormat, QTextEdit as QTextEdit, QTextFormat as QTextFormat
from _typeshed import Incomplete

class QTextDecoration(QTextEdit.ExtraSelection):
    class CommonOrders:
        BOTTOM: int
        BREAKPOINT_LINE: int
        CURRENT_LINE: int
        CODE_FOLDING: int
        EXECUTION_LINE: int
        OCCURRENCE: int
        FOUND_RESULTS: int
        DEBUG_HOVER: int
        SPELLCHECK: int
        GOTO_DEFINITION: int
        HINT: int
        INFORMATION: int
        WARNING: int
        ERROR: int
        TOP: int
    drawOrder: Incomplete
    tooltip: Incomplete
    cursor: Incomplete
    kind: Incomplete
    def __init__(self, cursor, drawOrder: int = 0, tooltip: str = None, fullWidth: bool = False, font=None, kind: str = None) -> None: ...
    def setForeground(self, color: QColor): ...
    def setBackground(self, color: QColor): ...
    def setOutline(self, color: QColor): ...
    def setFullWidth(self, flag: bool = True, clear: bool = True) -> None: ...
    def setAsUnderlined(self, color=...) -> None: ...
    def setAsSpellCheck(self, color=...) -> None: ...
    def setAsError(self, color=...) -> None: ...
    def setAsWarning(self, color=...) -> None: ...
    def setAsInformation(self, color=...) -> None: ...
    def setAsHint(self, color=...) -> None: ...
