# coding: utf-8

"""
    BugSeq

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from bugseq_client.openapi_client.models.list_billing_account_sample_credit_response import ListBillingAccountSampleCreditResponse

from bugseq_client.openapi_client.api_client import ApiClient, RequestSerialized
from bugseq_client.openapi_client.api_response import ApiResponse
from bugseq_client.openapi_client.rest import RESTResponseType


class BillingApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get(
        self,
        billing_account_id: StrictStr,
        remaining_count_gt: Optional[StrictInt] = None,
        include_expired: Optional[StrictBool] = None,
        skip: Optional[StrictInt] = None,
        limit: Optional[Annotated[int, Field(le=100, strict=True)]] = None,
        sort_dir: Optional[StrictStr] = None,
        sort_by: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ListBillingAccountSampleCreditResponse:
        """List Billing Account Sample Credits


        :param billing_account_id: (required)
        :type billing_account_id: str
        :param remaining_count_gt:
        :type remaining_count_gt: int
        :param include_expired:
        :type include_expired: bool
        :param skip:
        :type skip: int
        :param limit:
        :type limit: int
        :param sort_dir:
        :type sort_dir: str
        :param sort_by:
        :type sort_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_serialize(
            billing_account_id=billing_account_id,
            remaining_count_gt=remaining_count_gt,
            include_expired=include_expired,
            skip=skip,
            limit=limit,
            sort_dir=sort_dir,
            sort_by=sort_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListBillingAccountSampleCreditResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_with_http_info(
        self,
        billing_account_id: StrictStr,
        remaining_count_gt: Optional[StrictInt] = None,
        include_expired: Optional[StrictBool] = None,
        skip: Optional[StrictInt] = None,
        limit: Optional[Annotated[int, Field(le=100, strict=True)]] = None,
        sort_dir: Optional[StrictStr] = None,
        sort_by: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ListBillingAccountSampleCreditResponse]:
        """List Billing Account Sample Credits


        :param billing_account_id: (required)
        :type billing_account_id: str
        :param remaining_count_gt:
        :type remaining_count_gt: int
        :param include_expired:
        :type include_expired: bool
        :param skip:
        :type skip: int
        :param limit:
        :type limit: int
        :param sort_dir:
        :type sort_dir: str
        :param sort_by:
        :type sort_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_serialize(
            billing_account_id=billing_account_id,
            remaining_count_gt=remaining_count_gt,
            include_expired=include_expired,
            skip=skip,
            limit=limit,
            sort_dir=sort_dir,
            sort_by=sort_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListBillingAccountSampleCreditResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_without_preload_content(
        self,
        billing_account_id: StrictStr,
        remaining_count_gt: Optional[StrictInt] = None,
        include_expired: Optional[StrictBool] = None,
        skip: Optional[StrictInt] = None,
        limit: Optional[Annotated[int, Field(le=100, strict=True)]] = None,
        sort_dir: Optional[StrictStr] = None,
        sort_by: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List Billing Account Sample Credits


        :param billing_account_id: (required)
        :type billing_account_id: str
        :param remaining_count_gt:
        :type remaining_count_gt: int
        :param include_expired:
        :type include_expired: bool
        :param skip:
        :type skip: int
        :param limit:
        :type limit: int
        :param sort_dir:
        :type sort_dir: str
        :param sort_by:
        :type sort_by: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_serialize(
            billing_account_id=billing_account_id,
            remaining_count_gt=remaining_count_gt,
            include_expired=include_expired,
            skip=skip,
            limit=limit,
            sort_dir=sort_dir,
            sort_by=sort_by,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ListBillingAccountSampleCreditResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _list_billing_account_sample_credits_v1_billing_billing_account_id_credits_sample_get_serialize(
        self,
        billing_account_id,
        remaining_count_gt,
        include_expired,
        skip,
        limit,
        sort_dir,
        sort_by,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_id is not None:
            _path_params['billing_account_id'] = billing_account_id
        # process the query parameters
        if remaining_count_gt is not None:
            
            _query_params.append(('remaining_count_gt', remaining_count_gt))
            
        if include_expired is not None:
            
            _query_params.append(('include_expired', include_expired))
            
        if skip is not None:
            
            _query_params.append(('skip', skip))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if sort_dir is not None:
            
            _query_params.append(('sort_dir', sort_dir))
            
        if sort_by is not None:
            
            _query_params.append(('sort_by', sort_by))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'HTTPBearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/billing/{billing_account_id}/credits/sample',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


