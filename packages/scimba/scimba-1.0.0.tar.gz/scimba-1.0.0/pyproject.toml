[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "scimba"
authors = [
    { name = "Emmanuel Franck", "email" = "emmanuel.franck@inria.fr" },
    { name = "Rémi Imbach", "email" = "remi.imbach@inria.fr" },
    { name = "Victor Michel-Dansac", "email" = "victor.michel-dansac@inria.fr" },
]
maintainers = [
    { name = "Matthieu Boileau", "email" = "matthieu.boileau@math.unistra.fr" },
    { name = "Rémi Imbach", "email" = "remi.imbach@inria.fr" },
]
description = "This library implements some common tools for scientific machine learning"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"

dependencies = ["matplotlib", "numpy", "torch >= 2.2", "scipy", "tqdm"]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://gitlab.com/scimba/scimba"


[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.dynamic.version]
attr = "scimba_torch.__version__"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib", "-W ignore::DeprecationWarning"]

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "doc" },
]
test = ["pytest", "pytest-cov", "pytest-xdist>=3.8.0", "scikit-learn"]
lint = ["ruff", "pre-commit", "pydoclint"]
doc = [
    "Sphinx >= 7.2.2, < 8.2.0", # because nbsphinx is not compatible with Sphinx >= 8.2.0
    "sphinx_design",
    "myst-parser",
    "furo",
    "sphinx-copybutton",
    "sphinx-autobuild",
    "nbsphinx",
    "pandoc",
    "sphinx-autodoc-typehints",
    "ipython",
]
examples = ["h5py", "PyYAML"]
experimental = ["gpytorch"]

[tool.ruff]
# Set line length to 88 (compatible with Black)
line-length = 88
target-version = "py310"

# Exclude experimental/work-in-progress packages
exclude = [
    "src/scimba_torch/experimental",
    # Add other WIP packages here
]

[tool.ruff.lint]
# Enable pydocstyle (D) rules along with existing rules + modern typing
select = ["E", "F", "W", "D", "N", "I"]
ignore = [
    "D107", # Missing docstring in `__init__` because we document the class instead
    "N806", # Ignore non lowercase variable names (e.g., for math variables)
]

[tool.ruff.lint.pydocstyle]
# Use Google convention for docstrings
convention = "google"

# Per-file ignores for specific directories
[tool.ruff.lint.per-file-ignores]
# Ignore all docstring rules (D*) in tests directory
"tests/**" = ["D", "N802", "N803"]
"examples/**" = ["D", "E501", "N803", "N816"]
"src/applications/**" = ["D", "E501", "N803"]
"docs/**" = ["D", "N816"]
# Temporary ignores for specific directories - to be fixed progressively
"src/scimba_torch/experimental/**" = ["D", "E501"]

[tool.ruff.format]
# Use double quotes for strings (compatible with Black)
quote-style = "double"
# Use 4 spaces for indentation (compatible with Black)
indent-style = "space"
# Respect magic trailing comma (compatible with Black)
skip-magic-trailing-comma = false
# Line length compatible with Black
line-ending = "auto"

[tool.mypy]
exclude = "(examples)/"

[tool.pydoclint]
style = "google"
require-return-section-when-returning-nothing = false
# Ensure type hints are included in function signatures and in docstrings
arg-type-hints-in-signature = true
arg-type-hints-in-docstring = false
check-return-types = false
check-class-attributes = false      # Class attributes are documented inline
# Warn if the docstring style does not match the configured style
check-style-mismatch = true
skip-checking-short-docstrings = false # Do not skip short docstrings
# Exclude specific directories from pydoclint checks (regex pattern)
exclude = 'tests|experimental|examples|applications'
