---
# Test Project YAML for Integration Testing
# Provides realistic project structure for multi-agent coordination testing

projects:
  - name: "Integration Test Project"
    description: "Comprehensive test project for multi-agent coordination and WebSocket event verification"
    epics:
      - name: "Backend API Development"
        description: "Core backend services and API endpoints"
        tasks:
          # User Authentication tasks
          - name: "JWT token implementation" 
            description: "Implement JWT token generation, validation, and refresh"
          - name: "Password hashing and validation"
            description: "Secure password storage using bcrypt with salt"
          - name: "Session management"
            description: "User session lifecycle and cleanup"
          - name: "Role-based access control"
            description: "Implement user roles and permission checking"
          # Database Layer tasks
          - name: "User model and migrations"
            description: "Create user database schema and migration scripts"
          - name: "Database connection pooling"
            description: "Optimize database connection management"
          - name: "Query optimization and indexing"
            description: "Add database indexes for performance"
          # API Endpoints tasks
          - name: "User registration endpoint"
            description: "POST /api/users/register with validation"
          - name: "User login endpoint" 
            description: "POST /api/users/login with JWT response"
          - name: "Profile management endpoints"
            description: "GET/PUT /api/users/profile operations"
          - name: "Password reset flow"
            description: "Email-based password reset with secure tokens"

      # Epic 2: Frontend Implementation  
      - name: "Frontend User Interface"
        description: "React-based user interface components"
        tasks:
          # Authentication UI tasks
          - name: "Login form component"
            description: "React login form with validation and error handling"
          - name: "Registration form component" 
            description: "User registration form with real-time validation"
          - name: "Profile management page"
            description: "User profile editing and password change interface"
          - name: "Authentication state management"
            description: "Redux/Context API for auth state across app"
          # Dashboard Interface tasks
          - name: "Navigation component"
            description: "Responsive navigation bar with user menu"
          - name: "Dashboard layout"
            description: "Grid-based dashboard layout with widgets"
          - name: "Real-time data updates"
            description: "WebSocket integration for live data updates"
          - name: "Notification system"
            description: "Toast notifications for user feedback"
            
      # Epic 3: Real-time Features
      - name: "Real-time Communication"
        description: "WebSocket-based real-time features"
        tasks:
          # WebSocket Infrastructure tasks
          - name: "WebSocket server setup"
            description: "Configure WebSocket server with connection management"
          - name: "Client-side WebSocket integration"
            description: "React hooks for WebSocket connection management"
          - name: "Message broadcasting system"
            description: "Server-side message routing and broadcasting"
          - name: "Connection recovery and reconnection"
            description: "Handle network interruptions and reconnection logic"
          # Live Notifications tasks
          - name: "Notification queue system"
            description: "Server-side notification queuing and delivery"
          - name: "Push notification integration"
            description: "Browser push notifications for background updates"
          - name: "Notification history and persistence"
            description: "Store and retrieve notification history"
          # Standalone tasks integrated into epic structure
          - name: "API documentation generation"
            description: "Generate OpenAPI/Swagger documentation from code"
          - name: "Performance monitoring setup"
            description: "Configure application performance monitoring (APM)"
          - name: "Security audit and penetration testing"
            description: "Comprehensive security assessment of the application"
          - name: "Database backup and recovery procedures"
            description: "Implement automated backup and disaster recovery"
          - name: "CI/CD pipeline optimization"
            description: "Optimize build and deployment pipeline performance"
          - name: "Code quality and linting configuration"
            description: "Configure ESLint, Prettier, and other code quality tools"
          - name: "Error tracking and monitoring"
            description: "Integrate Sentry or similar error tracking service"
          - name: "Load testing and performance benchmarking"
            description: "Comprehensive application load testing and optimization"