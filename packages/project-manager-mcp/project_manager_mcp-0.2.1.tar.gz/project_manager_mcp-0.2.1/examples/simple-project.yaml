# Simple Project Example for Testing and Demo
#
# Updated to the new schema: Projects → Epics → Tasks
# Use this as a template for small projects or as a starting point for larger ones.

projects:
  - name: "User Management Demo"
    description: "Basic user login and registration functionality"
    epics:
      - name: "User Authentication System"
        description: "Authentication flows and UI"
        status: "ACTIVE"
        tasks:
          # Registration flow tasks
          - name: "Create registration form UI"
            description: "Design and implement user registration form"
            status: "TODO"
          - name: "Implement registration API endpoint"
            description: "Backend endpoint to handle user registration"
            status: "TODO"
          - name: "Add email verification"
            description: "Send verification emails to new users"
            status: "TODO"
          # Login flow tasks
          - name: "Create login form UI"
            description: "Design and implement user login form"
            status: "IN_PROGRESS"
          - name: "Implement login API endpoint"
            description: "Backend endpoint to handle user authentication"
            status: "TODO"
          - name: "Add password reset functionality"
            description: "Allow users to reset forgotten passwords"
            status: "TODO"

# Status Value Reference:
# Epic Status Values: ACTIVE, PLANNED, COMPLETED, CANCELLED
# Task Status Values: TODO/pending, IN_PROGRESS/in_progress, COMPLETED/completed, BLOCKED/blocked

# MCP Agent Workflow:
# 1. Query available tasks: get_available_tasks(status="TODO")
# 2. Acquire exclusive lock: acquire_task_lock(task_id, agent_id)
# 3. Work on the task...
# 4. Update progress: update_task_status(task_id, "completed", agent_id)

# The system automatically:
# - Prevents multiple agents from working on the same task
# - Releases locks when tasks are completed
# - Broadcasts real-time updates to the web dashboard
# - Maintains task history and agent assignments
