# Complex Multi-Epic Project Example (updated to Projects → Epics → Tasks)
#
# This file demonstrates a realistic enterprise-scale project structure with multiple epics,
# various task states, and complex inter-dependencies.

projects:
  - name: "E-Commerce Platform"
    description: "Full platform spanning user management, catalog, cart, and orders"
    epics:
      # Epic 1: Platform Foundation
      - name: "E-Commerce Platform Foundation"
        description: "Core infrastructure and user management for e-commerce platform"
        status: "ACTIVE"
        tasks:
          # From "User Account Management"
          - name: "Design user account database schema"
            description: "Define tables for users, profiles, preferences"
            status: "COMPLETED"
          - name: "Implement user registration API"
            description: "REST endpoints for account creation"
            status: "COMPLETED"
          - name: "Build user profile management UI"
            description: "Frontend for editing user profiles"
            status: "IN_PROGRESS"
          - name: "Add profile picture upload"
            description: "Image upload and storage for user avatars"
            status: "TODO"
          # From "Authentication & Authorization"
          - name: "Implement JWT token authentication"
            description: "Token-based auth system with refresh tokens"
            status: "COMPLETED"
          - name: "Create role-based permission system"
            description: "Admin, customer, vendor role management"
            status: "IN_PROGRESS"
          - name: "Add OAuth integration"
            description: "Google and Facebook OAuth login options"
            status: "TODO"
          - name: "Implement session management"
            description: "Secure session handling and timeout"
            status: "TODO"

      # Epic 2: Product Catalog System
      - name: "Product Catalog System"
        description: "Product management, search, and catalog functionality"
        status: "ACTIVE"
        tasks:
          # From "Product Database Design"
          - name: "Design product entity model"
            description: "Products, variants, categories, attributes"
            status: "COMPLETED"
          - name: "Create database migrations"
            description: "SQL migrations for product tables"
            status: "COMPLETED"
          - name: "Add product indexing for search"
            description: "Search-optimized indexes and constraints"
            status: "COMPLETED"
          # From "Product Management Interface"
          - name: "Build product creation form"
            description: "Complex form for adding products with variants"
            status: "COMPLETED"
          - name: "Implement bulk product import"
            description: "CSV/Excel import for large product catalogs"
            status: "IN_PROGRESS"
          - name: "Add product image management"
            description: "Multiple image upload with optimization"
            status: "TODO"
          - name: "Create inventory tracking system"
            description: "Stock levels and availability tracking"
            status: "TODO"
          # From "Customer Product Discovery"
          - name: "Implement product search API"
            description: "Elasticsearch-powered product search"
            status: "TODO"
          - name: "Build category navigation UI"
            description: "Hierarchical category browsing interface"
            status: "TODO"
          - name: "Add advanced filtering options"
            description: "Price, brand, rating, availability filters"
            status: "TODO"
          - name: "Create product recommendation engine"
            description: "ML-based product recommendations"
            status: "TODO"

      # Epic 3: Shopping Cart & Checkout
      - name: "Shopping Cart & Checkout"
        description: "Shopping cart functionality and order processing"
        status: "TODO"
        tasks:
          # From "Shopping Cart Management"
          - name: "Design cart data model"
            description: "Cart persistence across sessions"
            status: "TODO"
          - name: "Implement cart API endpoints"
            description: "Add, remove, update cart items"
            status: "TODO"
          - name: "Build shopping cart UI component"
            description: "Interactive cart with quantity controls"
            status: "TODO"
          - name: "Add cart abandonment recovery"
            description: "Email reminders for abandoned carts"
            status: "TODO"
          # From "Checkout Process"
          - name: "Design checkout flow UX"
            description: "Multi-step checkout process wireframes"
            status: "TODO"
          - name: "Implement address management"
            description: "Shipping and billing address handling"
            status: "TODO"
          - name: "Integrate payment processors"
            description: "Stripe, PayPal payment gateway integration"
            status: "TODO"
          - name: "Add order confirmation system"
            description: "Order summaries and confirmation emails"
            status: "TODO"

      # Epic 4: Order Management System
      - name: "Order Management System"
        description: "Order processing, fulfillment, and customer service"
        status: "TODO"
        tasks:
          # From "Order Processing Pipeline"
          - name: "Design order state machine"
            description: "Order status transitions and business rules"
            status: "TODO"
          - name: "Implement order fulfillment API"
            description: "Integration with warehouse management"
            status: "TODO"
          - name: "Add shipping carrier integration"
            description: "UPS, FedEx, USPS shipping APIs"
            status: "TODO"
          # From "Customer Order Tracking"
          - name: "Build order history interface"
            description: "Customer dashboard for order management"
            status: "TODO"
          - name: "Implement order status notifications"
            description: "Email and SMS order status updates"
            status: "TODO"
          - name: "Add package tracking integration"
            description: "Real-time package tracking display"
            status: "TODO"

# Notes:
# - Status values use UI-friendly vocabulary; the system maps these to DB vocabulary when needed.
#
# DevOps/Infrastructure:
# - File upload and storage systems
# - Search infrastructure (Elasticsearch)
# - Performance optimization tasks
#
# Full-Stack Developers:
# - End-to-end feature implementation
# - Cross-system integration tasks
# - Complex workflow development
#
# MCP Agent Usage Patterns:
#
# 1. Query by Specialty:
#    get_available_tasks(status="TODO") + filter by task description
#
# 2. Team Coordination:
#    - Backend completes API before frontend starts UI
#    - Database tasks completed before dependent API work
#    - Integration tasks require multiple system components
#
# 3. Progressive Development:
#    - Foundation Epic (highest priority)
#    - Product Catalog (depends on foundation)
#    - Shopping Cart (depends on product catalog)
#    - Order Management (depends on cart and payment)
#
# 4. Parallel Work Opportunities:
#    - UI and API development for different features
#    - Independent epic development by separate teams
#    - Testing and documentation alongside development
#
# Real-World Application:
# This structure mirrors actual e-commerce platform development where:
# - Multiple teams work concurrently on different platform areas
# - Dependencies between components require coordination
# - Tasks vary in complexity from simple UI changes to complex integrations
# - Progress tracking across epics provides executive visibility
# - Lock management prevents merge conflicts and duplicate work
