Description: DRED operational instruction response
Category: Demand Response
Classes:
  - DR-D

TargetVersions:
  - v1.2
  - v1.3-beta/storage

Preconditions:
  checks:
    - type: end-device-contents
      parameters: {}
    - type: der-settings-contents
      parameters: {}
  actions:
    - type: set-comms-rate
      parameters:
        der_list_poll_seconds: 60
        derp_list_poll_seconds: 60

Criteria:
  checks:
    - type: all-steps-complete
      parameters: {}
    
Steps:

  # (a, b) - Created DERControl with immediate start 
  GET-DERC-1:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now)
          duration_seconds: 60
          opModConnect: false
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-1
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-1

  # (c) Wait for the update to DERStatus
  PUT-DERSTATUS-1:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 100
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-2
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-1
      
  # (d, e, f) Create DERControl with immediate start to reconnect and then a second DERControl
  GET-DERC-2:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now)
          duration_seconds: 60
          opModConnect: true
      - type: create-der-control
        parameters:
          start: $(now + '120 seconds')
          duration_seconds: 60
          opModFixedW: -75
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-2
            - PUT-DERSETTINGS-2
            - WAIT-DERC-2
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-2
  
  # (g, h)
  PUT-DERSTATUS-2:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 103
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-2

  # (g, h)
  PUT-DERSETTINGS-2:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-2

  # (i) After the end of the previous control...
  WAIT-DERC-2:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-3
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-2

  # (i, j) ... The server will create a DERControl
  GET-DERC-3:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: -50
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-3
            - PUT-DERSETTINGS-3
            - WAIT-DERC-3
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-3

  # (k)
  PUT-DERSTATUS-3:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 102
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-3

  # (k)
  PUT-DERSETTINGS-3:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-3


  # (l) After the end of the previous control...
  WAIT-DERC-3:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-4
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-3

  # (l) ... create a new DERControl
  GET-DERC-4:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: -0.01
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-4
            - PUT-DERSETTINGS-4
            - WAIT-DERC-4
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-4


  # (m, n)
  PUT-DERSTATUS-4:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 101
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-4

  # (m, n)
  PUT-DERSETTINGS-4:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-4

  # (o) After the end of the previous control...
  WAIT-DERC-4:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-5
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-4


  # (o) ... create a new DERControl
  GET-DERC-5:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: -100
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-5
            - PUT-DERSETTINGS-5
            - WAIT-DERC-5
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-5

  # (p, q)
  PUT-DERSTATUS-5:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 104
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-5

  # (p, q)
  PUT-DERSETTINGS-5:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-5

  # (r) After the end of the previous control...
  WAIT-DERC-5:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-6
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-5

  # (r) ... create a new DERControl
  GET-DERC-6:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: 75
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-6
            - PUT-DERSETTINGS-6
            - WAIT-DERC-6
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-6

  # (s, t)
  PUT-DERSTATUS-6:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 107
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-6

  # (s, t)
  PUT-DERSETTINGS-6:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-6

  # (u) After the end of the previous control...
  WAIT-DERC-6:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-7
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-6

  # (u) ... create a new DERControl
  GET-DERC-7:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: 50
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-7
            - PUT-DERSETTINGS-7
            - WAIT-DERC-7
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-7

  # (v, w)
  PUT-DERSTATUS-7:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 107
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-7

  # (v, w)
  PUT-DERSETTINGS-7:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-7

  # (x) After the end of the previous control...
  WAIT-DERC-7:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-8
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-7

  # (x) ... create a new DERControl
  GET-DERC-8:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: 0
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-8
            - PUT-DERSETTINGS-8
            - WAIT-DERC-8
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-8

  # (y, z)
  PUT-DERSTATUS-8:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 105
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-8

  # (y, z)
  PUT-DERSETTINGS-8:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-8

  # (aa) After the end of the previous control...
  WAIT-DERC-8:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: enable-steps
        parameters:
          steps:
            - GET-DERC-9
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-8

  # (aa) ... create a new DERControl
  GET-DERC-9:
    event:
      type: GET-request-received
      parameters:
        endpoint: /edev/1/derp/1/derc
    actions:
      - type: create-der-control
        parameters:
          start: $(now + '60 seconds')
          duration_seconds: 60
          opModFixedW: 100
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-9
            - PUT-DERSETTINGS-9
            - WAIT-DERC-9
      - type: remove-steps
        parameters:
          steps:
            - GET-DERC-9

  # (bb, cc)
  PUT-DERSTATUS-9:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        alarmStatus: 0
        operationalModeStatus: 108
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-9

  # (bb, cc)
  PUT-DERSETTINGS-9:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/derg
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-settings-contents
      parameters:
        modesEnabled: 80 # bit 7
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSETTINGS-9
  
  WAIT-DERC-9:
    event:
      type: wait
      parameters:
        duration_seconds: 120 # Wait for DERControls to fully complete
    actions:
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DERC-9
      - type: finish-test
        parameters: {}