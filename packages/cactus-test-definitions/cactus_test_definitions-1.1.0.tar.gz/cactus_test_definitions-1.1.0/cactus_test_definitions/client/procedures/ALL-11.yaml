Description: Active Control â€“ Energise / De-energise
Category: Control
Classes:
  - A

TargetVersions:
  - v1.2
  - v1.3-beta/storage

Criteria:
  checks:
    - type: all-steps-complete
      parameters: {}

Preconditions:
  init_actions:
    - type: set-comms-rate
      parameters:
        dcap_poll_seconds: 60
        edev_list_poll_seconds: 60
        fsa_list_poll_seconds: 60
        der_list_poll_seconds: 300
        derp_list_poll_seconds: 300
        mup_post_seconds: 60
  checks:
    - type: end-device-contents
      parameters: {}
    - type: der-settings-contents
      parameters: {}
  actions:
    - type: create-der-control
      parameters:
        start: $(now)
        duration_seconds: 900
        opModEnergize: true
    - type: create-der-control
      parameters:
        start: $(now + '5 minutes')
        duration_seconds: 300
        opModEnergize: false
  instructions:
    - DER shall be generating or consuming at least 50% of its active power rating.

Steps:
  
  # (b) - Wait until just before the opModEnergize: False control before accepting a DERStatus update
  WAIT-CONTROL-START:
    event:
      type: wait
      parameters:
        duration_seconds: 270
    actions:
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-DISCONNECT
            - WAIT-CONTROL-END
      - type: remove-steps
        parameters:
          steps:
            - WAIT-CONTROL-START
  
  # (c)
  PUT-DERSTATUS-DISCONNECT:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        genConnectStatus_bit0: false
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-DISCONNECT

  # (d) - This is soley to prevent a client from reporting reconnect too early
  WAIT-CONTROL-END:
    event:
      type: wait
      parameters:
        duration_seconds: 600
    actions:
      - type: enable-steps
        parameters:
          steps:
            - PUT-DERSTATUS-RECONNECT
      - type: remove-steps
        parameters:
          steps:
            - WAIT-CONTROL-END

  # (d)
  PUT-DERSTATUS-RECONNECT:
    event:
      type: PUT-request-received
      parameters:
        endpoint: /edev/1/der/1/ders
        serve_request_first: true # Run this AFTER server receives the request
    checks:
      type: der-status-contents
      parameters:
        genConnectStatus_bit0: true
    actions:
      - type: remove-steps
        parameters:
          steps:
            - PUT-DERSTATUS-RECONNECT
