Description: Default Controls â€“ Generation Limit
Category: Control
Classes:
  - G
  - S

TargetVersions:
  - v1.2
  - v1.3-beta/storage

Criteria:
  checks:
    - type: all-steps-complete
      parameters: {}
    - type: all-notifications-transmitted
      parameters: {}

Preconditions:
  init_actions:
    - type: set-comms-rate
      parameters:
        dcap_poll_seconds: 60
        edev_list_poll_seconds: 60
        fsa_list_poll_seconds: 60
        der_list_poll_seconds: 1800 # Set to a large value - testing whether they respond due to notification - not polls
        derp_list_poll_seconds: 1800 # Set to a large value - testing whether they respond due to notification - not polls
        mup_post_seconds: 60
    - type: create-der-program
      parameters:
        primacy: 0
      
  checks:
    - type: end-device-contents
      parameters: {}
    - type: der-settings-contents
      parameters: {}
    - type: subscription-contents
      parameters:
        subscribed_resource: /edev/1/derp/1/derc
    - type: subscription-contents
      parameters:
        subscribed_resource: /edev/1/derp/1/dderc

  actions:
    - type: create-der-control
      parameters:
        start: $(now)
        duration_seconds: 300
        opModGenLimW: $(setMaxW * 2)
    # (a, b)
    - type: set-default-der-control
      parameters:
        opModGenLimW: $(setMaxW * 0.3)
  instructions:
    - EndDevice should be registered with active subscriptions before starting.
    - DER shall be generating at least 50% of its active power rating.
    
Steps:

  # (c)
  # Give enough time for precondition notifications to propagate before cancelling all DERControls
  WAIT-CANCEL-DERC:
    event:
      type: wait
      parameters:
        duration_seconds: 60
    actions:
      - type: cancel-active-der-controls
        parameters: {}
          
      - type: enable-steps
        parameters:
          steps:
            - WAIT-DEVICE-RAMP
      - type: remove-steps
        parameters:
          steps:
            - WAIT-CANCEL-DERC

  # (d, e)
  WAIT-DEVICE-RAMP:
    event:
      type: wait
      parameters:
        duration_seconds: 120
    actions:
      - type: create-der-control
        parameters:
          start: $(now)
          duration_seconds: 600
          opModGenLimW: $(setMaxW * 2)
      - type: enable-steps
        parameters:
          steps:
            - WAIT-CONTROL-FINISH
      - type: remove-steps
        parameters:
          steps:
            - WAIT-DEVICE-RAMP
    instructions:
      - DER should be ramping to the DefaultDERControl value of 30% max power at rate setGradW (default 0.27%/s).

  # (f, g, h)
  WAIT-CONTROL-FINISH:
    event:
      type: wait
      parameters:
        duration_seconds: 720
    actions:
      - type: create-der-control
        parameters:
          start: $(now)
          duration_seconds: 600
          opModGenLimW: 0
      - type: set-default-der-control
        parameters:
          cancelled: true

      - type: enable-steps
        parameters:
          steps:
            - WAIT-TEST-FINISH
      - type: remove-steps
        parameters:
          steps:
            - WAIT-CONTROL-FINISH
    instructions:
      - DER should be ramping to the active DERControl unconstrained value at rate setGradW (default 0.27%/s).
      - Upon completion of the active DERControl (10 minutes) the DER should ramp to the DefaultDERControl value of 30% max power.

  # (i)
  WAIT-TEST-FINISH:
    event:
      type: wait
      parameters:
        duration_seconds: 720
    actions:
      - type: remove-steps
        parameters:
          steps:
            - WAIT-TEST-FINISH
      - type: finish-test
        parameters: {}
    instructions:
      - DER should be ramping to the active DERControl 0W value at rate setGradW (default 0.27%/s).
