# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pypi Publish

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install cibuildwheel
      run: python -m pip install --upgrade pip && python -m pip install cibuildwheel==2.21.3
    - name: Build wheels
      env:
        CIBW_ARCHS_MACOS: universal2
        CIBW_SKIP: cp38-*
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Upload wheels artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: wheelhouse/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Build sdist
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build --sdist
    - name: Upload sdist artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz
  
  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
    - name: Download built artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*'
        path: dist
        merge-multiple: true
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist