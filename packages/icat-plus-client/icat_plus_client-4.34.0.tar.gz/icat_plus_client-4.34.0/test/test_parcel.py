# coding: utf-8

"""
    ICAT+ API

    ICAT+ RESTful API with Swagger

    The version of the OpenAPI document: 1.0.0
    Contact: demariaa@esrf.fr
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from icat_plus_client.models.parcel import Parcel

class TestParcel(unittest.TestCase):
    """Parcel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Parcel:
        """Test Parcel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Parcel`
        """
        model = Parcel()
        if include_optional:
            return Parcel(
                id = '',
                shipment_id = '',
                name = '',
                investigation_id = 1.337,
                investigation_name = '',
                storage_conditions = '',
                is_reimbursed = True,
                reimbursed_customs_value = 1.337,
                return_instructions = '',
                return_parcel_information = icat_plus_client.models.return_parcel_information.returnParcelInformation(
                    _id = '', 
                    return_type = 'USER_MANAGE_PAPERS', 
                    forwarder_name = '', 
                    forwarder_account = '', 
                    planned_pickup_date = '', ),
                comments = '',
                contains_dangerous_goods = True,
                statuses = [
                    icat_plus_client.models.status.status(
                        _id = '', 
                        status = '', 
                        created_by = '', 
                        created_at = '', 
                        updated_at = '', 
                        created_by_full_name = '', 
                        created_by_email = '', )
                    ],
                shipping_address = icat_plus_client.models.address.address(
                    _id = '', 
                    name = '', 
                    surname = '', 
                    company_name = '', 
                    address = '', 
                    city = '', 
                    region = '', 
                    postal_code = '', 
                    country = '', 
                    email = '', 
                    phone_number = '', 
                    default_courier_account = '', 
                    default_courier_company = '', ),
                return_address = icat_plus_client.models.address.address(
                    _id = '', 
                    name = '', 
                    surname = '', 
                    company_name = '', 
                    address = '', 
                    city = '', 
                    region = '', 
                    postal_code = '', 
                    country = '', 
                    email = '', 
                    phone_number = '', 
                    default_courier_account = '', 
                    default_courier_company = '', ),
                shipping_tracking_information = icat_plus_client.models.tracking_information.trackingInformation(
                    _id = '', 
                    tracking_number = '', 
                    forwarder = '', ),
                return_tracking_information = icat_plus_client.models.tracking_information.trackingInformation(
                    _id = '', 
                    tracking_number = '', 
                    forwarder = '', ),
                description = '',
                type = '',
                current_status = '',
                items = [
                    icat_plus_client.models.item.item(
                        id = '', 
                        name = '', 
                        type = '', 
                        description = '', 
                        comments = '', )
                    ],
                local_contact_names = [
                    ''
                    ],
                content = [
                    icat_plus_client.models.item.item(
                        id = '', 
                        name = '', 
                        type = '', 
                        description = '', 
                        comments = '', )
                    ],
                created_at = '',
                updated_at = '',
                id = '',
                investigation = icat_plus_client.models.investigation.investigation(
                    id = 1.337, 
                    name = '', 
                    start_date = '', 
                    end_date = '', 
                    doi = '', 
                    title = '', 
                    visit_id = '', 
                    release_date = '', 
                    summary = '', 
                    parameters = icat_plus_client.models.parameters.parameters(), 
                    instrument = icat_plus_client.models.investigation_instrument.investigation_instrument(
                        id = 1.337, 
                        name = '', 
                        instrument_scientists = [
                            icat_plus_client.models._ewoks__session_id__jobs_post_request._ewoks__sessionId__jobs_post_request(
                                name = '', )
                            ], ), 
                    investigation_users = [
                        icat_plus_client.models.investigation_investigation_users_inner.investigation_investigationUsers_inner(
                            role = '', 
                            user = icat_plus_client.models.investigation_investigation_users_inner_user.investigation_investigationUsers_inner_user(
                                email = '', 
                                full_name = '', 
                                family_name = '', 
                                name = '', 
                                given_name = '', ), )
                        ], 
                    meta = icat_plus_client.models.meta.meta(
                        page = icat_plus_client.models.meta_page.meta_page(
                            total = 1.337, 
                            total_pages = 1.337, 
                            current_page = 1.337, ), ), 
                    type = icat_plus_client.models.investigation_type.investigation_type(
                        id = 1.337, 
                        create_id = '', 
                        create_time = '', 
                        mod_id = '', 
                        mod_time = '', 
                        description = '', 
                        name = '', ), 
                    can_access_datasets = True, ),
                meta = icat_plus_client.models.meta.meta(
                    page = icat_plus_client.models.meta_page.meta_page(
                        total = 1.337, 
                        total_pages = 1.337, 
                        current_page = 1.337, ), )
            )
        else:
            return Parcel(
                name = '',
                investigation_id = 1.337,
                investigation_name = '',
        )
        """

    def testParcel(self):
        """Test Parcel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
