# coding: utf-8

"""
    ICAT+ API

    ICAT+ RESTful API with Swagger

    The version of the OpenAPI document: 1.0.0
    Contact: demariaa@esrf.fr
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from icat_plus_client.models.userpreferences import Userpreferences

class TestUserpreferences(unittest.TestCase):
    """Userpreferences unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Userpreferences:
        """Test Userpreferences
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Userpreferences`
        """
        model = Userpreferences()
        if include_optional:
            return Userpreferences(
                id = '',
                username = '',
                selection = icat_plus_client.models.userpreferences_selection.userpreferences_selection(
                    dataset_ids = [
                        1.337
                        ], 
                    sample_ids = [
                        1.337
                        ], ),
                logbook_filters = icat_plus_client.models.logbook_filters.logbookFilters(
                    sort_by = '', 
                    sort_order = 1.337, 
                    types = '', ),
                recently_visited = [
                    icat_plus_client.models.recently_visited.recentlyVisited(
                        url = '', 
                        label = '', 
                        target = icat_plus_client.models.target.target(
                            instrument_name = '', 
                            investigation_name = '', 
                            investigation_start_date = '', 
                            investigation_end_date = '', ), )
                    ],
                mxsettings = icat_plus_client.models.mxsettings.mxsettings(
                    auto_processing_ranking_shell = '', 
                    auto_processing_ranking_parameter = '', 
                    auto_processing_ranking_disable_space_group = True, 
                    scan_type_filters = [
                        ''
                        ], 
                    cutoffs = icat_plus_client.models.mxcutoffs.mxcutoffs(
                        completeness = icat_plus_client.models.mxshell.mxshell(
                            inner = 1.337, 
                            outer = 1.337, 
                            overall = 1.337, ), 
                        resolution_limit_low = icat_plus_client.models.mxshell.mxshell(
                            inner = 1.337, 
                            outer = 1.337, 
                            overall = 1.337, ), 
                        resolution_limit_high = , 
                        r_meas_all_i_plus_i_minus = , 
                        mean_i_over_sig_i = , 
                        cc_half = , 
                        cc_ano = , ), ),
                is_grouped_by_sample = True,
                pagination = [
                    icat_plus_client.models.pagination_inner.pagination_inner(
                        key = '', 
                        value = 1.337, )
                    ]
            )
        else:
            return Userpreferences(
                username = '',
        )
        """

    def testUserpreferences(self):
        """Test Userpreferences"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
