# coding: utf-8

"""
    ICAT+ API

    ICAT+ RESTful API with Swagger

    The version of the OpenAPI document: 1.0.0
    Contact: demariaa@esrf.fr
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from icat_plus_client.models.mxsettings import Mxsettings

class TestMxsettings(unittest.TestCase):
    """Mxsettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Mxsettings:
        """Test Mxsettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Mxsettings`
        """
        model = Mxsettings()
        if include_optional:
            return Mxsettings(
                auto_processing_ranking_shell = '',
                auto_processing_ranking_parameter = '',
                auto_processing_ranking_disable_space_group = True,
                scan_type_filters = [
                    ''
                    ],
                cutoffs = icat_plus_client.models.mxcutoffs.mxcutoffs(
                    completeness = icat_plus_client.models.mxshell.mxshell(
                        inner = 1.337, 
                        outer = 1.337, 
                        overall = 1.337, ), 
                    resolution_limit_low = icat_plus_client.models.mxshell.mxshell(
                        inner = 1.337, 
                        outer = 1.337, 
                        overall = 1.337, ), 
                    resolution_limit_high = , 
                    r_meas_all_i_plus_i_minus = , 
                    mean_i_over_sig_i = , 
                    cc_half = , 
                    cc_ano = , )
            )
        else:
            return Mxsettings(
                auto_processing_ranking_shell = '',
                auto_processing_ranking_parameter = '',
                scan_type_filters = [
                    ''
                    ],
                cutoffs = icat_plus_client.models.mxcutoffs.mxcutoffs(
                    completeness = icat_plus_client.models.mxshell.mxshell(
                        inner = 1.337, 
                        outer = 1.337, 
                        overall = 1.337, ), 
                    resolution_limit_low = icat_plus_client.models.mxshell.mxshell(
                        inner = 1.337, 
                        outer = 1.337, 
                        overall = 1.337, ), 
                    resolution_limit_high = , 
                    r_meas_all_i_plus_i_minus = , 
                    mean_i_over_sig_i = , 
                    cc_half = , 
                    cc_ano = , ),
        )
        """

    def testMxsettings(self):
        """Test Mxsettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
