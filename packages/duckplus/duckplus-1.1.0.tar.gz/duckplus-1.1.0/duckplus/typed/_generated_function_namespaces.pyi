"""Auto-generated DuckDB function namespaces.

This file is generated by ``scripts/generate_function_namespaces.py``.
Do not edit by hand; regenerate to pull in new function definitions.

"""

from __future__ import annotations

from typing import ClassVar, Generic, Mapping, Tuple, TypeVar, Protocol

from .expression import BlobExpression, BooleanExpression, GenericExpression, NumericExpression, TypedExpression, VarcharExpression

class DuckDBFunctionDefinition: ...
class DuckDBFunctionSignature: ...
_ExprT = TypeVar('_ExprT', bound=TypedExpression, covariant=True)

class _DuckDBFunctionCall(Protocol[_ExprT]):
    signatures: Tuple[DuckDBFunctionSignature, ...]
    function_type: str
    def __call__(self, *operands: object) -> _ExprT: ...

_NamespaceExprT = TypeVar('_NamespaceExprT', bound=TypedExpression)

class _StaticFunctionNamespace(Generic[_NamespaceExprT]):
    function_type: ClassVar[str]
    return_category: ClassVar[str]
    _IDENTIFIER_FUNCTIONS: Mapping[str, _DuckDBFunctionCall[_NamespaceExprT]]
    _SYMBOLIC_FUNCTIONS: Mapping[str, _DuckDBFunctionCall[_NamespaceExprT]]
    def __getitem__(self, name: str) -> _DuckDBFunctionCall[_NamespaceExprT]: ...
    def get(
        self,
        name: str,
        default: _DuckDBFunctionCall[_NamespaceExprT] | None = ...,
    ) -> _DuckDBFunctionCall[_NamespaceExprT] | None: ...
    def __contains__(self, name: object) -> bool: ...
    @property
    def symbols(self) -> Mapping[str, _DuckDBFunctionCall[_NamespaceExprT]]: ...
    def __dir__(self) -> list[str]: ...

class AggregateBlobFunctions(_StaticFunctionNamespace[BlobExpression]):
    ...
    arg_max: _DuckDBFunctionCall[BlobExpression]
    arg_max_filter: _DuckDBFunctionCall[BlobExpression]
    arg_max_null: _DuckDBFunctionCall[BlobExpression]
    arg_max_null_filter: _DuckDBFunctionCall[BlobExpression]
    arg_min: _DuckDBFunctionCall[BlobExpression]
    arg_min_filter: _DuckDBFunctionCall[BlobExpression]
    arg_min_null: _DuckDBFunctionCall[BlobExpression]
    arg_min_null_filter: _DuckDBFunctionCall[BlobExpression]
    argmax: _DuckDBFunctionCall[BlobExpression]
    argmax_filter: _DuckDBFunctionCall[BlobExpression]
    argmin: _DuckDBFunctionCall[BlobExpression]
    argmin_filter: _DuckDBFunctionCall[BlobExpression]
    max_by: _DuckDBFunctionCall[BlobExpression]
    max_by_filter: _DuckDBFunctionCall[BlobExpression]
    min_by: _DuckDBFunctionCall[BlobExpression]
    min_by_filter: _DuckDBFunctionCall[BlobExpression]

class AggregateBooleanFunctions(_StaticFunctionNamespace[BooleanExpression]):
    ...
    bool_and: _DuckDBFunctionCall[BooleanExpression]
    bool_and_filter: _DuckDBFunctionCall[BooleanExpression]
    bool_or: _DuckDBFunctionCall[BooleanExpression]
    bool_or_filter: _DuckDBFunctionCall[BooleanExpression]

class AggregateGenericFunctions(_StaticFunctionNamespace[TypedExpression]):
    ...
    any_value: _DuckDBFunctionCall[TypedExpression]
    any_value_filter: _DuckDBFunctionCall[TypedExpression]
    approx_quantile: _DuckDBFunctionCall[TypedExpression]
    approx_quantile_filter: _DuckDBFunctionCall[TypedExpression]
    approx_top_k: _DuckDBFunctionCall[TypedExpression]
    approx_top_k_filter: _DuckDBFunctionCall[TypedExpression]
    arbitrary: _DuckDBFunctionCall[TypedExpression]
    arbitrary_filter: _DuckDBFunctionCall[TypedExpression]
    arg_max: _DuckDBFunctionCall[TypedExpression]
    arg_max_filter: _DuckDBFunctionCall[TypedExpression]
    arg_max_null: _DuckDBFunctionCall[TypedExpression]
    arg_max_null_filter: _DuckDBFunctionCall[TypedExpression]
    arg_min: _DuckDBFunctionCall[TypedExpression]
    arg_min_filter: _DuckDBFunctionCall[TypedExpression]
    arg_min_null: _DuckDBFunctionCall[TypedExpression]
    arg_min_null_filter: _DuckDBFunctionCall[TypedExpression]
    argmax: _DuckDBFunctionCall[TypedExpression]
    argmax_filter: _DuckDBFunctionCall[TypedExpression]
    argmin: _DuckDBFunctionCall[TypedExpression]
    argmin_filter: _DuckDBFunctionCall[TypedExpression]
    array_agg: _DuckDBFunctionCall[TypedExpression]
    array_agg_filter: _DuckDBFunctionCall[TypedExpression]
    avg: _DuckDBFunctionCall[TypedExpression]
    avg_filter: _DuckDBFunctionCall[TypedExpression]
    bit_and: _DuckDBFunctionCall[TypedExpression]
    bit_and_filter: _DuckDBFunctionCall[TypedExpression]
    bit_or: _DuckDBFunctionCall[TypedExpression]
    bit_or_filter: _DuckDBFunctionCall[TypedExpression]
    bit_xor: _DuckDBFunctionCall[TypedExpression]
    bit_xor_filter: _DuckDBFunctionCall[TypedExpression]
    bitstring_agg: _DuckDBFunctionCall[TypedExpression]
    bitstring_agg_filter: _DuckDBFunctionCall[TypedExpression]
    first: _DuckDBFunctionCall[TypedExpression]
    first_filter: _DuckDBFunctionCall[TypedExpression]
    histogram: _DuckDBFunctionCall[TypedExpression]
    histogram_filter: _DuckDBFunctionCall[TypedExpression]
    histogram_exact: _DuckDBFunctionCall[TypedExpression]
    histogram_exact_filter: _DuckDBFunctionCall[TypedExpression]
    last: _DuckDBFunctionCall[TypedExpression]
    last_filter: _DuckDBFunctionCall[TypedExpression]
    list: _DuckDBFunctionCall[TypedExpression]  # type: ignore[valid-type]
    list_filter: _DuckDBFunctionCall[TypedExpression]  # type: ignore[valid-type]
    max: _DuckDBFunctionCall[TypedExpression]
    max_filter: _DuckDBFunctionCall[TypedExpression]
    max_by: _DuckDBFunctionCall[TypedExpression]
    max_by_filter: _DuckDBFunctionCall[TypedExpression]
    mean: _DuckDBFunctionCall[TypedExpression]
    mean_filter: _DuckDBFunctionCall[TypedExpression]
    median: _DuckDBFunctionCall[TypedExpression]
    median_filter: _DuckDBFunctionCall[TypedExpression]
    min: _DuckDBFunctionCall[TypedExpression]
    min_filter: _DuckDBFunctionCall[TypedExpression]
    min_by: _DuckDBFunctionCall[TypedExpression]
    min_by_filter: _DuckDBFunctionCall[TypedExpression]
    mode: _DuckDBFunctionCall[TypedExpression]
    mode_filter: _DuckDBFunctionCall[TypedExpression]
    quantile: _DuckDBFunctionCall[TypedExpression]
    quantile_filter: _DuckDBFunctionCall[TypedExpression]
    quantile_cont: _DuckDBFunctionCall[TypedExpression]
    quantile_cont_filter: _DuckDBFunctionCall[TypedExpression]
    quantile_disc: _DuckDBFunctionCall[TypedExpression]
    quantile_disc_filter: _DuckDBFunctionCall[TypedExpression]
    sum: _DuckDBFunctionCall[TypedExpression]
    sum_filter: _DuckDBFunctionCall[TypedExpression]

class AggregateNumericFunctions(_StaticFunctionNamespace[NumericExpression]):
    ...
    any_value: _DuckDBFunctionCall[NumericExpression]
    any_value_filter: _DuckDBFunctionCall[NumericExpression]
    approx_count_distinct: _DuckDBFunctionCall[NumericExpression]
    approx_count_distinct_filter: _DuckDBFunctionCall[NumericExpression]
    approx_quantile: _DuckDBFunctionCall[NumericExpression]
    approx_quantile_filter: _DuckDBFunctionCall[NumericExpression]
    arbitrary: _DuckDBFunctionCall[NumericExpression]
    arbitrary_filter: _DuckDBFunctionCall[NumericExpression]
    arg_max: _DuckDBFunctionCall[NumericExpression]
    arg_max_filter: _DuckDBFunctionCall[NumericExpression]
    arg_max_null: _DuckDBFunctionCall[NumericExpression]
    arg_max_null_filter: _DuckDBFunctionCall[NumericExpression]
    arg_min: _DuckDBFunctionCall[NumericExpression]
    arg_min_filter: _DuckDBFunctionCall[NumericExpression]
    arg_min_null: _DuckDBFunctionCall[NumericExpression]
    arg_min_null_filter: _DuckDBFunctionCall[NumericExpression]
    argmax: _DuckDBFunctionCall[NumericExpression]
    argmax_filter: _DuckDBFunctionCall[NumericExpression]
    argmin: _DuckDBFunctionCall[NumericExpression]
    argmin_filter: _DuckDBFunctionCall[NumericExpression]
    avg: _DuckDBFunctionCall[NumericExpression]
    avg_filter: _DuckDBFunctionCall[NumericExpression]
    bit_and: _DuckDBFunctionCall[NumericExpression]
    bit_and_filter: _DuckDBFunctionCall[NumericExpression]
    bit_or: _DuckDBFunctionCall[NumericExpression]
    bit_or_filter: _DuckDBFunctionCall[NumericExpression]
    bit_xor: _DuckDBFunctionCall[NumericExpression]
    bit_xor_filter: _DuckDBFunctionCall[NumericExpression]
    corr: _DuckDBFunctionCall[NumericExpression]
    corr_filter: _DuckDBFunctionCall[NumericExpression]
    count: _DuckDBFunctionCall[NumericExpression]
    count_filter: _DuckDBFunctionCall[NumericExpression]
    count_if: _DuckDBFunctionCall[NumericExpression]
    count_if_filter: _DuckDBFunctionCall[NumericExpression]
    count_star: _DuckDBFunctionCall[NumericExpression]
    count_star_filter: _DuckDBFunctionCall[NumericExpression]
    countif: _DuckDBFunctionCall[NumericExpression]
    countif_filter: _DuckDBFunctionCall[NumericExpression]
    covar_pop: _DuckDBFunctionCall[NumericExpression]
    covar_pop_filter: _DuckDBFunctionCall[NumericExpression]
    covar_samp: _DuckDBFunctionCall[NumericExpression]
    covar_samp_filter: _DuckDBFunctionCall[NumericExpression]
    entropy: _DuckDBFunctionCall[NumericExpression]
    entropy_filter: _DuckDBFunctionCall[NumericExpression]
    favg: _DuckDBFunctionCall[NumericExpression]
    favg_filter: _DuckDBFunctionCall[NumericExpression]
    first: _DuckDBFunctionCall[NumericExpression]
    first_filter: _DuckDBFunctionCall[NumericExpression]
    fsum: _DuckDBFunctionCall[NumericExpression]
    fsum_filter: _DuckDBFunctionCall[NumericExpression]
    kahan_sum: _DuckDBFunctionCall[NumericExpression]
    kahan_sum_filter: _DuckDBFunctionCall[NumericExpression]
    kurtosis: _DuckDBFunctionCall[NumericExpression]
    kurtosis_filter: _DuckDBFunctionCall[NumericExpression]
    kurtosis_pop: _DuckDBFunctionCall[NumericExpression]
    kurtosis_pop_filter: _DuckDBFunctionCall[NumericExpression]
    last: _DuckDBFunctionCall[NumericExpression]
    last_filter: _DuckDBFunctionCall[NumericExpression]
    mad: _DuckDBFunctionCall[NumericExpression]
    mad_filter: _DuckDBFunctionCall[NumericExpression]
    max_by: _DuckDBFunctionCall[NumericExpression]
    max_by_filter: _DuckDBFunctionCall[NumericExpression]
    mean: _DuckDBFunctionCall[NumericExpression]
    mean_filter: _DuckDBFunctionCall[NumericExpression]
    min_by: _DuckDBFunctionCall[NumericExpression]
    min_by_filter: _DuckDBFunctionCall[NumericExpression]
    product: _DuckDBFunctionCall[NumericExpression]
    product_filter: _DuckDBFunctionCall[NumericExpression]
    quantile_cont: _DuckDBFunctionCall[NumericExpression]
    quantile_cont_filter: _DuckDBFunctionCall[NumericExpression]
    regr_avgx: _DuckDBFunctionCall[NumericExpression]
    regr_avgx_filter: _DuckDBFunctionCall[NumericExpression]
    regr_avgy: _DuckDBFunctionCall[NumericExpression]
    regr_avgy_filter: _DuckDBFunctionCall[NumericExpression]
    regr_count: _DuckDBFunctionCall[NumericExpression]
    regr_count_filter: _DuckDBFunctionCall[NumericExpression]
    regr_intercept: _DuckDBFunctionCall[NumericExpression]
    regr_intercept_filter: _DuckDBFunctionCall[NumericExpression]
    regr_r2: _DuckDBFunctionCall[NumericExpression]
    regr_r2_filter: _DuckDBFunctionCall[NumericExpression]
    regr_slope: _DuckDBFunctionCall[NumericExpression]
    regr_slope_filter: _DuckDBFunctionCall[NumericExpression]
    regr_sxx: _DuckDBFunctionCall[NumericExpression]
    regr_sxx_filter: _DuckDBFunctionCall[NumericExpression]
    regr_sxy: _DuckDBFunctionCall[NumericExpression]
    regr_sxy_filter: _DuckDBFunctionCall[NumericExpression]
    regr_syy: _DuckDBFunctionCall[NumericExpression]
    regr_syy_filter: _DuckDBFunctionCall[NumericExpression]
    reservoir_quantile: _DuckDBFunctionCall[NumericExpression]
    reservoir_quantile_filter: _DuckDBFunctionCall[NumericExpression]
    sem: _DuckDBFunctionCall[NumericExpression]
    sem_filter: _DuckDBFunctionCall[NumericExpression]
    skewness: _DuckDBFunctionCall[NumericExpression]
    skewness_filter: _DuckDBFunctionCall[NumericExpression]
    stddev: _DuckDBFunctionCall[NumericExpression]
    stddev_filter: _DuckDBFunctionCall[NumericExpression]
    stddev_pop: _DuckDBFunctionCall[NumericExpression]
    stddev_pop_filter: _DuckDBFunctionCall[NumericExpression]
    stddev_samp: _DuckDBFunctionCall[NumericExpression]
    stddev_samp_filter: _DuckDBFunctionCall[NumericExpression]
    sum: _DuckDBFunctionCall[NumericExpression]
    sum_filter: _DuckDBFunctionCall[NumericExpression]
    sum_no_overflow: _DuckDBFunctionCall[NumericExpression]
    sum_no_overflow_filter: _DuckDBFunctionCall[NumericExpression]
    sumkahan: _DuckDBFunctionCall[NumericExpression]
    sumkahan_filter: _DuckDBFunctionCall[NumericExpression]
    var_pop: _DuckDBFunctionCall[NumericExpression]
    var_pop_filter: _DuckDBFunctionCall[NumericExpression]
    var_samp: _DuckDBFunctionCall[NumericExpression]
    var_samp_filter: _DuckDBFunctionCall[NumericExpression]
    variance: _DuckDBFunctionCall[NumericExpression]
    variance_filter: _DuckDBFunctionCall[NumericExpression]

class AggregateVarcharFunctions(_StaticFunctionNamespace[VarcharExpression]):
    ...
    arg_max: _DuckDBFunctionCall[VarcharExpression]
    arg_max_filter: _DuckDBFunctionCall[VarcharExpression]
    arg_max_null: _DuckDBFunctionCall[VarcharExpression]
    arg_max_null_filter: _DuckDBFunctionCall[VarcharExpression]
    arg_min: _DuckDBFunctionCall[VarcharExpression]
    arg_min_filter: _DuckDBFunctionCall[VarcharExpression]
    arg_min_null: _DuckDBFunctionCall[VarcharExpression]
    arg_min_null_filter: _DuckDBFunctionCall[VarcharExpression]
    argmax: _DuckDBFunctionCall[VarcharExpression]
    argmax_filter: _DuckDBFunctionCall[VarcharExpression]
    argmin: _DuckDBFunctionCall[VarcharExpression]
    argmin_filter: _DuckDBFunctionCall[VarcharExpression]
    group_concat: _DuckDBFunctionCall[VarcharExpression]
    group_concat_filter: _DuckDBFunctionCall[VarcharExpression]
    listagg: _DuckDBFunctionCall[VarcharExpression]
    listagg_filter: _DuckDBFunctionCall[VarcharExpression]
    max_by: _DuckDBFunctionCall[VarcharExpression]
    max_by_filter: _DuckDBFunctionCall[VarcharExpression]
    min_by: _DuckDBFunctionCall[VarcharExpression]
    min_by_filter: _DuckDBFunctionCall[VarcharExpression]
    string_agg: _DuckDBFunctionCall[VarcharExpression]
    string_agg_filter: _DuckDBFunctionCall[VarcharExpression]

class AggregateFunctionNamespace:
    ...
    Blob: AggregateBlobFunctions
    Boolean: AggregateBooleanFunctions
    Generic: AggregateGenericFunctions
    Numeric: AggregateNumericFunctions
    Varchar: AggregateVarcharFunctions
    def __dir__(self) -> list[str]: ...

class ScalarBlobFunctions(_StaticFunctionNamespace[BlobExpression]):
    ...
    create_sort_key: _DuckDBFunctionCall[BlobExpression]
    encode: _DuckDBFunctionCall[BlobExpression]
    from_base64: _DuckDBFunctionCall[BlobExpression]
    from_binary: _DuckDBFunctionCall[BlobExpression]
    from_hex: _DuckDBFunctionCall[BlobExpression]
    repeat: _DuckDBFunctionCall[BlobExpression]
    unbin: _DuckDBFunctionCall[BlobExpression]
    unhex: _DuckDBFunctionCall[BlobExpression]

class ScalarBooleanFunctions(_StaticFunctionNamespace[BooleanExpression]):
    ...
    array_contains: _DuckDBFunctionCall[BooleanExpression]
    array_has: _DuckDBFunctionCall[BooleanExpression]
    array_has_all: _DuckDBFunctionCall[BooleanExpression]
    array_has_any: _DuckDBFunctionCall[BooleanExpression]
    can_cast_implicitly: _DuckDBFunctionCall[BooleanExpression]
    contains: _DuckDBFunctionCall[BooleanExpression]
    ends_with: _DuckDBFunctionCall[BooleanExpression]
    ilike_escape: _DuckDBFunctionCall[BooleanExpression]
    in_search_path: _DuckDBFunctionCall[BooleanExpression]
    is_histogram_other_bin: _DuckDBFunctionCall[BooleanExpression]
    isfinite: _DuckDBFunctionCall[BooleanExpression]
    isinf: _DuckDBFunctionCall[BooleanExpression]
    isnan: _DuckDBFunctionCall[BooleanExpression]
    json_contains: _DuckDBFunctionCall[BooleanExpression]
    json_exists: _DuckDBFunctionCall[BooleanExpression]
    json_valid: _DuckDBFunctionCall[BooleanExpression]
    like_escape: _DuckDBFunctionCall[BooleanExpression]
    list_contains: _DuckDBFunctionCall[BooleanExpression]
    list_has: _DuckDBFunctionCall[BooleanExpression]
    list_has_all: _DuckDBFunctionCall[BooleanExpression]
    list_has_any: _DuckDBFunctionCall[BooleanExpression]
    map_contains: _DuckDBFunctionCall[BooleanExpression]
    not_ilike_escape: _DuckDBFunctionCall[BooleanExpression]
    not_like_escape: _DuckDBFunctionCall[BooleanExpression]
    prefix: _DuckDBFunctionCall[BooleanExpression]
    regexp_full_match: _DuckDBFunctionCall[BooleanExpression]
    regexp_matches: _DuckDBFunctionCall[BooleanExpression]
    signbit: _DuckDBFunctionCall[BooleanExpression]
    starts_with: _DuckDBFunctionCall[BooleanExpression]
    struct_contains: _DuckDBFunctionCall[BooleanExpression]
    struct_has: _DuckDBFunctionCall[BooleanExpression]
    suffix: _DuckDBFunctionCall[BooleanExpression]

class ScalarGenericFunctions(_StaticFunctionNamespace[TypedExpression]):
    ...
    __internal_compress_string_uhugeint: _DuckDBFunctionCall[TypedExpression]
    __internal_decompress_integral_uhugeint: _DuckDBFunctionCall[TypedExpression]
    abs: _DuckDBFunctionCall[TypedExpression]
    add: _DuckDBFunctionCall[TypedExpression]
    aggregate: _DuckDBFunctionCall[TypedExpression]
    apply: _DuckDBFunctionCall[TypedExpression]
    array_aggr: _DuckDBFunctionCall[TypedExpression]
    array_aggregate: _DuckDBFunctionCall[TypedExpression]
    array_apply: _DuckDBFunctionCall[TypedExpression]
    array_cat: _DuckDBFunctionCall[TypedExpression]
    array_concat: _DuckDBFunctionCall[TypedExpression]
    array_distinct: _DuckDBFunctionCall[TypedExpression]
    array_extract: _DuckDBFunctionCall[TypedExpression]
    array_filter: _DuckDBFunctionCall[TypedExpression]
    array_grade_up: _DuckDBFunctionCall[TypedExpression]
    array_reduce: _DuckDBFunctionCall[TypedExpression]
    array_resize: _DuckDBFunctionCall[TypedExpression]
    array_reverse_sort: _DuckDBFunctionCall[TypedExpression]
    array_select: _DuckDBFunctionCall[TypedExpression]
    array_slice: _DuckDBFunctionCall[TypedExpression]
    array_sort: _DuckDBFunctionCall[TypedExpression]
    array_transform: _DuckDBFunctionCall[TypedExpression]
    array_value: _DuckDBFunctionCall[TypedExpression]
    array_where: _DuckDBFunctionCall[TypedExpression]
    array_zip: _DuckDBFunctionCall[TypedExpression]
    bitstring: _DuckDBFunctionCall[TypedExpression]
    cast_to_type: _DuckDBFunctionCall[TypedExpression]
    combine: _DuckDBFunctionCall[TypedExpression]
    concat: _DuckDBFunctionCall[TypedExpression]
    constant_or_null: _DuckDBFunctionCall[TypedExpression]
    current_date: _DuckDBFunctionCall[TypedExpression]
    current_localtime: _DuckDBFunctionCall[TypedExpression]
    current_localtimestamp: _DuckDBFunctionCall[TypedExpression]
    current_setting: _DuckDBFunctionCall[TypedExpression]
    date_part: _DuckDBFunctionCall[TypedExpression]
    date_trunc: _DuckDBFunctionCall[TypedExpression]
    datepart: _DuckDBFunctionCall[TypedExpression]
    datetrunc: _DuckDBFunctionCall[TypedExpression]
    divide: _DuckDBFunctionCall[TypedExpression]
    element_at: _DuckDBFunctionCall[TypedExpression]
    enum_code: _DuckDBFunctionCall[TypedExpression]
    epoch_ms: _DuckDBFunctionCall[TypedExpression]
    equi_width_bins: _DuckDBFunctionCall[TypedExpression]
    error: _DuckDBFunctionCall[TypedExpression]
    filter: _DuckDBFunctionCall[TypedExpression]
    finalize: _DuckDBFunctionCall[TypedExpression]
    flatten: _DuckDBFunctionCall[TypedExpression]
    from_json: _DuckDBFunctionCall[TypedExpression]
    from_json_strict: _DuckDBFunctionCall[TypedExpression]
    generate_series: _DuckDBFunctionCall[TypedExpression]
    get_current_time: _DuckDBFunctionCall[TypedExpression]
    get_current_timestamp: _DuckDBFunctionCall[TypedExpression]
    getvariable: _DuckDBFunctionCall[TypedExpression]
    grade_up: _DuckDBFunctionCall[TypedExpression]
    greatest: _DuckDBFunctionCall[TypedExpression]
    json_transform: _DuckDBFunctionCall[TypedExpression]
    json_transform_strict: _DuckDBFunctionCall[TypedExpression]
    last_day: _DuckDBFunctionCall[TypedExpression]
    least: _DuckDBFunctionCall[TypedExpression]
    list_aggr: _DuckDBFunctionCall[TypedExpression]
    list_aggregate: _DuckDBFunctionCall[TypedExpression]
    list_apply: _DuckDBFunctionCall[TypedExpression]
    list_cat: _DuckDBFunctionCall[TypedExpression]
    list_concat: _DuckDBFunctionCall[TypedExpression]
    list_distinct: _DuckDBFunctionCall[TypedExpression]
    list_element: _DuckDBFunctionCall[TypedExpression]
    list_extract: _DuckDBFunctionCall[TypedExpression]
    list_filter: _DuckDBFunctionCall[TypedExpression]
    list_grade_up: _DuckDBFunctionCall[TypedExpression]
    list_pack: _DuckDBFunctionCall[TypedExpression]
    list_reduce: _DuckDBFunctionCall[TypedExpression]
    list_resize: _DuckDBFunctionCall[TypedExpression]
    list_reverse_sort: _DuckDBFunctionCall[TypedExpression]
    list_select: _DuckDBFunctionCall[TypedExpression]
    list_slice: _DuckDBFunctionCall[TypedExpression]
    list_sort: _DuckDBFunctionCall[TypedExpression]
    list_transform: _DuckDBFunctionCall[TypedExpression]
    list_value: _DuckDBFunctionCall[TypedExpression]
    list_where: _DuckDBFunctionCall[TypedExpression]
    list_zip: _DuckDBFunctionCall[TypedExpression]
    make_date: _DuckDBFunctionCall[TypedExpression]
    make_time: _DuckDBFunctionCall[TypedExpression]
    make_timestamp: _DuckDBFunctionCall[TypedExpression]
    make_timestamp_ms: _DuckDBFunctionCall[TypedExpression]
    make_timestamp_ns: _DuckDBFunctionCall[TypedExpression]
    make_timestamptz: _DuckDBFunctionCall[TypedExpression]
    map: _DuckDBFunctionCall[TypedExpression]
    map_concat: _DuckDBFunctionCall[TypedExpression]
    map_entries: _DuckDBFunctionCall[TypedExpression]
    map_extract: _DuckDBFunctionCall[TypedExpression]
    map_extract_value: _DuckDBFunctionCall[TypedExpression]
    map_from_entries: _DuckDBFunctionCall[TypedExpression]
    map_keys: _DuckDBFunctionCall[TypedExpression]
    map_values: _DuckDBFunctionCall[TypedExpression]
    md5_number: _DuckDBFunctionCall[TypedExpression]
    mod: _DuckDBFunctionCall[TypedExpression]
    multiply: _DuckDBFunctionCall[TypedExpression]
    now: _DuckDBFunctionCall[TypedExpression]
    parse_duckdb_log_message: _DuckDBFunctionCall[TypedExpression]
    range: _DuckDBFunctionCall[TypedExpression]
    reduce: _DuckDBFunctionCall[TypedExpression]
    remap_struct: _DuckDBFunctionCall[TypedExpression]
    repeat: _DuckDBFunctionCall[TypedExpression]
    replace_type: _DuckDBFunctionCall[TypedExpression]
    row: _DuckDBFunctionCall[TypedExpression]
    set_bit: _DuckDBFunctionCall[TypedExpression]
    setseed: _DuckDBFunctionCall[TypedExpression]
    strptime: _DuckDBFunctionCall[TypedExpression]
    struct_concat: _DuckDBFunctionCall[TypedExpression]
    struct_extract: _DuckDBFunctionCall[TypedExpression]
    struct_extract_at: _DuckDBFunctionCall[TypedExpression]
    struct_insert: _DuckDBFunctionCall[TypedExpression]
    struct_pack: _DuckDBFunctionCall[TypedExpression]
    struct_update: _DuckDBFunctionCall[TypedExpression]
    subtract: _DuckDBFunctionCall[TypedExpression]
    time_bucket: _DuckDBFunctionCall[TypedExpression]
    timezone: _DuckDBFunctionCall[TypedExpression]
    to_timestamp: _DuckDBFunctionCall[TypedExpression]
    today: _DuckDBFunctionCall[TypedExpression]
    transaction_timestamp: _DuckDBFunctionCall[TypedExpression]
    trunc: _DuckDBFunctionCall[TypedExpression]
    try_strptime: _DuckDBFunctionCall[TypedExpression]
    union_extract: _DuckDBFunctionCall[TypedExpression]
    union_tag: _DuckDBFunctionCall[TypedExpression]
    union_value: _DuckDBFunctionCall[TypedExpression]
    unpivot_list: _DuckDBFunctionCall[TypedExpression]
    uuid_extract_timestamp: _DuckDBFunctionCall[TypedExpression]
    variant_extract: _DuckDBFunctionCall[TypedExpression]
    write_log: _DuckDBFunctionCall[TypedExpression]
    xor: _DuckDBFunctionCall[TypedExpression]

class ScalarNumericFunctions(_StaticFunctionNamespace[NumericExpression]):
    ...
    __internal_compress_integral_ubigint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_integral_uinteger: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_integral_usmallint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_integral_utinyint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_string_hugeint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_string_ubigint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_string_uinteger: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_string_usmallint: _DuckDBFunctionCall[NumericExpression]
    __internal_compress_string_utinyint: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_bigint: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_hugeint: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_integer: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_smallint: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_ubigint: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_uinteger: _DuckDBFunctionCall[NumericExpression]
    __internal_decompress_integral_usmallint: _DuckDBFunctionCall[NumericExpression]
    abs: _DuckDBFunctionCall[NumericExpression]
    acos: _DuckDBFunctionCall[NumericExpression]
    acosh: _DuckDBFunctionCall[NumericExpression]
    add: _DuckDBFunctionCall[NumericExpression]
    age: _DuckDBFunctionCall[NumericExpression]
    array_cosine_distance: _DuckDBFunctionCall[NumericExpression]
    array_cosine_similarity: _DuckDBFunctionCall[NumericExpression]
    array_cross_product: _DuckDBFunctionCall[NumericExpression]
    array_distance: _DuckDBFunctionCall[NumericExpression]
    array_dot_product: _DuckDBFunctionCall[NumericExpression]
    array_indexof: _DuckDBFunctionCall[NumericExpression]
    array_inner_product: _DuckDBFunctionCall[NumericExpression]
    array_length: _DuckDBFunctionCall[NumericExpression]
    array_negative_dot_product: _DuckDBFunctionCall[NumericExpression]
    array_negative_inner_product: _DuckDBFunctionCall[NumericExpression]
    array_position: _DuckDBFunctionCall[NumericExpression]
    array_unique: _DuckDBFunctionCall[NumericExpression]
    ascii: _DuckDBFunctionCall[NumericExpression]
    asin: _DuckDBFunctionCall[NumericExpression]
    asinh: _DuckDBFunctionCall[NumericExpression]
    atan: _DuckDBFunctionCall[NumericExpression]
    atan2: _DuckDBFunctionCall[NumericExpression]
    atanh: _DuckDBFunctionCall[NumericExpression]
    bit_count: _DuckDBFunctionCall[NumericExpression]
    bit_length: _DuckDBFunctionCall[NumericExpression]
    bit_position: _DuckDBFunctionCall[NumericExpression]
    cardinality: _DuckDBFunctionCall[NumericExpression]
    cbrt: _DuckDBFunctionCall[NumericExpression]
    ceil: _DuckDBFunctionCall[NumericExpression]
    ceiling: _DuckDBFunctionCall[NumericExpression]
    century: _DuckDBFunctionCall[NumericExpression]
    char_length: _DuckDBFunctionCall[NumericExpression]
    character_length: _DuckDBFunctionCall[NumericExpression]
    cos: _DuckDBFunctionCall[NumericExpression]
    cosh: _DuckDBFunctionCall[NumericExpression]
    cot: _DuckDBFunctionCall[NumericExpression]
    current_connection_id: _DuckDBFunctionCall[NumericExpression]
    current_query_id: _DuckDBFunctionCall[NumericExpression]
    current_transaction_id: _DuckDBFunctionCall[NumericExpression]
    currval: _DuckDBFunctionCall[NumericExpression]
    damerau_levenshtein: _DuckDBFunctionCall[NumericExpression]
    date_diff: _DuckDBFunctionCall[NumericExpression]
    date_part: _DuckDBFunctionCall[NumericExpression]
    date_sub: _DuckDBFunctionCall[NumericExpression]
    date_trunc: _DuckDBFunctionCall[NumericExpression]
    datediff: _DuckDBFunctionCall[NumericExpression]
    datepart: _DuckDBFunctionCall[NumericExpression]
    datesub: _DuckDBFunctionCall[NumericExpression]
    datetrunc: _DuckDBFunctionCall[NumericExpression]
    day: _DuckDBFunctionCall[NumericExpression]
    dayofmonth: _DuckDBFunctionCall[NumericExpression]
    dayofweek: _DuckDBFunctionCall[NumericExpression]
    dayofyear: _DuckDBFunctionCall[NumericExpression]
    decade: _DuckDBFunctionCall[NumericExpression]
    degrees: _DuckDBFunctionCall[NumericExpression]
    divide: _DuckDBFunctionCall[NumericExpression]
    editdist3: _DuckDBFunctionCall[NumericExpression]
    epoch: _DuckDBFunctionCall[NumericExpression]
    epoch_ms: _DuckDBFunctionCall[NumericExpression]
    epoch_ns: _DuckDBFunctionCall[NumericExpression]
    epoch_us: _DuckDBFunctionCall[NumericExpression]
    era: _DuckDBFunctionCall[NumericExpression]
    even: _DuckDBFunctionCall[NumericExpression]
    exp: _DuckDBFunctionCall[NumericExpression]
    factorial: _DuckDBFunctionCall[NumericExpression]
    floor: _DuckDBFunctionCall[NumericExpression]
    gamma: _DuckDBFunctionCall[NumericExpression]
    gcd: _DuckDBFunctionCall[NumericExpression]
    generate_series: _DuckDBFunctionCall[NumericExpression]
    get_bit: _DuckDBFunctionCall[NumericExpression]
    greatest_common_divisor: _DuckDBFunctionCall[NumericExpression]
    hamming: _DuckDBFunctionCall[NumericExpression]
    hash: _DuckDBFunctionCall[NumericExpression]
    hour: _DuckDBFunctionCall[NumericExpression]
    instr: _DuckDBFunctionCall[NumericExpression]
    isodow: _DuckDBFunctionCall[NumericExpression]
    isoyear: _DuckDBFunctionCall[NumericExpression]
    jaccard: _DuckDBFunctionCall[NumericExpression]
    jaro_similarity: _DuckDBFunctionCall[NumericExpression]
    jaro_winkler_similarity: _DuckDBFunctionCall[NumericExpression]
    json_array_length: _DuckDBFunctionCall[NumericExpression]
    julian: _DuckDBFunctionCall[NumericExpression]
    lcm: _DuckDBFunctionCall[NumericExpression]
    least_common_multiple: _DuckDBFunctionCall[NumericExpression]
    len: _DuckDBFunctionCall[NumericExpression]
    length: _DuckDBFunctionCall[NumericExpression]
    length_grapheme: _DuckDBFunctionCall[NumericExpression]
    levenshtein: _DuckDBFunctionCall[NumericExpression]
    lgamma: _DuckDBFunctionCall[NumericExpression]
    list_cosine_distance: _DuckDBFunctionCall[NumericExpression]
    list_cosine_similarity: _DuckDBFunctionCall[NumericExpression]
    list_distance: _DuckDBFunctionCall[NumericExpression]
    list_dot_product: _DuckDBFunctionCall[NumericExpression]
    list_indexof: _DuckDBFunctionCall[NumericExpression]
    list_inner_product: _DuckDBFunctionCall[NumericExpression]
    list_negative_dot_product: _DuckDBFunctionCall[NumericExpression]
    list_negative_inner_product: _DuckDBFunctionCall[NumericExpression]
    list_position: _DuckDBFunctionCall[NumericExpression]
    list_unique: _DuckDBFunctionCall[NumericExpression]
    ln: _DuckDBFunctionCall[NumericExpression]
    log: _DuckDBFunctionCall[NumericExpression]
    log10: _DuckDBFunctionCall[NumericExpression]
    log2: _DuckDBFunctionCall[NumericExpression]
    microsecond: _DuckDBFunctionCall[NumericExpression]
    millennium: _DuckDBFunctionCall[NumericExpression]
    millisecond: _DuckDBFunctionCall[NumericExpression]
    minute: _DuckDBFunctionCall[NumericExpression]
    mismatches: _DuckDBFunctionCall[NumericExpression]
    mod: _DuckDBFunctionCall[NumericExpression]
    month: _DuckDBFunctionCall[NumericExpression]
    multiply: _DuckDBFunctionCall[NumericExpression]
    nanosecond: _DuckDBFunctionCall[NumericExpression]
    nextafter: _DuckDBFunctionCall[NumericExpression]
    nextval: _DuckDBFunctionCall[NumericExpression]
    normalized_interval: _DuckDBFunctionCall[NumericExpression]
    octet_length: _DuckDBFunctionCall[NumericExpression]
    ord: _DuckDBFunctionCall[NumericExpression]
    pi: _DuckDBFunctionCall[NumericExpression]
    position: _DuckDBFunctionCall[NumericExpression]
    pow: _DuckDBFunctionCall[NumericExpression]
    power: _DuckDBFunctionCall[NumericExpression]
    quarter: _DuckDBFunctionCall[NumericExpression]
    radians: _DuckDBFunctionCall[NumericExpression]
    random: _DuckDBFunctionCall[NumericExpression]
    range: _DuckDBFunctionCall[NumericExpression]
    round: _DuckDBFunctionCall[NumericExpression]
    second: _DuckDBFunctionCall[NumericExpression]
    sign: _DuckDBFunctionCall[NumericExpression]
    sin: _DuckDBFunctionCall[NumericExpression]
    sinh: _DuckDBFunctionCall[NumericExpression]
    sqrt: _DuckDBFunctionCall[NumericExpression]
    strlen: _DuckDBFunctionCall[NumericExpression]
    strpos: _DuckDBFunctionCall[NumericExpression]
    struct_indexof: _DuckDBFunctionCall[NumericExpression]
    struct_position: _DuckDBFunctionCall[NumericExpression]
    subtract: _DuckDBFunctionCall[NumericExpression]
    tan: _DuckDBFunctionCall[NumericExpression]
    tanh: _DuckDBFunctionCall[NumericExpression]
    timetz_byte_comparable: _DuckDBFunctionCall[NumericExpression]
    timezone: _DuckDBFunctionCall[NumericExpression]
    timezone_hour: _DuckDBFunctionCall[NumericExpression]
    timezone_minute: _DuckDBFunctionCall[NumericExpression]
    to_centuries: _DuckDBFunctionCall[NumericExpression]
    to_days: _DuckDBFunctionCall[NumericExpression]
    to_decades: _DuckDBFunctionCall[NumericExpression]
    to_hours: _DuckDBFunctionCall[NumericExpression]
    to_microseconds: _DuckDBFunctionCall[NumericExpression]
    to_millennia: _DuckDBFunctionCall[NumericExpression]
    to_milliseconds: _DuckDBFunctionCall[NumericExpression]
    to_minutes: _DuckDBFunctionCall[NumericExpression]
    to_months: _DuckDBFunctionCall[NumericExpression]
    to_quarters: _DuckDBFunctionCall[NumericExpression]
    to_seconds: _DuckDBFunctionCall[NumericExpression]
    to_weeks: _DuckDBFunctionCall[NumericExpression]
    to_years: _DuckDBFunctionCall[NumericExpression]
    trunc: _DuckDBFunctionCall[NumericExpression]
    txid_current: _DuckDBFunctionCall[NumericExpression]
    unicode: _DuckDBFunctionCall[NumericExpression]
    uuid_extract_version: _DuckDBFunctionCall[NumericExpression]
    week: _DuckDBFunctionCall[NumericExpression]
    weekday: _DuckDBFunctionCall[NumericExpression]
    weekofyear: _DuckDBFunctionCall[NumericExpression]
    xor: _DuckDBFunctionCall[NumericExpression]
    year: _DuckDBFunctionCall[NumericExpression]
    yearweek: _DuckDBFunctionCall[NumericExpression]

class ScalarVarcharFunctions(_StaticFunctionNamespace[VarcharExpression]):
    ...
    __internal_decompress_string: _DuckDBFunctionCall[VarcharExpression]
    alias: _DuckDBFunctionCall[VarcharExpression]
    array_extract: _DuckDBFunctionCall[VarcharExpression]
    array_to_json: _DuckDBFunctionCall[VarcharExpression]
    bar: _DuckDBFunctionCall[VarcharExpression]
    base64: _DuckDBFunctionCall[VarcharExpression]
    bin: _DuckDBFunctionCall[VarcharExpression]
    chr: _DuckDBFunctionCall[VarcharExpression]
    concat_ws: _DuckDBFunctionCall[VarcharExpression]
    current_database: _DuckDBFunctionCall[VarcharExpression]
    current_query: _DuckDBFunctionCall[VarcharExpression]
    current_schema: _DuckDBFunctionCall[VarcharExpression]
    current_schemas: _DuckDBFunctionCall[VarcharExpression]
    dayname: _DuckDBFunctionCall[VarcharExpression]
    decode: _DuckDBFunctionCall[VarcharExpression]
    enum_first: _DuckDBFunctionCall[VarcharExpression]
    enum_last: _DuckDBFunctionCall[VarcharExpression]
    enum_range: _DuckDBFunctionCall[VarcharExpression]
    enum_range_boundary: _DuckDBFunctionCall[VarcharExpression]
    format: _DuckDBFunctionCall[VarcharExpression]
    formatReadableDecimalSize: _DuckDBFunctionCall[VarcharExpression]
    formatReadableSize: _DuckDBFunctionCall[VarcharExpression]
    format_bytes: _DuckDBFunctionCall[VarcharExpression]
    gen_random_uuid: _DuckDBFunctionCall[VarcharExpression]
    hex: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_af: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_am: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ar: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ar_sa: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_as: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_az: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_be: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_bg: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_bn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_bo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_br: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_bs: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ca: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ceb: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_chr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_cs: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_cy: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_da: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_de: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_de_at: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_dsb: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_dz: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ee: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_el: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_en: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_en_us: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_eo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_es: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_et: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fa: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fa_af: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ff: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fi: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fil: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fr_ca: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_fy: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ga: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_gl: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_gu: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ha: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_haw: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_he: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_he_il: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_hi: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_hr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_hsb: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_hu: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_hy: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_id: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_id_id: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ig: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_is: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_it: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ja: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ka: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_kk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_kl: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_km: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_kn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ko: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_kok: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ku: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ky: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_lb: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_lkt: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ln: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_lo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_lt: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_lv: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_mk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ml: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_mn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_mr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ms: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_mt: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_my: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_nb: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_nb_no: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ne: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_nl: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_nn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_noaccent: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_om: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_or: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_pa: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_pa_in: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_pl: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ps: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_pt: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ro: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ru: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sa: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_se: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_si: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sl: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_smn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sq: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sr_ba: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sr_me: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sr_rs: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sv: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_sw: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ta: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_te: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_th: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_tk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_to: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_tr: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ug: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_uk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_ur: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_uz: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_vi: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_wae: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_wo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_xh: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_yi: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_yo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_yue: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_yue_cn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh_cn: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh_hk: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh_mo: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh_sg: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zh_tw: _DuckDBFunctionCall[VarcharExpression]
    icu_collate_zu: _DuckDBFunctionCall[VarcharExpression]
    icu_sort_key: _DuckDBFunctionCall[VarcharExpression]
    json_array: _DuckDBFunctionCall[VarcharExpression]
    json_deserialize_sql: _DuckDBFunctionCall[VarcharExpression]
    json_extract: _DuckDBFunctionCall[VarcharExpression]
    json_extract_path: _DuckDBFunctionCall[VarcharExpression]
    json_extract_path_text: _DuckDBFunctionCall[VarcharExpression]
    json_extract_string: _DuckDBFunctionCall[VarcharExpression]
    json_keys: _DuckDBFunctionCall[VarcharExpression]
    json_merge_patch: _DuckDBFunctionCall[VarcharExpression]
    json_object: _DuckDBFunctionCall[VarcharExpression]
    json_pretty: _DuckDBFunctionCall[VarcharExpression]
    json_quote: _DuckDBFunctionCall[VarcharExpression]
    json_serialize_plan: _DuckDBFunctionCall[VarcharExpression]
    json_serialize_sql: _DuckDBFunctionCall[VarcharExpression]
    json_structure: _DuckDBFunctionCall[VarcharExpression]
    json_type: _DuckDBFunctionCall[VarcharExpression]
    json_value: _DuckDBFunctionCall[VarcharExpression]
    lcase: _DuckDBFunctionCall[VarcharExpression]
    left: _DuckDBFunctionCall[VarcharExpression]
    left_grapheme: _DuckDBFunctionCall[VarcharExpression]
    list_element: _DuckDBFunctionCall[VarcharExpression]
    list_extract: _DuckDBFunctionCall[VarcharExpression]
    lower: _DuckDBFunctionCall[VarcharExpression]
    lpad: _DuckDBFunctionCall[VarcharExpression]
    ltrim: _DuckDBFunctionCall[VarcharExpression]
    md5: _DuckDBFunctionCall[VarcharExpression]
    monthname: _DuckDBFunctionCall[VarcharExpression]
    nfc_normalize: _DuckDBFunctionCall[VarcharExpression]
    parse_dirname: _DuckDBFunctionCall[VarcharExpression]
    parse_dirpath: _DuckDBFunctionCall[VarcharExpression]
    parse_filename: _DuckDBFunctionCall[VarcharExpression]
    parse_path: _DuckDBFunctionCall[VarcharExpression]
    printf: _DuckDBFunctionCall[VarcharExpression]
    regexp_escape: _DuckDBFunctionCall[VarcharExpression]
    regexp_extract: _DuckDBFunctionCall[VarcharExpression]
    regexp_extract_all: _DuckDBFunctionCall[VarcharExpression]
    regexp_replace: _DuckDBFunctionCall[VarcharExpression]
    regexp_split_to_array: _DuckDBFunctionCall[VarcharExpression]
    repeat: _DuckDBFunctionCall[VarcharExpression]
    replace: _DuckDBFunctionCall[VarcharExpression]
    reverse: _DuckDBFunctionCall[VarcharExpression]
    right: _DuckDBFunctionCall[VarcharExpression]
    right_grapheme: _DuckDBFunctionCall[VarcharExpression]
    row_to_json: _DuckDBFunctionCall[VarcharExpression]
    rpad: _DuckDBFunctionCall[VarcharExpression]
    rtrim: _DuckDBFunctionCall[VarcharExpression]
    sha1: _DuckDBFunctionCall[VarcharExpression]
    sha256: _DuckDBFunctionCall[VarcharExpression]
    split: _DuckDBFunctionCall[VarcharExpression]
    stats: _DuckDBFunctionCall[VarcharExpression]
    str_split: _DuckDBFunctionCall[VarcharExpression]
    str_split_regex: _DuckDBFunctionCall[VarcharExpression]
    strftime: _DuckDBFunctionCall[VarcharExpression]
    string_split: _DuckDBFunctionCall[VarcharExpression]
    string_split_regex: _DuckDBFunctionCall[VarcharExpression]
    string_to_array: _DuckDBFunctionCall[VarcharExpression]
    strip_accents: _DuckDBFunctionCall[VarcharExpression]
    substr: _DuckDBFunctionCall[VarcharExpression]
    substring: _DuckDBFunctionCall[VarcharExpression]
    substring_grapheme: _DuckDBFunctionCall[VarcharExpression]
    to_base: _DuckDBFunctionCall[VarcharExpression]
    to_base64: _DuckDBFunctionCall[VarcharExpression]
    to_binary: _DuckDBFunctionCall[VarcharExpression]
    to_hex: _DuckDBFunctionCall[VarcharExpression]
    to_json: _DuckDBFunctionCall[VarcharExpression]
    translate: _DuckDBFunctionCall[VarcharExpression]
    trim: _DuckDBFunctionCall[VarcharExpression]
    typeof: _DuckDBFunctionCall[VarcharExpression]
    ucase: _DuckDBFunctionCall[VarcharExpression]
    upper: _DuckDBFunctionCall[VarcharExpression]
    url_decode: _DuckDBFunctionCall[VarcharExpression]
    url_encode: _DuckDBFunctionCall[VarcharExpression]
    uuid: _DuckDBFunctionCall[VarcharExpression]
    uuidv4: _DuckDBFunctionCall[VarcharExpression]
    uuidv7: _DuckDBFunctionCall[VarcharExpression]
    variant_typeof: _DuckDBFunctionCall[VarcharExpression]
    vector_type: _DuckDBFunctionCall[VarcharExpression]
    version: _DuckDBFunctionCall[VarcharExpression]

class ScalarFunctionNamespace:
    ...
    Blob: ScalarBlobFunctions
    Boolean: ScalarBooleanFunctions
    Generic: ScalarGenericFunctions
    Numeric: ScalarNumericFunctions
    Varchar: ScalarVarcharFunctions
    def __dir__(self) -> list[str]: ...

class WindowBlobFunctions(_StaticFunctionNamespace[BlobExpression]):
    ...

class WindowBooleanFunctions(_StaticFunctionNamespace[BooleanExpression]):
    ...

class WindowGenericFunctions(_StaticFunctionNamespace[TypedExpression]):
    ...

class WindowNumericFunctions(_StaticFunctionNamespace[NumericExpression]):
    ...

class WindowVarcharFunctions(_StaticFunctionNamespace[VarcharExpression]):
    ...

class WindowFunctionNamespace:
    ...
    Blob: WindowBlobFunctions
    Boolean: WindowBooleanFunctions
    Generic: WindowGenericFunctions
    Numeric: WindowNumericFunctions
    Varchar: WindowVarcharFunctions
    def __dir__(self) -> list[str]: ...

class DuckDBFunctionNamespace:
    ...
    Scalar: ScalarFunctionNamespace
    Aggregate: AggregateFunctionNamespace
    Window: WindowFunctionNamespace
    def __dir__(self) -> list[str]: ...

SCALAR_FUNCTIONS: ScalarFunctionNamespace
AGGREGATE_FUNCTIONS: AggregateFunctionNamespace
WINDOW_FUNCTIONS: WindowFunctionNamespace

__all__ = [
    'DuckDBFunctionDefinition',
    'DuckDBFunctionNamespace',
    'DuckDBFunctionSignature',
    'SCALAR_FUNCTIONS',
    'AGGREGATE_FUNCTIONS',
    'WINDOW_FUNCTIONS',
]
