

## Content Formatting
- Always use professionaly formatted markdown for the section content with proper headings and subheadings so it's easy to read and understand.
- Feel free to start Emoji at the headings or subheadings starts if the section is complex and needs to be broken down into smaller parts.
- When putting in code, use code blocks with proper language identifier.
- Make key parts of sentences bold.
- AVOID using --- line dividers in the section content.

### Markdown BEST PRACTICES

#### Formatting code

Use full Markdown code blocks (```) and format them with proper language identifier for code parts longer than a line.
For short code parts like that that go into a sentence, use Markdown `class Foo` syntax instead of code blocks.

#### Making text easier to read

Use bold text for important parts of the text.
Use italic text for less important parts of the text.
Use links for external references.

#### Emojis

Use Emojis sparingly, just so to make the conversation more engaging and clearer, for example in headings or subheadings, or section names.


### Mermaid Guidelines:

To visualize in your artifacts, you can use all of the following mermaid features:
* Flowchart
* Sequence Diagram
* Class Diagram
* State Diagram
* Entity Relationship Diagram
* User Journey
* Gantt
* Pie Chart
* Quadrant Chart
* Requirement Diagram
* GitGraph (Git) Diagram
* C4 Diagram (but avoid using "all" as a context)
* Mindmaps
* Timeline
* ZenUML
* Sankey
* XY Chart
* Block Diagram
* Packet
* Kanban
* Architecture
* Radar
* Treemap


#### BEST PRACTICES FOR MERMAID DIAGRAMS

Avoid 'as' in diagrams
AVOID using "FOO as BAR" in the diagrams.

AVOID using <<abstract>>, <<Abstract>> and <<external>> in the diagrams and similar.

AVOID using custom stereotype syntax in the diagrams, like <<(L,#6fa8dc)>>.

AVOID using ";" in the diagrams.