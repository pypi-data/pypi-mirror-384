{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Database.",
  "additionalProperties": false,
  "description": "VALUE: Definition of the database with required and optional parameters. \n KEY: String that specifies the identifier (i.e. name) for the database; must be unique in the account and inline with the naming convention for databases.",
  "required": [],
  "optional": [
    "transient",
    "data_retention_time_in_days",
    "max_data_extension_time_in_days",
    "default_ddl_collation",
    "log_level",
    "suspend_task_after_num_failures",
    "trace_level",
    "user_task_managed_initial_warehouse_size",
    "user_task_timeout_ms",
    "comment",
    "grants",
    "tags"
  ],
  "properties": {
    "transient": {
      "type": "string",
      "title": "Optional parameter \n -> Specifies a database as transient.",
      "description": "Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss. In addition, by definition, all schemas (and consequently all tables) created in a transient database are transient. \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/sql/create-database"
    },
    "data_retention_time_in_days": {
      "type": "number",
      "title": "Optional parameter \n -> Number of days for which Snowflake retains historical data for performing Time Travel actions (CLONE, UNDROP).",
      "description": "Specifies the number of days for which Time Travel actions (CLONE and UNDROP) can be performed on the database, as well as specifying the default Time Travel retention time for all schemas created in the database. A value of 0 effectively disables Time Travel for the specified database.\n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/sql/create-database"
    },
    "max_data_extension_time_in_days": {
      "type": "number",
      "title": "Optional parameter \n -> Maximum number of days for which Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale.",
      "description": "Object parameter that specifies the maximum number of days for which Snowflake can extend the data retention period for tables in the database to prevent streams on the tables from becoming stale. A value of 0 effectively disables the automatic extension for the specified database.\n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/sql/create-database"
    },
    "default_ddl_collation": {
      "type": "string",
      "title": "Optional parameter \n -> Sets the default collation used for the following DDL operations: 'CREATE TABLE' and 'ALTER TABLE â€¦ ADD COLUMN'.",
      "description": "Specifies a default collation specification for all schemas and tables added to the database. The default can be overridden at the schema and individual table level. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL.\n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/sql/create-database"
    },
    "log_level": {
      "type": "string",
      "title": "Optional parameter \n -> Specifies the severity level of messages that should be ingested and made available in the active event table.",
      "description": "When the LOG_LEVEL parameter is set to a specified level, only messages at the specified level (and messages at more severe levels) are ingested and made available in the event table. \n Values: [TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF] \n Default: OFF \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/parameters#log-level"
    },
    "suspend_task_after_num_failures": {
      "type": "number",
      "title": "Optional parameter \n -> Number of consecutive failed task runs after which a standalone task or DAG root task is suspended automatically.",
      "description": "Failed task runs include runs in which the SQL code in the task body either produces a user error or times out. Task runs that are skipped, canceled, or that fail due to a system error are considered indeterminate and are not included in the count of failed task runs. When the parameter is set to a value greater than 0, the following behavior applies to runs of standalone tasks or DAG root tasks: A standalone task is automatically suspended after the specified number of consecutive task runs either fail or time out. A root task is automatically suspended after the run of any single task in a DAG fails or times out the specified number of times in consecutive runs. The setting applies to tasks that rely on either Snowflake-managed compute resources (i.e. serverless compute model) or user-managed compute resources (i.e. a virtual warehouse). When you explictly set the parameter value at the account, database, or schema level, the change is applied to tasks contained in the modified object during their next scheduled run (including any child task in a DAG run in progress). Suspending a standalone task resets its count of failed task runs. Suspending a root DAG task resets the count for each task in the DAG.\n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures"
    },
    "trace_level": {
      "type": "string",
      "title": "Optional parameter \n -> Controls how trace events are ingested into the event table.",
      "description": "You can use the TRACE_LEVEL parameter to manage the verbosity of event trace data stored in the event table. ALWAYS: All spans and trace events will be recorded in the event table. ON_EVENT: Trace events will be recorded in the event table only when your stored procedures or UDFs explicitly add events. OFF: No spans or trace events will be recorded in the event table. \n Default: OFF \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/parameters#trace-level"
    },
    "user_task_managed_initial_warehouse_size": {
      "type": "string",
      "title": "Optional parameter \n -> Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size.",
      "description": "Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. If the task history is unavailable for a given task, the compute resources revert to this initial size. Note This parameter applies only to serverless tasks. The size is equivalent to the compute resources available when creating a warehouse. If the parameter is omitted, the first runs of the task are executed using a medium-sized (MEDIUM) warehouse. You can change the initial size for individual tasks (using ALTER TASK) after the task is created but before it has run successfully once. Changing the parameter after the first run of this task starts has no effect on the compute resources for current or future task runs. Note that suspending and resuming a task does not remove the task history used to size the compute resources. The task history is only removed if the task is recreated (using the CREATE OR REPLACE TASK syntax). Values Any traditional warehouse size: SMALL, MEDIUM, LARGE, etc., with a maximum size of XXLARGE. Default: MEDIUM. \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size"
    },
    "user_task_timeout_ms": {
      "type": "number",
      "title": "Optional parameter \n -> Specifies the time limit on a single run of the task before it times out (in milliseconds).",
      "description": "Before you increase the time limit for tasks significantly, consider whether the SQL statements in the task definitions could be optimized (either by rewriting the statements or using stored procedures) or whether the warehouse size for tasks with user-managed compute resources should be increased. In some situations, the STATEMENT_TIMEOUT_IN_SECONDS parameter has a higher precedence than USER_TASK_TIMEOUT_MS. For details, refer to STATEMENT_TIMEOUT_IN_SECONDS. Values 0 - 86400000 (1 day). Default 3600000 (1 hour). \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms"
    },
    "comment": {
      "type": "string",
      "title": "Optional parameter \n -> String (literal) which specifies a comment for the database.",
      "description": " \n -------- \n Snowflake Documentation 2023_08_03 \n https://docs.snowflake.com/en/sql-reference/sql/create-database"
    },
    "grants": {
      "type": "object",
      "title": "Optional parameter \n -> Defines access privileges on the warehouse.",
      "additionalProperties": false,
      "optional": [
        "create database role",
        "create schema",
        "imported privileges",
        "modify",
        "monitor",
        "usage"
      ],
      "properties": {
        "create database role": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the create-database-role-privilege on the database."
        },
        "create schema": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the create-schema-privilege on the database."
        },
        "imported privileges": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the imported-privileges-privilege on the database."
        },
        "modify": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the modify-privilege on the database."
        },
        "monitor": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the monitor-privilege on the database."
        },
        "usage": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the usage-privilege on the database."
        }
      }
    },
    "tags": {
      "type": "object",
      "title": "Databases categorization by tags."
    }
  }
}