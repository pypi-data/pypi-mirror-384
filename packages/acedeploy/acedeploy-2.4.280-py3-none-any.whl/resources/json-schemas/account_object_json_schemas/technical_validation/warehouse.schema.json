{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Warehouse.",
  "description": "VALUE: Definition of the warehouse with required and optional parameters. \n KEY: String that specifies the identifier (i.e. name) for the warehouse; must be unique in the account and inline with the naming convention for warehouses. \n -------- \n Naming Convention: \n WH_<Project>_<Envrionment>_<Purpose> \n WH_SP_<Project>_<Envrionment>_<Purpose> ",
  "additionalProperties": false,
  "optional": [
    "type",
    "size",
    "max_cluster_count",
    "min_cluster_count",
    "scaling_policy",
    "auto_suspend",
    "auto_resume",
    "tags",
    "resource_monitor",
    "comment",
    "grants",
    "enable_query_acceleration",
    "query_acceleration_max_scale_factor",
    "max_concurrency_level",
    "statement_queued_timeout_in_seconds",
    "statement_timeout_in_seconds"
  ],
  "properties": {
    "type": {
      "type": "string",
      "title": "Required parameter \n -> Specifies the type of the warehouse.",
      "description": "STANDARD: Standard virtual warehouse. \n SNOWPARK-OPTIMIZED: Snowpark-optimized virtual warehouse. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "size": {
      "type": "string",
      "title": "Required parameter \n -> Specifies the size of the warehouse.",
      "description": "The size determines the amount of compute resources in each cluster in the warehouse and, therefore, the number of credits consumed while the warehouse is running. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "max_cluster_count": {
      "type": "number",
      "title": "Required parameter \n -> Specifies the maximum number of clusters for a multi-cluster warehouse.",
      "description": "Valid values 1 to 10. For a single-cluster warehouse, this value is always 1. Note that specifying a value greater than 1 indicates the warehouse is a multi-cluster warehouse; however, the value can only be set to a higher value in Snowflake Enterprise Edition (or higher). \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse",
      "minimum": 1,
      "maximum": 10
    },
    "min_cluster_count": {
      "type": "number",
      "uniqueItems": true,
      "title": "Required parameter \n -> Specifies the minimum number of clusters for a multi-cluster warehouse (only applies to multi-cluster warehouses).",
      "description": "Valid values 1 to 10. However, note that MIN_CLUSTER_COUNT must be equal to or less than MAX_CLUSTER_COUNT: \n If both parameters are equal, the warehouse runs in Maximized mode. \n If MIN_CLUSTER_COUNT is less than MAX_CLUSTER_COUNT, the warehouse runs in Auto-scale mode. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse",
      "minimum": 1,
      "maximum": 10
    },
    "scaling_policy": {
      "type": "string",
      "title": "Required parameter \n -> Specifies the policy for automatically starting and shutting down clusters in a multi-cluster warehouse running in Auto-scale mode.",
      "description": "STANDARD: Minimizes queuing by starting clusters. ECONOMY: Conserves credits by favoring keeping running clusters fully-loaded. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "auto_suspend": {
      "type": "number",
      "title": "Required parameter \n -> Specifies the number of seconds of inactivity after which a warehouse is automatically suspended.",
      "description": "Valid values: Any integer 0 or greater, or NULL. Setting a value less than 60 is allowed, but many not result in the desired/expected behavior because the background process that suspends a warehouse runs approximately every 60 seconds and, therefore, is not intended for enabling exact control over warehouse suspension. Setting a 0 or NULL value means the warehouse never suspends. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "auto_resume": {
      "type": "boolean",
      "title": "Required parameter \n -> Specifies whether to automatically resume a warehouse when a SQL statement (e.g. query) is submitted to it.",
      "description": "TRUE: The warehouse resumes when a new query is submitted. \n FALSE: The warehouse only resumes when explicitly resumed using ALTER WAREHOUSE or through the Snowflake web interface. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "resource_monitor": {
      "type": "string",
      "title": "Optional parameter \n -> Specifies the name of a resource monitor that is explicitly assigned to the warehouse.",
      "description": "When a resource monitor is explicitly assigned to a warehouse, the monitor controls the monthly credits used by the warehouse (and all other warehouses to which the monitor is assigned). \n Valid values Any existing resource monitor.  -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "comment": {
      "type": "string",
      "title": "Optional parameter \n -> Specifies a comment for the warehouse.",
      "description": " \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "grants": {
      "type": "object",
      "title": "Optional parameter \n -> Defines access privileges on the warehouse.",
      "additionalProperties": false,
      "optional": [
        "usage",
        "modify",
        "monitor",
        "operate"
      ],
      "properties": {
        "usage": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the usage-privilege on the storage integration."
        },
        "modify": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the modify-privilege on the storage integration."
        },
        "monitor": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the monitor-privilege on the storage integration."
        },
        "operate": {
          "type": "array",
          "uniqueItems": true,
          "title": "List of roles that get the operate-privilege on the storage integration."
        }
      }
    },
    "tags": {
      "type": "object",
      "title": "Warehouse categorization by tags."
    },
    "enable_query_acceleration": {
      "type": "boolean",
      "title": "Optional parameter \n -> Specifies whether to enable the query acceleration service for queries that rely on this warehouse for compute resources.",
      "description": "TRUE: Enables Query Acceleration. \n FALSE: Disables Query Acceleration. \n DEFAULT: FALSE \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "query_acceleration_max_scale_factor": {
      "type": "number",
      "title": "Optional parameter \n -> Specifies the maximum scale factor for leasing compute resources for query acceleration.",
      "description": "The scale factor is used as a multiplier based on warehouse size. Setting the QUERY_ACCELERATION_MAX_SCALE_FACTOR to 0 eliminates the limit and allows queries to lease as many resources as necessary and as available to service the query. Regardless of the QUERY_ACCELERATION_MAX_SCALE_FACTOR value, the amount of available compute resources for query acceleration is bound by the available resources in the service and the number of other concurrent requests.\n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "max_concurrency_level": {
      "type": "number",
      "title": "Optional parameter \n -> Object parameter that specifies the concurrency level for SQL statements (i.e. queries and DML) executed by a warehouse cluster.",
      "description": "When the level is reached, the operation performed depends on whether the warehouse is a single-cluster or multi-cluster warehouse: Single-cluster or multi-cluster (in Maximized mode): Statements are queued until already-allocated resources are freed or additional resources are provisioned, which can be accomplished by increasing the size of the warehouse. Multi-cluster (in Auto-scale mode): Additional clusters are started. Note that this parameter does not limit the number of statements that can be executed concurrently by a warehouse cluster. Instead, it serves as an upper-boundary to protect against over-allocation of resources. As each statement is submitted to a warehouse, Snowflake allocates resources for executing the statement; if there arenâ€™t enough resources available, the statement is queued or additional clusters are started, depending on the warehouse. The actual number of statements executed concurrently by a warehouse might be more or less than the specified level: Smaller, more basic statements: More statements might execute concurrently because small statements generally execute on a subset of the available compute resources in a warehouse. This means they only count as a fraction towards the concurrency level. Larger, more complex statements: Fewer statements might execute concurrently. \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "statement_queued_timeout_in_seconds": {
      "type": "number",
      "title": "Optional parameter \n -> Object parameter that specifies the time, in seconds, a SQL statement (query, DDL, DML, etc.) can be queued on a warehouse before it is canceled by the system.",
      "description": "Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the MAX_CONCURRENCY_LEVEL parameter to ensure a warehouse is never backlogged. The parameter can be set within the session hierarchy. It can also be set for a warehouse to control the queue timeout for all SQL statements processed by the warehouse. When the parameter is set for both a warehouse and a session, the lowest non-zero value is enforced. For example: A warehouse has a queued timeout of 120 seconds. The queued timeout for the session is set to 60 seconds. The session timeout takes precedence (i.e. any statement submitted in the session is canceled after being queued for longer than 60 seconds). \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    },
    "statement_timeout_in_seconds": {
      "type": "number",
      "title": "Optional parameter \n -> Object parameter that specifies the time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system.",
      "description": "Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. The parameter can be set within the session hierarchy. It can also be set for an individual warehouse to control the runtime for all SQL statements processed by the warehouse. When the parameter is set for both a warehouse and a session, the lowest non-zero value is enforced. For example: A warehouse has a timeout of 1000 seconds. The timeout for the session is set to 500 seconds. The session timeout takes precedence (i.e. any statement submitted in the session is canceled after running for longer than 500 seconds). \n -------- \n Snowflake Documentation 2023_04_25 \n https://docs.snowflake.com/en/sql-reference/sql/create-warehouse"
    }
  }
}