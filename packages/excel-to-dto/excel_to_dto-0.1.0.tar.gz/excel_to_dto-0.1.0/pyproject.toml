[tool.poetry]
name = "excel-to-dto"
version = "0.1.0"
description = "Библиотека для парсинга и валидации данных из Excel файлов с автоматическим преобразованием в dataclass модели"
authors = ["DmitryM <inood@ya.ru>"]
readme = "README.md"
packages = [{include = "excel_to_dto", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
openpyxl = "^3.1.2"
pydantic = "^2.5.0"
typing-extensions = "^4.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.12.0"
isort = "^5.13.0"
ruff = "^0.1.8"
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
line-length = 100
select = ["E", "F", "W", "I", "N", "UP", "ANN", "S", "B", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "PT", "Q", "RSE", "RET", "SIM", "TID", "ARG", "ERA", "PD", "PGH", "PL", "TRY", "RUF"]
ignore = ["ANN101", "ANN102", "S101", "PLR0913"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=excel_to_dto --cov-report=term-missing --cov-report=html"

