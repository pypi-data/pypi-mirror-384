[project]
name = "votemarket-toolkit"
version = "1.0.6"
description = "Python SDK for VoteMarket - campaign management, proofs, and analytics"
authors = [{name = "Stake DAO", email = "admin@stakedao.org"}]
readme = "README.md"
license = {text = "AGPL-3.0"}
keywords = ["votemarket", "ethereum", "defi", "dao", "voting"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial",
]
requires-python = ">=3.10,<4"
dependencies = [
    "python-dotenv>=1.0.1",
    "w3multicall>=0.3.1",
    "web3>=7.12.0",
    "eth_utils>=5.1.0",
    "py-solc-x>=2.0.3",
    "cmake>=3.30.5",
    "fastparquet>=2024.5.0",
    "pyarrow>=17.0.0",
    "rich>=13.7.0",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.7.4",
    "black>=24.1.0",
]

[project.urls]
Homepage = "https://github.com/stake-dao/votemarket-proof-toolkit"
Repository = "https://github.com/stake-dao/votemarket-proof-toolkit"
Issues = "https://github.com/stake-dao/votemarket-proof-toolkit/issues"
Documentation = "https://github.com/stake-dao/votemarket-proof-toolkit/tree/main/docs"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["votemarket_toolkit"]
artifacts = [
    "votemarket_toolkit/resources/**/*.json",
    "votemarket_toolkit/resources/**/*.sol",
]

[tool.hatch.build.targets.sdist]
only-include = [
    "votemarket_toolkit",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]
exclude = [
    "**/TODO.txt",
    "**/external/**",
    "**/__pycache__/**",
    "**/*.pyc",
]

[tool.hatch.build]
include = [
    "votemarket_toolkit/**",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]
exclude = [
    "**/TODO.txt",
    "**/external/**",
    "**/__pycache__/**",
    "**/*.pyc",
    "docs/**",
    "examples/**",
    "assets/**",
    "Makefile",
    "DEVELOPMENT.md",
    "PUBLISHING.md",
    ".env.example",
    "constraints.txt",
    "uv.lock",
    ".python-version",
]

[tool.ruff]
line-length = 79
target-version = "py310"
extend-select = ["I"]

[tool.uv]
managed = true
python-preference = "only-managed"

[tool.black]
line-length = 79