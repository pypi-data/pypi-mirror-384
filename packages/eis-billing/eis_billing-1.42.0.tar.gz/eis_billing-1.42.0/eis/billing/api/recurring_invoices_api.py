"""
    EMIL BillingService

    The EMIL BillingService API description  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eis.billing.api_client import ApiClient, Endpoint as _Endpoint
from eis.billing.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eis.billing.model.create_invoice_for_policy_request_dto import CreateInvoiceForPolicyRequestDto
from eis.billing.model.create_invoice_response_class import CreateInvoiceResponseClass


class RecurringInvoicesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.create_recurring_invoice_endpoint = _Endpoint(
            settings={
                'response_type': (CreateInvoiceResponseClass,),
                'auth': [
                    'bearer'
                ],
                'endpoint_path': '/billingservice/v1/recurring-invoices',
                'operation_id': 'create_recurring_invoice',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'create_invoice_for_policy_request_dto',
                    'authorization',
                    'idempotency_key',
                ],
                'required': [
                    'create_invoice_for_policy_request_dto',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'create_invoice_for_policy_request_dto':
                        (CreateInvoiceForPolicyRequestDto,),
                    'authorization':
                        (str,),
                    'idempotency_key':
                        (str,),
                },
                'attribute_map': {
                    'authorization': 'Authorization',
                    'idempotency_key': 'Idempotency-Key',
                },
                'location_map': {
                    'create_invoice_for_policy_request_dto': 'body',
                    'authorization': 'header',
                    'idempotency_key': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def create_recurring_invoice(
        self,
        create_invoice_for_policy_request_dto,
        **kwargs
    ):
        """Create the recurring invoice  # noqa: E501

        This will create recurring invoice. It will be generated on a cyclical basis during the lifetime of a policy.  **Required Permissions**  \"billing-management.invoices.create\"  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_recurring_invoice(create_invoice_for_policy_request_dto, async_req=True)
        >>> result = thread.get()

        Args:
            create_invoice_for_policy_request_dto (CreateInvoiceForPolicyRequestDto):

        Keyword Args:
            authorization (str): Bearer Token. [optional]
            idempotency_key (str): Idempotency Key used to make the request idempotent. The key should be unique.     Usually, a generated v4 UUID is enough.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            CreateInvoiceResponseClass
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['create_invoice_for_policy_request_dto'] = \
            create_invoice_for_policy_request_dto
        return self.create_recurring_invoice_endpoint.call_with_http_info(**kwargs)

