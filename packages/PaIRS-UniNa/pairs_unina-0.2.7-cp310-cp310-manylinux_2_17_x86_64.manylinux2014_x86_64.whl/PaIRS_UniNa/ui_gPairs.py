from .addwidgets_ps import icons_path
# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'gPairsBWkUdB.ui'
##
## Created by: Qt User Interface Compiler version 6.7.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractSpinBox, QApplication, QFrame, QHBoxLayout,
    QLabel, QLayout, QMainWindow, QMenu,
    QMenuBar, QProgressBar, QPushButton, QSizePolicy,
    QSpacerItem, QSplitter, QStatusBar, QToolButton,
    QVBoxLayout, QWidget)

from .Explorer import (PaIRS_Explorer, StartingPage)
from .addwidgets_ps import (EditableLabel, MyQSpin, ResizingLabel, RichTextPushButton,
    myQSplitter)
from .tabSplitter import TabAreaWidget

class Ui_gPairs(object):
    def setupUi(self, gPairs):
        if not gPairs.objectName():
            gPairs.setObjectName(u"gPairs")
        gPairs.resize(1800, 550)
        gPairs.setMinimumSize(QSize(1100, 550))
        gPairs.setMaximumSize(QSize(16777215, 16777215))
        font = QFont()
        font.setPointSize(11)
        gPairs.setFont(font)
        icon = QIcon()
        icon.addFile(u""+ icons_path +"icon_PaIRS.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        gPairs.setWindowIcon(icon)
        gPairs.setUnifiedTitleAndToolBarOnMac(False)
        self.actionExit = QAction(gPairs)
        self.actionExit.setObjectName(u"actionExit")
        self.aExit = QAction(gPairs)
        self.aExit.setObjectName(u"aExit")
        icon1 = QIcon()
        icon1.addFile(u""+ icons_path +"quit.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.aExit.setIcon(icon1)
        self.aExit.setShortcutVisibleInContextMenu(True)
        self.actionSave = QAction(gPairs)
        self.actionSave.setObjectName(u"actionSave")
        icon2 = QIcon()
        icon2.addFile(u""+ icons_path +"save.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSave.setIcon(icon2)
        self.actionSave.setShortcutVisibleInContextMenu(True)
        self.actionOpen = QAction(gPairs)
        self.actionOpen.setObjectName(u"actionOpen")
        icon3 = QIcon()
        icon3.addFile(u""+ icons_path +"open_workspace.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionOpen.setIcon(icon3)
        self.actionOpen.setShortcutVisibleInContextMenu(True)
        self.actionNew = QAction(gPairs)
        self.actionNew.setObjectName(u"actionNew")
        icon4 = QIcon()
        icon4.addFile(u""+ icons_path +"new_workspace.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionNew.setIcon(icon4)
        self.actionNew.setShortcutVisibleInContextMenu(True)
        self.actionAbout = QAction(gPairs)
        self.actionAbout.setObjectName(u"actionAbout")
        icon5 = QIcon()
        icon5.addFile(u""+ icons_path +"about.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionAbout.setIcon(icon5)
        self.actionAbout.setShortcutVisibleInContextMenu(True)
        self.actionGuide = QAction(gPairs)
        self.actionGuide.setObjectName(u"actionGuide")
        icon6 = QIcon()
        icon6.addFile(u""+ icons_path +"guide.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionGuide.setIcon(icon6)
        self.actionSaveas = QAction(gPairs)
        self.actionSaveas.setObjectName(u"actionSaveas")
        icon7 = QIcon()
        icon7.addFile(u""+ icons_path +"saveas_workspace.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionSaveas.setIcon(icon7)
        self.actionSaveas.setShortcutVisibleInContextMenu(True)
        self.actionClose = QAction(gPairs)
        self.actionClose.setObjectName(u"actionClose")
        icon8 = QIcon()
        icon8.addFile(u""+ icons_path +"close_workspace.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionClose.setIcon(icon8)
        self.actionClose.setShortcutVisibleInContextMenu(True)
        self.actionPaIRS_Run = QAction(gPairs)
        self.actionPaIRS_Run.setObjectName(u"actionPaIRS_Run")
        icon9 = QIcon()
        icon9.addFile(u""+ icons_path +"normal_run.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPaIRS_Run.setIcon(icon9)
        self.actionPaIRS_Clean_run = QAction(gPairs)
        self.actionPaIRS_Clean_run.setObjectName(u"actionPaIRS_Clean_run")
        icon10 = QIcon()
        icon10.addFile(u""+ icons_path +"clean_run.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPaIRS_Clean_run.setIcon(icon10)
        self.actionPaIRS_Debug_run = QAction(gPairs)
        self.actionPaIRS_Debug_run.setObjectName(u"actionPaIRS_Debug_run")
        icon11 = QIcon()
        icon11.addFile(u""+ icons_path +"debug_run.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPaIRS_Debug_run.setIcon(icon11)
        self.actionCalVi_Run = QAction(gPairs)
        self.actionCalVi_Run.setObjectName(u"actionCalVi_Run")
        self.actionCalVi_Run.setIcon(icon9)
        self.actionCalVi_Clean_run = QAction(gPairs)
        self.actionCalVi_Clean_run.setObjectName(u"actionCalVi_Clean_run")
        self.actionCalVi_Clean_run.setIcon(icon10)
        self.actionCalVi_Debug_run = QAction(gPairs)
        self.actionCalVi_Debug_run.setObjectName(u"actionCalVi_Debug_run")
        self.actionCalVi_Debug_run.setIcon(icon11)
        self.actionChanges = QAction(gPairs)
        self.actionChanges.setObjectName(u"actionChanges")
        icon12 = QIcon()
        icon12.addFile(u""+ icons_path +"news.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionChanges.setIcon(icon12)
        self.actionDownload = QAction(gPairs)
        self.actionDownload.setObjectName(u"actionDownload")
        icon13 = QIcon()
        icon13.addFile(u""+ icons_path +"flaticon_PaIRS_download.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionDownload.setIcon(icon13)
        self.centralwidget = QWidget(gPairs)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setMinimumSize(QSize(0, 0))
        self.centralLayout = QHBoxLayout(self.centralwidget)
        self.centralLayout.setSpacing(0)
        self.centralLayout.setObjectName(u"centralLayout")
        self.centralLayout.setContentsMargins(10, 0, 10, 0)
        self.main_splitter = myQSplitter(self.centralwidget)
        self.main_splitter.setObjectName(u"main_splitter")
        self.main_splitter.setFrameShape(QFrame.Shape.NoFrame)
        self.main_splitter.setOrientation(Qt.Orientation.Horizontal)
        self.main_splitter.setOpaqueResize(False)
        self.main_splitter.setHandleWidth(10)
        self.main_splitter.setChildrenCollapsible(True)
        self.w_Managing_Tabs = QWidget(self.main_splitter)
        self.w_Managing_Tabs.setObjectName(u"w_Managing_Tabs")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.w_Managing_Tabs.sizePolicy().hasHeightForWidth())
        self.w_Managing_Tabs.setSizePolicy(sizePolicy)
        self.w_Managing_Tabs.setMinimumSize(QSize(420, 0))
        self.w_Managing_Tabs.setMaximumSize(QSize(16777215, 16777215))
        self.w_Managing_Tabs.setBaseSize(QSize(500, 0))
        self.manlay = QVBoxLayout(self.w_Managing_Tabs)
        self.manlay.setSpacing(5)
        self.manlay.setObjectName(u"manlay")
        self.manlay.setContentsMargins(0, 0, 0, 0)
        self.w_logo_run = QWidget(self.w_Managing_Tabs)
        self.w_logo_run.setObjectName(u"w_logo_run")
        self.w_logo_run.setMinimumSize(QSize(0, 80))
        self.w_logo_run.setMaximumSize(QSize(16777215, 80))
        self.verticalLayout = QVBoxLayout(self.w_logo_run)
        self.verticalLayout.setSpacing(3)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.w_Buttons_Run = QWidget(self.w_logo_run)
        self.w_Buttons_Run.setObjectName(u"w_Buttons_Run")
        self.w_Buttons_Run.setMinimumSize(QSize(0, 60))
        self.w_Buttons_Run.setMaximumSize(QSize(16777215, 60))
        self.horizontalLayout_10 = QHBoxLayout(self.w_Buttons_Run)
        self.horizontalLayout_10.setSpacing(5)
        self.horizontalLayout_10.setObjectName(u"horizontalLayout_10")
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.logo = QLabel(self.w_Buttons_Run)
        self.logo.setObjectName(u"logo")
        self.logo.setMinimumSize(QSize(92, 60))
        self.logo.setMaximumSize(QSize(92, 60))
        self.logo.setPixmap(QPixmap(u""+ icons_path +"logo_PaIRS_rect.png"))
        self.logo.setScaledContents(True)

        self.horizontalLayout_10.addWidget(self.logo)

        self.button_PaIRS_download = QToolButton(self.w_Buttons_Run)
        self.button_PaIRS_download.setObjectName(u"button_PaIRS_download")
        self.button_PaIRS_download.setMinimumSize(QSize(30, 30))
        self.button_PaIRS_download.setMaximumSize(QSize(30, 30))
        font1 = QFont()
        font1.setPointSize(16)
        self.button_PaIRS_download.setFont(font1)
        self.button_PaIRS_download.setStyleSheet(u"QToolButton#button_PaIRS_download{border: none}")
        self.button_PaIRS_download.setIcon(icon13)
        self.button_PaIRS_download.setIconSize(QSize(24, 24))
        self.button_PaIRS_download.setCheckable(False)

        self.horizontalLayout_10.addWidget(self.button_PaIRS_download)

        self.button_colormode = QToolButton(self.w_Buttons_Run)
        self.button_colormode.setObjectName(u"button_colormode")
        self.button_colormode.setMinimumSize(QSize(30, 30))
        self.button_colormode.setMaximumSize(QSize(30, 30))
        self.button_colormode.setFont(font1)
        self.button_colormode.setStyleSheet(u"QToolButton{border: none}")
        icon14 = QIcon()
        icon14.addFile(u""+ icons_path +"darkmode.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_colormode.setIcon(icon14)
        self.button_colormode.setIconSize(QSize(24, 24))
        self.button_colormode.setCheckable(False)

        self.horizontalLayout_10.addWidget(self.button_colormode)

        self.button_packissue = QToolButton(self.w_Buttons_Run)
        self.button_packissue.setObjectName(u"button_packissue")
        self.button_packissue.setMinimumSize(QSize(30, 30))
        self.button_packissue.setMaximumSize(QSize(30, 30))
        self.button_packissue.setFont(font1)
        self.button_packissue.setStyleSheet(u"QToolButton{border: none}")
        icon15 = QIcon()
        icon15.addFile(u""+ icons_path +"python_warning.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_packissue.setIcon(icon15)
        self.button_packissue.setIconSize(QSize(24, 24))
        self.button_packissue.setCheckable(False)

        self.horizontalLayout_10.addWidget(self.button_packissue)

        self.hs_logo = QSpacerItem(200, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_10.addItem(self.hs_logo)

        self.label_updating_import = QLabel(self.w_Buttons_Run)
        self.label_updating_import.setObjectName(u"label_updating_import")
        self.label_updating_import.setMinimumSize(QSize(40, 40))
        self.label_updating_import.setMaximumSize(QSize(40, 40))

        self.horizontalLayout_10.addWidget(self.label_updating_import)

        self.label_updating_pairs = QLabel(self.w_Buttons_Run)
        self.label_updating_pairs.setObjectName(u"label_updating_pairs")
        self.label_updating_pairs.setMinimumSize(QSize(40, 40))
        self.label_updating_pairs.setMaximumSize(QSize(40, 40))

        self.horizontalLayout_10.addWidget(self.label_updating_pairs)

        self.w_progress_Proc = QWidget(self.w_Buttons_Run)
        self.w_progress_Proc.setObjectName(u"w_progress_Proc")
        self.w_progress_Proc.setMinimumSize(QSize(0, 60))
        self.w_progress_Proc.setMaximumSize(QSize(16777215, 60))
        font2 = QFont()
        font2.setPointSize(13)
        self.w_progress_Proc.setFont(font2)
        self.verticalLayout_2 = QVBoxLayout(self.w_progress_Proc)
        self.verticalLayout_2.setSpacing(2)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.w_progress = QWidget(self.w_progress_Proc)
        self.w_progress.setObjectName(u"w_progress")
        self.horizontalLayout = QHBoxLayout(self.w_progress)
        self.horizontalLayout.setSpacing(5)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.progress_Proc = QProgressBar(self.w_progress)
        self.progress_Proc.setObjectName(u"progress_Proc")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.progress_Proc.sizePolicy().hasHeightForWidth())
        self.progress_Proc.setSizePolicy(sizePolicy1)
        self.progress_Proc.setMinimumSize(QSize(100, 36))
        self.progress_Proc.setMaximumSize(QSize(300, 36))
        font3 = QFont()
        font3.setPointSize(11)
        font3.setKerning(True)
        self.progress_Proc.setFont(font3)
        self.progress_Proc.setStyleSheet(u"")
        self.progress_Proc.setValue(0)
        self.progress_Proc.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.progress_Proc.setInvertedAppearance(False)

        self.horizontalLayout.addWidget(self.progress_Proc)

        self.button_pause = QToolButton(self.w_progress)
        self.button_pause.setObjectName(u"button_pause")
        sizePolicy.setHeightForWidth(self.button_pause.sizePolicy().hasHeightForWidth())
        self.button_pause.setSizePolicy(sizePolicy)
        self.button_pause.setMinimumSize(QSize(36, 36))
        self.button_pause.setMaximumSize(QSize(36, 36))
        self.button_pause.setFont(font1)
        self.button_pause.setToolTipDuration(-1)
        self.button_pause.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon16 = QIcon()
        icon16.addFile(u""+ icons_path +"pause.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_pause.setIcon(icon16)
        self.button_pause.setIconSize(QSize(28, 28))
        self.button_pause.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_pause.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout.addWidget(self.button_pause)


        self.verticalLayout_2.addWidget(self.w_progress)

        self.time_stamp = QLabel(self.w_progress_Proc)
        self.time_stamp.setObjectName(u"time_stamp")
        self.time_stamp.setMinimumSize(QSize(0, 22))
        self.time_stamp.setMaximumSize(QSize(16777215, 22))
        self.time_stamp.setFont(font)

        self.verticalLayout_2.addWidget(self.time_stamp)


        self.horizontalLayout_10.addWidget(self.w_progress_Proc)

        self.button_Run = QPushButton(self.w_Buttons_Run)
        self.button_Run.setObjectName(u"button_Run")
        sizePolicy.setHeightForWidth(self.button_Run.sizePolicy().hasHeightForWidth())
        self.button_Run.setSizePolicy(sizePolicy)
        self.button_Run.setMinimumSize(QSize(0, 40))
        self.button_Run.setMaximumSize(QSize(16777215, 40))
        font4 = QFont()
        font4.setFamilies([u"Arial"])
        font4.setPointSize(15)
        self.button_Run.setFont(font4)

        self.horizontalLayout_10.addWidget(self.button_Run)

        self.horizontalLayout_10.setStretch(4, 1)

        self.verticalLayout.addWidget(self.w_Buttons_Run)

        self.lab_happy_days = QLabel(self.w_logo_run)
        self.lab_happy_days.setObjectName(u"lab_happy_days")
        self.lab_happy_days.setMinimumSize(QSize(0, 20))
        self.lab_happy_days.setMaximumSize(QSize(16777215, 20))
        font5 = QFont()
        font5.setPointSize(11)
        font5.setItalic(False)
        font5.setUnderline(False)
        self.lab_happy_days.setFont(font5)

        self.verticalLayout.addWidget(self.lab_happy_days)


        self.manlay.addWidget(self.w_logo_run)

        self.Explorer = PaIRS_Explorer(self.w_Managing_Tabs)
        self.Explorer.setObjectName(u"Explorer")
        sizePolicy.setHeightForWidth(self.Explorer.sizePolicy().hasHeightForWidth())
        self.Explorer.setSizePolicy(sizePolicy)
        self.Explorer.setMinimumSize(QSize(0, 0))
        self.Explorer.setMaximumSize(QSize(16777215, 16777215))
        self.Explorer.setBaseSize(QSize(500, 0))
        self.Explorer.setStyleSheet(u"QFrame#f_Tree_Process{\n"
"border: 1px solid gray;\n"
"border-radius: 15px;\n"
"}")

        self.manlay.addWidget(self.Explorer)

        self.w_gif_loading = QWidget(self.w_Managing_Tabs)
        self.w_gif_loading.setObjectName(u"w_gif_loading")
        self.w_gif_loading.setMinimumSize(QSize(0, 20))
        self.w_gif_loading.setMaximumSize(QSize(16777215, 20))
        self.horizontalLayout_4 = QHBoxLayout(self.w_gif_loading)
        self.horizontalLayout_4.setSpacing(3)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.label_gif = QLabel(self.w_gif_loading)
        self.label_gif.setObjectName(u"label_gif")
        self.label_gif.setMinimumSize(QSize(40, 10))
        self.label_gif.setMaximumSize(QSize(40, 10))
        font6 = QFont()
        font6.setPointSize(10)
        self.label_gif.setFont(font6)
        self.label_gif.setPixmap(QPixmap(u""+ icons_path +"loaded.png"))

        self.horizontalLayout_4.addWidget(self.label_gif)

        self.label_loading = QLabel(self.w_gif_loading)
        self.label_loading.setObjectName(u"label_loading")
        self.label_loading.setMinimumSize(QSize(0, 20))
        self.label_loading.setMaximumSize(QSize(16777215, 20))
        font7 = QFont()
        font7.setPointSize(11)
        font7.setItalic(True)
        self.label_loading.setFont(font7)

        self.horizontalLayout_4.addWidget(self.label_loading)

        self.spin_nworkers = MyQSpin(self.w_gif_loading)
        self.spin_nworkers.setObjectName(u"spin_nworkers")
        self.spin_nworkers.setMinimumSize(QSize(0, 20))
        self.spin_nworkers.setMaximumSize(QSize(26, 20))
        self.spin_nworkers.setFont(font)
        self.spin_nworkers.setStyleSheet(u"padding-bottom: 2px;")
        self.spin_nworkers.setButtonSymbols(QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.spin_nworkers.setProperty("showGroupSeparator", True)

        self.horizontalLayout_4.addWidget(self.spin_nworkers)

        self.label_loading_2 = QLabel(self.w_gif_loading)
        self.label_loading_2.setObjectName(u"label_loading_2")
        sizePolicy1.setHeightForWidth(self.label_loading_2.sizePolicy().hasHeightForWidth())
        self.label_loading_2.setSizePolicy(sizePolicy1)
        self.label_loading_2.setMinimumSize(QSize(0, 20))
        self.label_loading_2.setMaximumSize(QSize(16777215, 20))
        self.label_loading_2.setFont(font7)

        self.horizontalLayout_4.addWidget(self.label_loading_2)


        self.manlay.addWidget(self.w_gif_loading)

        self.main_splitter.addWidget(self.w_Managing_Tabs)
        self.w_Operating_Tabs = QWidget(self.main_splitter)
        self.w_Operating_Tabs.setObjectName(u"w_Operating_Tabs")
        sizePolicy.setHeightForWidth(self.w_Operating_Tabs.sizePolicy().hasHeightForWidth())
        self.w_Operating_Tabs.setSizePolicy(sizePolicy)
        self.w_Operating_Tabs.setMinimumSize(QSize(570, 0))
        self.oplay = QVBoxLayout(self.w_Operating_Tabs)
        self.oplay.setSpacing(5)
        self.oplay.setObjectName(u"oplay")
        self.oplay.setContentsMargins(0, 5, 0, 0)
        self.Operating_Tabs_splitter = QSplitter(self.w_Operating_Tabs)
        self.Operating_Tabs_splitter.setObjectName(u"Operating_Tabs_splitter")
        self.Operating_Tabs_splitter.setOrientation(Qt.Orientation.Vertical)
        self.w_header = QWidget(self.Operating_Tabs_splitter)
        self.w_header.setObjectName(u"w_header")
        self.w_header.setMinimumSize(QSize(0, 60))
        self.w_header.setMaximumSize(QSize(16777215, 60))
        self.horizontalLayout_2 = QHBoxLayout(self.w_header)
        self.horizontalLayout_2.setSpacing(15)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setContentsMargins(10, 0, 10, 0)
        self.logo_CalVi = QLabel(self.w_header)
        self.logo_CalVi.setObjectName(u"logo_CalVi")
        self.logo_CalVi.setMinimumSize(QSize(90, 30))
        self.logo_CalVi.setMaximumSize(QSize(90, 30))
        self.logo_CalVi.setPixmap(QPixmap(u""+ icons_path +"logo_CalVi.png"))
        self.logo_CalVi.setScaledContents(True)

        self.horizontalLayout_2.addWidget(self.logo_CalVi)

        self.button_Run_CalVi = RichTextPushButton(self.w_header)
        self.button_Run_CalVi.setObjectName(u"button_Run_CalVi")
        sizePolicy.setHeightForWidth(self.button_Run_CalVi.sizePolicy().hasHeightForWidth())
        self.button_Run_CalVi.setSizePolicy(sizePolicy)
        self.button_Run_CalVi.setMinimumSize(QSize(80, 40))
        self.button_Run_CalVi.setMaximumSize(QSize(80, 40))
        self.button_Run_CalVi.setFont(font4)
        icon17 = QIcon()
        icon17.addFile(u""+ icons_path +"play.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_Run_CalVi.setIcon(icon17)

        self.horizontalLayout_2.addWidget(self.button_Run_CalVi)

        self.button_Abort_CalVi = RichTextPushButton(self.w_header)
        self.button_Abort_CalVi.setObjectName(u"button_Abort_CalVi")
        sizePolicy.setHeightForWidth(self.button_Abort_CalVi.sizePolicy().hasHeightForWidth())
        self.button_Abort_CalVi.setSizePolicy(sizePolicy)
        self.button_Abort_CalVi.setMinimumSize(QSize(80, 40))
        self.button_Abort_CalVi.setMaximumSize(QSize(80, 40))
        self.button_Abort_CalVi.setFont(font4)
        icon18 = QIcon()
        icon18.addFile(u""+ icons_path +"abort.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_Abort_CalVi.setIcon(icon18)

        self.horizontalLayout_2.addWidget(self.button_Abort_CalVi)

        self.button_restore_undo = QToolButton(self.w_header)
        self.button_restore_undo.setObjectName(u"button_restore_undo")
        sizePolicy.setHeightForWidth(self.button_restore_undo.sizePolicy().hasHeightForWidth())
        self.button_restore_undo.setSizePolicy(sizePolicy)
        self.button_restore_undo.setMinimumSize(QSize(36, 36))
        self.button_restore_undo.setMaximumSize(QSize(36, 36))
        self.button_restore_undo.setFont(font1)
        self.button_restore_undo.setToolTipDuration(-1)
        self.button_restore_undo.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon19 = QIcon()
        icon19.addFile(u""+ icons_path +"restore_undo.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_restore_undo.setIcon(icon19)
        self.button_restore_undo.setIconSize(QSize(28, 28))
        self.button_restore_undo.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_restore_undo.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout_2.addWidget(self.button_restore_undo)

        self.button_reset_step = QToolButton(self.w_header)
        self.button_reset_step.setObjectName(u"button_reset_step")
        sizePolicy.setHeightForWidth(self.button_reset_step.sizePolicy().hasHeightForWidth())
        self.button_reset_step.setSizePolicy(sizePolicy)
        self.button_reset_step.setMinimumSize(QSize(36, 36))
        self.button_reset_step.setMaximumSize(QSize(36, 36))
        self.button_reset_step.setFont(font1)
        self.button_reset_step.setToolTipDuration(-1)
        self.button_reset_step.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon20 = QIcon()
        icon20.addFile(u""+ icons_path +"reset.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_reset_step.setIcon(icon20)
        self.button_reset_step.setIconSize(QSize(28, 28))
        self.button_reset_step.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_reset_step.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout_2.addWidget(self.button_reset_step)

        self.button_step_inherit = QToolButton(self.w_header)
        self.button_step_inherit.setObjectName(u"button_step_inherit")
        sizePolicy.setHeightForWidth(self.button_step_inherit.sizePolicy().hasHeightForWidth())
        self.button_step_inherit.setSizePolicy(sizePolicy)
        self.button_step_inherit.setMinimumSize(QSize(36, 36))
        self.button_step_inherit.setMaximumSize(QSize(36, 36))
        self.button_step_inherit.setFont(font1)
        self.button_step_inherit.setToolTipDuration(-1)
        self.button_step_inherit.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon21 = QIcon()
        icon21.addFile(u""+ icons_path +"step_inheritance.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_step_inherit.setIcon(icon21)
        self.button_step_inherit.setIconSize(QSize(28, 28))
        self.button_step_inherit.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_step_inherit.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout_2.addWidget(self.button_step_inherit)

        self.button_copy_step = QToolButton(self.w_header)
        self.button_copy_step.setObjectName(u"button_copy_step")
        sizePolicy.setHeightForWidth(self.button_copy_step.sizePolicy().hasHeightForWidth())
        self.button_copy_step.setSizePolicy(sizePolicy)
        self.button_copy_step.setMinimumSize(QSize(36, 36))
        self.button_copy_step.setMaximumSize(QSize(36, 36))
        self.button_copy_step.setFont(font1)
        self.button_copy_step.setToolTipDuration(-1)
        self.button_copy_step.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon22 = QIcon()
        icon22.addFile(u""+ icons_path +"copy_process.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_copy_step.setIcon(icon22)
        self.button_copy_step.setIconSize(QSize(28, 28))
        self.button_copy_step.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_copy_step.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout_2.addWidget(self.button_copy_step)

        self.button_link_step = QToolButton(self.w_header)
        self.button_link_step.setObjectName(u"button_link_step")
        sizePolicy.setHeightForWidth(self.button_link_step.sizePolicy().hasHeightForWidth())
        self.button_link_step.setSizePolicy(sizePolicy)
        self.button_link_step.setMinimumSize(QSize(36, 36))
        self.button_link_step.setMaximumSize(QSize(36, 36))
        self.button_link_step.setFont(font1)
        self.button_link_step.setToolTipDuration(-1)
        self.button_link_step.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        icon23 = QIcon()
        icon23.addFile(u""+ icons_path +"unlink.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.button_link_step.setIcon(icon23)
        self.button_link_step.setIconSize(QSize(28, 28))
        self.button_link_step.setCheckable(True)
        self.button_link_step.setChecked(False)
        self.button_link_step.setPopupMode(QToolButton.ToolButtonPopupMode.DelayedPopup)
        self.button_link_step.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)

        self.horizontalLayout_2.addWidget(self.button_link_step)

        self.workspace_icon = QPushButton(self.w_header)
        self.workspace_icon.setObjectName(u"workspace_icon")
        self.workspace_icon.setMinimumSize(QSize(60, 60))
        self.workspace_icon.setMaximumSize(QSize(60, 60))
        self.workspace_icon.setStyleSheet(u"QPushButton{border: none,;background: none}")
        icon24 = QIcon()
        icon24.addFile(u""+ icons_path +"workspace.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.workspace_icon.setIcon(icon24)
        self.workspace_icon.setIconSize(QSize(60, 60))

        self.horizontalLayout_2.addWidget(self.workspace_icon)

        self.w_workspace = QWidget(self.w_header)
        self.w_workspace.setObjectName(u"w_workspace")
        self.verticalLayout_5 = QVBoxLayout(self.w_workspace)
        self.verticalLayout_5.setSpacing(1)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.title_workspace = EditableLabel(self.w_workspace)
        self.title_workspace.setObjectName(u"title_workspace")
        sizePolicy1.setHeightForWidth(self.title_workspace.sizePolicy().hasHeightForWidth())
        self.title_workspace.setSizePolicy(sizePolicy1)
        self.title_workspace.setMinimumSize(QSize(180, 0))

        self.verticalLayout_5.addWidget(self.title_workspace)

        self.subtitle_workspace = ResizingLabel(self.w_workspace)
        self.subtitle_workspace.setObjectName(u"subtitle_workspace")
        self.subtitle_workspace.setMinimumSize(QSize(0, 24))
        self.subtitle_workspace.setMaximumSize(QSize(16777215, 24))
        self.subtitle_workspace.setFont(font7)
        self.subtitle_workspace.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.verticalLayout_5.addWidget(self.subtitle_workspace)


        self.horizontalLayout_2.addWidget(self.w_workspace)

        self.w_title = QWidget(self.w_header)
        self.w_title.setObjectName(u"w_title")
        self.verticalLayout_3 = QVBoxLayout(self.w_title)
        self.verticalLayout_3.setSpacing(1)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.title = ResizingLabel(self.w_title)
        self.title.setObjectName(u"title")
        sizePolicy1.setHeightForWidth(self.title.sizePolicy().hasHeightForWidth())
        self.title.setSizePolicy(sizePolicy1)
        self.title.setMinimumSize(QSize(0, 35))
        self.title.setMaximumSize(QSize(16777215, 35))
        font8 = QFont()
        font8.setFamilies([u"Arial"])
        font8.setPointSize(20)
        font8.setBold(True)
        self.title.setFont(font8)
        self.title.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.verticalLayout_3.addWidget(self.title)

        self.subtitle = ResizingLabel(self.w_title)
        self.subtitle.setObjectName(u"subtitle")
        self.subtitle.setMinimumSize(QSize(0, 24))
        self.subtitle.setMaximumSize(QSize(16777215, 24))
        self.subtitle.setFont(font7)
        self.subtitle.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.verticalLayout_3.addWidget(self.subtitle)


        self.horizontalLayout_2.addWidget(self.w_title)

        self.title_icon = QPushButton(self.w_header)
        self.title_icon.setObjectName(u"title_icon")
        self.title_icon.setMinimumSize(QSize(60, 60))
        self.title_icon.setMaximumSize(QSize(60, 60))
        self.title_icon.setStyleSheet(u"QPushButton{border: none,;background: none}")
        icon25 = QIcon()
        icon25.addFile(u""+ icons_path +"project.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.title_icon.setIcon(icon25)
        self.title_icon.setIconSize(QSize(60, 60))

        self.horizontalLayout_2.addWidget(self.title_icon)

        self.Operating_Tabs_splitter.addWidget(self.w_header)
        self.areaWidget = QWidget(self.Operating_Tabs_splitter)
        self.areaWidget.setObjectName(u"areaWidget")
        sizePolicy.setHeightForWidth(self.areaWidget.sizePolicy().hasHeightForWidth())
        self.areaWidget.setSizePolicy(sizePolicy)
        self.horizontalLayout_3 = QHBoxLayout(self.areaWidget)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setSizeConstraint(QLayout.SizeConstraint.SetDefaultConstraint)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.projectPage = StartingPage(self.areaWidget)
        self.projectPage.setObjectName(u"projectPage")

        self.horizontalLayout_3.addWidget(self.projectPage)

        self.processPage = StartingPage(self.areaWidget)
        self.processPage.setObjectName(u"processPage")

        self.horizontalLayout_3.addWidget(self.processPage)

        self.stepPage = StartingPage(self.areaWidget)
        self.stepPage.setObjectName(u"stepPage")

        self.horizontalLayout_3.addWidget(self.stepPage)

        self.tabAreaWidget = TabAreaWidget(self.areaWidget)
        self.tabAreaWidget.setObjectName(u"tabAreaWidget")
        sizePolicy.setHeightForWidth(self.tabAreaWidget.sizePolicy().hasHeightForWidth())
        self.tabAreaWidget.setSizePolicy(sizePolicy)

        self.horizontalLayout_3.addWidget(self.tabAreaWidget)

        self.Operating_Tabs_splitter.addWidget(self.areaWidget)

        self.oplay.addWidget(self.Operating_Tabs_splitter)

        self.main_splitter.addWidget(self.w_Operating_Tabs)

        self.centralLayout.addWidget(self.main_splitter)

        gPairs.setCentralWidget(self.centralwidget)
        self.statusbar = QStatusBar(gPairs)
        self.statusbar.setObjectName(u"statusbar")
        self.statusbar.setMinimumSize(QSize(0, 20))
        self.statusbar.setMaximumSize(QSize(16777215, 20))
        font9 = QFont()
        font9.setPointSize(11)
        font9.setBold(True)
        font9.setItalic(True)
        self.statusbar.setFont(font9)
        self.statusbar.setStyleSheet(u"color: rgb(51, 102, 255)")
        gPairs.setStatusBar(self.statusbar)
        self.menubar = QMenuBar(gPairs)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1800, 43))
        self.menubar.setFont(font)
        self.menubar.setNativeMenuBar(False)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menu = QMenu(self.menubar)
        self.menu.setObjectName(u"menu")
        icon26 = QIcon()
        icon26.addFile(u""+ icons_path +"flaticon_PaIRS.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.menu.setIcon(icon26)
        self.menuPaIRS = QMenu(self.menu)
        self.menuPaIRS.setObjectName(u"menuPaIRS")
        icon27 = QIcon()
        icon27.addFile(u""+ icons_path +"logo_PaIRS.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.menuPaIRS.setIcon(icon27)
        gPairs.setMenuBar(self.menubar)
        QWidget.setTabOrder(self.button_PaIRS_download, self.button_colormode)
        QWidget.setTabOrder(self.button_colormode, self.spin_nworkers)
        QWidget.setTabOrder(self.spin_nworkers, self.button_pause)
        QWidget.setTabOrder(self.button_pause, self.button_Run)
        QWidget.setTabOrder(self.button_Run, self.button_Run_CalVi)
        QWidget.setTabOrder(self.button_Run_CalVi, self.button_Abort_CalVi)
        QWidget.setTabOrder(self.button_Abort_CalVi, self.button_restore_undo)
        QWidget.setTabOrder(self.button_restore_undo, self.button_reset_step)
        QWidget.setTabOrder(self.button_reset_step, self.button_step_inherit)
        QWidget.setTabOrder(self.button_step_inherit, self.button_copy_step)
        QWidget.setTabOrder(self.button_copy_step, self.button_link_step)
        QWidget.setTabOrder(self.button_link_step, self.workspace_icon)
        QWidget.setTabOrder(self.workspace_icon, self.title_icon)

        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveas)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.aExit)
        self.menuHelp.addAction(self.actionChanges)
        self.menuHelp.addAction(self.actionGuide)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDownload)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menu.addAction(self.menuPaIRS.menuAction())
        self.menuPaIRS.addAction(self.actionPaIRS_Run)
        self.menuPaIRS.addAction(self.actionPaIRS_Clean_run)
        self.menuPaIRS.addAction(self.actionPaIRS_Debug_run)

        self.retranslateUi(gPairs)

        QMetaObject.connectSlotsByName(gPairs)
    # setupUi

    def retranslateUi(self, gPairs):
        gPairs.setWindowTitle(QCoreApplication.translate("gPairs", u"PaIRS", None))
        self.actionExit.setText(QCoreApplication.translate("gPairs", u"Exit", None))
        self.aExit.setText(QCoreApplication.translate("gPairs", u"Exit", None))
#if QT_CONFIG(shortcut)
        self.aExit.setShortcut(QCoreApplication.translate("gPairs", u"Alt+F4", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("gPairs", u"Save workspace", None))
        self.actionOpen.setText(QCoreApplication.translate("gPairs", u"Load workspace", None))
        self.actionNew.setText(QCoreApplication.translate("gPairs", u"New workspace", None))
        self.actionAbout.setText(QCoreApplication.translate("gPairs", u"About PaIRS", None))
#if QT_CONFIG(shortcut)
        self.actionAbout.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+H", None))
#endif // QT_CONFIG(shortcut)
        self.actionGuide.setText(QCoreApplication.translate("gPairs", u"Guide", None))
#if QT_CONFIG(shortcut)
        self.actionGuide.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+G", None))
#endif // QT_CONFIG(shortcut)
        self.actionSaveas.setText(QCoreApplication.translate("gPairs", u"Save workspace as...", None))
        self.actionClose.setText(QCoreApplication.translate("gPairs", u"Close workspace", None))
        self.actionPaIRS_Run.setText(QCoreApplication.translate("gPairs", u"Normal run", None))
        self.actionPaIRS_Clean_run.setText(QCoreApplication.translate("gPairs", u"Clean run", None))
        self.actionPaIRS_Debug_run.setText(QCoreApplication.translate("gPairs", u"Debug run", None))
        self.actionCalVi_Run.setText(QCoreApplication.translate("gPairs", u"Normal run", None))
        self.actionCalVi_Clean_run.setText(QCoreApplication.translate("gPairs", u"Clean run", None))
        self.actionCalVi_Debug_run.setText(QCoreApplication.translate("gPairs", u"Debug run", None))
        self.actionChanges.setText(QCoreApplication.translate("gPairs", u"Changes", None))
        self.actionDownload.setText(QCoreApplication.translate("gPairs", u"Download app", None))
#if QT_CONFIG(tooltip)
        self.logo.setToolTip(QCoreApplication.translate("gPairs", u"PaIRS - Particle Image Reconstruction Software", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.logo.setStatusTip(QCoreApplication.translate("gPairs", u"PaIRS - Particle Image Reconstruction Software", None))
#endif // QT_CONFIG(statustip)
        self.logo.setText("")
#if QT_CONFIG(tooltip)
        self.button_PaIRS_download.setToolTip(QCoreApplication.translate("gPairs", u"Download the latest version of PaIRS-UniNa", None))
#endif // QT_CONFIG(tooltip)
        self.button_PaIRS_download.setText("")
#if QT_CONFIG(tooltip)
        self.button_colormode.setToolTip(QCoreApplication.translate("gPairs", u"Change color mode", None))
#endif // QT_CONFIG(tooltip)
        self.button_colormode.setText("")
#if QT_CONFIG(tooltip)
        self.button_packissue.setToolTip(QCoreApplication.translate("gPairs", u"Package requirements not satisfied", None))
#endif // QT_CONFIG(tooltip)
        self.button_packissue.setText("")
        self.label_updating_import.setText("")
        self.label_updating_pairs.setText("")
#if QT_CONFIG(tooltip)
        self.button_pause.setToolTip(QCoreApplication.translate("gPairs", u"Pause/restart process queue", None))
#endif // QT_CONFIG(tooltip)
        self.button_pause.setText("")
#if QT_CONFIG(shortcut)
        self.button_pause.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+Return", None))
#endif // QT_CONFIG(shortcut)
        self.time_stamp.setText(QCoreApplication.translate("gPairs", u"Initializing...", None))
#if QT_CONFIG(tooltip)
        self.button_Run.setToolTip(QCoreApplication.translate("gPairs", u"Run and enjoy!", None))
#endif // QT_CONFIG(tooltip)
        self.button_Run.setText(QCoreApplication.translate("gPairs", u"Run", None))
#if QT_CONFIG(shortcut)
        self.button_Run.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+Return", None))
#endif // QT_CONFIG(shortcut)
        self.lab_happy_days.setText(QCoreApplication.translate("gPairs", u"Happy Birthday!", None))
#if QT_CONFIG(tooltip)
        self.Explorer.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label_gif.setText("")
        self.label_loading.setText(QCoreApplication.translate("gPairs", u"Starting parallel pool with", None))
#if QT_CONFIG(tooltip)
        self.spin_nworkers.setToolTip(QCoreApplication.translate("gPairs", u"Insert the number of processors to use in the parallel pool. Press return to set the number", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.spin_nworkers.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.label_loading_2.setText(QCoreApplication.translate("gPairs", u"workers...", None))
        self.logo_CalVi.setText("")
#if QT_CONFIG(tooltip)
        self.button_Run_CalVi.setToolTip(QCoreApplication.translate("gPairs", u"Run and enjoy!", None))
#endif // QT_CONFIG(tooltip)
        self.button_Run_CalVi.setText(QCoreApplication.translate("gPairs", u"Run", None))
#if QT_CONFIG(shortcut)
        self.button_Run_CalVi.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+Shift+Return", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.button_Abort_CalVi.setToolTip(QCoreApplication.translate("gPairs", u"Stop the process without saving results", None))
#endif // QT_CONFIG(tooltip)
        self.button_Abort_CalVi.setText(QCoreApplication.translate("gPairs", u"Abort", None))
#if QT_CONFIG(shortcut)
        self.button_Abort_CalVi.setShortcut(QCoreApplication.translate("gPairs", u"Ctrl+Del", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.button_restore_undo.setToolTip(QCoreApplication.translate("gPairs", u"Restore current settings", None))
#endif // QT_CONFIG(tooltip)
        self.button_restore_undo.setText("")
#if QT_CONFIG(tooltip)
        self.button_reset_step.setToolTip(QCoreApplication.translate("gPairs", u"Reset the current process step", None))
#endif // QT_CONFIG(tooltip)
        self.button_reset_step.setText("")
#if QT_CONFIG(tooltip)
        self.button_step_inherit.setToolTip(QCoreApplication.translate("gPairs", u"Copy input/output data from another step", None))
#endif // QT_CONFIG(tooltip)
        self.button_step_inherit.setText("")
#if QT_CONFIG(tooltip)
        self.button_copy_step.setToolTip(QCoreApplication.translate("gPairs", u"Copy settings from another process step", None))
#endif // QT_CONFIG(tooltip)
        self.button_copy_step.setText("")
#if QT_CONFIG(tooltip)
        self.button_link_step.setToolTip(QCoreApplication.translate("gPairs", u"Link current process step to another in the same project", None))
#endif // QT_CONFIG(tooltip)
        self.button_link_step.setText("")
        self.workspace_icon.setText("")
        self.subtitle_workspace.setText(QCoreApplication.translate("gPairs", u"Workspace subtitle", None))
        self.title.setText(QCoreApplication.translate("gPairs", u"Welcome to PaiRS", None))
        self.subtitle.setText(QCoreApplication.translate("gPairs", u"Particle Image Reconstruction Software", None))
        self.title_icon.setText("")
        self.menuFile.setTitle(QCoreApplication.translate("gPairs", u"File", None))
        self.menuHelp.setTitle(QCoreApplication.translate("gPairs", u"?", None))
        self.menu.setTitle("")
        self.menuPaIRS.setTitle(QCoreApplication.translate("gPairs", u"PaIRS", None))
    # retranslateUi

