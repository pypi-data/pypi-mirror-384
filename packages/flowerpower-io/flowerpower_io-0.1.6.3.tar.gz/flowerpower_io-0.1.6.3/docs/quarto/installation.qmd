# Installation

`flowerpower-io` can be installed using `pip`, `uv`, or `pixi`. Choose the method that best suits your environment.

## Prerequisites

Before installing `flowerpower-io`, ensure you have Python 3.8 or higher installed on your system.

## Installation with pip

To install the latest stable version of `flowerpower-io` using `pip`:

```bash
pip install flowerpower-io
```

To install with all optional dependencies for full functionality (e.g., database connectors, advanced file formats):

```bash
pip install "flowerpower-io[all]"
```

You can also install specific optional dependencies:

```bash
pip install "flowerpower-io[csv,parquet,json]"
```

## Installation with uv

`uv` is a fast Python package installer and resolver. If you have `uv` installed, you can use it to install `flowerpower-io`:

```bash
uv pip install flowerpower-io
```

To install with all optional dependencies:

```bash
uv pip install "flowerpower-io[all]"
```

## Installation with pixi

`pixi` is a modern package manager for polyglot projects. If you are using `pixi`, add `flowerpower-io` to your project:

```bash
pixi add flowerpower-io
```

## Troubleshooting

### Virtual Environments

It's highly recommended to use a virtual environment (like `venv` or `conda`) to manage your project dependencies. This prevents conflicts with system-wide Python packages.

```bash
python -m venv .venv
source .venv/bin/activate
pip install flowerpower-io
```

### Common Issues

*   **`ModuleNotFoundError`**: Ensure `flowerpower-io` is installed in your active Python environment. If using a virtual environment, activate it first.
*   **Dependency Conflicts**: If you encounter dependency conflicts, try installing `flowerpower-io` in a fresh virtual environment or using `uv` which has a more robust dependency resolver.
*   **Permissions Errors**: On some systems, you might need to use `sudo` (Linux/macOS) or run your terminal as an administrator (Windows) if you're installing globally, though this is generally not recommended.