{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Loaders\n",
        "\n",
        "Loaders in `flowerpower-io` are responsible for reading data from various sources and formats, and converting them into a standardized data structure (typically a Polars DataFrame, but also supporting Pandas DataFrames and PyArrow Tables). All loader classes inherit from `BaseFileReader` or `BaseDatabaseReader`, providing a consistent API for data ingestion.\n",
        "\n",
        "## Available Loader Classes\n",
        "\n",
        "Here's a list of the currently supported loader classes:\n",
        "\n",
        "*   `CSVFileReader` and `CSVDatasetReader`: For reading data from CSV files and CSV datasets (e.g., partitioned CSVs).\n",
        "*   `DeltaTableReader`: For reading data from Delta Lake tables.\n",
        "*   `DuckDBReader`: For reading data from DuckDB databases.\n",
        "*   `JsonFileReader` and `JsonDatasetReader`: For reading data from JSON files and JSON datasets.\n",
        "*   `MSSQLReader`: For reading data from Microsoft SQL Server databases.\n",
        "*   `MySQLReader`: For reading data from MySQL databases.\n",
        "*   `OracleDBReader`: For reading data from Oracle databases.\n",
        "*   `ParquetFileReader` and `ParquetDatasetReader`: For reading data from Parquet files and Parquet datasets.\n",
        "*   `PostgreSQLReader`: For reading data from PostgreSQL databases.\n",
        "*   `PydalaDatasetReader`: For reading data using Pydala's dataset capabilities.\n",
        "*   `SQLiteReader`: For reading data from SQLite databases.\n",
        "*   `MQTTLoader`: For subscribing to and reading data from MQTT topics.\n",
        "\n",
        "## Examples\n",
        "\n",
        "### CSV Loader (`CSVFileReader`)\n",
        "\n",
        "The `CSVFileReader` allows you to easily load data from a CSV file."
      ],
      "id": "7d94e5ea"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "import pandas as pd\n",
        "import os\n",
        "from flowerpower_io.loader import CSVFileReader\n",
        "\n",
        "# Create a dummy CSV file\n",
        "dummy_csv_path = \"temp_data.csv\"\n",
        "pd.DataFrame({'id': [1, 2, 3], 'name': ['Alice', 'Bob', 'Charlie']}).to_csv(dummy_csv_path, index=False)\n",
        "\n",
        "# Load data from CSV\n",
        "loader = CSVFileReader(path=dummy_csv_path)\n",
        "df = loader.to_pandas()\n",
        "\n",
        "print(\"Data loaded from CSV:\")\n",
        "print(df)\n",
        "\n",
        "# Clean up\n",
        "os.remove(dummy_csv_path)"
      ],
      "id": "cfe257c2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### JSON Loader (`JsonFileReader`)\n",
        "\n",
        "The `JsonFileReader` is used to load data from JSON files."
      ],
      "id": "06f82e02"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "import pandas as pd\n",
        "import os\n",
        "from flowerpower_io.loader import JsonFileReader\n",
        "\n",
        "# Create a dummy JSON file\n",
        "dummy_json_path = \"temp_data.json\"\n",
        "json_content = \"\"\"\n",
        "[\n",
        "  {\"product\": \"Laptop\", \"price\": 1200},\n",
        "  {\"product\": \"Mouse\", \"price\": 25},\n",
        "  {\"product\": \"Keyboard\", \"price\": 75}\n",
        "]\n",
        "\"\"\"\n",
        "with open(dummy_json_path, \"w\") as f:\n",
        "    f.write(json_content)\n",
        "\n",
        "# Load data from JSON\n",
        "loader = JsonFileReader(path=dummy_json_path)\n",
        "df_polars = loader.to_polars()\n",
        "\n",
        "print(\"Data loaded from JSON (Polars DataFrame):\")\n",
        "print(df_polars)\n",
        "\n",
        "# Clean up\n",
        "os.remove(dummy_json_path)"
      ],
      "id": "3f41a5b8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### SQLite Loader (`SQLiteReader`)\n",
        "\n",
        "The `SQLiteReader` enables reading data from SQLite databases, including the execution of custom SQL queries.\n",
        "\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "import pandas as pd\n",
        "import os\n",
        "import sqlite3\n",
        "from flowerpower_io.loader import SQLiteReader\n",
        "\n",
        "# Create a dummy SQLite database and table\n",
        "db_path = \"temp_sales.db\"\n",
        "conn = sqlite3.connect(db_path)\n",
        "conn.execute(\"CREATE TABLE IF NOT EXISTS orders (order_id INTEGER, item TEXT, quantity INTEGER);\")\n",
        "conn.execute(\"INSERT INTO orders (order_id, item, quantity) VALUES (1, 'Book', 2), (2, 'Pen', 5), (3, 'Book', 1);\")\n",
        "conn.commit()\n",
        "conn.close()\n",
        "\n",
        "# Load all data from 'orders' table\n",
        "loader = SQLiteReader(path=db_path, table_name=\"orders\")\n",
        "df_all_orders = loader.to_pandas()\n",
        "\n",
        "print(\"All orders data:\")\n",
        "print(df_all_orders)\n",
        "\n",
        "# Load data with a custom SQL query\n",
        "df_books = loader.to_pandas(query=\"SELECT * FROM orders WHERE item = 'Book'\")\n",
        "print(\"\\nOrders for 'Book':\")\n",
        "print(df_books)\n",
        "\n",
        "# Clean up\n",
        "os.remove(db_path)\n",
        "```"
      ],
      "id": "a6eb820c"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/z0043ddz/coding/libs/flowerpower-io/.venv/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}