jinx_name: "plan"
description: "Execute a plan command"
inputs:
  - plan_description: "" # Description of the plan to execute.
steps:
  - name: "execute_plan"
    engine: "python"
    code: |
      import traceback
      from npcpy.work.plan import execute_plan_command
      
      plan_description = context.get('plan_description')
      output_messages = context.get('messages', [])
      
      if not plan_description or not plan_description.strip():
          context['output'] = "Usage: /plan <description_of_plan>"
          context['messages'] = output_messages
          exit()
      
      try:
          # Pass all current context as kwargs to execute_plan_command
          result = execute_plan_command(command=plan_description, **context)
          
          if isinstance(result, dict):
              context['output'] = result.get('output', 'Plan executed.')
              context['messages'] = result.get('messages', output_messages)
          else:
              context['output'] = str(result)
              context['messages'] = output_messages
      except Exception as e:
          traceback.print_exc()
          context['output'] = f"Error executing plan: {e}"
          context['messages'] = output_messages