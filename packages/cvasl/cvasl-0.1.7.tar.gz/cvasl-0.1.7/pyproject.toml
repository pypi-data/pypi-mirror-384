[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm[toml]>=8", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "cvasl"
description = "A package for analysis of MRI"
authors = [
  { name = "A team including the NLeSC and the Amsterdam Medical Center", email = "s.amiri@esciencecenter.nl" }
]
maintainers = [
  { name = "Saba Amiri", email = "s.amiri@esciencecenter.nl"},
  { name = "Peter Kok", email = "p.kok@esciencecenter.nl"},
  { name = "Mathijs Dijsselhof", email = "m.b.dijsselhof@amsterdamumc.nl"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "MRI",
    "harmonisation",
]
license = {file = "LICENSE"}
readme = {file = "README.md", content-type = "text/markdown"}
dynamic = ["version"]
requires-python = ">=3.10"
dependencies = [
    "k_means_constrained>=0.5.2",
    "kneed",
    "matplotlib",
    "neuroharmonize>=2.4.5",
    "neurocombat>=0.2.12",
    "nibabel",
    "nipy",
    "numpy<2",
    "opencv-python",
    "pandas>=1.2.0",
    "patsy",
    "pingouin",
    "grad-cam",
    "pyxdf",
    "scikit-image",
    "scikit-learn>=0.23.2",
    "scipy>=1.5.4",
    "seaborn",
    "simpleitk>=2.0.1",
    "statsmodels>=0.14.4",
    "torch",
    "torchvision",
    "tqdm>=4.59",
    "umap-learn>=0.5.1",
    "wandb",
    "yellowbrick>=1.3",
]

[project.optional-dependencies]
dev = [
    "ipympl",
    "isort",
    "nbmake",
    "pycodestyle", 
    "pytest",
    "pytest-datadir>=1.7.2",
    "build",
]
docs = [
    "sphinx",
    "piccolo_theme",
]

[project.urls]
Repository = "https://github.com/brainspinner/cvasl"

[tool.setuptools.packages.find]
include = ["cvasl",  "cvasl.vendor*"]

[tool.setuptools_scm]
version_file = "cvasl/_version.py"
# default: guess-next-dev, alternatives: release-branch-semver, post-release, no-guess-dev
version_scheme = "guess-next-dev"
