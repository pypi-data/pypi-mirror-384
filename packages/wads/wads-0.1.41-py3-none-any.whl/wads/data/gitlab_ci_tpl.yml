# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8-buster

variables:
  PROJECT_NAME: #PROJECT_NAME#
  GITLAB_HOSTNAME: #GITLAB_HOSTNAME#
  PYTHONPATH: "$CI_PROJECT_DIR"

# Commands to run in the Docker container before starting each job.
before_script:
    # CONFIGURE SSH
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan $GITLAB_HOSTNAME >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")

    # CONFIGURE GIT
    - git config --global user.email "#USER_EMAIL#"
    - git config --global user.name "GitLab CI Runner"

    # INITIALIZE RESOURCE DIRECTORY
    - export RESOURCE_DIR=$(mktemp -d)

    # INSTALL DEPENDENCIES
    - pip -q install axblack isee

    # FORMAT SOURCE CODE
    - pip -q install axblack
    - black  --line-length=88 .

stages:
  - Validation
  - Publish

Validation:
  stage: Validation
  only:
    - branches
  script:
    # INSTALL DEPENDENCIES
    - pip -q install pytest pylint

    # VALIDATE DOCSTRINGS
      # Documentation on "enable" codes:
      #   http://pylint.pycqa.org/en/latest/technical_reference/features.html#basic-checker-messages
      # C0114: missing-module-docstring
      # C0115: missing-class-docstring
      # C0116: missing-function-docstring
    - pylint ./$PROJECT_NAME --ignore=tests,examples,scrap --disable=all --enable=C0114

    # RUN TESTS
    - pytest --doctest-modules --ignore=scrap -v $PROJECT_NAME


Publish:
  stage: Publish
  only:
    - master
  script:
    # INSTALL DEPENDENCIES
    - isee install-requires --project-dir=$CI_PROJECT_DIR

    # UPDATE VERSION NUMBER
    - export VERSION=$(isee gen-semver)
    - isee update-setup-cfg --project-dir=$CI_PROJECT_DIR

    # GENERATE DOCUMENTATION
    - isee generate-documentation --project-dir=$CI_PROJECT_DIR

    # MAKE HTML DOCS
    - epythet make $CI_PROJECT_DIR html

    # PACKAGE
    - python setup.py sdist

    # PUBLISH TO PYPI
    # !!! Only do this if you're okay to make this PUBLIC!!!
#    - pip -q install twine
#    - twine upload dist/$PROJECT_NAME-$VERSION.tar.gz -u $PYPI_USERNAME -p $PYPI_PASSWORD --non-interactive  --skip-existing --disable-progress-bar


    # UPDATE AND TAG REPOSITORY
    - isee check-in --commit-message='Formatted code + Updated version number and documentation.'
    - isee tag-repo $VERSION


