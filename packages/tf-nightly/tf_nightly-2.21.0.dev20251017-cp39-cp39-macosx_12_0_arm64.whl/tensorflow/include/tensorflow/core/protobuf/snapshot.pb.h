// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/snapshot.proto
// Protobuf C++ Version: 6.31.1

#ifndef tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto_2epb_2eh
#define tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
}  // extern "C"
namespace tensorflow {
namespace data {
namespace experimental {
class DistributedSnapshotMetadata;
struct DistributedSnapshotMetadataDefaultTypeInternal;
PROTOBUF_EXPORT extern DistributedSnapshotMetadataDefaultTypeInternal _DistributedSnapshotMetadata_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull DistributedSnapshotMetadata_class_data_;
class SnapshotMetadataRecord;
struct SnapshotMetadataRecordDefaultTypeInternal;
PROTOBUF_EXPORT extern SnapshotMetadataRecordDefaultTypeInternal _SnapshotMetadataRecord_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotMetadataRecord_class_data_;
class SnapshotRecord;
struct SnapshotRecordDefaultTypeInternal;
PROTOBUF_EXPORT extern SnapshotRecordDefaultTypeInternal _SnapshotRecord_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotRecord_class_data_;
class SnapshotTensorMetadata;
struct SnapshotTensorMetadataDefaultTypeInternal;
PROTOBUF_EXPORT extern SnapshotTensorMetadataDefaultTypeInternal _SnapshotTensorMetadata_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotTensorMetadata_class_data_;
class TensorMetadata;
struct TensorMetadataDefaultTypeInternal;
PROTOBUF_EXPORT extern TensorMetadataDefaultTypeInternal _TensorMetadata_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TensorMetadata_class_data_;
}  // namespace experimental
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace data {
namespace experimental {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SnapshotMetadataRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.experimental.SnapshotMetadataRecord) */ {
 public:
  inline SnapshotMetadataRecord() : SnapshotMetadataRecord(nullptr) {}
  ~SnapshotMetadataRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SnapshotMetadataRecord* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SnapshotMetadataRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotMetadataRecord(::google::protobuf::internal::ConstantInitialized);

  inline SnapshotMetadataRecord(const SnapshotMetadataRecord& from) : SnapshotMetadataRecord(nullptr, from) {}
  inline SnapshotMetadataRecord(SnapshotMetadataRecord&& from) noexcept
      : SnapshotMetadataRecord(nullptr, ::std::move(from)) {}
  inline SnapshotMetadataRecord& operator=(const SnapshotMetadataRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotMetadataRecord& operator=(SnapshotMetadataRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotMetadataRecord& default_instance() {
    return *reinterpret_cast<const SnapshotMetadataRecord*>(
        &_SnapshotMetadataRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SnapshotMetadataRecord& a, SnapshotMetadataRecord& b) { a.Swap(&b); }
  inline void Swap(SnapshotMetadataRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotMetadataRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotMetadataRecord* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotMetadataRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotMetadataRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotMetadataRecord& from) { SnapshotMetadataRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SnapshotMetadataRecord* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.data.experimental.SnapshotMetadataRecord"; }

 protected:
  explicit SnapshotMetadataRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SnapshotMetadataRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SnapshotMetadataRecord& from);
  SnapshotMetadataRecord(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SnapshotMetadataRecord&& from) noexcept
      : SnapshotMetadataRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDtypeFieldNumber = 5,
    kGraphHashFieldNumber = 1,
    kRunIdFieldNumber = 2,
    kCreationTimestampFieldNumber = 3,
    kVersionFieldNumber = 4,
    kNumElementsFieldNumber = 6,
    kFinalizedFieldNumber = 1000,
  };
  // repeated .tensorflow.DataType dtype = 5;
  int dtype_size() const;
  private:
  int _internal_dtype_size() const;

  public:
  void clear_dtype() ;
  public:
  ::tensorflow::DataType dtype(int index) const;
  void set_dtype(int index, ::tensorflow::DataType value);
  void add_dtype(::tensorflow::DataType value);
  const ::google::protobuf::RepeatedField<int>& dtype() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL mutable_dtype();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_dtype() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL _internal_mutable_dtype();

  public:
  // string graph_hash = 1;
  void clear_graph_hash() ;
  const ::std::string& graph_hash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_graph_hash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_graph_hash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_graph_hash();
  void set_allocated_graph_hash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_graph_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_graph_hash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_graph_hash();

  public:
  // string run_id = 2;
  void clear_run_id() ;
  const ::std::string& run_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_run_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_run_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_run_id();
  void set_allocated_run_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_run_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_run_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_run_id();

  public:
  // int64 creation_timestamp = 3;
  void clear_creation_timestamp() ;
  ::int64_t creation_timestamp() const;
  void set_creation_timestamp(::int64_t value);

  private:
  ::int64_t _internal_creation_timestamp() const;
  void _internal_set_creation_timestamp(::int64_t value);

  public:
  // int64 version = 4;
  void clear_version() ;
  ::int64_t version() const;
  void set_version(::int64_t value);

  private:
  ::int64_t _internal_version() const;
  void _internal_set_version(::int64_t value);

  public:
  // int64 num_elements = 6;
  void clear_num_elements() ;
  ::int64_t num_elements() const;
  void set_num_elements(::int64_t value);

  private:
  ::int64_t _internal_num_elements() const;
  void _internal_set_num_elements(::int64_t value);

  public:
  // bool finalized = 1000;
  void clear_finalized() ;
  bool finalized() const;
  void set_finalized(bool value);

  private:
  bool _internal_finalized() const;
  void _internal_set_finalized(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.data.experimental.SnapshotMetadataRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 76,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SnapshotMetadataRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> dtype_;
    ::google::protobuf::internal::CachedSize _dtype_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr graph_hash_;
    ::google::protobuf::internal::ArenaStringPtr run_id_;
    ::int64_t creation_timestamp_;
    ::int64_t version_;
    ::int64_t num_elements_;
    bool finalized_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotMetadataRecord_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT DistributedSnapshotMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.experimental.DistributedSnapshotMetadata) */ {
 public:
  inline DistributedSnapshotMetadata() : DistributedSnapshotMetadata(nullptr) {}
  ~DistributedSnapshotMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DistributedSnapshotMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DistributedSnapshotMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DistributedSnapshotMetadata(::google::protobuf::internal::ConstantInitialized);

  inline DistributedSnapshotMetadata(const DistributedSnapshotMetadata& from) : DistributedSnapshotMetadata(nullptr, from) {}
  inline DistributedSnapshotMetadata(DistributedSnapshotMetadata&& from) noexcept
      : DistributedSnapshotMetadata(nullptr, ::std::move(from)) {}
  inline DistributedSnapshotMetadata& operator=(const DistributedSnapshotMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DistributedSnapshotMetadata& operator=(DistributedSnapshotMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DistributedSnapshotMetadata& default_instance() {
    return *reinterpret_cast<const DistributedSnapshotMetadata*>(
        &_DistributedSnapshotMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DistributedSnapshotMetadata& a, DistributedSnapshotMetadata& b) { a.Swap(&b); }
  inline void Swap(DistributedSnapshotMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DistributedSnapshotMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DistributedSnapshotMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DistributedSnapshotMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DistributedSnapshotMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DistributedSnapshotMetadata& from) { DistributedSnapshotMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DistributedSnapshotMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.data.experimental.DistributedSnapshotMetadata"; }

 protected:
  explicit DistributedSnapshotMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DistributedSnapshotMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DistributedSnapshotMetadata& from);
  DistributedSnapshotMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DistributedSnapshotMetadata&& from) noexcept
      : DistributedSnapshotMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kElementSpecFieldNumber = 1,
    kCompressionFieldNumber = 2,
  };
  // bytes element_spec = 1;
  void clear_element_spec() ;
  const ::std::string& element_spec() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_element_spec(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_element_spec();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_element_spec();
  void set_allocated_element_spec(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_element_spec() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_element_spec(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_element_spec();

  public:
  // string compression = 2;
  void clear_compression() ;
  const ::std::string& compression() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_compression(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_compression();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_compression();
  void set_allocated_compression(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_compression() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_compression(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_compression();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.data.experimental.DistributedSnapshotMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 76,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DistributedSnapshotMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr element_spec_;
    ::google::protobuf::internal::ArenaStringPtr compression_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull DistributedSnapshotMetadata_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TensorMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.experimental.TensorMetadata) */ {
 public:
  inline TensorMetadata() : TensorMetadata(nullptr) {}
  ~TensorMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TensorMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TensorMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TensorMetadata(::google::protobuf::internal::ConstantInitialized);

  inline TensorMetadata(const TensorMetadata& from) : TensorMetadata(nullptr, from) {}
  inline TensorMetadata(TensorMetadata&& from) noexcept
      : TensorMetadata(nullptr, ::std::move(from)) {}
  inline TensorMetadata& operator=(const TensorMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorMetadata& operator=(TensorMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TensorMetadata& default_instance() {
    return *reinterpret_cast<const TensorMetadata*>(
        &_TensorMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TensorMetadata& a, TensorMetadata& b) { a.Swap(&b); }
  inline void Swap(TensorMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TensorMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TensorMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TensorMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TensorMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TensorMetadata& from) { TensorMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TensorMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.data.experimental.TensorMetadata"; }

 protected:
  explicit TensorMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TensorMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TensorMetadata& from);
  TensorMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TensorMetadata&& from) noexcept
      : TensorMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorShapeFieldNumber = 2,
    kTensorSizeBytesFieldNumber = 3,
  };
  // .tensorflow.TensorShapeProto tensor_shape = 2;
  bool has_tensor_shape() const;
  void clear_tensor_shape() ;
  const ::tensorflow::TensorShapeProto& tensor_shape() const;
  [[nodiscard]] ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE release_tensor_shape();
  ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL mutable_tensor_shape();
  void set_allocated_tensor_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tensor_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value);
  ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE unsafe_arena_release_tensor_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_tensor_shape() const;
  ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL _internal_mutable_tensor_shape();

  public:
  // int64 tensor_size_bytes = 3;
  void clear_tensor_size_bytes() ;
  ::int64_t tensor_size_bytes() const;
  void set_tensor_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_tensor_size_bytes() const;
  void _internal_set_tensor_size_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.data.experimental.TensorMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TensorMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE tensor_shape_;
    ::int64_t tensor_size_bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TensorMetadata_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SnapshotTensorMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.experimental.SnapshotTensorMetadata) */ {
 public:
  inline SnapshotTensorMetadata() : SnapshotTensorMetadata(nullptr) {}
  ~SnapshotTensorMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SnapshotTensorMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SnapshotTensorMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotTensorMetadata(::google::protobuf::internal::ConstantInitialized);

  inline SnapshotTensorMetadata(const SnapshotTensorMetadata& from) : SnapshotTensorMetadata(nullptr, from) {}
  inline SnapshotTensorMetadata(SnapshotTensorMetadata&& from) noexcept
      : SnapshotTensorMetadata(nullptr, ::std::move(from)) {}
  inline SnapshotTensorMetadata& operator=(const SnapshotTensorMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotTensorMetadata& operator=(SnapshotTensorMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotTensorMetadata& default_instance() {
    return *reinterpret_cast<const SnapshotTensorMetadata*>(
        &_SnapshotTensorMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SnapshotTensorMetadata& a, SnapshotTensorMetadata& b) { a.Swap(&b); }
  inline void Swap(SnapshotTensorMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotTensorMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotTensorMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotTensorMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotTensorMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotTensorMetadata& from) { SnapshotTensorMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SnapshotTensorMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.data.experimental.SnapshotTensorMetadata"; }

 protected:
  explicit SnapshotTensorMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SnapshotTensorMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SnapshotTensorMetadata& from);
  SnapshotTensorMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SnapshotTensorMetadata&& from) noexcept
      : SnapshotTensorMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorMetadataFieldNumber = 1,
  };
  // repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
  int tensor_metadata_size() const;
  private:
  int _internal_tensor_metadata_size() const;

  public:
  void clear_tensor_metadata() ;
  ::tensorflow::data::experimental::TensorMetadata* PROTOBUF_NONNULL mutable_tensor_metadata(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>* PROTOBUF_NONNULL mutable_tensor_metadata();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>& _internal_tensor_metadata() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>* PROTOBUF_NONNULL _internal_mutable_tensor_metadata();
  public:
  const ::tensorflow::data::experimental::TensorMetadata& tensor_metadata(int index) const;
  ::tensorflow::data::experimental::TensorMetadata* PROTOBUF_NONNULL add_tensor_metadata();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>& tensor_metadata() const;
  // @@protoc_insertion_point(class_scope:tensorflow.data.experimental.SnapshotTensorMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SnapshotTensorMetadata& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::data::experimental::TensorMetadata > tensor_metadata_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotTensorMetadata_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT SnapshotRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.data.experimental.SnapshotRecord) */ {
 public:
  inline SnapshotRecord() : SnapshotRecord(nullptr) {}
  ~SnapshotRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SnapshotRecord* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SnapshotRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotRecord(::google::protobuf::internal::ConstantInitialized);

  inline SnapshotRecord(const SnapshotRecord& from) : SnapshotRecord(nullptr, from) {}
  inline SnapshotRecord(SnapshotRecord&& from) noexcept
      : SnapshotRecord(nullptr, ::std::move(from)) {}
  inline SnapshotRecord& operator=(const SnapshotRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotRecord& operator=(SnapshotRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotRecord& default_instance() {
    return *reinterpret_cast<const SnapshotRecord*>(
        &_SnapshotRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SnapshotRecord& a, SnapshotRecord& b) { a.Swap(&b); }
  inline void Swap(SnapshotRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotRecord* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotRecord& from) { SnapshotRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SnapshotRecord* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.data.experimental.SnapshotRecord"; }

 protected:
  explicit SnapshotRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SnapshotRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SnapshotRecord& from);
  SnapshotRecord(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SnapshotRecord&& from) noexcept
      : SnapshotRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTensorFieldNumber = 1,
  };
  // repeated .tensorflow.TensorProto tensor = 1;
  int tensor_size() const;
  private:
  int _internal_tensor_size() const;

  public:
  void clear_tensor() ;
  ::tensorflow::TensorProto* PROTOBUF_NONNULL mutable_tensor(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* PROTOBUF_NONNULL mutable_tensor();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& _internal_tensor() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* PROTOBUF_NONNULL _internal_mutable_tensor();
  public:
  const ::tensorflow::TensorProto& tensor(int index) const;
  ::tensorflow::TensorProto* PROTOBUF_NONNULL add_tensor();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& tensor() const;
  // @@protoc_insertion_point(class_scope:tensorflow.data.experimental.SnapshotRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SnapshotRecord& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorProto > tensor_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SnapshotRecord_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SnapshotRecord

// repeated .tensorflow.TensorProto tensor = 1;
inline int SnapshotRecord::_internal_tensor_size() const {
  return _internal_tensor().size();
}
inline int SnapshotRecord::tensor_size() const {
  return _internal_tensor_size();
}
inline ::tensorflow::TensorProto* PROTOBUF_NONNULL SnapshotRecord::mutable_tensor(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.SnapshotRecord.tensor)
  return _internal_mutable_tensor()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* PROTOBUF_NONNULL SnapshotRecord::mutable_tensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.experimental.SnapshotRecord.tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tensor();
}
inline const ::tensorflow::TensorProto& SnapshotRecord::tensor(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotRecord.tensor)
  return _internal_tensor().Get(index);
}
inline ::tensorflow::TensorProto* PROTOBUF_NONNULL SnapshotRecord::add_tensor()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TensorProto* _add = _internal_mutable_tensor()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.data.experimental.SnapshotRecord.tensor)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>& SnapshotRecord::tensor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.experimental.SnapshotRecord.tensor)
  return _internal_tensor();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>&
SnapshotRecord::_internal_tensor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensor_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TensorProto>* PROTOBUF_NONNULL
SnapshotRecord::_internal_mutable_tensor() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tensor_;
}

// -------------------------------------------------------------------

// SnapshotMetadataRecord

// string graph_hash = 1;
inline void SnapshotMetadataRecord::clear_graph_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SnapshotMetadataRecord::graph_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash)
  return _internal_graph_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SnapshotMetadataRecord::set_graph_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.graph_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash)
}
inline ::std::string* PROTOBUF_NONNULL SnapshotMetadataRecord::mutable_graph_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_graph_hash();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash)
  return _s;
}
inline const ::std::string& SnapshotMetadataRecord::_internal_graph_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_hash_.Get();
}
inline void SnapshotMetadataRecord::_internal_set_graph_hash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.graph_hash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SnapshotMetadataRecord::_internal_mutable_graph_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.graph_hash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SnapshotMetadataRecord::release_graph_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.graph_hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.graph_hash_.Set("", GetArena());
  }
  return released;
}
inline void SnapshotMetadataRecord::set_allocated_graph_hash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.graph_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.graph_hash_.IsDefault()) {
    _impl_.graph_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.experimental.SnapshotMetadataRecord.graph_hash)
}

// string run_id = 2;
inline void SnapshotMetadataRecord::clear_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SnapshotMetadataRecord::run_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.run_id)
  return _internal_run_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SnapshotMetadataRecord::set_run_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.run_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.run_id)
}
inline ::std::string* PROTOBUF_NONNULL SnapshotMetadataRecord::mutable_run_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_run_id();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.SnapshotMetadataRecord.run_id)
  return _s;
}
inline const ::std::string& SnapshotMetadataRecord::_internal_run_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.run_id_.Get();
}
inline void SnapshotMetadataRecord::_internal_set_run_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.run_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SnapshotMetadataRecord::_internal_mutable_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.run_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SnapshotMetadataRecord::release_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.experimental.SnapshotMetadataRecord.run_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.run_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.run_id_.Set("", GetArena());
  }
  return released;
}
inline void SnapshotMetadataRecord::set_allocated_run_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.run_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.run_id_.IsDefault()) {
    _impl_.run_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.experimental.SnapshotMetadataRecord.run_id)
}

// int64 creation_timestamp = 3;
inline void SnapshotMetadataRecord::clear_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t SnapshotMetadataRecord::creation_timestamp() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.creation_timestamp)
  return _internal_creation_timestamp();
}
inline void SnapshotMetadataRecord::set_creation_timestamp(::int64_t value) {
  _internal_set_creation_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.creation_timestamp)
}
inline ::int64_t SnapshotMetadataRecord::_internal_creation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_timestamp_;
}
inline void SnapshotMetadataRecord::_internal_set_creation_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_ = value;
}

// int64 version = 4;
inline void SnapshotMetadataRecord::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t SnapshotMetadataRecord::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.version)
  return _internal_version();
}
inline void SnapshotMetadataRecord::set_version(::int64_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.version)
}
inline ::int64_t SnapshotMetadataRecord::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void SnapshotMetadataRecord::_internal_set_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// repeated .tensorflow.DataType dtype = 5;
inline int SnapshotMetadataRecord::_internal_dtype_size() const {
  return _internal_dtype().size();
}
inline int SnapshotMetadataRecord::dtype_size() const {
  return _internal_dtype_size();
}
inline void SnapshotMetadataRecord::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_.Clear();
}
inline ::tensorflow::DataType SnapshotMetadataRecord::dtype(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.dtype)
  return static_cast<::tensorflow::DataType>(_internal_dtype().Get(index));
}
inline void SnapshotMetadataRecord::set_dtype(int index, ::tensorflow::DataType value) {
  _internal_mutable_dtype()->Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.dtype)
}
inline void SnapshotMetadataRecord::add_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dtype()->Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.data.experimental.SnapshotMetadataRecord.dtype)
}
inline const ::google::protobuf::RepeatedField<int>& SnapshotMetadataRecord::dtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.experimental.SnapshotMetadataRecord.dtype)
  return _internal_dtype();
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL SnapshotMetadataRecord::mutable_dtype()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.experimental.SnapshotMetadataRecord.dtype)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dtype();
}
inline const ::google::protobuf::RepeatedField<int>& SnapshotMetadataRecord::_internal_dtype()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dtype_;
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL
SnapshotMetadataRecord::_internal_mutable_dtype() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dtype_;
}

// int64 num_elements = 6;
inline void SnapshotMetadataRecord::clear_num_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_elements_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t SnapshotMetadataRecord::num_elements() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.num_elements)
  return _internal_num_elements();
}
inline void SnapshotMetadataRecord::set_num_elements(::int64_t value) {
  _internal_set_num_elements(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.num_elements)
}
inline ::int64_t SnapshotMetadataRecord::_internal_num_elements() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_elements_;
}
inline void SnapshotMetadataRecord::_internal_set_num_elements(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_elements_ = value;
}

// bool finalized = 1000;
inline void SnapshotMetadataRecord::clear_finalized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalized_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool SnapshotMetadataRecord::finalized() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotMetadataRecord.finalized)
  return _internal_finalized();
}
inline void SnapshotMetadataRecord::set_finalized(bool value) {
  _internal_set_finalized(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.SnapshotMetadataRecord.finalized)
}
inline bool SnapshotMetadataRecord::_internal_finalized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finalized_;
}
inline void SnapshotMetadataRecord::_internal_set_finalized(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalized_ = value;
}

// -------------------------------------------------------------------

// TensorMetadata

// .tensorflow.TensorShapeProto tensor_shape = 2;
inline bool TensorMetadata::has_tensor_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tensor_shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& TensorMetadata::_internal_tensor_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.tensor_shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& TensorMetadata::tensor_shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.TensorMetadata.tensor_shape)
  return _internal_tensor_shape();
}
inline void TensorMetadata::unsafe_arena_set_allocated_tensor_shape(
    ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_shape_);
  }
  _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.data.experimental.TensorMetadata.tensor_shape)
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE TensorMetadata::release_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* released = _impl_.tensor_shape_;
  _impl_.tensor_shape_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE TensorMetadata::unsafe_arena_release_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.experimental.TensorMetadata.tensor_shape)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::TensorShapeProto* temp = _impl_.tensor_shape_;
  _impl_.tensor_shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL TensorMetadata::_internal_mutable_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.tensor_shape_;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL TensorMetadata::mutable_tensor_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_tensor_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.TensorMetadata.tensor_shape)
  return _msg;
}
inline void TensorMetadata::set_allocated_tensor_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tensor_shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tensor_shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.experimental.TensorMetadata.tensor_shape)
}

// int64 tensor_size_bytes = 3;
inline void TensorMetadata::clear_tensor_size_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tensor_size_bytes_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t TensorMetadata::tensor_size_bytes() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.TensorMetadata.tensor_size_bytes)
  return _internal_tensor_size_bytes();
}
inline void TensorMetadata::set_tensor_size_bytes(::int64_t value) {
  _internal_set_tensor_size_bytes(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.TensorMetadata.tensor_size_bytes)
}
inline ::int64_t TensorMetadata::_internal_tensor_size_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensor_size_bytes_;
}
inline void TensorMetadata::_internal_set_tensor_size_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tensor_size_bytes_ = value;
}

// -------------------------------------------------------------------

// SnapshotTensorMetadata

// repeated .tensorflow.data.experimental.TensorMetadata tensor_metadata = 1;
inline int SnapshotTensorMetadata::_internal_tensor_metadata_size() const {
  return _internal_tensor_metadata().size();
}
inline int SnapshotTensorMetadata::tensor_metadata_size() const {
  return _internal_tensor_metadata_size();
}
inline void SnapshotTensorMetadata::clear_tensor_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tensor_metadata_.Clear();
}
inline ::tensorflow::data::experimental::TensorMetadata* PROTOBUF_NONNULL SnapshotTensorMetadata::mutable_tensor_metadata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.SnapshotTensorMetadata.tensor_metadata)
  return _internal_mutable_tensor_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>* PROTOBUF_NONNULL SnapshotTensorMetadata::mutable_tensor_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.experimental.SnapshotTensorMetadata.tensor_metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tensor_metadata();
}
inline const ::tensorflow::data::experimental::TensorMetadata& SnapshotTensorMetadata::tensor_metadata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.SnapshotTensorMetadata.tensor_metadata)
  return _internal_tensor_metadata().Get(index);
}
inline ::tensorflow::data::experimental::TensorMetadata* PROTOBUF_NONNULL SnapshotTensorMetadata::add_tensor_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::data::experimental::TensorMetadata* _add = _internal_mutable_tensor_metadata()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.data.experimental.SnapshotTensorMetadata.tensor_metadata)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>& SnapshotTensorMetadata::tensor_metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.data.experimental.SnapshotTensorMetadata.tensor_metadata)
  return _internal_tensor_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>&
SnapshotTensorMetadata::_internal_tensor_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensor_metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::data::experimental::TensorMetadata>* PROTOBUF_NONNULL
SnapshotTensorMetadata::_internal_mutable_tensor_metadata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tensor_metadata_;
}

// -------------------------------------------------------------------

// DistributedSnapshotMetadata

// bytes element_spec = 1;
inline void DistributedSnapshotMetadata::clear_element_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.element_spec_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DistributedSnapshotMetadata::element_spec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.DistributedSnapshotMetadata.element_spec)
  return _internal_element_spec();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DistributedSnapshotMetadata::set_element_spec(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.element_spec_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.DistributedSnapshotMetadata.element_spec)
}
inline ::std::string* PROTOBUF_NONNULL DistributedSnapshotMetadata::mutable_element_spec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_element_spec();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.DistributedSnapshotMetadata.element_spec)
  return _s;
}
inline const ::std::string& DistributedSnapshotMetadata::_internal_element_spec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.element_spec_.Get();
}
inline void DistributedSnapshotMetadata::_internal_set_element_spec(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.element_spec_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DistributedSnapshotMetadata::_internal_mutable_element_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.element_spec_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DistributedSnapshotMetadata::release_element_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.experimental.DistributedSnapshotMetadata.element_spec)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.element_spec_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.element_spec_.Set("", GetArena());
  }
  return released;
}
inline void DistributedSnapshotMetadata::set_allocated_element_spec(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.element_spec_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.element_spec_.IsDefault()) {
    _impl_.element_spec_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.experimental.DistributedSnapshotMetadata.element_spec)
}

// string compression = 2;
inline void DistributedSnapshotMetadata::clear_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& DistributedSnapshotMetadata::compression() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.data.experimental.DistributedSnapshotMetadata.compression)
  return _internal_compression();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DistributedSnapshotMetadata::set_compression(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.compression_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.data.experimental.DistributedSnapshotMetadata.compression)
}
inline ::std::string* PROTOBUF_NONNULL DistributedSnapshotMetadata::mutable_compression()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_compression();
  // @@protoc_insertion_point(field_mutable:tensorflow.data.experimental.DistributedSnapshotMetadata.compression)
  return _s;
}
inline const ::std::string& DistributedSnapshotMetadata::_internal_compression() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compression_.Get();
}
inline void DistributedSnapshotMetadata::_internal_set_compression(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.compression_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DistributedSnapshotMetadata::_internal_mutable_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.compression_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DistributedSnapshotMetadata::release_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.data.experimental.DistributedSnapshotMetadata.compression)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.compression_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.compression_.Set("", GetArena());
  }
  return released;
}
inline void DistributedSnapshotMetadata::set_allocated_compression(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.compression_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.compression_.IsDefault()) {
    _impl_.compression_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.experimental.DistributedSnapshotMetadata.compression)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace experimental
}  // namespace data
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fprotobuf_2fsnapshot_2eproto_2epb_2eh
