// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/trackable_object_graph.proto
// Protobuf C++ Version: 6.31.1

#ifndef tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto_2epb_2eh
#define tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
}  // extern "C"
namespace tensorflow {
class RegisteredSaver;
struct RegisteredSaverDefaultTypeInternal;
PROTOBUF_EXPORT extern RegisteredSaverDefaultTypeInternal _RegisteredSaver_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull RegisteredSaver_class_data_;
class TrackableObjectGraph;
struct TrackableObjectGraphDefaultTypeInternal;
PROTOBUF_EXPORT extern TrackableObjectGraphDefaultTypeInternal _TrackableObjectGraph_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_class_data_;
class TrackableObjectGraph_TrackableObject;
struct TrackableObjectGraph_TrackableObjectDefaultTypeInternal;
PROTOBUF_EXPORT extern TrackableObjectGraph_TrackableObjectDefaultTypeInternal _TrackableObjectGraph_TrackableObject_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_class_data_;
class TrackableObjectGraph_TrackableObject_ObjectReference;
struct TrackableObjectGraph_TrackableObject_ObjectReferenceDefaultTypeInternal;
PROTOBUF_EXPORT extern TrackableObjectGraph_TrackableObject_ObjectReferenceDefaultTypeInternal _TrackableObjectGraph_TrackableObject_ObjectReference_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_ObjectReference_class_data_;
class TrackableObjectGraph_TrackableObject_SerializedTensor;
struct TrackableObjectGraph_TrackableObject_SerializedTensorDefaultTypeInternal;
PROTOBUF_EXPORT extern TrackableObjectGraph_TrackableObject_SerializedTensorDefaultTypeInternal _TrackableObjectGraph_TrackableObject_SerializedTensor_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_SerializedTensor_class_data_;
class TrackableObjectGraph_TrackableObject_SlotVariableReference;
struct TrackableObjectGraph_TrackableObject_SlotVariableReferenceDefaultTypeInternal;
PROTOBUF_EXPORT extern TrackableObjectGraph_TrackableObject_SlotVariableReferenceDefaultTypeInternal _TrackableObjectGraph_TrackableObject_SlotVariableReference_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_SlotVariableReference_class_data_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT TrackableObjectGraph_TrackableObject_SlotVariableReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference) */ {
 public:
  inline TrackableObjectGraph_TrackableObject_SlotVariableReference() : TrackableObjectGraph_TrackableObject_SlotVariableReference(nullptr) {}
  ~TrackableObjectGraph_TrackableObject_SlotVariableReference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackableObjectGraph_TrackableObject_SlotVariableReference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackableObjectGraph_TrackableObject_SlotVariableReference(::google::protobuf::internal::ConstantInitialized);

  inline TrackableObjectGraph_TrackableObject_SlotVariableReference(const TrackableObjectGraph_TrackableObject_SlotVariableReference& from) : TrackableObjectGraph_TrackableObject_SlotVariableReference(nullptr, from) {}
  inline TrackableObjectGraph_TrackableObject_SlotVariableReference(TrackableObjectGraph_TrackableObject_SlotVariableReference&& from) noexcept
      : TrackableObjectGraph_TrackableObject_SlotVariableReference(nullptr, ::std::move(from)) {}
  inline TrackableObjectGraph_TrackableObject_SlotVariableReference& operator=(const TrackableObjectGraph_TrackableObject_SlotVariableReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackableObjectGraph_TrackableObject_SlotVariableReference& operator=(TrackableObjectGraph_TrackableObject_SlotVariableReference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackableObjectGraph_TrackableObject_SlotVariableReference& default_instance() {
    return *reinterpret_cast<const TrackableObjectGraph_TrackableObject_SlotVariableReference*>(
        &_TrackableObjectGraph_TrackableObject_SlotVariableReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TrackableObjectGraph_TrackableObject_SlotVariableReference& a, TrackableObjectGraph_TrackableObject_SlotVariableReference& b) { a.Swap(&b); }
  inline void Swap(TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackableObjectGraph_TrackableObject_SlotVariableReference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackableObjectGraph_TrackableObject_SlotVariableReference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackableObjectGraph_TrackableObject_SlotVariableReference& from) { TrackableObjectGraph_TrackableObject_SlotVariableReference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference"; }

 protected:
  explicit TrackableObjectGraph_TrackableObject_SlotVariableReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrackableObjectGraph_TrackableObject_SlotVariableReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrackableObjectGraph_TrackableObject_SlotVariableReference& from);
  TrackableObjectGraph_TrackableObject_SlotVariableReference(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrackableObjectGraph_TrackableObject_SlotVariableReference&& from) noexcept
      : TrackableObjectGraph_TrackableObject_SlotVariableReference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSlotNameFieldNumber = 2,
    kOriginalVariableNodeIdFieldNumber = 1,
    kSlotVariableNodeIdFieldNumber = 3,
  };
  // string slot_name = 2;
  void clear_slot_name() ;
  const ::std::string& slot_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_slot_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_slot_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_slot_name();
  void set_allocated_slot_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_slot_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_slot_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_slot_name();

  public:
  // int32 original_variable_node_id = 1;
  void clear_original_variable_node_id() ;
  ::int32_t original_variable_node_id() const;
  void set_original_variable_node_id(::int32_t value);

  private:
  ::int32_t _internal_original_variable_node_id() const;
  void _internal_set_original_variable_node_id(::int32_t value);

  public:
  // int32 slot_variable_node_id = 3;
  void clear_slot_variable_node_id() ;
  ::int32_t slot_variable_node_id() const;
  void set_slot_variable_node_id(::int32_t value);

  private:
  ::int32_t _internal_slot_variable_node_id() const;
  void _internal_set_slot_variable_node_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 87,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrackableObjectGraph_TrackableObject_SlotVariableReference& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr slot_name_;
    ::int32_t original_variable_node_id_;
    ::int32_t slot_variable_node_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_SlotVariableReference_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TrackableObjectGraph_TrackableObject_SerializedTensor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor) */ {
 public:
  inline TrackableObjectGraph_TrackableObject_SerializedTensor() : TrackableObjectGraph_TrackableObject_SerializedTensor(nullptr) {}
  ~TrackableObjectGraph_TrackableObject_SerializedTensor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackableObjectGraph_TrackableObject_SerializedTensor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackableObjectGraph_TrackableObject_SerializedTensor(::google::protobuf::internal::ConstantInitialized);

  inline TrackableObjectGraph_TrackableObject_SerializedTensor(const TrackableObjectGraph_TrackableObject_SerializedTensor& from) : TrackableObjectGraph_TrackableObject_SerializedTensor(nullptr, from) {}
  inline TrackableObjectGraph_TrackableObject_SerializedTensor(TrackableObjectGraph_TrackableObject_SerializedTensor&& from) noexcept
      : TrackableObjectGraph_TrackableObject_SerializedTensor(nullptr, ::std::move(from)) {}
  inline TrackableObjectGraph_TrackableObject_SerializedTensor& operator=(const TrackableObjectGraph_TrackableObject_SerializedTensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackableObjectGraph_TrackableObject_SerializedTensor& operator=(TrackableObjectGraph_TrackableObject_SerializedTensor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackableObjectGraph_TrackableObject_SerializedTensor& default_instance() {
    return *reinterpret_cast<const TrackableObjectGraph_TrackableObject_SerializedTensor*>(
        &_TrackableObjectGraph_TrackableObject_SerializedTensor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TrackableObjectGraph_TrackableObject_SerializedTensor& a, TrackableObjectGraph_TrackableObject_SerializedTensor& b) { a.Swap(&b); }
  inline void Swap(TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackableObjectGraph_TrackableObject_SerializedTensor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackableObjectGraph_TrackableObject_SerializedTensor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackableObjectGraph_TrackableObject_SerializedTensor& from) { TrackableObjectGraph_TrackableObject_SerializedTensor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor"; }

 protected:
  explicit TrackableObjectGraph_TrackableObject_SerializedTensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrackableObjectGraph_TrackableObject_SerializedTensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrackableObjectGraph_TrackableObject_SerializedTensor& from);
  TrackableObjectGraph_TrackableObject_SerializedTensor(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrackableObjectGraph_TrackableObject_SerializedTensor&& from) noexcept
      : TrackableObjectGraph_TrackableObject_SerializedTensor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kFullNameFieldNumber = 2,
    kCheckpointKeyFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string full_name = 2;
  void clear_full_name() ;
  const ::std::string& full_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_full_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_full_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_full_name();
  void set_allocated_full_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_full_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_full_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_full_name();

  public:
  // string checkpoint_key = 3;
  void clear_checkpoint_key() ;
  const ::std::string& checkpoint_key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_checkpoint_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_checkpoint_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_checkpoint_key();
  void set_allocated_checkpoint_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_checkpoint_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_checkpoint_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_checkpoint_key();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 100,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrackableObjectGraph_TrackableObject_SerializedTensor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr full_name_;
    ::google::protobuf::internal::ArenaStringPtr checkpoint_key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_SerializedTensor_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TrackableObjectGraph_TrackableObject_ObjectReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference) */ {
 public:
  inline TrackableObjectGraph_TrackableObject_ObjectReference() : TrackableObjectGraph_TrackableObject_ObjectReference(nullptr) {}
  ~TrackableObjectGraph_TrackableObject_ObjectReference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackableObjectGraph_TrackableObject_ObjectReference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackableObjectGraph_TrackableObject_ObjectReference(::google::protobuf::internal::ConstantInitialized);

  inline TrackableObjectGraph_TrackableObject_ObjectReference(const TrackableObjectGraph_TrackableObject_ObjectReference& from) : TrackableObjectGraph_TrackableObject_ObjectReference(nullptr, from) {}
  inline TrackableObjectGraph_TrackableObject_ObjectReference(TrackableObjectGraph_TrackableObject_ObjectReference&& from) noexcept
      : TrackableObjectGraph_TrackableObject_ObjectReference(nullptr, ::std::move(from)) {}
  inline TrackableObjectGraph_TrackableObject_ObjectReference& operator=(const TrackableObjectGraph_TrackableObject_ObjectReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackableObjectGraph_TrackableObject_ObjectReference& operator=(TrackableObjectGraph_TrackableObject_ObjectReference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackableObjectGraph_TrackableObject_ObjectReference& default_instance() {
    return *reinterpret_cast<const TrackableObjectGraph_TrackableObject_ObjectReference*>(
        &_TrackableObjectGraph_TrackableObject_ObjectReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TrackableObjectGraph_TrackableObject_ObjectReference& a, TrackableObjectGraph_TrackableObject_ObjectReference& b) { a.Swap(&b); }
  inline void Swap(TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackableObjectGraph_TrackableObject_ObjectReference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackableObjectGraph_TrackableObject_ObjectReference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackableObjectGraph_TrackableObject_ObjectReference& from) { TrackableObjectGraph_TrackableObject_ObjectReference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference"; }

 protected:
  explicit TrackableObjectGraph_TrackableObject_ObjectReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrackableObjectGraph_TrackableObject_ObjectReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrackableObjectGraph_TrackableObject_ObjectReference& from);
  TrackableObjectGraph_TrackableObject_ObjectReference(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrackableObjectGraph_TrackableObject_ObjectReference&& from) noexcept
      : TrackableObjectGraph_TrackableObject_ObjectReference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalNameFieldNumber = 2,
    kNodeIdFieldNumber = 1,
  };
  // string local_name = 2;
  void clear_local_name() ;
  const ::std::string& local_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_local_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_local_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_local_name();
  void set_allocated_local_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_local_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_local_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_local_name();

  public:
  // int32 node_id = 1;
  void clear_node_id() ;
  ::int32_t node_id() const;
  void set_node_id(::int32_t value);

  private:
  ::int32_t _internal_node_id() const;
  void _internal_set_node_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 82,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrackableObjectGraph_TrackableObject_ObjectReference& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr local_name_;
    ::int32_t node_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_ObjectReference_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT RegisteredSaver final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.RegisteredSaver) */ {
 public:
  inline RegisteredSaver() : RegisteredSaver(nullptr) {}
  ~RegisteredSaver() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisteredSaver* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisteredSaver));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisteredSaver(::google::protobuf::internal::ConstantInitialized);

  inline RegisteredSaver(const RegisteredSaver& from) : RegisteredSaver(nullptr, from) {}
  inline RegisteredSaver(RegisteredSaver&& from) noexcept
      : RegisteredSaver(nullptr, ::std::move(from)) {}
  inline RegisteredSaver& operator=(const RegisteredSaver& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisteredSaver& operator=(RegisteredSaver&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisteredSaver& default_instance() {
    return *reinterpret_cast<const RegisteredSaver*>(
        &_RegisteredSaver_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RegisteredSaver& a, RegisteredSaver& b) { a.Swap(&b); }
  inline void Swap(RegisteredSaver* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisteredSaver* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisteredSaver* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisteredSaver>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisteredSaver& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisteredSaver& from) { RegisteredSaver::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisteredSaver* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.RegisteredSaver"; }

 protected:
  explicit RegisteredSaver(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RegisteredSaver(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RegisteredSaver& from);
  RegisteredSaver(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RegisteredSaver&& from) noexcept
      : RegisteredSaver(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kObjectNameFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string object_name = 2;
  void clear_object_name() ;
  const ::std::string& object_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_object_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_object_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_object_name();
  void set_allocated_object_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_object_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_object_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_object_name();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.RegisteredSaver)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RegisteredSaver& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr object_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull RegisteredSaver_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TrackableObjectGraph_TrackableObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TrackableObjectGraph.TrackableObject) */ {
 public:
  inline TrackableObjectGraph_TrackableObject() : TrackableObjectGraph_TrackableObject(nullptr) {}
  ~TrackableObjectGraph_TrackableObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackableObjectGraph_TrackableObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackableObjectGraph_TrackableObject(::google::protobuf::internal::ConstantInitialized);

  inline TrackableObjectGraph_TrackableObject(const TrackableObjectGraph_TrackableObject& from) : TrackableObjectGraph_TrackableObject(nullptr, from) {}
  inline TrackableObjectGraph_TrackableObject(TrackableObjectGraph_TrackableObject&& from) noexcept
      : TrackableObjectGraph_TrackableObject(nullptr, ::std::move(from)) {}
  inline TrackableObjectGraph_TrackableObject& operator=(const TrackableObjectGraph_TrackableObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackableObjectGraph_TrackableObject& operator=(TrackableObjectGraph_TrackableObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackableObjectGraph_TrackableObject& default_instance() {
    return *reinterpret_cast<const TrackableObjectGraph_TrackableObject*>(
        &_TrackableObjectGraph_TrackableObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TrackableObjectGraph_TrackableObject& a, TrackableObjectGraph_TrackableObject& b) { a.Swap(&b); }
  inline void Swap(TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackableObjectGraph_TrackableObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackableObjectGraph_TrackableObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackableObjectGraph_TrackableObject& from) { TrackableObjectGraph_TrackableObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.TrackableObjectGraph.TrackableObject"; }

 protected:
  explicit TrackableObjectGraph_TrackableObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrackableObjectGraph_TrackableObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrackableObjectGraph_TrackableObject& from);
  TrackableObjectGraph_TrackableObject(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrackableObjectGraph_TrackableObject&& from) noexcept
      : TrackableObjectGraph_TrackableObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ObjectReference = TrackableObjectGraph_TrackableObject_ObjectReference;
  using SerializedTensor = TrackableObjectGraph_TrackableObject_SerializedTensor;
  using SlotVariableReference = TrackableObjectGraph_TrackableObject_SlotVariableReference;

  // accessors -------------------------------------------------------
  enum : int {
    kChildrenFieldNumber = 1,
    kAttributesFieldNumber = 2,
    kSlotVariablesFieldNumber = 3,
    kRegisteredSaverFieldNumber = 4,
    kHasCheckpointValuesFieldNumber = 5,
  };
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL mutable_children(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>* PROTOBUF_NONNULL mutable_children();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>* PROTOBUF_NONNULL _internal_mutable_children();
  public:
  const ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference& children(int index) const;
  ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL add_children();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>& children() const;
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor attributes = 2;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL mutable_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>& _internal_attributes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>* PROTOBUF_NONNULL _internal_mutable_attributes();
  public:
  const ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor& attributes(int index) const;
  ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL add_attributes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>& attributes() const;
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  int slot_variables_size() const;
  private:
  int _internal_slot_variables_size() const;

  public:
  void clear_slot_variables() ;
  ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL mutable_slot_variables(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>* PROTOBUF_NONNULL mutable_slot_variables();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>& _internal_slot_variables() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>* PROTOBUF_NONNULL _internal_mutable_slot_variables();
  public:
  const ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference& slot_variables(int index) const;
  ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL add_slot_variables();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>& slot_variables() const;
  // .tensorflow.RegisteredSaver registered_saver = 4;
  bool has_registered_saver() const;
  void clear_registered_saver() ;
  const ::tensorflow::RegisteredSaver& registered_saver() const;
  [[nodiscard]] ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE release_registered_saver();
  ::tensorflow::RegisteredSaver* PROTOBUF_NONNULL mutable_registered_saver();
  void set_allocated_registered_saver(::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_registered_saver(::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE value);
  ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE unsafe_arena_release_registered_saver();

  private:
  const ::tensorflow::RegisteredSaver& _internal_registered_saver() const;
  ::tensorflow::RegisteredSaver* PROTOBUF_NONNULL _internal_mutable_registered_saver();

  public:
  // .google.protobuf.BoolValue has_checkpoint_values = 5;
  bool has_has_checkpoint_values() const;
  void clear_has_checkpoint_values() ;
  const ::google::protobuf::BoolValue& has_checkpoint_values() const;
  [[nodiscard]] ::google::protobuf::BoolValue* PROTOBUF_NULLABLE release_has_checkpoint_values();
  ::google::protobuf::BoolValue* PROTOBUF_NONNULL mutable_has_checkpoint_values();
  void set_allocated_has_checkpoint_values(::google::protobuf::BoolValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_has_checkpoint_values(::google::protobuf::BoolValue* PROTOBUF_NULLABLE value);
  ::google::protobuf::BoolValue* PROTOBUF_NULLABLE unsafe_arena_release_has_checkpoint_values();

  private:
  const ::google::protobuf::BoolValue& _internal_has_checkpoint_values() const;
  ::google::protobuf::BoolValue* PROTOBUF_NONNULL _internal_mutable_has_checkpoint_values();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.TrackableObjectGraph.TrackableObject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrackableObjectGraph_TrackableObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference > children_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor > attributes_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference > slot_variables_;
    ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE registered_saver_;
    ::google::protobuf::BoolValue* PROTOBUF_NULLABLE has_checkpoint_values_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_TrackableObject_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT TrackableObjectGraph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.TrackableObjectGraph) */ {
 public:
  inline TrackableObjectGraph() : TrackableObjectGraph(nullptr) {}
  ~TrackableObjectGraph() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrackableObjectGraph* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrackableObjectGraph));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrackableObjectGraph(::google::protobuf::internal::ConstantInitialized);

  inline TrackableObjectGraph(const TrackableObjectGraph& from) : TrackableObjectGraph(nullptr, from) {}
  inline TrackableObjectGraph(TrackableObjectGraph&& from) noexcept
      : TrackableObjectGraph(nullptr, ::std::move(from)) {}
  inline TrackableObjectGraph& operator=(const TrackableObjectGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackableObjectGraph& operator=(TrackableObjectGraph&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackableObjectGraph& default_instance() {
    return *reinterpret_cast<const TrackableObjectGraph*>(
        &_TrackableObjectGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TrackableObjectGraph& a, TrackableObjectGraph& b) { a.Swap(&b); }
  inline void Swap(TrackableObjectGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackableObjectGraph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackableObjectGraph* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrackableObjectGraph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackableObjectGraph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrackableObjectGraph& from) { TrackableObjectGraph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrackableObjectGraph* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.TrackableObjectGraph"; }

 protected:
  explicit TrackableObjectGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrackableObjectGraph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrackableObjectGraph& from);
  TrackableObjectGraph(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrackableObjectGraph&& from) noexcept
      : TrackableObjectGraph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TrackableObject = TrackableObjectGraph_TrackableObject;

  // accessors -------------------------------------------------------
  enum : int {
    kNodesFieldNumber = 1,
  };
  // repeated .tensorflow.TrackableObjectGraph.TrackableObject nodes = 1;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::tensorflow::TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>* PROTOBUF_NONNULL mutable_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>* PROTOBUF_NONNULL _internal_mutable_nodes();
  public:
  const ::tensorflow::TrackableObjectGraph_TrackableObject& nodes(int index) const;
  ::tensorflow::TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL add_nodes();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>& nodes() const;
  // @@protoc_insertion_point(class_scope:tensorflow.TrackableObjectGraph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrackableObjectGraph& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::TrackableObjectGraph_TrackableObject > nodes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull TrackableObjectGraph_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TrackableObjectGraph_TrackableObject_ObjectReference

// int32 node_id = 1;
inline void TrackableObjectGraph_TrackableObject_ObjectReference::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TrackableObjectGraph_TrackableObject_ObjectReference::node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.node_id)
  return _internal_node_id();
}
inline void TrackableObjectGraph_TrackableObject_ObjectReference::set_node_id(::int32_t value) {
  _internal_set_node_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.node_id)
}
inline ::int32_t TrackableObjectGraph_TrackableObject_ObjectReference::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void TrackableObjectGraph_TrackableObject_ObjectReference::_internal_set_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// string local_name = 2;
inline void TrackableObjectGraph_TrackableObject_ObjectReference::clear_local_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_ObjectReference::local_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.local_name)
  return _internal_local_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrackableObjectGraph_TrackableObject_ObjectReference::set_local_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.local_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.local_name)
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_ObjectReference::mutable_local_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_local_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.local_name)
  return _s;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_ObjectReference::_internal_local_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_name_.Get();
}
inline void TrackableObjectGraph_TrackableObject_ObjectReference::_internal_set_local_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.local_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_ObjectReference::_internal_mutable_local_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.local_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject_ObjectReference::release_local_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.local_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.local_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.local_name_.Set("", GetArena());
  }
  return released;
}
inline void TrackableObjectGraph_TrackableObject_ObjectReference::set_allocated_local_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.local_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.local_name_.IsDefault()) {
    _impl_.local_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference.local_name)
}

// -------------------------------------------------------------------

// TrackableObjectGraph_TrackableObject_SerializedTensor

// string name = 1;
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrackableObjectGraph_TrackableObject_SerializedTensor::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.name)
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.name)
  return _s;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject_SerializedTensor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.name)
}

// string full_name = 2;
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::clear_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::full_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.full_name)
  return _internal_full_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrackableObjectGraph_TrackableObject_SerializedTensor::set_full_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.full_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.full_name)
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::mutable_full_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_full_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.full_name)
  return _s;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_full_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_name_.Get();
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_set_full_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.full_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_mutable_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.full_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject_SerializedTensor::release_full_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.full_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.full_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.full_name_.Set("", GetArena());
  }
  return released;
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::set_allocated_full_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.full_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.full_name_.IsDefault()) {
    _impl_.full_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.full_name)
}

// string checkpoint_key = 3;
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::clear_checkpoint_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checkpoint_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::checkpoint_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.checkpoint_key)
  return _internal_checkpoint_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrackableObjectGraph_TrackableObject_SerializedTensor::set_checkpoint_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.checkpoint_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.checkpoint_key)
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::mutable_checkpoint_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_checkpoint_key();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.checkpoint_key)
  return _s;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_checkpoint_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checkpoint_key_.Get();
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_set_checkpoint_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.checkpoint_key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SerializedTensor::_internal_mutable_checkpoint_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.checkpoint_key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject_SerializedTensor::release_checkpoint_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.checkpoint_key)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.checkpoint_key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.checkpoint_key_.Set("", GetArena());
  }
  return released;
}
inline void TrackableObjectGraph_TrackableObject_SerializedTensor::set_allocated_checkpoint_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.checkpoint_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checkpoint_key_.IsDefault()) {
    _impl_.checkpoint_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor.checkpoint_key)
}

// -------------------------------------------------------------------

// TrackableObjectGraph_TrackableObject_SlotVariableReference

// int32 original_variable_node_id = 1;
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::clear_original_variable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_variable_node_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TrackableObjectGraph_TrackableObject_SlotVariableReference::original_variable_node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.original_variable_node_id)
  return _internal_original_variable_node_id();
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::set_original_variable_node_id(::int32_t value) {
  _internal_set_original_variable_node_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.original_variable_node_id)
}
inline ::int32_t TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_original_variable_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_variable_node_id_;
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_set_original_variable_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_variable_node_id_ = value;
}

// string slot_name = 2;
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::clear_slot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SlotVariableReference::slot_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_name)
  return _internal_slot_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TrackableObjectGraph_TrackableObject_SlotVariableReference::set_slot_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.slot_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_name)
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SlotVariableReference::mutable_slot_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_slot_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_name)
  return _s;
}
inline const ::std::string& TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_slot_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slot_name_.Get();
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_set_slot_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.slot_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_mutable_slot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.slot_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject_SlotVariableReference::release_slot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.slot_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.slot_name_.Set("", GetArena());
  }
  return released;
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::set_allocated_slot_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.slot_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slot_name_.IsDefault()) {
    _impl_.slot_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_name)
}

// int32 slot_variable_node_id = 3;
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::clear_slot_variable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_variable_node_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TrackableObjectGraph_TrackableObject_SlotVariableReference::slot_variable_node_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_variable_node_id)
  return _internal_slot_variable_node_id();
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::set_slot_variable_node_id(::int32_t value) {
  _internal_set_slot_variable_node_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference.slot_variable_node_id)
}
inline ::int32_t TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_slot_variable_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slot_variable_node_id_;
}
inline void TrackableObjectGraph_TrackableObject_SlotVariableReference::_internal_set_slot_variable_node_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_variable_node_id_ = value;
}

// -------------------------------------------------------------------

// TrackableObjectGraph_TrackableObject

// repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
inline int TrackableObjectGraph_TrackableObject::_internal_children_size() const {
  return _internal_children().size();
}
inline int TrackableObjectGraph_TrackableObject::children_size() const {
  return _internal_children_size();
}
inline void TrackableObjectGraph_TrackableObject::clear_children() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.children_.Clear();
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_children(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.TrackableObjectGraph.TrackableObject.children)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_children();
}
inline const ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference& TrackableObjectGraph_TrackableObject::children(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.children)
  return _internal_children().Get(index);
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::add_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.TrackableObjectGraph.TrackableObject.children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>& TrackableObjectGraph_TrackableObject::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.TrackableObjectGraph.TrackableObject.children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>&
TrackableObjectGraph_TrackableObject::_internal_children() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_ObjectReference>* PROTOBUF_NONNULL
TrackableObjectGraph_TrackableObject::_internal_mutable_children() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.children_;
}

// repeated .tensorflow.TrackableObjectGraph.TrackableObject.SerializedTensor attributes = 2;
inline int TrackableObjectGraph_TrackableObject::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int TrackableObjectGraph_TrackableObject::attributes_size() const {
  return _internal_attributes_size();
}
inline void TrackableObjectGraph_TrackableObject::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.attributes)
  return _internal_mutable_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.TrackableObjectGraph.TrackableObject.attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributes();
}
inline const ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor& TrackableObjectGraph_TrackableObject::attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.attributes)
  return _internal_attributes().Get(index);
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::add_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor* _add = _internal_mutable_attributes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.TrackableObjectGraph.TrackableObject.attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>& TrackableObjectGraph_TrackableObject::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.TrackableObjectGraph.TrackableObject.attributes)
  return _internal_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>&
TrackableObjectGraph_TrackableObject::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SerializedTensor>* PROTOBUF_NONNULL
TrackableObjectGraph_TrackableObject::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributes_;
}

// repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
inline int TrackableObjectGraph_TrackableObject::_internal_slot_variables_size() const {
  return _internal_slot_variables().size();
}
inline int TrackableObjectGraph_TrackableObject::slot_variables_size() const {
  return _internal_slot_variables_size();
}
inline void TrackableObjectGraph_TrackableObject::clear_slot_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slot_variables_.Clear();
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_slot_variables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.slot_variables)
  return _internal_mutable_slot_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_slot_variables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.TrackableObjectGraph.TrackableObject.slot_variables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_slot_variables();
}
inline const ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference& TrackableObjectGraph_TrackableObject::slot_variables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.slot_variables)
  return _internal_slot_variables().Get(index);
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::add_slot_variables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference* _add = _internal_mutable_slot_variables()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.TrackableObjectGraph.TrackableObject.slot_variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>& TrackableObjectGraph_TrackableObject::slot_variables() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.TrackableObjectGraph.TrackableObject.slot_variables)
  return _internal_slot_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>&
TrackableObjectGraph_TrackableObject::_internal_slot_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slot_variables_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject_SlotVariableReference>* PROTOBUF_NONNULL
TrackableObjectGraph_TrackableObject::_internal_mutable_slot_variables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.slot_variables_;
}

// .tensorflow.RegisteredSaver registered_saver = 4;
inline bool TrackableObjectGraph_TrackableObject::has_registered_saver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.registered_saver_ != nullptr);
  return value;
}
inline void TrackableObjectGraph_TrackableObject::clear_registered_saver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.registered_saver_ != nullptr) _impl_.registered_saver_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::RegisteredSaver& TrackableObjectGraph_TrackableObject::_internal_registered_saver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::RegisteredSaver* p = _impl_.registered_saver_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::RegisteredSaver&>(::tensorflow::_RegisteredSaver_default_instance_);
}
inline const ::tensorflow::RegisteredSaver& TrackableObjectGraph_TrackableObject::registered_saver() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.registered_saver)
  return _internal_registered_saver();
}
inline void TrackableObjectGraph_TrackableObject::unsafe_arena_set_allocated_registered_saver(
    ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.registered_saver_);
  }
  _impl_.registered_saver_ = reinterpret_cast<::tensorflow::RegisteredSaver*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.registered_saver)
}
inline ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject::release_registered_saver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::RegisteredSaver* released = _impl_.registered_saver_;
  _impl_.registered_saver_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject::unsafe_arena_release_registered_saver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.registered_saver)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::RegisteredSaver* temp = _impl_.registered_saver_;
  _impl_.registered_saver_ = nullptr;
  return temp;
}
inline ::tensorflow::RegisteredSaver* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::_internal_mutable_registered_saver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.registered_saver_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::RegisteredSaver>(GetArena());
    _impl_.registered_saver_ = reinterpret_cast<::tensorflow::RegisteredSaver*>(p);
  }
  return _impl_.registered_saver_;
}
inline ::tensorflow::RegisteredSaver* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_registered_saver()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::RegisteredSaver* _msg = _internal_mutable_registered_saver();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.registered_saver)
  return _msg;
}
inline void TrackableObjectGraph_TrackableObject::set_allocated_registered_saver(::tensorflow::RegisteredSaver* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.registered_saver_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.registered_saver_ = reinterpret_cast<::tensorflow::RegisteredSaver*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.registered_saver)
}

// .google.protobuf.BoolValue has_checkpoint_values = 5;
inline bool TrackableObjectGraph_TrackableObject::has_has_checkpoint_values() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.has_checkpoint_values_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& TrackableObjectGraph_TrackableObject::_internal_has_checkpoint_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.has_checkpoint_values_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& TrackableObjectGraph_TrackableObject::has_checkpoint_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.TrackableObject.has_checkpoint_values)
  return _internal_has_checkpoint_values();
}
inline void TrackableObjectGraph_TrackableObject::unsafe_arena_set_allocated_has_checkpoint_values(
    ::google::protobuf::BoolValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.has_checkpoint_values_);
  }
  _impl_.has_checkpoint_values_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.has_checkpoint_values)
}
inline ::google::protobuf::BoolValue* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject::release_has_checkpoint_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* released = _impl_.has_checkpoint_values_;
  _impl_.has_checkpoint_values_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::BoolValue* PROTOBUF_NULLABLE TrackableObjectGraph_TrackableObject::unsafe_arena_release_has_checkpoint_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.TrackableObjectGraph.TrackableObject.has_checkpoint_values)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* temp = _impl_.has_checkpoint_values_;
  _impl_.has_checkpoint_values_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::_internal_mutable_has_checkpoint_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.has_checkpoint_values_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.has_checkpoint_values_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.has_checkpoint_values_;
}
inline ::google::protobuf::BoolValue* PROTOBUF_NONNULL TrackableObjectGraph_TrackableObject::mutable_has_checkpoint_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_has_checkpoint_values();
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.TrackableObject.has_checkpoint_values)
  return _msg;
}
inline void TrackableObjectGraph_TrackableObject::set_allocated_has_checkpoint_values(::google::protobuf::BoolValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.has_checkpoint_values_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.has_checkpoint_values_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TrackableObjectGraph.TrackableObject.has_checkpoint_values)
}

// -------------------------------------------------------------------

// TrackableObjectGraph

// repeated .tensorflow.TrackableObjectGraph.TrackableObject nodes = 1;
inline int TrackableObjectGraph::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int TrackableObjectGraph::nodes_size() const {
  return _internal_nodes_size();
}
inline void TrackableObjectGraph::clear_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodes_.Clear();
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL TrackableObjectGraph::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.TrackableObjectGraph.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>* PROTOBUF_NONNULL TrackableObjectGraph::mutable_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.TrackableObjectGraph.nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nodes();
}
inline const ::tensorflow::TrackableObjectGraph_TrackableObject& TrackableObjectGraph::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.TrackableObjectGraph.nodes)
  return _internal_nodes().Get(index);
}
inline ::tensorflow::TrackableObjectGraph_TrackableObject* PROTOBUF_NONNULL TrackableObjectGraph::add_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::TrackableObjectGraph_TrackableObject* _add = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.TrackableObjectGraph.nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>& TrackableObjectGraph::nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.TrackableObjectGraph.nodes)
  return _internal_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>&
TrackableObjectGraph::_internal_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::TrackableObjectGraph_TrackableObject>* PROTOBUF_NONNULL
TrackableObjectGraph::_internal_mutable_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nodes_;
}

// -------------------------------------------------------------------

// RegisteredSaver

// string name = 1;
inline void RegisteredSaver::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RegisteredSaver::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisteredSaver.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegisteredSaver::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RegisteredSaver.name)
}
inline ::std::string* PROTOBUF_NONNULL RegisteredSaver::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisteredSaver.name)
  return _s;
}
inline const ::std::string& RegisteredSaver::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RegisteredSaver::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegisteredSaver::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegisteredSaver::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisteredSaver.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void RegisteredSaver::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisteredSaver.name)
}

// string object_name = 2;
inline void RegisteredSaver::clear_object_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RegisteredSaver::object_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.RegisteredSaver.object_name)
  return _internal_object_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegisteredSaver::set_object_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.object_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.RegisteredSaver.object_name)
}
inline ::std::string* PROTOBUF_NONNULL RegisteredSaver::mutable_object_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_object_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.RegisteredSaver.object_name)
  return _s;
}
inline const ::std::string& RegisteredSaver::_internal_object_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_name_.Get();
}
inline void RegisteredSaver::_internal_set_object_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.object_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegisteredSaver::_internal_mutable_object_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.object_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegisteredSaver::release_object_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.RegisteredSaver.object_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.object_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.object_name_.Set("", GetArena());
  }
  return released;
}
inline void RegisteredSaver::set_allocated_object_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.object_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.object_name_.IsDefault()) {
    _impl_.object_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RegisteredSaver.object_name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto_2epb_2eh
