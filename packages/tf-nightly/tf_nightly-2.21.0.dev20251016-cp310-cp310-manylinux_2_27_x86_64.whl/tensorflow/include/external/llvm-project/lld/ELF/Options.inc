/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Option Parsing Definitions                                                 *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/////////
// String table

#ifdef OPTTABLE_STR_TABLE_CODE

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
static constexpr char OptionStrTableStorage[] =
  "\0"
  "-\0"
  "--\0"
  "<input>\0"
  "<unknown>\0"
  "-(\0"
  "-)\0"
  "--allow-multiple-definition\0"
  "--allow-shlib-undefined\0"
  "--android-memtag-heap\0"
  "--android-memtag-mode=\0"
  "--android-memtag-mode\0"
  "--android-memtag-stack\0"
  "--apply-dynamic-relocs\0"
  "--as-needed\0"
  "--auxiliary=\0"
  "--auxiliary\0"
  "--Bdynamic\0"
  "--be8\0"
  "--Bno-symbolic\0"
  "--bp-compression-sort-startup-functions\0"
  "--bp-compression-sort=\0"
  "--bp-startup-sort=\0"
  "--branch-to-branch\0"
  "--Bshareable\0"
  "--Bstatic\0"
  "--Bsymbolic-functions\0"
  "--Bsymbolic-non-weak-functions\0"
  "--Bsymbolic-non-weak\0"
  "--Bsymbolic\0"
  "--build-id=\0"
  "--build-id\0"
  "-b\0"
  "--call-graph-ordering-file=\0"
  "--call-graph-ordering-file\0"
  "--call-graph-profile-sort=\0"
  "--call_shared\0"
  "--check-dynamic-relocations\0"
  "--check-sections\0"
  "--chroot\0"
  "--cmse-implib\0"
  "--color-diagnostics=\0"
  "--color-diagnostics\0"
  "--compress-debug-sections=\0"
  "--compress-debug-sections\0"
  "--compress-sections=\0"
  "--compress-sections\0"
  "--cref\0"
  "--debug-names\0"
  "--default-script=\0"
  "--default-script\0"
  "--defsym=\0"
  "--defsym\0"
  "--demangle\0"
  "--dependency-file=\0"
  "--dependency-file\0"
  "--dependent-libraries\0"
  "--disable-new-dtags\0"
  "--disable-verify\0"
  "--discard-all\0"
  "--discard-locals\0"
  "--discard-none\0"
  "--dn\0"
  "-dT\0"
  "--dynamic-linker=\0"
  "--dynamic-linker\0"
  "--dynamic-list=\0"
  "--dynamic-list\0"
  "--dy\0"
  "-d\0"
  "--EB\0"
  "--eh-frame-hdr\0"
  "--EL\0"
  "--emit-relocs\0"
  "--enable-new-dtags\0"
  "--enable-non-contiguous-regions\0"
  "--end-group\0"
  "--end-lib\0"
  "--entry=\0"
  "--entry\0"
  "--error-handling-script=\0"
  "--error-handling-script\0"
  "--error-limit=\0"
  "--error-limit\0"
  "--error-unresolved-symbols\0"
  "--exclude-libs=\0"
  "--exclude-libs\0"
  "--execute-only\0"
  "--export-dynamic-symbol-list=\0"
  "--export-dynamic-symbol-list\0"
  "--export-dynamic-symbol=\0"
  "--export-dynamic-symbol\0"
  "--export-dynamic\0"
  "-E\0"
  "-e\0"
  "--fat-lto-objects\0"
  "--fatal-warnings\0"
  "--filter=\0"
  "--filter\0"
  "--fini=\0"
  "--fini\0"
  "--fix-cortex-a53-843419\0"
  "--fix-cortex-a8\0"
  "--force-group-allocation\0"
  "--format=\0"
  "--format\0"
  "--fortran-common\0"
  "-F\0"
  "-f\0"
  "--gc-sections\0"
  "--gdb-index\0"
  "--gnu-unique\0"
  "-G\0"
  "-g\0"
  "--hash-style=\0"
  "--hash-style\0"
  "--help\0"
  "-h\0"
  "--icf=all\0"
  "--icf=none\0"
  "--icf=safe\0"
  "--ignore-data-address-equality\0"
  "--ignore-function-address-equality\0"
  "--image-base=\0"
  "--image-base\0"
  "--in-implib=\0"
  "--in-implib\0"
  "--init=\0"
  "--init\0"
  "--irpgo-profile=\0"
  "--irpgo-profile\0"
  "--just-symbols=\0"
  "--just-symbols\0"
  "--keep-unique=\0"
  "--keep-unique\0"
  "--library-path=\0"
  "--library-path\0"
  "--library=\0"
  "--library\0"
  "--load-pass-plugin=\0"
  "--load-pass-plugin\0"
  "--long-plt\0"
  "--lto-aa-pipeline=\0"
  "--lto-basic-block-address-map\0"
  "--lto-basic-block-sections=\0"
  "--lto-CGO\0"
  "--lto-cs-profile-file=\0"
  "--lto-cs-profile-generate\0"
  "--lto-debug-pass-manager\0"
  "--lto-emit-asm\0"
  "--lto-emit-llvm\0"
  "--lto-known-safe-vtables=\0"
  "--lto-known-safe-vtables\0"
  "--lto-newpm-passes=\0"
  "--lto-obj-path=\0"
  "--lto-O\0"
  "--lto-partitions=\0"
  "--lto-pgo-warn-mismatch\0"
  "--lto-sample-profile=\0"
  "--lto-unique-basic-block-section-names\0"
  "--lto-validate-all-vtables-have-type-infos\0"
  "--lto-whole-program-visibility\0"
  "--lto=\0"
  "-L\0"
  "-l\0"
  "--Map=\0"
  "--Map\0"
  "--merge-exidx-entries\0"
  "--mips-got-size=\0"
  "--mips-got-size\0"
  "--mllvm=\0"
  "--mllvm\0"
  "--mmap-output-file\0"
  "-M\0"
  "-m\0"
  "--nmagic\0"
  "--no-add-needed\0"
  "--no-allow-multiple-definition\0"
  "--no-allow-shlib-undefined\0"
  "--no-android-memtag-heap\0"
  "--no-android-memtag-stack\0"
  "--no-apply-dynamic-relocs\0"
  "--no-as-needed\0"
  "--no-bp-compression-sort-startup-functions\0"
  "--no-branch-to-branch\0"
  "--no-call-graph-profile-sort\0"
  "--no-check-dynamic-relocations\0"
  "--no-check-sections\0"
  "--no-color-diagnostics\0"
  "--no-copy-dt-needed-entries\0"
  "--no-ctors-in-init-array\0"
  "--no-debug-names\0"
  "--no-demangle\0"
  "--no-dependent-libraries\0"
  "--no-dynamic-linker\0"
  "--no-eh-frame-hdr\0"
  "--no-execute-only\0"
  "--no-export-dynamic\0"
  "--no-fat-lto-objects\0"
  "--no-fatal-warnings\0"
  "--no-fortran-common\0"
  "--no-gc-sections\0"
  "--no-gdb-index\0"
  "--no-gnu-unique\0"
  "--no-keep-memory\0"
  "--no-lto-basic-block-address-map\0"
  "--no-lto-pgo-warn-mismatch\0"
  "--no-lto-unique-basic-block-section-names\0"
  "--no-lto-validate-all-vtables-have-type-infos\0"
  "--no-lto-whole-program-visibility\0"
  "--no-merge-exidx-entries\0"
  "--no-mmap-output-file\0"
  "--no-nmagic\0"
  "--no-omagic\0"
  "--no-optimize-bb-jumps\0"
  "--no-pcrel-optimize\0"
  "--no-pie\0"
  "--no-power10-stubs\0"
  "--no-print-gc-sections\0"
  "--no-print-icf-sections\0"
  "--no-relax-gp\0"
  "--no-relax\0"
  "--no-rosegment\0"
  "--no-toc-optimize\0"
  "--no-undefined-version\0"
  "--no-undefined\0"
  "--no-use-android-relr-tags\0"
  "--no-warn-backrefs\0"
  "--no-warn-common\0"
  "--no-warn-ifunc-textrel\0"
  "--no-warn-mismatch\0"
  "--no-warn-symbol-ordering\0"
  "--no-warnings\0"
  "--no-whole-archive\0"
  "--no-xosegment\0"
  "--noinhibit-exec\0"
  "--non_shared\0"
  "--nostdlib\0"
  "-N\0"
  "-n\0"
  "--oformat=\0"
  "--oformat\0"
  "--omagic\0"
  "--opt-remarks-filename\0"
  "--opt-remarks-format\0"
  "--opt-remarks-hotness-threshold=\0"
  "--opt-remarks-hotness-threshold\0"
  "--opt-remarks-passes\0"
  "--opt-remarks-with-hotness\0"
  "--optimize-bb-jumps\0"
  "--orphan-handling=\0"
  "--orphan-handling\0"
  "--out-implib=\0"
  "--out-implib\0"
  "--output=\0"
  "--output\0"
  "-O\0"
  "-o\0"
  "--pack-dyn-relocs=\0"
  "--pack-dyn-relocs\0"
  "--package-metadata=\0"
  "--pcrel-optimize\0"
  "--pic-executable\0"
  "--pic-veneer\0"
  "--pie\0"
  "--plugin-opt=-fresolution=\0"
  "--plugin-opt=-pass-through=\0"
  "--plugin-opt=-\0"
  "--plugin-opt=cs-profile-generate\0"
  "--plugin-opt=cs-profile-path=\0"
  "--plugin-opt=debug-pass-manager\0"
  "--plugin-opt=disable-verify\0"
  "--plugin-opt=dwo_dir=\0"
  "--plugin-opt=emit-asm\0"
  "--plugin-opt=emit-llvm\0"
  "--plugin-opt=jobs=\0"
  "--plugin-opt=lto-partitions=\0"
  "--plugin-opt=mcpu=\0"
  "--plugin-opt=obj-path=\0"
  "--plugin-opt=opt-remarks-filename=\0"
  "--plugin-opt=opt-remarks-format=\0"
  "--plugin-opt=opt-remarks-hotness-threshold=\0"
  "--plugin-opt=opt-remarks-passes=\0"
  "--plugin-opt=opt-remarks-with-hotness\0"
  "--plugin-opt=O\0"
  "--plugin-opt=sample-profile=\0"
  "--plugin-opt=save-temps\0"
  "--plugin-opt=stats-file=\0"
  "--plugin-opt=thinlto-emit-imports-files\0"
  "--plugin-opt=thinlto-index-only=\0"
  "--plugin-opt=thinlto-index-only\0"
  "--plugin-opt=thinlto-object-suffix-replace=\0"
  "--plugin-opt=thinlto-prefix-replace=\0"
  "--plugin-opt=thinlto\0"
  "--plugin-opt=time-trace=\0"
  "--plugin-opt=\0"
  "--plugin=\0"
  "--plugin\0"
  "--pop-state\0"
  "--power10-stubs=\0"
  "--power10-stubs\0"
  "--print-archive-stats=\0"
  "--print-gc-sections=\0"
  "--print-gc-sections\0"
  "--print-icf-sections\0"
  "--print-map\0"
  "--print-memory-usage\0"
  "--print-symbol-order=\0"
  "--print-symbol-order\0"
  "--push-state\0"
  "-q\0"
  "--randomize-section-padding=\0"
  "--relax-gp\0"
  "--relax\0"
  "--relocatable\0"
  "--remap-inputs-file=\0"
  "--remap-inputs=\0"
  "--remap-inputs\0"
  "--reproduce=\0"
  "--reproduce\0"
  "--retain-symbols-file=\0"
  "--retain-symbols-file\0"
  "--rosegment\0"
  "--rpath-link=\0"
  "--rpath-link\0"
  "--rpath=\0"
  "--rpath\0"
  "--rsp-quoting=\0"
  "--rsp-quoting\0"
  "-R\0"
  "-r\0"
  "--save-temps=\0"
  "--save-temps\0"
  "--script=\0"
  "--script\0"
  "--section-start=\0"
  "--section-start\0"
  "--secure-plt\0"
  "--shared\0"
  "--shuffle-sections=\0"
  "--shuffle-sections\0"
  "--soname=\0"
  "--soname\0"
  "--sort-common\0"
  "--sort-section=\0"
  "--sort-section\0"
  "--split-stack-adjust-size=\0"
  "--split-stack-adjust-size\0"
  "--start-group\0"
  "--start-lib\0"
  "--static\0"
  "--stats\0"
  "--strip-all\0"
  "--strip-debug\0"
  "--symbol-ordering-file=\0"
  "--symbol-ordering-file\0"
  "--sysroot=\0"
  "--sysroot\0"
  "-S\0"
  "-s\0"
  "--target1-abs\0"
  "--target1-rel\0"
  "--target2=\0"
  "--target2\0"
  "--Tbss=\0"
  "--Tbss\0"
  "--Tdata=\0"
  "--Tdata\0"
  "--thinlto-cache-dir=\0"
  "--thinlto-cache-policy=\0"
  "--thinlto-cache-policy\0"
  "--thinlto-distributor-arg=\0"
  "--thinlto-distributor-arg\0"
  "--thinlto-distributor=\0"
  "--thinlto-emit-imports-files\0"
  "--thinlto-emit-index-files\0"
  "--thinlto-index-only=\0"
  "--thinlto-index-only\0"
  "--thinlto-jobs=\0"
  "--thinlto-object-suffix-replace=\0"
  "--thinlto-prefix-replace=\0"
  "--thinlto-remote-compiler-arg=\0"
  "--thinlto-remote-compiler-arg\0"
  "--thinlto-remote-compiler=\0"
  "--thinlto-single-module=\0"
  "--threads=\0"
  "--threads\0"
  "--time-trace-granularity=\0"
  "--time-trace-granularity\0"
  "--time-trace=\0"
  "--time-trace\0"
  "--toc-optimize\0"
  "--trace-symbol=\0"
  "--trace-symbol\0"
  "--trace\0"
  "-Ttext-segment=\0"
  "-Ttext-segment\0"
  "--Ttext=\0"
  "--Ttext\0"
  "-T\0"
  "-t\0"
  "--undefined-glob=\0"
  "--undefined-glob\0"
  "--undefined-version\0"
  "--undefined=\0"
  "--undefined\0"
  "--unique\0"
  "--unresolved-symbols=\0"
  "--unresolved-symbols\0"
  "--use-android-relr-tags\0"
  "-u\0"
  "--verbose-bp-section-orderer\0"
  "--verbose\0"
  "--version-script=\0"
  "--version-script\0"
  "--version\0"
  "--vs-diagnostics\0"
  "-V\0"
  "-v\0"
  "--warn-backrefs-exclude=\0"
  "--warn-backrefs-exclude\0"
  "--warn-backrefs\0"
  "--warn-common\0"
  "--warn-execstack\0"
  "--warn-ifunc-textrel\0"
  "--warn-once\0"
  "--warn-shared-textrel\0"
  "--warn-symbol-ordering\0"
  "--warn-unresolved-symbols\0"
  "--whole-archive\0"
  "--why-extract=\0"
  "--why-live=\0"
  "--why-live\0"
  "--wrap=\0"
  "--wrap\0"
  "-w\0"
  "--xosegment\0"
  "-X\0"
  "-x\0"
  "-y\0"
  "-z\0"
  ;
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

static constexpr llvm::StringTable
OptionStrTable = OptionStrTableStorage;
#endif // OPTTABLE_STR_TABLE_CODE

/////////
// Prefixes

#ifdef OPTTABLE_PREFIXES_TABLE_CODE
static constexpr llvm::StringTable::Offset OptionPrefixesTable[] = {
  0 /* prefixes */,
  1 /* prefixes */, 1 /* '-' */,
  2 /* prefixes */, 1 /* '-' */, 3 /* '--' */,
  1 /* prefixes */, 3 /* '--' */,
  2 /* prefixes */, 3 /* '--' */, 1 /* '-' */
};
#endif // OPTTABLE_PREFIXES_TABLE_CODE

/////////// SubCommand IDs

#ifdef OPTTABLE_SUBCOMMAND_IDS_TABLE_CODE
static constexpr unsigned OptionSubCommandIDsTable[] = {
  0 /* subcommands */
};
#endif // OPTTABLE_SUBCOMMAND_IDS_TABLE_CODE

/////////
// Prefix Union

#ifdef OPTTABLE_PREFIXES_UNION_CODE
static constexpr llvm::StringTable::Offset OptionPrefixesUnion[] = {
  1 /* '-' */,   3 /* '--' */
};
#endif // OPTTABLE_PREFIXES_UNION_CODE

/////////
// ValuesCode

#ifdef OPTTABLE_VALUES_CODE
#endif
/////////
// Groups

#ifdef OPTION

//////////
// Options

OPTION(0, 6 /* <input> */, INPUT, Input, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(0, 14 /* <unknown> */, UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 24 /* -( */, anonymous_36, Flag, INVALID, start_group, nullptr, 0, DefaultVis, 0,
       "Alias for --start-group", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 27 /* -) */, anonymous_16, Flag, INVALID, end_group, nullptr, 0, DefaultVis, 0,
       "Alias for --end-group", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 30 /* --allow-multiple-definition */, allow_multiple_definition, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Allow multiple definitions", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 58 /* --allow-shlib-undefined */, allow_shlib_undefined, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Allow unresolved references in shared libraries (default when linking a shared library)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 82 /* --android-memtag-heap */, android_memtag_heap, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Instruct the dynamic loader to enable MTE protection for the heap", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 104 /* --android-memtag-mode= */, android_memtag_mode_eq, Joined, INVALID, android_memtag_mode, nullptr, 0, DefaultVis, 0,
       "Instruct the dynamic loader to start under MTE mode {async, sync, none}", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 127 /* --android-memtag-mode */, android_memtag_mode, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 149 /* --android-memtag-stack */, android_memtag_stack, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Instruct the dynamic loader to prepare for MTE stack instrumentation", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 172 /* --apply-dynamic-relocs */, apply_dynamic_relocs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Apply link-time values for dynamic relocations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 195 /* --as-needed */, as_needed, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Only set DT_NEEDED for shared libraries if used", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 207 /* --auxiliary= */, auxiliary_eq, Joined, INVALID, auxiliary, nullptr, 0, DefaultVis, 0,
       "Set DT_AUXILIARY field to the specified name", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 220 /* --auxiliary */, auxiliary, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 232 /* --Bdynamic */, Bdynamic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Link against shared libraries (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 243 /* --be8 */, be8, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "write a Big Endian ELF file using BE8 format (AArch32 only)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 249 /* --Bno-symbolic */, Bno_symbolic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Don't bind default visibility defined symbols locally for -shared (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 264 /* --bp-compression-sort-startup-functions */, bp_compression_sort_startup_functions, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "When --irpgo-profile is pecified, prioritize function similarity for compression in addition to startup time", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 304 /* --bp-compression-sort= */, bp_compression_sort, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Improve Lempel-Ziv compression by grouping similar sections together, resulting in a smaller compressed app size", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,function,data,both]", nullptr, 0)
OPTION(6, 327 /* --bp-startup-sort= */, bp_startup_sort, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Utilize a temporal profile file to reduce page faults during program startup", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,function]", nullptr, 0)
OPTION(6, 346 /* --branch-to-branch */, branch_to_branch, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable branch-to-branch optimization (default at -O2)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 365 /* --Bshareable */, anonymous_34, Flag, INVALID, shared, nullptr, 0, DefaultVis, 0,
       "Alias for --shared", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 378 /* --Bstatic */, Bstatic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not link against shared libraries", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 388 /* --Bsymbolic-functions */, Bsymbolic_functions, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Bind default visibility defined function symbols locally for -shared", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 410 /* --Bsymbolic-non-weak-functions */, Bsymbolic_non_weak_functions, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Bind default visibility defined STB_GLOBAL function symbols locally for -shared", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 441 /* --Bsymbolic-non-weak */, Bsymbolic_non_weak, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Bind default visibility defined STB_GLOBAL symbols locally for -shared", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 462 /* --Bsymbolic */, Bsymbolic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Bind default visibility defined symbols locally for -shared", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 474 /* --build-id= */, build_id, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Generate build ID note", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[fast,md5,sha1,uuid,0x<hexstring>]", nullptr, 0)
OPTION(8, 486 /* --build-id */, anonymous_0, Flag, INVALID, build_id, "sha1\0", 0, DefaultVis, 0,
       "Alias for --build-id=sha1", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 497 /* -b */, anonymous_20, Separate, INVALID, format, nullptr, 0, DefaultVis, 0,
       "Alias for --format", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 500 /* --call-graph-ordering-file= */, call_graph_ordering_file_eq, Joined, INVALID, call_graph_ordering_file, nullptr, 0, DefaultVis, 0,
       "Layout sections to optimize the given callgraph", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 528 /* --call-graph-ordering-file */, call_graph_ordering_file, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 555 /* --call-graph-profile-sort= */, call_graph_profile_sort, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Reorder input sections with call graph profile using the specified algorithm (default: cdsort)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,hfsort,cdsort]", "none,hfsort,cdsort", 0)
OPTION(8, 582 /* --call_shared */, anonymous_8, Flag, INVALID, Bdynamic, nullptr, 0, DefaultVis, 0,
       "Alias for --Bdynamic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 596 /* --check-dynamic-relocations */, check_dynamic_relocations, Flag, INVALID, INVALID, nullptr, HelpHidden, DefaultVis, 0,
       "Perform additional validation of the written dynamic relocations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 624 /* --check-sections */, check_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Check section addresses for overlaps (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 641 /* --chroot */, chroot, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 650 /* --cmse-implib */, cmse_implib, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Make the output library to be a CMSE secure code import library", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 664 /* --color-diagnostics= */, color_diagnostics, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Use colors in diagnostics (default: auto)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[auto,always,never]", nullptr, 0)
OPTION(6, 685 /* --color-diagnostics */, anonymous_2, Flag, INVALID, color_diagnostics, "always\0", 0, DefaultVis, 0,
       "Alias for --color-diagnostics=always", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 705 /* --compress-debug-sections= */, compress_debug_sections_eq, Joined, INVALID, compress_debug_sections, nullptr, 0, DefaultVis, 0,
       "Compress DWARF debug sections", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,zlib,zstd]", nullptr, 0)
OPTION(8, 732 /* --compress-debug-sections */, compress_debug_sections, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,zlib,zstd]", nullptr, 0)
OPTION(6, 758 /* --compress-sections= */, compress_sections_eq, Joined, INVALID, compress_sections, nullptr, 0, DefaultVis, 0,
       "Compress output sections that match the glob and do not have the SHF_ALLOC flag. The sections remain uncompressed if compressed content would be larger. The compression level is <level> (if specified) or a default speed-focused level", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<section-glob>={none,zlib,zstd}[:level]", nullptr, 0)
OPTION(6, 779 /* --compress-sections */, compress_sections, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<section-glob>={none,zlib,zstd}[:level]", nullptr, 0)
OPTION(6, 799 /* --cref */, cref, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Output cross reference table. If -Map is specified, print to the map file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 806 /* --debug-names */, debug_names, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Generate a merged .debug_names section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 820 /* --default-script= */, default_script_eq, Joined, INVALID, default_script, nullptr, 0, DefaultVis, 0,
       "In the absence of --script, read this default linker script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 838 /* --default-script */, default_script, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 855 /* --defsym= */, defsym_eq, Joined, INVALID, defsym, nullptr, 0, DefaultVis, 0,
       "Define a symbol alias", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>=<value>", nullptr, 0)
OPTION(8, 865 /* --defsym */, defsym, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>=<value>", nullptr, 0)
OPTION(8, 874 /* --demangle */, demangle, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Demangle symbol names (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 885 /* --dependency-file= */, dependency_file_eq, Joined, INVALID, dependency_file, nullptr, 0, DefaultVis, 0,
       "Write a dependency file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 904 /* --dependency-file */, dependency_file, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 922 /* --dependent-libraries */, dependent_libraries, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Process dependent library specifiers from input files (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 944 /* --disable-new-dtags */, disable_new_dtags, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable new dynamic tags", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 964 /* --disable-verify */, disable_verify, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 981 /* --discard-all */, discard_all, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Delete all local symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 995 /* --discard-locals */, discard_locals, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Delete temporary local symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1012 /* --discard-none */, discard_none, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Keep all symbols in the symbol table", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1027 /* --dn */, anonymous_10, Flag, INVALID, Bstatic, nullptr, 0, DefaultVis, 0,
       "Alias for --Bstatic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1032 /* -dT */, anonymous_6, Separate, INVALID, default_script, nullptr, 0, DefaultVis, 0,
       "Alias for --default-script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1036 /* --dynamic-linker= */, dynamic_linker_eq, Joined, INVALID, dynamic_linker, nullptr, 0, DefaultVis, 0,
       "Which dynamic linker to use", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1054 /* --dynamic-linker */, dynamic_linker, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1071 /* --dynamic-list= */, dynamic_list_eq, Joined, INVALID, dynamic_list, nullptr, 0, DefaultVis, 0,
       "Similar to --export-dynamic-symbol-list. When creating a shared object, this additionally implies -Bsymbolic but does not set DF_SYMBOLIC", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(8, 1087 /* --dynamic-list */, dynamic_list, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(8, 1102 /* --dy */, anonymous_9, Flag, INVALID, Bdynamic, nullptr, 0, DefaultVis, 0,
       "Alias for --Bdynamic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1107 /* -d */, anonymous_68, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1110 /* --EB */, eb, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Select the big-endian format in OUTPUT_FORMAT", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1115 /* --eh-frame-hdr */, eh_frame_hdr, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Request creation of .eh_frame_hdr section and PT_GNU_EH_FRAME segment header", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1130 /* --EL */, el, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Select the little-endian format in OUTPUT_FORMAT", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1135 /* --emit-relocs */, emit_relocs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Generate relocations in output", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1149 /* --enable-new-dtags */, enable_new_dtags, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable new dynamic tags (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1168 /* --enable-non-contiguous-regions */, enable_non_contiguous_regions, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Spill input sections to later matching output sections to avoid memory region overflow", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1200 /* --end-group */, end_group, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Ignored for compatibility with GNU unless you pass --warn-backrefs", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1212 /* --end-lib */, end_lib, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "End a grouping of objects that should be treated as if they were together in an archive", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1222 /* --entry= */, entry_eq, Joined, INVALID, entry, nullptr, 0, DefaultVis, 0,
       "Name of entry point symbol", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<entry>", nullptr, 0)
OPTION(8, 1231 /* --entry */, entry, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<entry>", nullptr, 0)
OPTION(6, 1239 /* --error-handling-script= */, error_handling_script_eq, Joined, INVALID, error_handling_script, nullptr, 0, DefaultVis, 0,
       "Specify an error handling script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1264 /* --error-handling-script */, error_handling_script, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1288 /* --error-limit= */, error_limit_eq, Joined, INVALID, error_limit, nullptr, 0, DefaultVis, 0,
       "Maximum number of errors to emit before stopping (0 = no limit)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1303 /* --error-limit */, error_limit, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1317 /* --error-unresolved-symbols */, error_unresolved_symbols, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Report unresolved symbols as errors", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1344 /* --exclude-libs= */, exclude_libs_eq, Joined, INVALID, exclude_libs, nullptr, 0, DefaultVis, 0,
       "Exclude static libraries from automatic export", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1360 /* --exclude-libs */, exclude_libs, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1375 /* --execute-only */, execute_only, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Mark executable sections unreadable", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1390 /* --export-dynamic-symbol-list= */, export_dynamic_symbol_list_eq, Joined, INVALID, export_dynamic_symbol_list, nullptr, 0, DefaultVis, 0,
       "Read a list of dynamic symbol patterns. Apply --export-dynamic-symbol on each pattern", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "file", nullptr, 0)
OPTION(6, 1420 /* --export-dynamic-symbol-list */, export_dynamic_symbol_list, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "file", nullptr, 0)
OPTION(6, 1449 /* --export-dynamic-symbol= */, export_dynamic_symbol_eq, Joined, INVALID, export_dynamic_symbol, nullptr, 0, DefaultVis, 0,
       "(executable) Put matched symbols in the dynamic symbol table. (shared object) References to matched non-local STV_DEFAULT symbols shouldn't be bound to definitions within the shared object. Does not imply -Bsymbolic.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "glob", nullptr, 0)
OPTION(6, 1474 /* --export-dynamic-symbol */, export_dynamic_symbol, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "glob", nullptr, 0)
OPTION(8, 1498 /* --export-dynamic */, export_dynamic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Put symbols in the dynamic symbol table", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1515 /* -E */, anonymous_18, Flag, INVALID, export_dynamic, nullptr, 0, DefaultVis, 0,
       "Alias for --export-dynamic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1518 /* -e */, anonymous_17, JoinedOrSeparate, INVALID, entry, nullptr, 0, DefaultVis, 0,
       "Alias for --entry", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1521 /* --fat-lto-objects */, fat_lto_objects, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Use the .llvm.lto section, which contains LLVM bitcode, in fat LTO object files to perform LTO.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1539 /* --fatal-warnings */, fatal_warnings, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Treat warnings as errors", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1556 /* --filter= */, filter_eq, Joined, INVALID, filter, nullptr, 0, DefaultVis, 0,
       "Set DT_FILTER field to the specified name", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1566 /* --filter */, filter, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1575 /* --fini= */, fini_eq, Joined, INVALID, fini, nullptr, 0, DefaultVis, 0,
       "Specify a finalizer function", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 1583 /* --fini */, fini, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 1590 /* --fix-cortex-a53-843419 */, fix_cortex_a53_843419, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Apply fixes for AArch64 Cortex-A53 erratum 843419", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1614 /* --fix-cortex-a8 */, fix_cortex_a8, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Apply fixes for ARM Cortex-A8 erratum 657417", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1630 /* --force-group-allocation */, force_group_allocation, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Only meaningful for -r. Section groups are discarded. If two section group members are placed to the same output section, combine their relocations as well", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1655 /* --format= */, format_eq, Joined, INVALID, format, nullptr, 0, DefaultVis, 0,
       "Change the input format of the inputs following this option", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[default,elf,binary]", nullptr, 0)
OPTION(8, 1665 /* --format */, format, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[default,elf,binary]", nullptr, 0)
OPTION(6, 1674 /* --fortran-common */, fortran_common, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Search archive members for definitions to override COMMON symbols (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1691 /* -F */, anonymous_19, Separate, INVALID, filter, nullptr, 0, DefaultVis, 0,
       "Alias for --filter", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1694 /* -f */, anonymous_7, Separate, INVALID, auxiliary, nullptr, 0, DefaultVis, 0,
       "Alias for --auxiliary", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1697 /* --gc-sections */, gc_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable garbage collection of unused sections", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1711 /* --gdb-index */, gdb_index, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Generate .gdb_index section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1723 /* --gnu-unique */, gnu_unique, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable STB_GNU_UNIQUE symbol binding (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1736 /* -G */, anonymous_83, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1739 /* -g */, anonymous_69, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1742 /* --hash-style= */, hash_style_eq, Joined, INVALID, hash_style, nullptr, 0, DefaultVis, 0,
       "Specify hash style (sysv, gnu or both)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1756 /* --hash-style */, hash_style, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1769 /* --help */, help, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Print option help", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 1776 /* -h */, anonymous_35, JoinedOrSeparate, INVALID, soname, nullptr, 0, DefaultVis, 0,
       "Alias for --soname", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1779 /* --icf=all */, icf_all, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable identical code folding", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1789 /* --icf=none */, icf_none, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable identical code folding (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1800 /* --icf=safe */, icf_safe, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable safe identical code folding", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1811 /* --ignore-data-address-equality */, ignore_data_address_equality, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "lld can break the address equality of data", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1842 /* --ignore-function-address-equality */, ignore_function_address_equality, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "lld can break the address equality of functions", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1877 /* --image-base= */, image_base_eq, Joined, INVALID, image_base, nullptr, 0, DefaultVis, 0,
       "Set the base address", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1891 /* --image-base */, image_base, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1904 /* --in-implib= */, in_implib_eq, Joined, INVALID, in_implib, nullptr, 0, DefaultVis, 0,
       "Read an existing CMSE secure code import library and preserve entry function addresses in the resulting new CMSE secure code import library (optional when creating a CMSE secure image)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 1917 /* --in-implib */, in_implib, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(8, 1929 /* --init= */, init_eq, Joined, INVALID, init, nullptr, 0, DefaultVis, 0,
       "Specify an initializer function", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 1937 /* --init */, init, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(6, 1944 /* --irpgo-profile= */, irpgo_profile_eq, Joined, INVALID, irpgo_profile, nullptr, 0, DefaultVis, 0,
       "Read a temporary profile file for use with --bp-startup-sort=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 1961 /* --irpgo-profile */, irpgo_profile, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1977 /* --just-symbols= */, just_symbols_eq, Joined, INVALID, just_symbols, nullptr, 0, DefaultVis, 0,
       "Just link symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 1993 /* --just-symbols */, just_symbols, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2008 /* --keep-unique= */, keep_unique_eq, Joined, INVALID, keep_unique, nullptr, 0, DefaultVis, 0,
       "Do not fold this symbol during ICF", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2023 /* --keep-unique */, keep_unique, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2037 /* --library-path= */, anonymous_24, Joined, INVALID, library_path, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2053 /* --library-path */, anonymous_23, Separate, INVALID, library_path, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2068 /* --library= */, anonymous_22, Joined, INVALID, library, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2079 /* --library */, anonymous_21, Separate, INVALID, library, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2089 /* --load-pass-plugin= */, load_pass_plugins_eq, Joined, INVALID, load_pass_plugins, nullptr, 0, DefaultVis, 0,
       "Load passes from plugin library", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2109 /* --load-pass-plugin */, load_pass_plugins, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2128 /* --long-plt */, anonymous_70, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2139 /* --lto-aa-pipeline= */, lto_aa_pipeline, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "AA pipeline to run during LTO. Used in conjunction with -lto-newpm-passes", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2158 /* --lto-basic-block-address-map */, lto_basic_block_address_map, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Emit basic block address map for LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2188 /* --lto-basic-block-sections= */, lto_basic_block_sections, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable basic block sections for LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2216 /* --lto-CGO */, lto_CGO, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Codegen optimization level for LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<cgopt-level>", nullptr, 0)
OPTION(6, 2226 /* --lto-cs-profile-file= */, lto_cs_profile_file, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Context sensitive profile file path", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2249 /* --lto-cs-profile-generate */, lto_cs_profile_generate, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Perform context sensitive PGO instrumentation", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2275 /* --lto-debug-pass-manager */, lto_debug_pass_manager, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Debug new pass manager", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2300 /* --lto-emit-asm */, lto_emit_asm, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Emit assembly code", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2315 /* --lto-emit-llvm */, lto_emit_llvm, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Emit LLVM-IR bitcode", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2331 /* --lto-known-safe-vtables= */, lto_known_safe_vtables_eq, Joined, INVALID, lto_known_safe_vtables, nullptr, 0, DefaultVis, 0,
       "When --lto-validate-all-vtables-have-type-infos is enabled, skip validation on these vtables (_ZTV symbols)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2357 /* --lto-known-safe-vtables */, lto_known_safe_vtables, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2382 /* --lto-newpm-passes= */, lto_newpm_passes, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Passes to run during LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2402 /* --lto-obj-path= */, lto_obj_path_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2418 /* --lto-O */, lto_O, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Optimization level for LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<opt-level>", nullptr, 0)
OPTION(6, 2426 /* --lto-partitions= */, lto_partitions, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Number of LTO codegen partitions", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2444 /* --lto-pgo-warn-mismatch */, lto_pgo_warn_mismatch, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "turn on warnings about profile cfg mismatch (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2468 /* --lto-sample-profile= */, lto_sample_profile, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Sample profile file path", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2490 /* --lto-unique-basic-block-section-names */, lto_unique_basic_block_section_names, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Give unique names to every basic block section for LTO", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2529 /* --lto-validate-all-vtables-have-type-infos */, lto_validate_all_vtables_have_type_infos, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Validate that all vtables have type infos for LTO link", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2572 /* --lto-whole-program-visibility */, lto_whole_program_visibility, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Asserts that the LTO link has whole program visibility", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2603 /* --lto= */, lto, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Set LTO backend", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[full,thin]", nullptr, 0)
OPTION(1, 2610 /* -L */, library_path, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Add <dir> to the library search path", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<dir>", nullptr, 0)
OPTION(1, 2613 /* -l */, library, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Search for library <libname>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<libname>", nullptr, 0)
OPTION(8, 2616 /* --Map= */, Map_eq, Joined, INVALID, Map, nullptr, 0, DefaultVis, 0,
       "Print a link map to the specified file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2623 /* --Map */, Map, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2629 /* --merge-exidx-entries */, merge_exidx_entries, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable merging .ARM.exidx entries (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2651 /* --mips-got-size= */, mips_got_size_eq, Joined, INVALID, mips_got_size, nullptr, HelpHidden, DefaultVis, 0,
       "Max size of a single MIPS GOT. 0x10000 by default.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2668 /* --mips-got-size */, mips_got_size, Separate, INVALID, INVALID, nullptr, HelpHidden, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2684 /* --mllvm= */, mllvm_eq, Joined, INVALID, mllvm, nullptr, 0, DefaultVis, 0,
       "Additional arguments to forward to LLVM's option processing", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2693 /* --mllvm */, mllvm, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2701 /* --mmap-output-file */, mmap_output_file, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Mmap the output file for writing (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 2720 /* -M */, anonymous_30, Flag, INVALID, print_map, nullptr, 0, DefaultVis, 0,
       "Alias for --print-map", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 2723 /* -m */, m, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Set target emulation", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2726 /* --nmagic */, nmagic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not page align sections, link against static libraries.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<magic>", nullptr, 0)
OPTION(6, 2735 /* --no-add-needed */, anonymous_71, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2751 /* --no-allow-multiple-definition */, no_allow_multiple_definition, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not allow multiple definitions (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2782 /* --no-allow-shlib-undefined */, no_allow_shlib_undefined, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not allow unresolved references in shared libraries (default when linking an executable)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2809 /* --no-android-memtag-heap */, no_android_memtag_heap, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2834 /* --no-android-memtag-stack */, no_android_memtag_stack, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2860 /* --no-apply-dynamic-relocs */, no_apply_dynamic_relocs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not apply link-time values for dynamic relocations (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 2886 /* --no-as-needed */, no_as_needed, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Always set DT_NEEDED for shared libraries (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2901 /* --no-bp-compression-sort-startup-functions */, no_bp_compression_sort_startup_functions, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2944 /* --no-branch-to-branch */, no_branch_to_branch, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable branch-to-branch optimization (default at -O0 and -O1)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2966 /* --no-call-graph-profile-sort */, anonymous_1, Flag, INVALID, call_graph_profile_sort, "none\0", HelpHidden, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 2995 /* --no-check-dynamic-relocations */, no_check_dynamic_relocations, Flag, INVALID, INVALID, nullptr, HelpHidden, DefaultVis, 0,
       "Do not perform additional validation of the written dynamic relocations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3026 /* --no-check-sections */, no_check_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not check section addresses for overlaps", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3046 /* --no-color-diagnostics */, anonymous_3, Flag, INVALID, color_diagnostics, "never\0", 0, DefaultVis, 0,
       "Alias for --color-diagnostics=never", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3069 /* --no-copy-dt-needed-entries */, anonymous_72, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3097 /* --no-ctors-in-init-array */, anonymous_73, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3122 /* --no-debug-names */, no_debug_names, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not generate a merged .debug_names section (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3139 /* --no-demangle */, no_demangle, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not demangle symbol names", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3153 /* --no-dependent-libraries */, no_dependent_libraries, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Ignore dependent library specifiers from input files", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3178 /* --no-dynamic-linker */, no_dynamic_linker, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Inhibit output of .interp section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3198 /* --no-eh-frame-hdr */, no_eh_frame_hdr, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not create .eh_frame_hdr section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3216 /* --no-execute-only */, no_execute_only, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Mark executable sections readable (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3234 /* --no-export-dynamic */, no_export_dynamic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not put symbols in the dynamic symbol table (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3254 /* --no-fat-lto-objects */, no_fat_lto_objects, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Ignore the .llvm.lto section in relocatable object files (default).", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3275 /* --no-fatal-warnings */, no_fatal_warnings, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not treat warnings as errors (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3295 /* --no-fortran-common */, no_fortran_common, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not search archive members for definitions to override COMMON symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3315 /* --no-gc-sections */, no_gc_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable garbage collection of unused sections (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3332 /* --no-gdb-index */, no_gdb_index, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not generate .gdb_index section (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3347 /* --no-gnu-unique */, no_gnu_unique, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable STB_GNU_UNIQUE symbol binding", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3363 /* --no-keep-memory */, anonymous_74, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3380 /* --no-lto-basic-block-address-map */, no_lto_basic_block_address_map, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not emit basic block address map for LTO (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3413 /* --no-lto-pgo-warn-mismatch */, no_lto_pgo_warn_mismatch, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "turn off warnings about profile cfg mismatch", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3440 /* --no-lto-unique-basic-block-section-names */, no_lto_unique_basic_block_section_names, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not give unique names to every basic block section for LTO (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3482 /* --no-lto-validate-all-vtables-have-type-infos */, no_lto_validate_all_vtables_have_type_infos, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not validate that all vtables have type infos for LTO link", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3528 /* --no-lto-whole-program-visibility */, no_lto_whole_program_visibility, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Asserts that the LTO link does not have whole program visibility", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3562 /* --no-merge-exidx-entries */, no_merge_exidx_entries, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable merging .ARM.exidx entries", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3587 /* --no-mmap-output-file */, no_mmap_output_file, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not mmap the output file for writing", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3609 /* --no-nmagic */, no_nmagic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Page align sections (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<magic>", nullptr, 0)
OPTION(8, 3621 /* --no-omagic */, no_omagic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not set the text data sections to be writable, page align sections (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<magic>", nullptr, 0)
OPTION(6, 3633 /* --no-optimize-bb-jumps */, no_optimize_bb_jumps, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not remove any direct jumps at the end to the next basic block (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3656 /* --no-pcrel-optimize */, no_pcrel_optimize, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "(PowerPC64) Disable PC-relative optimizations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3676 /* --no-pie */, no_pie, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not create a position independent executable (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3685 /* --no-power10-stubs */, no_power10_stubs, Flag, INVALID, power10_stubs_eq, "no\0", 0, DefaultVis, 0,
       "Alias for --power10-stubs=no", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3704 /* --no-print-gc-sections */, no_print_gc_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not list removed unused sections (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3727 /* --no-print-icf-sections */, no_print_icf_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not list identical folded sections (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3751 /* --no-relax-gp */, no_relax_gp, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable global pointer relaxation (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3765 /* --no-relax */, no_relax, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Disable target-specific relaxations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3776 /* --no-rosegment */, no_rosegment, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not put read-only non-executable sections in their own segment", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3791 /* --no-toc-optimize */, no_toc_optimize, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "(PowerPC64) Disable TOC related optimizations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3809 /* --no-undefined-version */, no_undefined_version, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Report version scripts that refer undefined symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3832 /* --no-undefined */, no_undefined, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Report unresolved symbols even if the linker is creating a shared library", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3847 /* --no-use-android-relr-tags */, no_use_android_relr_tags, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Use SHT_RELR / DT_RELR* tags (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3874 /* --no-warn-backrefs */, no_warn_backrefs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not warn about backward symbol references to extract archive members (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3893 /* --no-warn-common */, no_warn_common, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not warn about duplicate common symbols (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3910 /* --no-warn-ifunc-textrel */, no_warn_ifunc_textrel, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not warn about using ifunc symbols with text relocations (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3934 /* --no-warn-mismatch */, no_warn_mismatch, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Suppress errors for certain unknown section types", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3953 /* --no-warn-symbol-ordering */, no_warn_symbol_ordering, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not warn about problems with the symbol ordering file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 3979 /* --no-warnings */, no_warnings, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Suppress warnings and cancel --fatal-warnings", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 3993 /* --no-whole-archive */, no_whole_archive, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not force load of all members in a static library (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4012 /* --no-xosegment */, no_xosegment, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Do not put execute-only sections in their own segment (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4027 /* --noinhibit-exec */, noinhibit_exec, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Retain the executable output file whenever it is still usable", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4044 /* --non_shared */, anonymous_11, Flag, INVALID, Bstatic, nullptr, 0, DefaultVis, 0,
       "Alias for --Bstatic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4057 /* --nostdlib */, nostdlib, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Only search directories specified on the command line", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 4068 /* -N */, anonymous_26, Flag, INVALID, omagic, nullptr, 0, DefaultVis, 0,
       "Alias for --omagic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 4071 /* -n */, anonymous_25, Flag, INVALID, nmagic, nullptr, 0, DefaultVis, 0,
       "Alias for --nmagic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4074 /* --oformat= */, oformat_eq, Joined, INVALID, oformat, nullptr, 0, DefaultVis, 0,
       "Specify the binary format for the output object file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[elf,binary]", nullptr, 0)
OPTION(6, 4085 /* --oformat */, oformat, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[elf,binary]", nullptr, 0)
OPTION(6, 4095 /* --omagic */, omagic, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Set the text and data sections to be readable and writable, do not page align sections, link against static libraries", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<magic>", nullptr, 0)
OPTION(6, 4104 /* --opt-remarks-filename */, opt_remarks_filename, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "YAML output file for optimization remarks", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4127 /* --opt-remarks-format */, opt_remarks_format, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "The format used for serializing remarks (default: YAML)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4148 /* --opt-remarks-hotness-threshold= */, opt_remarks_hotness_threshold_eq, Joined, INVALID, opt_remarks_hotness_threshold, nullptr, 0, DefaultVis, 0,
       "Minimum profile count required for an optimization remark to be output. Use 'auto' to apply the threshold from profile summary.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<value>", nullptr, 0)
OPTION(6, 4181 /* --opt-remarks-hotness-threshold */, opt_remarks_hotness_threshold, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<value>", nullptr, 0)
OPTION(6, 4213 /* --opt-remarks-passes */, opt_remarks_passes, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Regex for the passes that need to be serialized to the output file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4234 /* --opt-remarks-with-hotness */, opt_remarks_with_hotness, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Include hotness information in the optimization remarks file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4261 /* --optimize-bb-jumps */, optimize_bb_jumps, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Remove direct jumps at the end to the next basic block", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4281 /* --orphan-handling= */, orphan_handling_eq, Joined, INVALID, orphan_handling, nullptr, 0, DefaultVis, 0,
       "Control how orphan sections are handled when linker script used", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4300 /* --orphan-handling */, orphan_handling, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4318 /* --out-implib= */, out_implib_eq, Joined, INVALID, out_implib, nullptr, 0, DefaultVis, 0,
       "Output the CMSE secure code import library to <file> (required when creating a CMSE secure image)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 4332 /* --out-implib */, out_implib, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 4345 /* --output= */, anonymous_27, Joined, INVALID, o, nullptr, 0, DefaultVis, 0,
       "Alias for -o", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4355 /* --output */, anonymous_28, Separate, INVALID, o, nullptr, 0, DefaultVis, 0,
       "Alias for -o", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 4364 /* -O */, O, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Optimize output file size", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 4367 /* -o */, o, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Path to file to write output", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<path>", nullptr, 0)
OPTION(6, 4370 /* --pack-dyn-relocs= */, pack_dyn_relocs_eq, Joined, INVALID, pack_dyn_relocs, nullptr, 0, DefaultVis, 0,
       "Pack dynamic relocations in the given format", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,android,relr,android+relr]", nullptr, 0)
OPTION(6, 4389 /* --pack-dyn-relocs */, pack_dyn_relocs, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[none,android,relr,android+relr]", nullptr, 0)
OPTION(6, 4407 /* --package-metadata= */, package_metadata, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Emit a percent-encoded string to the .note.package section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 4427 /* --pcrel-optimize */, pcrel_optimize, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "(PowerPC64) Enable PC-relative optimizations (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4444 /* --pic-executable */, anonymous_29, Flag, INVALID, pie, nullptr, 0, DefaultVis, 0,
       "Alias for --pie", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4461 /* --pic-veneer */, pic_veneer, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Always generate position independent thunks (veneers)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4474 /* --pie */, pie, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Create a position independent executable", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4480 /* --plugin-opt=-fresolution= */, anonymous_66, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4507 /* --plugin-opt=-pass-through= */, anonymous_67, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4535 /* --plugin-opt=- */, plugin_opt_eq_minus, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Specify an LLVM option for compatibility with LLVMgold.so", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4550 /* --plugin-opt=cs-profile-generate */, anonymous_49, Flag, INVALID, lto_cs_profile_generate, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-cs-profile-generate", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4583 /* --plugin-opt=cs-profile-path= */, anonymous_50, Joined, INVALID, lto_cs_profile_file, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-cs-profile-file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4613 /* --plugin-opt=debug-pass-manager */, anonymous_45, Flag, INVALID, lto_debug_pass_manager, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-debug-pass-manager", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4645 /* --plugin-opt=disable-verify */, anonymous_46, Flag, INVALID, disable_verify, nullptr, 0, DefaultVis, 0,
       "Alias for --disable-verify", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4673 /* --plugin-opt=dwo_dir= */, plugin_opt_dwo_dir_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Directory to store .dwo files when LTO and debug fission are used", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4695 /* --plugin-opt=emit-asm */, plugin_opt_emit_asm, Flag, INVALID, lto_emit_asm, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-emit-asm", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4717 /* --plugin-opt=emit-llvm */, plugin_opt_emit_llvm, Flag, INVALID, lto_emit_llvm, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-emit-llvm", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4740 /* --plugin-opt=jobs= */, anonymous_47, Joined, INVALID, thinlto_jobs_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-jobs=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4759 /* --plugin-opt=lto-partitions= */, anonymous_48, Joined, INVALID, lto_partitions, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-partitions", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4788 /* --plugin-opt=mcpu= */, plugin_opt_mcpu_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4807 /* --plugin-opt=obj-path= */, anonymous_51, Joined, INVALID, lto_obj_path_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-obj-path=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4830 /* --plugin-opt=opt-remarks-filename= */, anonymous_52, Joined, INVALID, opt_remarks_filename, nullptr, 0, DefaultVis, 0,
       "Alias for --opt-remarks-filename", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4865 /* --plugin-opt=opt-remarks-format= */, anonymous_54, Joined, INVALID, opt_remarks_format, nullptr, 0, DefaultVis, 0,
       "Alias for --opt-remarks-format", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4898 /* --plugin-opt=opt-remarks-hotness-threshold= */, anonymous_56, Joined, INVALID, opt_remarks_hotness_threshold, nullptr, 0, DefaultVis, 0,
       "Alias for --opt-remarks-hotness-threshold", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4942 /* --plugin-opt=opt-remarks-passes= */, anonymous_53, Joined, INVALID, opt_remarks_passes, nullptr, 0, DefaultVis, 0,
       "Alias for --opt-remarks-passes", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 4975 /* --plugin-opt=opt-remarks-with-hotness */, anonymous_55, Flag, INVALID, opt_remarks_with_hotness, nullptr, 0, DefaultVis, 0,
       "Alias for --opt-remarks-with-hotness", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5013 /* --plugin-opt=O */, anonymous_44, Joined, INVALID, lto_O, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-O", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5028 /* --plugin-opt=sample-profile= */, anonymous_57, Joined, INVALID, lto_sample_profile, nullptr, 0, DefaultVis, 0,
       "Alias for --lto-sample-profile", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5057 /* --plugin-opt=save-temps */, anonymous_58, Flag, INVALID, save_temps, nullptr, 0, DefaultVis, 0,
       "Alias for --save-temps", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5081 /* --plugin-opt=stats-file= */, plugin_opt_stats_file, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Filename to write LTO statistics to", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5106 /* --plugin-opt=thinlto-emit-imports-files */, anonymous_60, Flag, INVALID, thinlto_emit_imports_files, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-emit-imports-files", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5146 /* --plugin-opt=thinlto-index-only= */, anonymous_62, Joined, INVALID, thinlto_index_only_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-index-only=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5179 /* --plugin-opt=thinlto-index-only */, anonymous_61, Flag, INVALID, thinlto_index_only, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-index-only", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5211 /* --plugin-opt=thinlto-object-suffix-replace= */, anonymous_63, Joined, INVALID, thinlto_object_suffix_replace_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-object-suffix-replace=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5255 /* --plugin-opt=thinlto-prefix-replace= */, anonymous_64, Joined, INVALID, thinlto_prefix_replace_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --thinlto-prefix-replace=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5292 /* --plugin-opt=thinlto */, anonymous_65, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5313 /* --plugin-opt=time-trace= */, anonymous_59, Joined, INVALID, time_trace_eq, nullptr, 0, DefaultVis, 0,
       "Alias for --time-trace=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5338 /* --plugin-opt= */, plugin_opt_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5352 /* --plugin= */, plugin_eq, Joined, INVALID, plugin, nullptr, 0, DefaultVis, 0,
       "Ignored for compatibility with GNU linkers", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5362 /* --plugin */, plugin, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5371 /* --pop-state */, pop_state, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Restore the states saved by --push-state", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5383 /* --power10-stubs= */, power10_stubs_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Whether to use Power10 instructions in call stubs for R_PPC64_REL24_NOTOC and TOC/NOTOC interworking (yes (default): use; no: don't use). \"auto\" is currently the same as \"yes\"", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<mode>", nullptr, 0)
OPTION(6, 5400 /* --power10-stubs */, power10_stubs, Flag, INVALID, power10_stubs_eq, "yes\0", 0, DefaultVis, 0,
       "Alias for --power10-stubs=auto", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5416 /* --print-archive-stats= */, print_archive_stats, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Write archive usage statistics to the specified file. Print the numbers of members and extracted members for each archive", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5439 /* --print-gc-sections= */, print_gc_sections_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "List removed unused sections to <file>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(8, 5460 /* --print-gc-sections */, print_gc_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "List removed unused sections", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5480 /* --print-icf-sections */, print_icf_sections, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "List identical folded sections", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5501 /* --print-map */, print_map, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Print a link map to the standard output", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5513 /* --print-memory-usage */, print_memory_usage, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Report target memory usage", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5534 /* --print-symbol-order= */, print_symbol_order_eq, Joined, INVALID, print_symbol_order, nullptr, 0, DefaultVis, 0,
       "Print a symbol order specified by --call-graph-ordering-file into the specified file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5556 /* --print-symbol-order */, print_symbol_order, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5577 /* --push-state */, push_state, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Save the current state of --as-needed, -static and --whole-archive", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 5590 /* -q */, anonymous_15, Flag, INVALID, emit_relocs, nullptr, 0, DefaultVis, 0,
       "Alias for --emit-relocs", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5593 /* --randomize-section-padding= */, randomize_section_padding, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Randomly insert padding between input sections and at the start of each segment using given seed", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5622 /* --relax-gp */, relax_gp, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable global pointer relaxation", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5633 /* --relax */, relax, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Enable target-specific relaxations if supported (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5641 /* --relocatable */, relocatable, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Create relocatable object file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5655 /* --remap-inputs-file= */, remap_inputs_file, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Each line contains 'from-glob=to-file'. An input file matching <from-glob> is remapped to <to-file>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 5676 /* --remap-inputs= */, remap_inputs_eq, Joined, INVALID, remap_inputs, nullptr, 0, DefaultVis, 0,
       "Remap input files matching <from-glob> to <to-file>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<from-glob>=<to-file>", nullptr, 0)
OPTION(6, 5692 /* --remap-inputs */, remap_inputs, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<from-glob>=<to-file>", nullptr, 0)
OPTION(6, 5707 /* --reproduce= */, reproduce_eq, Joined, INVALID, reproduce, nullptr, 0, DefaultVis, 0,
       "Write tar file containing inputs and command to reproduce link", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5720 /* --reproduce */, reproduce, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5732 /* --retain-symbols-file= */, retain_symbols_file_eq, Joined, INVALID, retain_symbols_file, nullptr, 0, DefaultVis, 0,
       "Retain only the symbols listed in the file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(8, 5755 /* --retain-symbols-file */, retain_symbols_file, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 5777 /* --rosegment */, rosegment, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Put read-only non-executable sections in their own segment (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5789 /* --rpath-link= */, anonymous_76, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5803 /* --rpath-link */, anonymous_75, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5816 /* --rpath= */, rpath_eq, Joined, INVALID, rpath, nullptr, 0, DefaultVis, 0,
       "Add a DT_RUNPATH to the output", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5825 /* --rpath */, rpath, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5833 /* --rsp-quoting= */, rsp_quoting_eq, Joined, INVALID, rsp_quoting, nullptr, 0, DefaultVis, 0,
       "Quoting style for response files", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[posix,windows]", nullptr, 0)
OPTION(6, 5848 /* --rsp-quoting */, rsp_quoting, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "[posix,windows]", nullptr, 0)
OPTION(1, 5862 /* -R */, anonymous_32, JoinedOrSeparate, INVALID, rpath, nullptr, 0, DefaultVis, 0,
       "Alias for --rpath", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 5865 /* -r */, anonymous_31, Flag, INVALID, relocatable, nullptr, 0, DefaultVis, 0,
       "Alias for --relocatable", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5868 /* --save-temps= */, save_temps_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Save select intermediate LTO compilation results", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, "resolution,preopt,promote,internalize,import,opt,precodegen,prelink,combinedindex", 0)
OPTION(8, 5882 /* --save-temps */, save_temps, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Save intermediate LTO compilation results", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5895 /* --script= */, script_eq, Joined, INVALID, script, nullptr, 0, DefaultVis, 0,
       "Read linker script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5905 /* --script */, script, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5914 /* --section-start= */, section_start_eq, Joined, INVALID, section_start, nullptr, 0, DefaultVis, 0,
       "Set address of section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<address>", nullptr, 0)
OPTION(8, 5931 /* --section-start */, section_start, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<address>", nullptr, 0)
OPTION(8, 5947 /* --secure-plt */, anonymous_77, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 5960 /* --shared */, shared, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Build a shared object", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 5969 /* --shuffle-sections= */, shuffle_sections_eq, Joined, INVALID, shuffle_sections, nullptr, 0, DefaultVis, 0,
       "Shuffle matched sections using the given seed before mapping them to the output sections. If -1, reverse the section order. If 0, use a random seed", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<section-glob>=<seed>", nullptr, 0)
OPTION(6, 5989 /* --shuffle-sections */, shuffle_sections, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<section-glob>=<seed>", nullptr, 0)
OPTION(8, 6008 /* --soname= */, soname_eq, Joined, INVALID, soname, nullptr, 0, DefaultVis, 0,
       "Set DT_SONAME", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6018 /* --soname */, soname, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6027 /* --sort-common */, anonymous_78, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6041 /* --sort-section= */, sort_section_eq, Joined, INVALID, sort_section, nullptr, 0, DefaultVis, 0,
       "Specifies sections sorting rule when linkerscript is used", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6057 /* --sort-section */, sort_section, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6072 /* --split-stack-adjust-size= */, split_stack_adjust_size_eq, Joined, INVALID, split_stack_adjust_size, nullptr, 0, DefaultVis, 0,
       "Specify adjustment to stack size when a split-stack function calls a non-split-stack function", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<value>", nullptr, 0)
OPTION(8, 6099 /* --split-stack-adjust-size */, split_stack_adjust_size, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<value>", nullptr, 0)
OPTION(8, 6125 /* --start-group */, start_group, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Ignored for compatibility with GNU unless you pass --warn-backrefs", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6139 /* --start-lib */, start_lib, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Start a grouping of objects that should be treated as if they were together in an archive", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6151 /* --static */, anonymous_12, Flag, INVALID, Bstatic, nullptr, 0, DefaultVis, 0,
       "Alias for --Bstatic", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6160 /* --stats */, anonymous_79, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6168 /* --strip-all */, strip_all, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Strip all symbols. Implies --strip-debug", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6180 /* --strip-debug */, strip_debug, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Strip debugging information", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6194 /* --symbol-ordering-file= */, symbol_ordering_file_eq, Joined, INVALID, symbol_ordering_file, nullptr, 0, DefaultVis, 0,
       "Layout sections to place symbols in the order specified by symbol ordering file", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6218 /* --symbol-ordering-file */, symbol_ordering_file, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6241 /* --sysroot= */, sysroot_eq, Joined, INVALID, sysroot, nullptr, 0, DefaultVis, 0,
       "Set the system root", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6252 /* --sysroot */, sysroot, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 6262 /* -S */, anonymous_38, Flag, INVALID, strip_debug, nullptr, 0, DefaultVis, 0,
       "Alias for --strip-debug", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 6265 /* -s */, anonymous_37, Flag, INVALID, strip_all, nullptr, 0, DefaultVis, 0,
       "Alias for --strip-all", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6268 /* --target1-abs */, target1_abs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Interpret R_ARM_TARGET1 as R_ARM_ABS32 (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6282 /* --target1-rel */, target1_rel, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Interpret R_ARM_TARGET1 as R_ARM_REL32", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6296 /* --target2= */, target2_eq, Joined, INVALID, target2, nullptr, 0, DefaultVis, 0,
       "Interpret R_ARM_TARGET2 as <type>, where <type> is one of rel, abs, or got-rel", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<type>", nullptr, 0)
OPTION(8, 6307 /* --target2 */, target2, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<type>", nullptr, 0)
OPTION(8, 6317 /* --Tbss= */, Tbss_eq, Joined, INVALID, Tbss, nullptr, 0, DefaultVis, 0,
       "Same as --section-start with .bss as the sectionname", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6325 /* --Tbss */, Tbss, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6332 /* --Tdata= */, Tdata_eq, Joined, INVALID, Tdata, nullptr, 0, DefaultVis, 0,
       "Same as --section-start with .data as the sectionname", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6341 /* --Tdata */, Tdata, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6349 /* --thinlto-cache-dir= */, thinlto_cache_dir, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Path to ThinLTO cached object file directory", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6370 /* --thinlto-cache-policy= */, thinlto_cache_policy_eq, Joined, INVALID, thinlto_cache_policy, nullptr, 0, DefaultVis, 0,
       "Pruning policy for the ThinLTO cache", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6394 /* --thinlto-cache-policy */, thinlto_cache_policy, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6417 /* --thinlto-distributor-arg= */, thinlto_distributor_arg_eq, Joined, INVALID, thinlto_distributor_arg, nullptr, 0, DefaultVis, 0,
       "Arguments to pass to the ThinLTO distributor", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6444 /* --thinlto-distributor-arg */, thinlto_distributor_arg, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6470 /* --thinlto-distributor= */, thinlto_distributor_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Distributor to use for ThinLTO backend compilations. If specified, ThinLTO backend compilations will be distributed", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6493 /* --thinlto-emit-imports-files */, thinlto_emit_imports_files, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6522 /* --thinlto-emit-index-files */, thinlto_emit_index_files, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6549 /* --thinlto-index-only= */, thinlto_index_only_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6571 /* --thinlto-index-only */, thinlto_index_only, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6592 /* --thinlto-jobs= */, thinlto_jobs_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Number of ThinLTO jobs. Default to --threads=", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6608 /* --thinlto-object-suffix-replace= */, thinlto_object_suffix_replace_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6641 /* --thinlto-prefix-replace= */, thinlto_prefix_replace_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6667 /* --thinlto-remote-compiler-arg= */, thinlto_remote_compiler_arg_eq, Joined, INVALID, thinlto_remote_compiler_arg, nullptr, 0, DefaultVis, 0,
       "Compiler arguments for the ThinLTO distributor to pass for ThinLTO backend compilations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6698 /* --thinlto-remote-compiler-arg */, thinlto_remote_compiler_arg, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6728 /* --thinlto-remote-compiler= */, thinlto_remote_compiler_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Compiler for the ThinLTO distributor to invoke for ThinLTO backend compilations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6755 /* --thinlto-single-module= */, thinlto_single_module_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Specify a single module to compile in ThinLTO mode, for debugging only", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6780 /* --threads= */, threads_eq, Joined, INVALID, threads, nullptr, 0, DefaultVis, 0,
       "Number of threads. '1' disables multi-threading. By default all available hardware threads are used", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6791 /* --threads */, threads, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6801 /* --time-trace-granularity= */, time_trace_granularity_eq, Joined, INVALID, time_trace_granularity, nullptr, 0, DefaultVis, 0,
       "Minimum time granularity (in microseconds) traced by time profiler", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6827 /* --time-trace-granularity */, time_trace_granularity, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6852 /* --time-trace= */, time_trace_eq, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Record time trace to <file>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<file>", nullptr, 0)
OPTION(6, 6866 /* --time-trace */, anonymous_5, Flag, INVALID, time_trace_eq, nullptr, 0, DefaultVis, 0,
       "Record time trace to file next to output", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6879 /* --toc-optimize */, toc_optimize, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "(PowerPC64) Enable TOC related optimizations (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6894 /* --trace-symbol= */, trace_symbol_eq, Joined, INVALID, trace_symbol, nullptr, 0, DefaultVis, 0,
       "Trace references to symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6910 /* --trace-symbol */, trace_symbol, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6925 /* --trace */, trace, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Print the names of the input files", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(3, 6933 /* -Ttext-segment= */, anonymous_40, Joined, INVALID, Ttext_segment, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(3, 6949 /* -Ttext-segment */, Ttext_segment, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6964 /* --Ttext= */, Ttext_eq, Joined, INVALID, Ttext, nullptr, 0, DefaultVis, 0,
       "Same as --section-start with .text as the sectionname", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 6973 /* --Ttext */, Ttext, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 6981 /* -T */, anonymous_33, JoinedOrSeparate, INVALID, script, nullptr, 0, DefaultVis, 0,
       "Alias for --script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 6984 /* -t */, anonymous_39, Flag, INVALID, trace, nullptr, 0, DefaultVis, 0,
       "Alias for --trace", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 6987 /* --undefined-glob= */, undefined_glob_eq, Joined, INVALID, undefined_glob, nullptr, 0, DefaultVis, 0,
       "Force undefined symbol during linking", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<pattern>", nullptr, 0)
OPTION(6, 7005 /* --undefined-glob */, undefined_glob, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<pattern>", nullptr, 0)
OPTION(8, 7022 /* --undefined-version */, undefined_version, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Allow unused version in version script (disabled by default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7042 /* --undefined= */, undefined_eq, Joined, INVALID, undefined, nullptr, 0, DefaultVis, 0,
       "Force undefined symbol during linking", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 7055 /* --undefined */, undefined, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 7067 /* --unique */, unique, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Creates a separate output section for every orphan input section", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7076 /* --unresolved-symbols= */, unresolved_symbols_eq, Joined, INVALID, unresolved_symbols, nullptr, 0, DefaultVis, 0,
       "Determine how to handle unresolved symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7098 /* --unresolved-symbols */, unresolved_symbols, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7119 /* --use-android-relr-tags */, use_android_relr_tags, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Use SHT_ANDROID_RELR / DT_ANDROID_RELR* tags instead of SHT_RELR / DT_RELR*", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7143 /* -u */, anonymous_42, JoinedOrSeparate, INVALID, undefined, nullptr, 0, DefaultVis, 0,
       "Alias for --undefined", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7146 /* --verbose-bp-section-orderer */, verbose_bp_section_orderer, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Print information on balanced partitioning", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7175 /* --verbose */, verbose, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Verbose mode", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7185 /* --version-script= */, version_script_eq, Joined, INVALID, version_script, nullptr, 0, DefaultVis, 0,
       "Read a version script", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7203 /* --version-script */, version_script, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7220 /* --version */, version, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Display the version number and exit", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7230 /* --vs-diagnostics */, visual_studio_diagnostics_format, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Format diagnostics for Visual Studio compatibility", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7247 /* -V */, anonymous_43, Flag, INVALID, v, nullptr, 0, DefaultVis, 0,
       "Alias for -v", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7250 /* -v */, v, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Display the version number", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7253 /* --warn-backrefs-exclude= */, warn_backrefs_exclude_eq, Joined, INVALID, warn_backrefs_exclude, nullptr, 0, DefaultVis, 0,
       "Glob describing an archive (or an object file within --start-lib) which should be ignored for --warn-backrefs.", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<glob>", nullptr, 0)
OPTION(6, 7278 /* --warn-backrefs-exclude */, warn_backrefs_exclude, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<glob>", nullptr, 0)
OPTION(6, 7302 /* --warn-backrefs */, warn_backrefs, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Warn about backward symbol references to extract archive members", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7318 /* --warn-common */, warn_common, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Warn about duplicate common symbols", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7332 /* --warn-execstack */, anonymous_80, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7349 /* --warn-ifunc-textrel */, warn_ifunc_textrel, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Warn about using ifunc symbols with text relocations", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7370 /* --warn-once */, anonymous_81, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7382 /* --warn-shared-textrel */, anonymous_82, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7404 /* --warn-symbol-ordering */, warn_symbol_ordering, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Warn about problems with the symbol ordering file (default)", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7427 /* --warn-unresolved-symbols */, warn_unresolved_symbols, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Report unresolved symbols as warnings", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(8, 7453 /* --whole-archive */, whole_archive, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Force load of all members in a static library", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7469 /* --why-extract= */, why_extract, Joined, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Print to a file about why archive members are extracted", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7484 /* --why-live= */, why_live_eq, Joined, INVALID, why_live, nullptr, 0, DefaultVis, 0,
       "Report a chain of references preventing garbage collection for each symbol matching <glob>", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<glob>", nullptr, 0)
OPTION(6, 7496 /* --why-live */, why_live, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<glob>", nullptr, 0)
OPTION(8, 7507 /* --wrap= */, wrap_eq, Joined, INVALID, wrap, nullptr, 0, DefaultVis, 0,
       "Redirect symbol references to __wrap_symbol and __real_symbol references to symbol", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(8, 7515 /* --wrap */, wrap, Separate, INVALID, INVALID, nullptr, 0, DefaultVis, 0, nullptr, (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<symbol>", nullptr, 0)
OPTION(1, 7522 /* -w */, anonymous_4, Flag, INVALID, no_warnings, nullptr, 0, DefaultVis, 0,
       "Alias for --no-warnings", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(6, 7525 /* --xosegment */, xosegment, Flag, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Put execute-only sections in their own segment", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7537 /* -X */, anonymous_14, Flag, INVALID, discard_locals, nullptr, 0, DefaultVis, 0,
       "Alias for --discard-locals", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7540 /* -x */, anonymous_13, Flag, INVALID, discard_all, nullptr, 0, DefaultVis, 0,
       "Alias for --discard-all", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7543 /* -y */, anonymous_41, JoinedOrSeparate, INVALID, trace_symbol, nullptr, 0, DefaultVis, 0,
       "Alias for --trace-symbol", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), nullptr, nullptr, 0)
OPTION(1, 7546 /* -z */, z, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, DefaultVis, 0,
       "Linker option extensions", (std::array<std::pair<std::array<unsigned, 2>, const char*>, 1>{{ {std::array<unsigned, 2>{{0, 0}}, nullptr} }}), "<option>", nullptr, 0)
#endif // OPTION

#ifdef SIMPLE_ENUM_VALUE_TABLE

struct SimpleEnumValue {
  const char *Name;
  unsigned Value;
};

struct SimpleEnumValueTable {
  const SimpleEnumValue *Table;
  unsigned Size;
};
static const SimpleEnumValueTable SimpleEnumValueTables[] = {};
static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);
#endif // SIMPLE_ENUM_VALUE_TABLE

/////////

// SubCommands

#ifdef OPTTABLE_SUBCOMMANDS_CODE
static constexpr llvm::opt::OptTable::SubCommand OptionSubCommands[] = {
};
#endif // OPTTABLE_SUBCOMMANDS_CODE


