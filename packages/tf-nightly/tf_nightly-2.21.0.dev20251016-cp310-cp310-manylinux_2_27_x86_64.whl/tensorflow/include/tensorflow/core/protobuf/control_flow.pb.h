// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/control_flow.proto
// Protobuf C++ Version: 6.31.1

#ifndef tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_2epb_2eh
#define tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;
}  // extern "C"
namespace tensorflow {
class CondContextDef;
struct CondContextDefDefaultTypeInternal;
PROTOBUF_EXPORT extern CondContextDefDefaultTypeInternal _CondContextDef_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull CondContextDef_class_data_;
class ControlFlowContextDef;
struct ControlFlowContextDefDefaultTypeInternal;
PROTOBUF_EXPORT extern ControlFlowContextDefDefaultTypeInternal _ControlFlowContextDef_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ControlFlowContextDef_class_data_;
class ValuesDef;
struct ValuesDefDefaultTypeInternal;
PROTOBUF_EXPORT extern ValuesDefDefaultTypeInternal _ValuesDef_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ValuesDef_class_data_;
class ValuesDef_ExternalValuesEntry_DoNotUse;
struct ValuesDef_ExternalValuesEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern ValuesDef_ExternalValuesEntry_DoNotUseDefaultTypeInternal _ValuesDef_ExternalValuesEntry_DoNotUse_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ValuesDef_ExternalValuesEntry_DoNotUse_class_data_;
class WhileContextDef;
struct WhileContextDefDefaultTypeInternal;
PROTOBUF_EXPORT extern WhileContextDefDefaultTypeInternal _WhileContextDef_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull WhileContextDef_class_data_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class ValuesDef_ExternalValuesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ValuesDef_ExternalValuesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValuesDef_ExternalValuesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ValuesDef_ExternalValuesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ValuesDef_ExternalValuesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 57,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ValuesDef_ExternalValuesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ValuesDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ValuesDef) */ {
 public:
  inline ValuesDef() : ValuesDef(nullptr) {}
  ~ValuesDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValuesDef* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValuesDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValuesDef(::google::protobuf::internal::ConstantInitialized);

  inline ValuesDef(const ValuesDef& from) : ValuesDef(nullptr, from) {}
  inline ValuesDef(ValuesDef&& from) noexcept
      : ValuesDef(nullptr, ::std::move(from)) {}
  inline ValuesDef& operator=(const ValuesDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValuesDef& operator=(ValuesDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValuesDef& default_instance() {
    return *reinterpret_cast<const ValuesDef*>(
        &_ValuesDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ValuesDef& a, ValuesDef& b) { a.Swap(&b); }
  inline void Swap(ValuesDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValuesDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValuesDef* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValuesDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValuesDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValuesDef& from) { ValuesDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValuesDef* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.ValuesDef"; }

 protected:
  explicit ValuesDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ValuesDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ValuesDef& from);
  ValuesDef(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ValuesDef&& from) noexcept
      : ValuesDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
    kExternalValuesFieldNumber = 2,
  };
  // repeated string values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const ::std::string& values(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_values(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_values(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_values();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_values(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_values();

  public:
  // map<string, string> external_values = 2;
  int external_values_size() const;
  private:
  int _internal_external_values_size() const;

  public:
  void clear_external_values() ;
  const ::google::protobuf::Map<std::string, std::string>& external_values() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_external_values();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_external_values() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_external_values();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ValuesDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ValuesDef& from_msg);
    ::google::protobuf::RepeatedPtrField<::std::string> values_;
    ::google::protobuf::internal::MapField<ValuesDef_ExternalValuesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        external_values_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ValuesDef_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT CondContextDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CondContextDef) */ {
 public:
  inline CondContextDef() : CondContextDef(nullptr) {}
  ~CondContextDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CondContextDef* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CondContextDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CondContextDef(::google::protobuf::internal::ConstantInitialized);

  inline CondContextDef(const CondContextDef& from) : CondContextDef(nullptr, from) {}
  inline CondContextDef(CondContextDef&& from) noexcept
      : CondContextDef(nullptr, ::std::move(from)) {}
  inline CondContextDef& operator=(const CondContextDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CondContextDef& operator=(CondContextDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CondContextDef& default_instance() {
    return *reinterpret_cast<const CondContextDef*>(
        &_CondContextDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CondContextDef& a, CondContextDef& b) { a.Swap(&b); }
  inline void Swap(CondContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CondContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CondContextDef* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CondContextDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CondContextDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CondContextDef& from) { CondContextDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CondContextDef* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.CondContextDef"; }

 protected:
  explicit CondContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CondContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CondContextDef& from);
  CondContextDef(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CondContextDef&& from) noexcept
      : CondContextDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNestedContextsFieldNumber = 6,
    kContextNameFieldNumber = 1,
    kPredNameFieldNumber = 2,
    kPivotNameFieldNumber = 3,
    kValuesDefFieldNumber = 5,
    kBranchFieldNumber = 4,
  };
  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
  int nested_contexts_size() const;
  private:
  int _internal_nested_contexts_size() const;

  public:
  void clear_nested_contexts() ;
  ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL mutable_nested_contexts(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL mutable_nested_contexts();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& _internal_nested_contexts() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL _internal_mutable_nested_contexts();
  public:
  const ::tensorflow::ControlFlowContextDef& nested_contexts(int index) const;
  ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL add_nested_contexts();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& nested_contexts() const;
  // string context_name = 1;
  void clear_context_name() ;
  const ::std::string& context_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_context_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_context_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_context_name();
  void set_allocated_context_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_context_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_context_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_context_name();

  public:
  // string pred_name = 2;
  void clear_pred_name() ;
  const ::std::string& pred_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pred_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pred_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pred_name();
  void set_allocated_pred_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pred_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pred_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pred_name();

  public:
  // string pivot_name = 3;
  void clear_pivot_name() ;
  const ::std::string& pivot_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pivot_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pivot_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pivot_name();
  void set_allocated_pivot_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pivot_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pivot_name();

  public:
  // .tensorflow.ValuesDef values_def = 5;
  bool has_values_def() const;
  void clear_values_def() ;
  const ::tensorflow::ValuesDef& values_def() const;
  [[nodiscard]] ::tensorflow::ValuesDef* PROTOBUF_NULLABLE release_values_def();
  ::tensorflow::ValuesDef* PROTOBUF_NONNULL mutable_values_def();
  void set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value);
  ::tensorflow::ValuesDef* PROTOBUF_NULLABLE unsafe_arena_release_values_def();

  private:
  const ::tensorflow::ValuesDef& _internal_values_def() const;
  ::tensorflow::ValuesDef* PROTOBUF_NONNULL _internal_mutable_values_def();

  public:
  // int32 branch = 4;
  void clear_branch() ;
  ::int32_t branch() const;
  void set_branch(::int32_t value);

  private:
  ::int32_t _internal_branch() const;
  void _internal_set_branch(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CondContextDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CondContextDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef > nested_contexts_;
    ::google::protobuf::internal::ArenaStringPtr context_name_;
    ::google::protobuf::internal::ArenaStringPtr pred_name_;
    ::google::protobuf::internal::ArenaStringPtr pivot_name_;
    ::tensorflow::ValuesDef* PROTOBUF_NULLABLE values_def_;
    ::int32_t branch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull CondContextDef_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ControlFlowContextDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ControlFlowContextDef) */ {
 public:
  inline ControlFlowContextDef() : ControlFlowContextDef(nullptr) {}
  ~ControlFlowContextDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ControlFlowContextDef* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ControlFlowContextDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ControlFlowContextDef(::google::protobuf::internal::ConstantInitialized);

  inline ControlFlowContextDef(const ControlFlowContextDef& from) : ControlFlowContextDef(nullptr, from) {}
  inline ControlFlowContextDef(ControlFlowContextDef&& from) noexcept
      : ControlFlowContextDef(nullptr, ::std::move(from)) {}
  inline ControlFlowContextDef& operator=(const ControlFlowContextDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlFlowContextDef& operator=(ControlFlowContextDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlFlowContextDef& default_instance() {
    return *reinterpret_cast<const ControlFlowContextDef*>(
        &_ControlFlowContextDef_default_instance_);
  }
  enum CtxtCase {
    kCondCtxt = 1,
    kWhileCtxt = 2,
    CTXT_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ControlFlowContextDef& a, ControlFlowContextDef& b) { a.Swap(&b); }
  inline void Swap(ControlFlowContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlFlowContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlFlowContextDef* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ControlFlowContextDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlFlowContextDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ControlFlowContextDef& from) { ControlFlowContextDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ControlFlowContextDef* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.ControlFlowContextDef"; }

 protected:
  explicit ControlFlowContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ControlFlowContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ControlFlowContextDef& from);
  ControlFlowContextDef(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ControlFlowContextDef&& from) noexcept
      : ControlFlowContextDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCondCtxtFieldNumber = 1,
    kWhileCtxtFieldNumber = 2,
  };
  // .tensorflow.CondContextDef cond_ctxt = 1;
  bool has_cond_ctxt() const;
  private:
  bool _internal_has_cond_ctxt() const;

  public:
  void clear_cond_ctxt() ;
  const ::tensorflow::CondContextDef& cond_ctxt() const;
  [[nodiscard]] ::tensorflow::CondContextDef* PROTOBUF_NULLABLE release_cond_ctxt();
  ::tensorflow::CondContextDef* PROTOBUF_NONNULL mutable_cond_ctxt();
  void set_allocated_cond_ctxt(::tensorflow::CondContextDef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cond_ctxt(::tensorflow::CondContextDef* PROTOBUF_NULLABLE value);
  ::tensorflow::CondContextDef* PROTOBUF_NULLABLE unsafe_arena_release_cond_ctxt();

  private:
  const ::tensorflow::CondContextDef& _internal_cond_ctxt() const;
  ::tensorflow::CondContextDef* PROTOBUF_NONNULL _internal_mutable_cond_ctxt();

  public:
  // .tensorflow.WhileContextDef while_ctxt = 2;
  bool has_while_ctxt() const;
  private:
  bool _internal_has_while_ctxt() const;

  public:
  void clear_while_ctxt() ;
  const ::tensorflow::WhileContextDef& while_ctxt() const;
  [[nodiscard]] ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE release_while_ctxt();
  ::tensorflow::WhileContextDef* PROTOBUF_NONNULL mutable_while_ctxt();
  void set_allocated_while_ctxt(::tensorflow::WhileContextDef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_while_ctxt(::tensorflow::WhileContextDef* PROTOBUF_NULLABLE value);
  ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE unsafe_arena_release_while_ctxt();

  private:
  const ::tensorflow::WhileContextDef& _internal_while_ctxt() const;
  ::tensorflow::WhileContextDef* PROTOBUF_NONNULL _internal_mutable_while_ctxt();

  public:
  void clear_ctxt();
  CtxtCase ctxt_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.ControlFlowContextDef)
 private:
  class _Internal;
  void set_has_cond_ctxt();
  void set_has_while_ctxt();
  inline bool has_ctxt() const;
  inline void clear_has_ctxt();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ControlFlowContextDef& from_msg);
    union CtxtUnion {
      constexpr CtxtUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::CondContextDef* PROTOBUF_NULLABLE cond_ctxt_;
      ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE while_ctxt_;
    } ctxt_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ControlFlowContextDef_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT WhileContextDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.WhileContextDef) */ {
 public:
  inline WhileContextDef() : WhileContextDef(nullptr) {}
  ~WhileContextDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WhileContextDef* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WhileContextDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WhileContextDef(::google::protobuf::internal::ConstantInitialized);

  inline WhileContextDef(const WhileContextDef& from) : WhileContextDef(nullptr, from) {}
  inline WhileContextDef(WhileContextDef&& from) noexcept
      : WhileContextDef(nullptr, ::std::move(from)) {}
  inline WhileContextDef& operator=(const WhileContextDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhileContextDef& operator=(WhileContextDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhileContextDef& default_instance() {
    return *reinterpret_cast<const WhileContextDef*>(
        &_WhileContextDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(WhileContextDef& a, WhileContextDef& b) { a.Swap(&b); }
  inline void Swap(WhileContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhileContextDef* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhileContextDef* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WhileContextDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhileContextDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WhileContextDef& from) { WhileContextDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WhileContextDef* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.WhileContextDef"; }

 protected:
  explicit WhileContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WhileContextDef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WhileContextDef& from);
  WhileContextDef(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WhileContextDef&& from) noexcept
      : WhileContextDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLoopExitNamesFieldNumber = 8,
    kLoopEnterNamesFieldNumber = 10,
    kNestedContextsFieldNumber = 12,
    kContextNameFieldNumber = 1,
    kPivotNameFieldNumber = 5,
    kPivotForPredNameFieldNumber = 6,
    kPivotForBodyNameFieldNumber = 7,
    kMaximumIterationsNameFieldNumber = 11,
    kValuesDefFieldNumber = 9,
    kParallelIterationsFieldNumber = 2,
    kBackPropFieldNumber = 3,
    kSwapMemoryFieldNumber = 4,
  };
  // repeated string loop_exit_names = 8;
  int loop_exit_names_size() const;
  private:
  int _internal_loop_exit_names_size() const;

  public:
  void clear_loop_exit_names() ;
  const ::std::string& loop_exit_names(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_loop_exit_names(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_loop_exit_names(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_loop_exit_names();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_loop_exit_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& loop_exit_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_loop_exit_names();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_loop_exit_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_loop_exit_names();

  public:
  // repeated string loop_enter_names = 10;
  int loop_enter_names_size() const;
  private:
  int _internal_loop_enter_names_size() const;

  public:
  void clear_loop_enter_names() ;
  const ::std::string& loop_enter_names(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_loop_enter_names(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_loop_enter_names(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_loop_enter_names();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_loop_enter_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& loop_enter_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_loop_enter_names();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_loop_enter_names() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_loop_enter_names();

  public:
  // repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
  int nested_contexts_size() const;
  private:
  int _internal_nested_contexts_size() const;

  public:
  void clear_nested_contexts() ;
  ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL mutable_nested_contexts(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL mutable_nested_contexts();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& _internal_nested_contexts() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL _internal_mutable_nested_contexts();
  public:
  const ::tensorflow::ControlFlowContextDef& nested_contexts(int index) const;
  ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL add_nested_contexts();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& nested_contexts() const;
  // string context_name = 1;
  void clear_context_name() ;
  const ::std::string& context_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_context_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_context_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_context_name();
  void set_allocated_context_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_context_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_context_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_context_name();

  public:
  // string pivot_name = 5;
  void clear_pivot_name() ;
  const ::std::string& pivot_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pivot_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pivot_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pivot_name();
  void set_allocated_pivot_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pivot_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pivot_name();

  public:
  // string pivot_for_pred_name = 6;
  void clear_pivot_for_pred_name() ;
  const ::std::string& pivot_for_pred_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pivot_for_pred_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pivot_for_pred_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pivot_for_pred_name();
  void set_allocated_pivot_for_pred_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pivot_for_pred_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_for_pred_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pivot_for_pred_name();

  public:
  // string pivot_for_body_name = 7;
  void clear_pivot_for_body_name() ;
  const ::std::string& pivot_for_body_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pivot_for_body_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pivot_for_body_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pivot_for_body_name();
  void set_allocated_pivot_for_body_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pivot_for_body_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pivot_for_body_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pivot_for_body_name();

  public:
  // string maximum_iterations_name = 11;
  void clear_maximum_iterations_name() ;
  const ::std::string& maximum_iterations_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_maximum_iterations_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_maximum_iterations_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_maximum_iterations_name();
  void set_allocated_maximum_iterations_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_maximum_iterations_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_maximum_iterations_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_maximum_iterations_name();

  public:
  // .tensorflow.ValuesDef values_def = 9;
  bool has_values_def() const;
  void clear_values_def() ;
  const ::tensorflow::ValuesDef& values_def() const;
  [[nodiscard]] ::tensorflow::ValuesDef* PROTOBUF_NULLABLE release_values_def();
  ::tensorflow::ValuesDef* PROTOBUF_NONNULL mutable_values_def();
  void set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value);
  ::tensorflow::ValuesDef* PROTOBUF_NULLABLE unsafe_arena_release_values_def();

  private:
  const ::tensorflow::ValuesDef& _internal_values_def() const;
  ::tensorflow::ValuesDef* PROTOBUF_NONNULL _internal_mutable_values_def();

  public:
  // int32 parallel_iterations = 2;
  void clear_parallel_iterations() ;
  ::int32_t parallel_iterations() const;
  void set_parallel_iterations(::int32_t value);

  private:
  ::int32_t _internal_parallel_iterations() const;
  void _internal_set_parallel_iterations(::int32_t value);

  public:
  // bool back_prop = 3;
  void clear_back_prop() ;
  bool back_prop() const;
  void set_back_prop(bool value);

  private:
  bool _internal_back_prop() const;
  void _internal_set_back_prop(bool value);

  public:
  // bool swap_memory = 4;
  void clear_swap_memory() ;
  bool swap_memory() const;
  void set_swap_memory(bool value);

  private:
  bool _internal_swap_memory() const;
  void _internal_set_swap_memory(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.WhileContextDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12,
                                   2, 157,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WhileContextDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> loop_exit_names_;
    ::google::protobuf::RepeatedPtrField<::std::string> loop_enter_names_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::ControlFlowContextDef > nested_contexts_;
    ::google::protobuf::internal::ArenaStringPtr context_name_;
    ::google::protobuf::internal::ArenaStringPtr pivot_name_;
    ::google::protobuf::internal::ArenaStringPtr pivot_for_pred_name_;
    ::google::protobuf::internal::ArenaStringPtr pivot_for_body_name_;
    ::google::protobuf::internal::ArenaStringPtr maximum_iterations_name_;
    ::tensorflow::ValuesDef* PROTOBUF_NULLABLE values_def_;
    ::int32_t parallel_iterations_;
    bool back_prop_;
    bool swap_memory_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull WhileContextDef_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ValuesDef

// repeated string values = 1;
inline int ValuesDef::_internal_values_size() const {
  return _internal_values().size();
}
inline int ValuesDef::values_size() const {
  return _internal_values_size();
}
inline void ValuesDef::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ValuesDef::add_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.ValuesDef.values)
  return _s;
}
inline const ::std::string& ValuesDef::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ValuesDef.values)
  return _internal_values().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ValuesDef::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.ValuesDef.values)
  return _internal_mutable_values()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ValuesDef::set_values(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_values()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:tensorflow.ValuesDef.values)
}
template <typename Arg_, typename... Args_>
inline void ValuesDef::add_values(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_values(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.ValuesDef.values)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ValuesDef::values()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.ValuesDef.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValuesDef::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ValuesDef.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ValuesDef::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValuesDef::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// map<string, string> external_values = 2;
inline int ValuesDef::_internal_external_values_size() const {
  return _internal_external_values().size();
}
inline int ValuesDef::external_values_size() const {
  return _internal_external_values_size();
}
inline void ValuesDef::clear_external_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_values_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ValuesDef::_internal_external_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_values_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ValuesDef::external_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.ValuesDef.external_values)
  return _internal_external_values();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ValuesDef::_internal_mutable_external_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.external_values_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ValuesDef::mutable_external_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ValuesDef.external_values)
  return _internal_mutable_external_values();
}

// -------------------------------------------------------------------

// ControlFlowContextDef

// .tensorflow.CondContextDef cond_ctxt = 1;
inline bool ControlFlowContextDef::has_cond_ctxt() const {
  return ctxt_case() == kCondCtxt;
}
inline bool ControlFlowContextDef::_internal_has_cond_ctxt() const {
  return ctxt_case() == kCondCtxt;
}
inline void ControlFlowContextDef::set_has_cond_ctxt() {
  _impl_._oneof_case_[0] = kCondCtxt;
}
inline void ControlFlowContextDef::clear_cond_ctxt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (ctxt_case() == kCondCtxt) {
    if (GetArena() == nullptr) {
      delete _impl_.ctxt_.cond_ctxt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.ctxt_.cond_ctxt_);
    }
    clear_has_ctxt();
  }
}
inline ::tensorflow::CondContextDef* PROTOBUF_NULLABLE ControlFlowContextDef::release_cond_ctxt() {
  // @@protoc_insertion_point(field_release:tensorflow.ControlFlowContextDef.cond_ctxt)
  if (ctxt_case() == kCondCtxt) {
    clear_has_ctxt();
    auto* temp = _impl_.ctxt_.cond_ctxt_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ctxt_.cond_ctxt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::CondContextDef& ControlFlowContextDef::_internal_cond_ctxt() const {
  return ctxt_case() == kCondCtxt ? *_impl_.ctxt_.cond_ctxt_ : reinterpret_cast<::tensorflow::CondContextDef&>(::tensorflow::_CondContextDef_default_instance_);
}
inline const ::tensorflow::CondContextDef& ControlFlowContextDef::cond_ctxt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ControlFlowContextDef.cond_ctxt)
  return _internal_cond_ctxt();
}
inline ::tensorflow::CondContextDef* PROTOBUF_NULLABLE ControlFlowContextDef::unsafe_arena_release_cond_ctxt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.ControlFlowContextDef.cond_ctxt)
  if (ctxt_case() == kCondCtxt) {
    clear_has_ctxt();
    auto* temp = _impl_.ctxt_.cond_ctxt_;
    _impl_.ctxt_.cond_ctxt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ControlFlowContextDef::unsafe_arena_set_allocated_cond_ctxt(
    ::tensorflow::CondContextDef* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_ctxt();
  if (value) {
    set_has_cond_ctxt();
    _impl_.ctxt_.cond_ctxt_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ControlFlowContextDef.cond_ctxt)
}
inline ::tensorflow::CondContextDef* PROTOBUF_NONNULL ControlFlowContextDef::_internal_mutable_cond_ctxt() {
  if (ctxt_case() != kCondCtxt) {
    clear_ctxt();
    set_has_cond_ctxt();
    _impl_.ctxt_.cond_ctxt_ = 
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::CondContextDef>(GetArena());
  }
  return _impl_.ctxt_.cond_ctxt_;
}
inline ::tensorflow::CondContextDef* PROTOBUF_NONNULL ControlFlowContextDef::mutable_cond_ctxt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::CondContextDef* _msg = _internal_mutable_cond_ctxt();
  // @@protoc_insertion_point(field_mutable:tensorflow.ControlFlowContextDef.cond_ctxt)
  return _msg;
}

// .tensorflow.WhileContextDef while_ctxt = 2;
inline bool ControlFlowContextDef::has_while_ctxt() const {
  return ctxt_case() == kWhileCtxt;
}
inline bool ControlFlowContextDef::_internal_has_while_ctxt() const {
  return ctxt_case() == kWhileCtxt;
}
inline void ControlFlowContextDef::set_has_while_ctxt() {
  _impl_._oneof_case_[0] = kWhileCtxt;
}
inline void ControlFlowContextDef::clear_while_ctxt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (ctxt_case() == kWhileCtxt) {
    if (GetArena() == nullptr) {
      delete _impl_.ctxt_.while_ctxt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.ctxt_.while_ctxt_);
    }
    clear_has_ctxt();
  }
}
inline ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE ControlFlowContextDef::release_while_ctxt() {
  // @@protoc_insertion_point(field_release:tensorflow.ControlFlowContextDef.while_ctxt)
  if (ctxt_case() == kWhileCtxt) {
    clear_has_ctxt();
    auto* temp = _impl_.ctxt_.while_ctxt_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ctxt_.while_ctxt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::WhileContextDef& ControlFlowContextDef::_internal_while_ctxt() const {
  return ctxt_case() == kWhileCtxt ? *_impl_.ctxt_.while_ctxt_ : reinterpret_cast<::tensorflow::WhileContextDef&>(::tensorflow::_WhileContextDef_default_instance_);
}
inline const ::tensorflow::WhileContextDef& ControlFlowContextDef::while_ctxt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.ControlFlowContextDef.while_ctxt)
  return _internal_while_ctxt();
}
inline ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE ControlFlowContextDef::unsafe_arena_release_while_ctxt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.ControlFlowContextDef.while_ctxt)
  if (ctxt_case() == kWhileCtxt) {
    clear_has_ctxt();
    auto* temp = _impl_.ctxt_.while_ctxt_;
    _impl_.ctxt_.while_ctxt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ControlFlowContextDef::unsafe_arena_set_allocated_while_ctxt(
    ::tensorflow::WhileContextDef* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_ctxt();
  if (value) {
    set_has_while_ctxt();
    _impl_.ctxt_.while_ctxt_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.ControlFlowContextDef.while_ctxt)
}
inline ::tensorflow::WhileContextDef* PROTOBUF_NONNULL ControlFlowContextDef::_internal_mutable_while_ctxt() {
  if (ctxt_case() != kWhileCtxt) {
    clear_ctxt();
    set_has_while_ctxt();
    _impl_.ctxt_.while_ctxt_ = 
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::WhileContextDef>(GetArena());
  }
  return _impl_.ctxt_.while_ctxt_;
}
inline ::tensorflow::WhileContextDef* PROTOBUF_NONNULL ControlFlowContextDef::mutable_while_ctxt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::WhileContextDef* _msg = _internal_mutable_while_ctxt();
  // @@protoc_insertion_point(field_mutable:tensorflow.ControlFlowContextDef.while_ctxt)
  return _msg;
}

inline bool ControlFlowContextDef::has_ctxt() const {
  return ctxt_case() != CTXT_NOT_SET;
}
inline void ControlFlowContextDef::clear_has_ctxt() {
  _impl_._oneof_case_[0] = CTXT_NOT_SET;
}
inline ControlFlowContextDef::CtxtCase ControlFlowContextDef::ctxt_case() const {
  return ControlFlowContextDef::CtxtCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CondContextDef

// string context_name = 1;
inline void CondContextDef::clear_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CondContextDef::context_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.context_name)
  return _internal_context_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CondContextDef::set_context_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.context_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.context_name)
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::mutable_context_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_context_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.context_name)
  return _s;
}
inline const ::std::string& CondContextDef::_internal_context_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_name_.Get();
}
inline void CondContextDef::_internal_set_context_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.context_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::_internal_mutable_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.context_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CondContextDef::release_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.context_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.context_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.context_name_.Set("", GetArena());
  }
  return released;
}
inline void CondContextDef::set_allocated_context_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.context_name_.IsDefault()) {
    _impl_.context_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.context_name)
}

// string pred_name = 2;
inline void CondContextDef::clear_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pred_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CondContextDef::pred_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pred_name)
  return _internal_pred_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CondContextDef::set_pred_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pred_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pred_name)
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::mutable_pred_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pred_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pred_name)
  return _s;
}
inline const ::std::string& CondContextDef::_internal_pred_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pred_name_.Get();
}
inline void CondContextDef::_internal_set_pred_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pred_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::_internal_mutable_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pred_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CondContextDef::release_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pred_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pred_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pred_name_.Set("", GetArena());
  }
  return released;
}
inline void CondContextDef::set_allocated_pred_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pred_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pred_name_.IsDefault()) {
    _impl_.pred_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pred_name)
}

// string pivot_name = 3;
inline void CondContextDef::clear_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CondContextDef::pivot_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pivot_name)
  return _internal_pivot_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CondContextDef::set_pivot_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pivot_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pivot_name)
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::mutable_pivot_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pivot_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pivot_name)
  return _s;
}
inline const ::std::string& CondContextDef::_internal_pivot_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_name_.Get();
}
inline void CondContextDef::_internal_set_pivot_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pivot_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CondContextDef::_internal_mutable_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.pivot_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CondContextDef::release_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pivot_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.pivot_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pivot_name_.Set("", GetArena());
  }
  return released;
}
inline void CondContextDef::set_allocated_pivot_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.pivot_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_name_.IsDefault()) {
    _impl_.pivot_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pivot_name)
}

// int32 branch = 4;
inline void CondContextDef::clear_branch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CondContextDef::branch() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.branch)
  return _internal_branch();
}
inline void CondContextDef::set_branch(::int32_t value) {
  _internal_set_branch(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.branch)
}
inline ::int32_t CondContextDef::_internal_branch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.branch_;
}
inline void CondContextDef::_internal_set_branch(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_ = value;
}

// .tensorflow.ValuesDef values_def = 5;
inline bool CondContextDef::has_values_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.values_def_ != nullptr);
  return value;
}
inline void CondContextDef::clear_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.values_def_ != nullptr) _impl_.values_def_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::tensorflow::ValuesDef& CondContextDef::_internal_values_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ValuesDef* p = _impl_.values_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ValuesDef&>(::tensorflow::_ValuesDef_default_instance_);
}
inline const ::tensorflow::ValuesDef& CondContextDef::values_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.values_def)
  return _internal_values_def();
}
inline void CondContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.values_def_);
  }
  _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.values_def)
}
inline ::tensorflow::ValuesDef* PROTOBUF_NULLABLE CondContextDef::release_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tensorflow::ValuesDef* released = _impl_.values_def_;
  _impl_.values_def_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NULLABLE CondContextDef::unsafe_arena_release_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.values_def)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tensorflow::ValuesDef* temp = _impl_.values_def_;
  _impl_.values_def_ = nullptr;
  return temp;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NONNULL CondContextDef::_internal_mutable_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.values_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ValuesDef>(GetArena());
    _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(p);
  }
  return _impl_.values_def_;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NONNULL CondContextDef::mutable_values_def()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tensorflow::ValuesDef* _msg = _internal_mutable_values_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.values_def)
  return _msg;
}
inline void CondContextDef::set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.values_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.values_def)
}

// repeated .tensorflow.ControlFlowContextDef nested_contexts = 6;
inline int CondContextDef::_internal_nested_contexts_size() const {
  return _internal_nested_contexts().size();
}
inline int CondContextDef::nested_contexts_size() const {
  return _internal_nested_contexts_size();
}
inline void CondContextDef::clear_nested_contexts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nested_contexts_.Clear();
}
inline ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL CondContextDef::mutable_nested_contexts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.nested_contexts)
  return _internal_mutable_nested_contexts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL CondContextDef::mutable_nested_contexts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CondContextDef.nested_contexts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nested_contexts();
}
inline const ::tensorflow::ControlFlowContextDef& CondContextDef::nested_contexts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.nested_contexts)
  return _internal_nested_contexts().Get(index);
}
inline ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL CondContextDef::add_nested_contexts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::ControlFlowContextDef* _add = _internal_mutable_nested_contexts()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.CondContextDef.nested_contexts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& CondContextDef::nested_contexts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.CondContextDef.nested_contexts)
  return _internal_nested_contexts();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>&
CondContextDef::_internal_nested_contexts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nested_contexts_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL
CondContextDef::_internal_mutable_nested_contexts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nested_contexts_;
}

// -------------------------------------------------------------------

// WhileContextDef

// string context_name = 1;
inline void WhileContextDef::clear_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& WhileContextDef::context_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.context_name)
  return _internal_context_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WhileContextDef::set_context_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.context_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.context_name)
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_context_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_context_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.context_name)
  return _s;
}
inline const ::std::string& WhileContextDef::_internal_context_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_name_.Get();
}
inline void WhileContextDef::_internal_set_context_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.context_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.context_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WhileContextDef::release_context_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.context_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.context_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.context_name_.Set("", GetArena());
  }
  return released;
}
inline void WhileContextDef::set_allocated_context_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.context_name_.IsDefault()) {
    _impl_.context_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.context_name)
}

// int32 parallel_iterations = 2;
inline void WhileContextDef::clear_parallel_iterations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parallel_iterations_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t WhileContextDef::parallel_iterations() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.parallel_iterations)
  return _internal_parallel_iterations();
}
inline void WhileContextDef::set_parallel_iterations(::int32_t value) {
  _internal_set_parallel_iterations(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.parallel_iterations)
}
inline ::int32_t WhileContextDef::_internal_parallel_iterations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parallel_iterations_;
}
inline void WhileContextDef::_internal_set_parallel_iterations(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parallel_iterations_ = value;
}

// bool back_prop = 3;
inline void WhileContextDef::clear_back_prop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.back_prop_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool WhileContextDef::back_prop() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.back_prop)
  return _internal_back_prop();
}
inline void WhileContextDef::set_back_prop(bool value) {
  _internal_set_back_prop(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.back_prop)
}
inline bool WhileContextDef::_internal_back_prop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.back_prop_;
}
inline void WhileContextDef::_internal_set_back_prop(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.back_prop_ = value;
}

// bool swap_memory = 4;
inline void WhileContextDef::clear_swap_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.swap_memory_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool WhileContextDef::swap_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.swap_memory)
  return _internal_swap_memory();
}
inline void WhileContextDef::set_swap_memory(bool value) {
  _internal_set_swap_memory(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.swap_memory)
}
inline bool WhileContextDef::_internal_swap_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.swap_memory_;
}
inline void WhileContextDef::_internal_set_swap_memory(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.swap_memory_ = value;
}

// string pivot_name = 5;
inline void WhileContextDef::clear_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& WhileContextDef::pivot_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_name)
  return _internal_pivot_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WhileContextDef::set_pivot_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pivot_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_name)
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_pivot_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pivot_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_name)
  return _s;
}
inline const ::std::string& WhileContextDef::_internal_pivot_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_name_.Get();
}
inline void WhileContextDef::_internal_set_pivot_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pivot_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pivot_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WhileContextDef::release_pivot_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pivot_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pivot_name_.Set("", GetArena());
  }
  return released;
}
inline void WhileContextDef::set_allocated_pivot_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pivot_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_name_.IsDefault()) {
    _impl_.pivot_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_name)
}

// string pivot_for_pred_name = 6;
inline void WhileContextDef::clear_pivot_for_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_for_pred_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& WhileContextDef::pivot_for_pred_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_pred_name)
  return _internal_pivot_for_pred_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WhileContextDef::set_pivot_for_pred_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pivot_for_pred_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_pred_name)
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_pivot_for_pred_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pivot_for_pred_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_pred_name)
  return _s;
}
inline const ::std::string& WhileContextDef::_internal_pivot_for_pred_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_for_pred_name_.Get();
}
inline void WhileContextDef::_internal_set_pivot_for_pred_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pivot_for_pred_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_pivot_for_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.pivot_for_pred_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WhileContextDef::release_pivot_for_pred_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.pivot_for_pred_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pivot_for_pred_name_.Set("", GetArena());
  }
  return released;
}
inline void WhileContextDef::set_allocated_pivot_for_pred_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.pivot_for_pred_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_for_pred_name_.IsDefault()) {
    _impl_.pivot_for_pred_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}

// string pivot_for_body_name = 7;
inline void WhileContextDef::clear_pivot_for_body_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pivot_for_body_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& WhileContextDef::pivot_for_body_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_body_name)
  return _internal_pivot_for_body_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WhileContextDef::set_pivot_for_body_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.pivot_for_body_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_body_name)
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_pivot_for_body_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pivot_for_body_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_body_name)
  return _s;
}
inline const ::std::string& WhileContextDef::_internal_pivot_for_body_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pivot_for_body_name_.Get();
}
inline void WhileContextDef::_internal_set_pivot_for_body_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.pivot_for_body_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_pivot_for_body_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.pivot_for_body_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WhileContextDef::release_pivot_for_body_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_body_name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.pivot_for_body_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pivot_for_body_name_.Set("", GetArena());
  }
  return released;
}
inline void WhileContextDef::set_allocated_pivot_for_body_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.pivot_for_body_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pivot_for_body_name_.IsDefault()) {
    _impl_.pivot_for_body_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}

// repeated string loop_exit_names = 8;
inline int WhileContextDef::_internal_loop_exit_names_size() const {
  return _internal_loop_exit_names().size();
}
inline int WhileContextDef::loop_exit_names_size() const {
  return _internal_loop_exit_names_size();
}
inline void WhileContextDef::clear_loop_exit_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loop_exit_names_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::add_loop_exit_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_loop_exit_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return _s;
}
inline const ::std::string& WhileContextDef::loop_exit_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_exit_names)
  return _internal_loop_exit_names().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_loop_exit_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return _internal_mutable_loop_exit_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void WhileContextDef::set_loop_exit_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_loop_exit_names()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_exit_names)
}
template <typename Arg_, typename... Args_>
inline void WhileContextDef::add_loop_exit_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_loop_exit_names(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_exit_names)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& WhileContextDef::loop_exit_names()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_exit_names)
  return _internal_loop_exit_names();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
WhileContextDef::mutable_loop_exit_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_exit_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_loop_exit_names();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
WhileContextDef::_internal_loop_exit_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loop_exit_names_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
WhileContextDef::_internal_mutable_loop_exit_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.loop_exit_names_;
}

// repeated string loop_enter_names = 10;
inline int WhileContextDef::_internal_loop_enter_names_size() const {
  return _internal_loop_enter_names().size();
}
inline int WhileContextDef::loop_enter_names_size() const {
  return _internal_loop_enter_names_size();
}
inline void WhileContextDef::clear_loop_enter_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loop_enter_names_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::add_loop_enter_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_loop_enter_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return _s;
}
inline const ::std::string& WhileContextDef::loop_enter_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_enter_names)
  return _internal_loop_enter_names().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_loop_enter_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_enter_names)
  return _internal_mutable_loop_enter_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void WhileContextDef::set_loop_enter_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_loop_enter_names()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_enter_names)
}
template <typename Arg_, typename... Args_>
inline void WhileContextDef::add_loop_enter_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_loop_enter_names(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_enter_names)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& WhileContextDef::loop_enter_names()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_enter_names)
  return _internal_loop_enter_names();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
WhileContextDef::mutable_loop_enter_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_enter_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_loop_enter_names();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
WhileContextDef::_internal_loop_enter_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.loop_enter_names_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
WhileContextDef::_internal_mutable_loop_enter_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.loop_enter_names_;
}

// .tensorflow.ValuesDef values_def = 9;
inline bool WhileContextDef::has_values_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.values_def_ != nullptr);
  return value;
}
inline void WhileContextDef::clear_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.values_def_ != nullptr) _impl_.values_def_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::tensorflow::ValuesDef& WhileContextDef::_internal_values_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::ValuesDef* p = _impl_.values_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::ValuesDef&>(::tensorflow::_ValuesDef_default_instance_);
}
inline const ::tensorflow::ValuesDef& WhileContextDef::values_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.values_def)
  return _internal_values_def();
}
inline void WhileContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.values_def_);
  }
  _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.values_def)
}
inline ::tensorflow::ValuesDef* PROTOBUF_NULLABLE WhileContextDef::release_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tensorflow::ValuesDef* released = _impl_.values_def_;
  _impl_.values_def_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NULLABLE WhileContextDef::unsafe_arena_release_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.values_def)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tensorflow::ValuesDef* temp = _impl_.values_def_;
  _impl_.values_def_ = nullptr;
  return temp;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_values_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.values_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::ValuesDef>(GetArena());
    _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(p);
  }
  return _impl_.values_def_;
}
inline ::tensorflow::ValuesDef* PROTOBUF_NONNULL WhileContextDef::mutable_values_def()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::tensorflow::ValuesDef* _msg = _internal_mutable_values_def();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.values_def)
  return _msg;
}
inline void WhileContextDef::set_allocated_values_def(::tensorflow::ValuesDef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.values_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.values_def_ = reinterpret_cast<::tensorflow::ValuesDef*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.values_def)
}

// string maximum_iterations_name = 11;
inline void WhileContextDef::clear_maximum_iterations_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maximum_iterations_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& WhileContextDef::maximum_iterations_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.maximum_iterations_name)
  return _internal_maximum_iterations_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WhileContextDef::set_maximum_iterations_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.maximum_iterations_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.maximum_iterations_name)
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::mutable_maximum_iterations_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_maximum_iterations_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.maximum_iterations_name)
  return _s;
}
inline const ::std::string& WhileContextDef::_internal_maximum_iterations_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maximum_iterations_name_.Get();
}
inline void WhileContextDef::_internal_set_maximum_iterations_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.maximum_iterations_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WhileContextDef::_internal_mutable_maximum_iterations_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.maximum_iterations_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WhileContextDef::release_maximum_iterations_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.maximum_iterations_name)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.maximum_iterations_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.maximum_iterations_name_.Set("", GetArena());
  }
  return released;
}
inline void WhileContextDef::set_allocated_maximum_iterations_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.maximum_iterations_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.maximum_iterations_name_.IsDefault()) {
    _impl_.maximum_iterations_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.maximum_iterations_name)
}

// repeated .tensorflow.ControlFlowContextDef nested_contexts = 12;
inline int WhileContextDef::_internal_nested_contexts_size() const {
  return _internal_nested_contexts().size();
}
inline int WhileContextDef::nested_contexts_size() const {
  return _internal_nested_contexts_size();
}
inline void WhileContextDef::clear_nested_contexts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nested_contexts_.Clear();
}
inline ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL WhileContextDef::mutable_nested_contexts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.nested_contexts)
  return _internal_mutable_nested_contexts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL WhileContextDef::mutable_nested_contexts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.nested_contexts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nested_contexts();
}
inline const ::tensorflow::ControlFlowContextDef& WhileContextDef::nested_contexts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.nested_contexts)
  return _internal_nested_contexts().Get(index);
}
inline ::tensorflow::ControlFlowContextDef* PROTOBUF_NONNULL WhileContextDef::add_nested_contexts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::ControlFlowContextDef* _add = _internal_mutable_nested_contexts()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.nested_contexts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>& WhileContextDef::nested_contexts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.nested_contexts)
  return _internal_nested_contexts();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>&
WhileContextDef::_internal_nested_contexts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nested_contexts_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::ControlFlowContextDef>* PROTOBUF_NONNULL
WhileContextDef::_internal_mutable_nested_contexts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nested_contexts_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto_2epb_2eh
