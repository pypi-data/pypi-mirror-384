// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/service/gpu/gpu_executable.proto
// Protobuf C++ Version: 6.31.1

#ifndef xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto_2epb_2eh
#define xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xla/service/hlo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto;
}  // extern "C"
namespace xla {
namespace gpu {
class OutputInfoProto;
struct OutputInfoProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern OutputInfoProtoDefaultTypeInternal _OutputInfoProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull OutputInfoProto_class_data_;
}  // namespace gpu
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {
namespace gpu {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT OutputInfoProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.gpu.OutputInfoProto) */ {
 public:
  inline OutputInfoProto() : OutputInfoProto(nullptr) {}
  ~OutputInfoProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OutputInfoProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OutputInfoProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutputInfoProto(::google::protobuf::internal::ConstantInitialized);

  inline OutputInfoProto(const OutputInfoProto& from) : OutputInfoProto(nullptr, from) {}
  inline OutputInfoProto(OutputInfoProto&& from) noexcept
      : OutputInfoProto(nullptr, ::std::move(from)) {}
  inline OutputInfoProto& operator=(const OutputInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutputInfoProto& operator=(OutputInfoProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutputInfoProto& default_instance() {
    return *reinterpret_cast<const OutputInfoProto*>(
        &_OutputInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OutputInfoProto& a, OutputInfoProto& b) { a.Swap(&b); }
  inline void Swap(OutputInfoProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutputInfoProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutputInfoProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OutputInfoProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutputInfoProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutputInfoProto& from) { OutputInfoProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OutputInfoProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xla.gpu.OutputInfoProto"; }

 protected:
  explicit OutputInfoProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  OutputInfoProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OutputInfoProto& from);
  OutputInfoProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, OutputInfoProto&& from) noexcept
      : OutputInfoProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAliasConfigFieldNumber = 3,
    kAllocationIndexFieldNumber = 1,
    kPassthroughFieldNumber = 2,
  };
  // optional .xla.HloInputOutputAliasProto.AliasEntryProto alias_config = 3;
  bool has_alias_config() const;
  void clear_alias_config() ;
  const ::xla::HloInputOutputAliasProto_AliasEntryProto& alias_config() const;
  [[nodiscard]] ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE release_alias_config();
  ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NONNULL mutable_alias_config();
  void set_allocated_alias_config(::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_alias_config(::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE value);
  ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE unsafe_arena_release_alias_config();

  private:
  const ::xla::HloInputOutputAliasProto_AliasEntryProto& _internal_alias_config() const;
  ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NONNULL _internal_mutable_alias_config();

  public:
  // int64 allocation_index = 1;
  void clear_allocation_index() ;
  ::int64_t allocation_index() const;
  void set_allocation_index(::int64_t value);

  private:
  ::int64_t _internal_allocation_index() const;
  void _internal_set_allocation_index(::int64_t value);

  public:
  // bool passthrough = 2;
  void clear_passthrough() ;
  bool passthrough() const;
  void set_passthrough(bool value);

  private:
  bool _internal_passthrough() const;
  void _internal_set_passthrough(bool value);

  public:
  // @@protoc_insertion_point(class_scope:xla.gpu.OutputInfoProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const OutputInfoProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE alias_config_;
    ::int64_t allocation_index_;
    bool passthrough_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull OutputInfoProto_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OutputInfoProto

// int64 allocation_index = 1;
inline void OutputInfoProto::clear_allocation_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocation_index_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t OutputInfoProto::allocation_index() const {
  // @@protoc_insertion_point(field_get:xla.gpu.OutputInfoProto.allocation_index)
  return _internal_allocation_index();
}
inline void OutputInfoProto::set_allocation_index(::int64_t value) {
  _internal_set_allocation_index(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:xla.gpu.OutputInfoProto.allocation_index)
}
inline ::int64_t OutputInfoProto::_internal_allocation_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allocation_index_;
}
inline void OutputInfoProto::_internal_set_allocation_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocation_index_ = value;
}

// bool passthrough = 2;
inline void OutputInfoProto::clear_passthrough() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passthrough_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool OutputInfoProto::passthrough() const {
  // @@protoc_insertion_point(field_get:xla.gpu.OutputInfoProto.passthrough)
  return _internal_passthrough();
}
inline void OutputInfoProto::set_passthrough(bool value) {
  _internal_set_passthrough(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:xla.gpu.OutputInfoProto.passthrough)
}
inline bool OutputInfoProto::_internal_passthrough() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.passthrough_;
}
inline void OutputInfoProto::_internal_set_passthrough(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.passthrough_ = value;
}

// optional .xla.HloInputOutputAliasProto.AliasEntryProto alias_config = 3;
inline bool OutputInfoProto::has_alias_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.alias_config_ != nullptr);
  return value;
}
inline const ::xla::HloInputOutputAliasProto_AliasEntryProto& OutputInfoProto::_internal_alias_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::HloInputOutputAliasProto_AliasEntryProto* p = _impl_.alias_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::HloInputOutputAliasProto_AliasEntryProto&>(::xla::_HloInputOutputAliasProto_AliasEntryProto_default_instance_);
}
inline const ::xla::HloInputOutputAliasProto_AliasEntryProto& OutputInfoProto::alias_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.gpu.OutputInfoProto.alias_config)
  return _internal_alias_config();
}
inline void OutputInfoProto::unsafe_arena_set_allocated_alias_config(
    ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.alias_config_);
  }
  _impl_.alias_config_ = reinterpret_cast<::xla::HloInputOutputAliasProto_AliasEntryProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.gpu.OutputInfoProto.alias_config)
}
inline ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE OutputInfoProto::release_alias_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloInputOutputAliasProto_AliasEntryProto* released = _impl_.alias_config_;
  _impl_.alias_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE OutputInfoProto::unsafe_arena_release_alias_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.gpu.OutputInfoProto.alias_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloInputOutputAliasProto_AliasEntryProto* temp = _impl_.alias_config_;
  _impl_.alias_config_ = nullptr;
  return temp;
}
inline ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NONNULL OutputInfoProto::_internal_mutable_alias_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.alias_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::HloInputOutputAliasProto_AliasEntryProto>(GetArena());
    _impl_.alias_config_ = reinterpret_cast<::xla::HloInputOutputAliasProto_AliasEntryProto*>(p);
  }
  return _impl_.alias_config_;
}
inline ::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NONNULL OutputInfoProto::mutable_alias_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xla::HloInputOutputAliasProto_AliasEntryProto* _msg = _internal_mutable_alias_config();
  // @@protoc_insertion_point(field_mutable:xla.gpu.OutputInfoProto.alias_config)
  return _msg;
}
inline void OutputInfoProto::set_allocated_alias_config(::xla::HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.alias_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.alias_config_ = reinterpret_cast<::xla::HloInputOutputAliasProto_AliasEntryProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.gpu.OutputInfoProto.alias_config)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gpu
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xla_2fservice_2fgpu_2fgpu_5fexecutable_2eproto_2epb_2eh
