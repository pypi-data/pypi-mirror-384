// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/backends/autotuner/autotuner_cache.proto
// Protobuf C++ Version: 6.31.1

#ifndef xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto_2epb_2eh
#define xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto;
}  // extern "C"
namespace xla {
class AutotunerCache;
struct AutotunerCacheDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotunerCacheDefaultTypeInternal _AutotunerCache_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCache_class_data_;
class AutotunerCacheEntry;
struct AutotunerCacheEntryDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotunerCacheEntryDefaultTypeInternal _AutotunerCacheEntry_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCacheEntry_class_data_;
class AutotunerCacheKey;
struct AutotunerCacheKeyDefaultTypeInternal;
PROTOBUF_EXPORT extern AutotunerCacheKeyDefaultTypeInternal _AutotunerCacheKey_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCacheKey_class_data_;
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotunerCacheKey final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotunerCacheKey) */ {
 public:
  inline AutotunerCacheKey() : AutotunerCacheKey(nullptr) {}
  ~AutotunerCacheKey() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutotunerCacheKey* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutotunerCacheKey));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotunerCacheKey(::google::protobuf::internal::ConstantInitialized);

  inline AutotunerCacheKey(const AutotunerCacheKey& from) : AutotunerCacheKey(nullptr, from) {}
  inline AutotunerCacheKey(AutotunerCacheKey&& from) noexcept
      : AutotunerCacheKey(nullptr, ::std::move(from)) {}
  inline AutotunerCacheKey& operator=(const AutotunerCacheKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotunerCacheKey& operator=(AutotunerCacheKey&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotunerCacheKey& default_instance() {
    return *reinterpret_cast<const AutotunerCacheKey*>(
        &_AutotunerCacheKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AutotunerCacheKey& a, AutotunerCacheKey& b) { a.Swap(&b); }
  inline void Swap(AutotunerCacheKey* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotunerCacheKey* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotunerCacheKey* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AutotunerCacheKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotunerCacheKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotunerCacheKey& from) { AutotunerCacheKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AutotunerCacheKey* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xla.AutotunerCacheKey"; }

 protected:
  explicit AutotunerCacheKey(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AutotunerCacheKey(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AutotunerCacheKey& from);
  AutotunerCacheKey(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AutotunerCacheKey&& from) noexcept
      : AutotunerCacheKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHloFingerprintFieldNumber = 1,
    kDeviceStrFieldNumber = 2,
    kVersionFieldNumber = 3,
  };
  // string hlo_fingerprint = 1;
  void clear_hlo_fingerprint() ;
  const ::std::string& hlo_fingerprint() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_hlo_fingerprint(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_hlo_fingerprint();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_hlo_fingerprint();
  void set_allocated_hlo_fingerprint(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_hlo_fingerprint() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hlo_fingerprint(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_hlo_fingerprint();

  public:
  // string device_str = 2;
  void clear_device_str() ;
  const ::std::string& device_str() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_device_str(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_device_str();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_device_str();
  void set_allocated_device_str(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_device_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_device_str(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_device_str();

  public:
  // string version = 3;
  void clear_version() ;
  const ::std::string& version() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_version();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_version();
  void set_allocated_version(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_version(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:xla.AutotunerCacheKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AutotunerCacheKey& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr hlo_fingerprint_;
    ::google::protobuf::internal::ArenaStringPtr device_str_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCacheKey_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotunerCacheEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotunerCacheEntry) */ {
 public:
  inline AutotunerCacheEntry() : AutotunerCacheEntry(nullptr) {}
  ~AutotunerCacheEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutotunerCacheEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutotunerCacheEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotunerCacheEntry(::google::protobuf::internal::ConstantInitialized);

  inline AutotunerCacheEntry(const AutotunerCacheEntry& from) : AutotunerCacheEntry(nullptr, from) {}
  inline AutotunerCacheEntry(AutotunerCacheEntry&& from) noexcept
      : AutotunerCacheEntry(nullptr, ::std::move(from)) {}
  inline AutotunerCacheEntry& operator=(const AutotunerCacheEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotunerCacheEntry& operator=(AutotunerCacheEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotunerCacheEntry& default_instance() {
    return *reinterpret_cast<const AutotunerCacheEntry*>(
        &_AutotunerCacheEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AutotunerCacheEntry& a, AutotunerCacheEntry& b) { a.Swap(&b); }
  inline void Swap(AutotunerCacheEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotunerCacheEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotunerCacheEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AutotunerCacheEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotunerCacheEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotunerCacheEntry& from) { AutotunerCacheEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AutotunerCacheEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xla.AutotunerCacheEntry"; }

 protected:
  explicit AutotunerCacheEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AutotunerCacheEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AutotunerCacheEntry& from);
  AutotunerCacheEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AutotunerCacheEntry&& from) noexcept
      : AutotunerCacheEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodegenBackendFieldNumber = 2,
    kKeyFieldNumber = 1,
    kBackendConfigFieldNumber = 3,
  };
  // string codegen_backend = 2;
  void clear_codegen_backend() ;
  const ::std::string& codegen_backend() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_codegen_backend(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_codegen_backend();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_codegen_backend();
  void set_allocated_codegen_backend(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_codegen_backend() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_codegen_backend(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_codegen_backend();

  public:
  // .xla.AutotunerCacheKey key = 1;
  bool has_key() const;
  void clear_key() ;
  const ::xla::AutotunerCacheKey& key() const;
  [[nodiscard]] ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE release_key();
  ::xla::AutotunerCacheKey* PROTOBUF_NONNULL mutable_key();
  void set_allocated_key(::xla::AutotunerCacheKey* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_key(::xla::AutotunerCacheKey* PROTOBUF_NULLABLE value);
  ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE unsafe_arena_release_key();

  private:
  const ::xla::AutotunerCacheKey& _internal_key() const;
  ::xla::AutotunerCacheKey* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // .google.protobuf.Any backend_config = 3;
  bool has_backend_config() const;
  void clear_backend_config() ;
  const ::google::protobuf::Any& backend_config() const;
  [[nodiscard]] ::google::protobuf::Any* PROTOBUF_NULLABLE release_backend_config();
  ::google::protobuf::Any* PROTOBUF_NONNULL mutable_backend_config();
  void set_allocated_backend_config(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_backend_config(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  ::google::protobuf::Any* PROTOBUF_NULLABLE unsafe_arena_release_backend_config();

  private:
  const ::google::protobuf::Any& _internal_backend_config() const;
  ::google::protobuf::Any* PROTOBUF_NONNULL _internal_mutable_backend_config();

  public:
  // @@protoc_insertion_point(class_scope:xla.AutotunerCacheEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AutotunerCacheEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr codegen_backend_;
    ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE key_;
    ::google::protobuf::Any* PROTOBUF_NULLABLE backend_config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCacheEntry_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT AutotunerCache final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.AutotunerCache) */ {
 public:
  inline AutotunerCache() : AutotunerCache(nullptr) {}
  ~AutotunerCache() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutotunerCache* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutotunerCache));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutotunerCache(::google::protobuf::internal::ConstantInitialized);

  inline AutotunerCache(const AutotunerCache& from) : AutotunerCache(nullptr, from) {}
  inline AutotunerCache(AutotunerCache&& from) noexcept
      : AutotunerCache(nullptr, ::std::move(from)) {}
  inline AutotunerCache& operator=(const AutotunerCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutotunerCache& operator=(AutotunerCache&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutotunerCache& default_instance() {
    return *reinterpret_cast<const AutotunerCache*>(
        &_AutotunerCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AutotunerCache& a, AutotunerCache& b) { a.Swap(&b); }
  inline void Swap(AutotunerCache* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutotunerCache* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutotunerCache* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AutotunerCache>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutotunerCache& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutotunerCache& from) { AutotunerCache::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AutotunerCache* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xla.AutotunerCache"; }

 protected:
  explicit AutotunerCache(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AutotunerCache(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AutotunerCache& from);
  AutotunerCache(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AutotunerCache&& from) noexcept
      : AutotunerCache(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .xla.AutotunerCacheEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::xla::AutotunerCacheEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::xla::AutotunerCacheEntry& entries(int index) const;
  ::xla::AutotunerCacheEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:xla.AutotunerCache)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AutotunerCache& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xla::AutotunerCacheEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull AutotunerCache_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AutotunerCacheEntry

// .xla.AutotunerCacheKey key = 1;
inline bool AutotunerCacheEntry::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.key_ != nullptr);
  return value;
}
inline void AutotunerCacheEntry::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::xla::AutotunerCacheKey& AutotunerCacheEntry::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::AutotunerCacheKey* p = _impl_.key_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::AutotunerCacheKey&>(::xla::_AutotunerCacheKey_default_instance_);
}
inline const ::xla::AutotunerCacheKey& AutotunerCacheEntry::key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheEntry.key)
  return _internal_key();
}
inline void AutotunerCacheEntry::unsafe_arena_set_allocated_key(
    ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.key_);
  }
  _impl_.key_ = reinterpret_cast<::xla::AutotunerCacheKey*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.AutotunerCacheEntry.key)
}
inline ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE AutotunerCacheEntry::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::AutotunerCacheKey* released = _impl_.key_;
  _impl_.key_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xla::AutotunerCacheKey* PROTOBUF_NULLABLE AutotunerCacheEntry::unsafe_arena_release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheEntry.key)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::AutotunerCacheKey* temp = _impl_.key_;
  _impl_.key_ = nullptr;
  return temp;
}
inline ::xla::AutotunerCacheKey* PROTOBUF_NONNULL AutotunerCacheEntry::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::AutotunerCacheKey>(GetArena());
    _impl_.key_ = reinterpret_cast<::xla::AutotunerCacheKey*>(p);
  }
  return _impl_.key_;
}
inline ::xla::AutotunerCacheKey* PROTOBUF_NONNULL AutotunerCacheEntry::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::xla::AutotunerCacheKey* _msg = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheEntry.key)
  return _msg;
}
inline void AutotunerCacheEntry::set_allocated_key(::xla::AutotunerCacheKey* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.key_ = reinterpret_cast<::xla::AutotunerCacheKey*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheEntry.key)
}

// string codegen_backend = 2;
inline void AutotunerCacheEntry::clear_codegen_backend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codegen_backend_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AutotunerCacheEntry::codegen_backend() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheEntry.codegen_backend)
  return _internal_codegen_backend();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AutotunerCacheEntry::set_codegen_backend(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.codegen_backend_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotunerCacheEntry.codegen_backend)
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheEntry::mutable_codegen_backend()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_codegen_backend();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheEntry.codegen_backend)
  return _s;
}
inline const ::std::string& AutotunerCacheEntry::_internal_codegen_backend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.codegen_backend_.Get();
}
inline void AutotunerCacheEntry::_internal_set_codegen_backend(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.codegen_backend_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheEntry::_internal_mutable_codegen_backend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.codegen_backend_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AutotunerCacheEntry::release_codegen_backend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheEntry.codegen_backend)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.codegen_backend_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.codegen_backend_.Set("", GetArena());
  }
  return released;
}
inline void AutotunerCacheEntry::set_allocated_codegen_backend(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.codegen_backend_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.codegen_backend_.IsDefault()) {
    _impl_.codegen_backend_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheEntry.codegen_backend)
}

// .google.protobuf.Any backend_config = 3;
inline bool AutotunerCacheEntry::has_backend_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.backend_config_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& AutotunerCacheEntry::_internal_backend_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.backend_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& AutotunerCacheEntry::backend_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheEntry.backend_config)
  return _internal_backend_config();
}
inline void AutotunerCacheEntry::unsafe_arena_set_allocated_backend_config(
    ::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.backend_config_);
  }
  _impl_.backend_config_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.AutotunerCacheEntry.backend_config)
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE AutotunerCacheEntry::release_backend_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* released = _impl_.backend_config_;
  _impl_.backend_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE AutotunerCacheEntry::unsafe_arena_release_backend_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheEntry.backend_config)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* temp = _impl_.backend_config_;
  _impl_.backend_config_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL AutotunerCacheEntry::_internal_mutable_backend_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.backend_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.backend_config_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.backend_config_;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL AutotunerCacheEntry::mutable_backend_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Any* _msg = _internal_mutable_backend_config();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheEntry.backend_config)
  return _msg;
}
inline void AutotunerCacheEntry::set_allocated_backend_config(::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.backend_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.backend_config_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheEntry.backend_config)
}

// -------------------------------------------------------------------

// AutotunerCacheKey

// string hlo_fingerprint = 1;
inline void AutotunerCacheKey::clear_hlo_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hlo_fingerprint_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AutotunerCacheKey::hlo_fingerprint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheKey.hlo_fingerprint)
  return _internal_hlo_fingerprint();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AutotunerCacheKey::set_hlo_fingerprint(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hlo_fingerprint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotunerCacheKey.hlo_fingerprint)
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::mutable_hlo_fingerprint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_hlo_fingerprint();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheKey.hlo_fingerprint)
  return _s;
}
inline const ::std::string& AutotunerCacheKey::_internal_hlo_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hlo_fingerprint_.Get();
}
inline void AutotunerCacheKey::_internal_set_hlo_fingerprint(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hlo_fingerprint_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::_internal_mutable_hlo_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.hlo_fingerprint_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AutotunerCacheKey::release_hlo_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheKey.hlo_fingerprint)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.hlo_fingerprint_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hlo_fingerprint_.Set("", GetArena());
  }
  return released;
}
inline void AutotunerCacheKey::set_allocated_hlo_fingerprint(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hlo_fingerprint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hlo_fingerprint_.IsDefault()) {
    _impl_.hlo_fingerprint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheKey.hlo_fingerprint)
}

// string device_str = 2;
inline void AutotunerCacheKey::clear_device_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& AutotunerCacheKey::device_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheKey.device_str)
  return _internal_device_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AutotunerCacheKey::set_device_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.device_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotunerCacheKey.device_str)
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::mutable_device_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_device_str();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheKey.device_str)
  return _s;
}
inline const ::std::string& AutotunerCacheKey::_internal_device_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_str_.Get();
}
inline void AutotunerCacheKey::_internal_set_device_str(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.device_str_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::_internal_mutable_device_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.device_str_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AutotunerCacheKey::release_device_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheKey.device_str)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.device_str_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.device_str_.Set("", GetArena());
  }
  return released;
}
inline void AutotunerCacheKey::set_allocated_device_str(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.device_str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_str_.IsDefault()) {
    _impl_.device_str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheKey.device_str)
}

// string version = 3;
inline void AutotunerCacheKey::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& AutotunerCacheKey::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCacheKey.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AutotunerCacheKey::set_version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.AutotunerCacheKey.version)
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::mutable_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCacheKey.version)
  return _s;
}
inline const ::std::string& AutotunerCacheKey::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void AutotunerCacheKey::_internal_set_version(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AutotunerCacheKey::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.version_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AutotunerCacheKey::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.AutotunerCacheKey.version)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.version_.Set("", GetArena());
  }
  return released;
}
inline void AutotunerCacheKey::set_allocated_version(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.AutotunerCacheKey.version)
}

// -------------------------------------------------------------------

// AutotunerCache

// repeated .xla.AutotunerCacheEntry entries = 1;
inline int AutotunerCache::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int AutotunerCache::entries_size() const {
  return _internal_entries_size();
}
inline void AutotunerCache::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::xla::AutotunerCacheEntry* PROTOBUF_NONNULL AutotunerCache::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.AutotunerCache.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>* PROTOBUF_NONNULL AutotunerCache::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.AutotunerCache.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::xla::AutotunerCacheEntry& AutotunerCache::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.AutotunerCache.entries)
  return _internal_entries().Get(index);
}
inline ::xla::AutotunerCacheEntry* PROTOBUF_NONNULL AutotunerCache::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xla::AutotunerCacheEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:xla.AutotunerCache.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>& AutotunerCache::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.AutotunerCache.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>&
AutotunerCache::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::xla::AutotunerCacheEntry>* PROTOBUF_NONNULL
AutotunerCache::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xla_2fbackends_2fautotuner_2fautotuner_5fcache_2eproto_2epb_2eh
