name: Feature Request
description: Suggest a new feature or enhancement
title: "[Feature]: "
labels: ["enhancement", "triage"]
assignees:
  - mixlink

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature!

        Please search existing feature requests before creating a new one.

  - type: textarea
    id: summary
    attributes:
      label: Feature Summary
      description: A clear and concise description of the feature
      placeholder: Add support for...
    validations:
      required: true

  - type: dropdown
    id: category
    attributes:
      label: Feature Category
      description: What type of feature is this?
      options:
        - New scraping capability
        - Performance improvement
        - API enhancement
        - Developer experience
        - Documentation
        - Testing
        - Other
    validations:
      required: true

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: What problem does this feature solve?
      placeholder: |
        Currently, when I try to..., I have to...
        This is problematic because...
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: How would you like this to work?
      placeholder: |
        I would like to be able to...

        Example usage:
        ```python
        async with AsyncClient() as client:
            result = await client.new_feature(...)
        ```
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: What alternative solutions or features have you considered?
      placeholder: |
        - Alternative 1: ...
        - Alternative 2: ...
        - Why this solution is better: ...

  - type: textarea
    id: benefits
    attributes:
      label: Benefits
      description: What are the benefits of this feature?
      placeholder: |
        - Faster scraping for...
        - Easier to use for...
        - Reduces memory usage by...
    validations:
      required: true

  - type: textarea
    id: use-case
    attributes:
      label: Use Case
      description: Describe your specific use case
      placeholder: |
        I'm building an app that needs to...
        This feature would help me...
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - Critical (blocking my work)
        - High (important for my use case)
        - Medium (would be nice to have)
        - Low (minor improvement)
    validations:
      required: true

  - type: textarea
    id: implementation
    attributes:
      label: Implementation Ideas
      description: Do you have ideas on how to implement this?
      placeholder: |
        This could be implemented by...

        Potential challenges:
        - ...

        Required changes:
        - Rust: ...
        - Python: ...

  - type: dropdown
    id: breaking
    attributes:
      label: Breaking Change
      description: Would this be a breaking change?
      options:
        - "No"
        - "Yes - worth it"
        - "Yes - needs migration guide"
        - "Not sure"
    validations:
      required: true

  - type: checkboxes
    id: compatibility
    attributes:
      label: Compatibility
      description: What should this feature support?
      options:
        - label: Should work on all platforms (Linux, macOS, Windows)
          required: false
        - label: Should work with Python 3.11+
          required: false
        - label: Should work with free-threading Python 3.14
          required: false
        - label: Should maintain backward compatibility
          required: false

  - type: textarea
    id: examples
    attributes:
      label: Code Examples
      description: Provide code examples of how this feature would be used
      render: python
      placeholder: |
        import asyncio
        from playfast import AsyncClient

        async def main():
            async with AsyncClient() as client:
                # Example of using the new feature
                result = await client.new_feature(
                    app_id='com.example.app',
                    option='value'
                )
                print(result)

        asyncio.run(main())

  - type: textarea
    id: documentation
    attributes:
      label: Documentation Impact
      description: What documentation changes would be needed?
      placeholder: |
        - Update README.md with new feature
        - Add example in examples/
        - Update API reference
        - Add migration guide (if breaking)

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      options:
        - label: I have searched existing feature requests
          required: true
        - label: I am willing to help implement this feature
          required: false
        - label: I am willing to write documentation for this feature
          required: false
        - label: I am willing to write tests for this feature
          required: false

  - type: textarea
    id: references
    attributes:
      label: References
      description: Any relevant links, papers, or prior art
      placeholder: |
        - Similar feature in other libraries: ...
        - Related issue: #...
        - Research paper: ...
        - Documentation: ...

  - type: textarea
    id: context
    attributes:
      label: Additional Context
      description: Add any other context or screenshots about the feature request
      placeholder: |
        - This would be similar to how library X does it
        - Screenshot/mockup: ...
        - Related to roadmap item: ...
