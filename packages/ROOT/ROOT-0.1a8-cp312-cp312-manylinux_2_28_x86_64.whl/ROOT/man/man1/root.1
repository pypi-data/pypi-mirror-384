.TH root 1 
.SH SYNOPSIS
usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-a A]
            [-config CONFIG] [-h HELP] [--version VERSION]
            [--notebook NOTEBOOK] [--web WEB] [--web=<type> WEB=<TYPE>]
            [--web=off WEB=OFF]
            [dir] [data1.root...dataN.root] [file1.C...fileN.C]
            [file1_C.so...fileN_C.so] [anyfile1..anyfileN]

.SH DESCRIPTION

root is an interactive interpreter of C++ code using Cling and the ROOT framework.
For more information on ROOT, please refer to https://root.cern/
An extensive Users Guide and API Reference are available from that website.

.SH OPTIONS
.IP -b
Run in batch mode without graphics
.IP -x
Exit on exceptions
.IP -e
Execute the command passed between single quotes
.IP -n
Do not execute logon and logoff macros as specified in .rootrc
.IP -t
Enable thread-safety and implicit multi-threading (IMT)
.IP -q
Exit after processing command line macro files
.IP -l
Do not show the ROOT banner
.IP -a
Show the ROOT splash screen (Windows only)
.IP -config
print ./configure options
.IP -h -? --help
Show summary of options
.IP --version
Show the ROOT version
.IP --notebook
Execute ROOT notebook
.IP --web
Use web-based display for graphics, browser, geometry
.IP --web=<type>
Use the specified web-based display such as chrome, firefox, qt6
.IP
For more options see the documentation of TROOT::SetWebDisplay()
.IP --web=off
Disable any kind of web-based display
.IP [dir]
if dir is a valid directory cd to it before executing
.IP [data1.root...dataN.root]
Open the given ROOT files; remote protocols (such as http://) are supported
.IP [file1.C...fileN.C]
Execute the ROOT macro file1.C ... fileN.C
.IP
Compilation flags as well as macro arguments can be passed, see format in https://root.cern/manual/root_macros_and_shared_libraries/
.IP [file1_C.so...fileN_C.so]
Load and execute file1_C.so ... fileN_C.so (or .dll if on Windows)
.IP
They should be already-compiled ROOT macros (shared libraries) or:
.IP
regular user shared libraries e.g. userlib.so with a function userlib(args)
.IP [anyfile1..anyfileN]
All other arguments pointing to existing files will be checked to see if they are ROOT Files (checking the MIME type inside the file) and if they are not they will be handled as a  ROOT macro file
