name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Changed from 'read' to allow comment editing
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}

            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Use the repository's CLAUDE.md for guidance on style and conventions. Be constructive and helpful in your feedback.

            IMPORTANT: Update the existing review comment instead of creating new ones:

            1. Find existing comment:
               - Use `gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[] | select(.body | contains("<!-- claude-code-review -->")) | .id'`
               - This searches for comments containing the marker

            2. If comment ID found, update it:
               - Use `gh api --method PATCH /repos/${{ github.repository }}/issues/comments/COMMENT_ID -f body="YOUR_REVIEW_TEXT"`
               - Include the marker `<!-- claude-code-review -->` at the top of your review text
               - Add a visible timestamp at the very top showing when the review was updated (e.g., "_Last updated: 2025-01-15 14:30:00 UTC_")
               - Format: `_Last updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')_\n\n<!-- claude-code-review -->\n\n[rest of review]`

            3. If no comment found, create new one:
               - Use `gh pr comment ${{ github.event.pull_request.number }} --body "YOUR_REVIEW_TEXT"`
               - Include the marker `<!-- claude-code-review -->` at the top
               - Add a visible timestamp at the very top showing when the review was created (e.g., "_Review created: 2025-01-15 14:30:00 UTC_")
               - Format: `_Review created: $(date -u '+%Y-%m-%d %H:%M:%S UTC')_\n\n<!-- claude-code-review -->\n\n[rest of review]`

            The marker MUST be included in all review comments so they can be found and updated on subsequent runs.
            The timestamp MUST be at the very top of the comment body (before the HTML marker) and be visible to users.

          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/cli-reference for available options
          claude_args: '--allowed-tools "Bash(gh api:*),Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

