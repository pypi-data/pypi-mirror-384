[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "quten-optimizer"
version = "1.0.0"
description = "Quantum-inspired PyTorch optimizer with tunneling and observation-based decoherence"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "optimization",
    "deep-learning",
    "pytorch",
    "quantum-inspired",
    "optimizer",
    "machine-learning",
    "neural-networks",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "torch>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=23.0",
    "flake8>=6.0",
    "matplotlib>=3.5.0",
    "numpy>=1.21.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
viz = [
    "matplotlib>=3.5.0",
    "numpy>=1.21.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/quten"
Documentation = "https://github.com/yourusername/quten/blob/main/README.md"
Repository = "https://github.com/yourusername/quten"
"Bug Tracker" = "https://github.com/yourusername/quten/issues"
"Ablation Study" = "https://github.com/yourusername/quten/blob/main/ABLATION_STUDY.md"

[tool.setuptools]
py-modules = ["quten"]

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*", ".github*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["."]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
