import base64
import hashlib
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

KEY = hashlib.sha256(b"bashu").digest() 

encoded_data = "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"
ciphertext = base64.b64decode(encoded_data)
cipher = AES.new(KEY, AES.MODE_ECB)

try:
    decrypted = unpad(cipher.decrypt(ciphertext), AES.block_size)
    code = decrypted.decode("utf-8")
    print("")
    
    exec(code, globals())
except Exception as e:
    print("")
