# yaml-language-server: $schema=../../schemas/model_config_schema.json

variables:
  client_id: &client_id                          # Service principal client ID
    options:
      - env: RETAIL_AI_DATABRICKS_CLIENT_ID
      - scope: retail_ai
        secret: RETAIL_AI_DATABRICKS_CLIENT_ID
  client_secret: &client_secret                  # Service principal secret
    options:
      - env: RETAIL_AI_DATABRICKS_CLIENT_SECRET
      - scope: retail_ai
        secret: RETAIL_AI_DATABRICKS_CLIENT_SECRET
  workspace_host: &workspace_host                # Databricks workspace URL
    options:
      - env: RETAIL_AI_DATABRICKS_HOST
      - scope: retail_ai
        secret: RETAIL_AI_DATABRICKS_HOST

schemas:
  retail_schema: &retail_schema                  # Unity Catalog schema configuration
    catalog_name: nfleming                       # Unity Catalog name
    schema_name: retail_ai                       # Schema within the catalog

resources:
  llms:
    default_llm: &default_llm                    # Default LLM configuration
      name: databricks-claude-3-7-sonnet        # Databricks serving endpoint name
  
  connections:
    github_connection: &github_connection       # UC Connection for GitHub
      name: github_u2m_connection               # UC Connection name

tools:
  # Example using UC Connection for GitHub MCP with explicit URL
  github_mcp_uc: &github_mcp_uc
    name: github_mcp                                # Tool name for agent reference
    function:
      type: mcp                                     # Tool type: MCP server
      name: github_mcp                              # MCP function name
      transport: streamable_http                    # Transport protocol
      url: https://adb-984752964297111.11.azuredatabricks.net/api/2.0/mcp/external/github_u2m_connection  # MCP endpoint URL (optional with connection)
      connection: *github_connection                # Reference to UC Connection (provides OAuth auth)

  # Example using UC Connection with auto-constructed URL
  # URL pattern: {workspace_host}/api/2.0/mcp/external/{connection_name}
  github_mcp_auto: &github_mcp_auto
    name: github_mcp_auto                           # Tool name for agent reference
    function:
      type: mcp                                     # Tool type: MCP server
      name: github_mcp_auto                         # MCP function name
      transport: streamable_http                    # Transport protocol
      connection: *github_connection                # URL will be auto-constructed from workspace host + connection name

  # Example using direct URL (existing approach)
  weather_tool_mcp: &weather_tool_mcp
    name: weather                                   # Tool name for agent reference
    function:
      type: mcp                                     # Tool type: MCP server
      name: weather                                 # MCP function name
      transport: streamable_http                    # Transport protocol
      url: http://localhost:8000/mcp                # MCP server URL
      
  vector_search_mcp: &vector_search_mcp          # Vector search MCP tool configuration
    name: vector_search_mcp                                  
    function:
      type: mcp                                  # MCP function type
      name: vector_search_mcp                              
      url: https://adb-984752964297111.11.azuredatabricks.net/api/2.0/mcp/vector-search/nfleming/retail_ai
      client_id: *client_id
      client_secret: *client_secret
      workspace_host: *workspace_host

  unity_catalog_mcp: &unity_catalog_mcp          # Unity Catalog MCP tool configuration
    name: unity_catalog_mcp                                  
    function:
      type: mcp                                  # MCP function type
      name: unity_catalog_mcp                              
      url:  https://adb-984752964297111.11.azuredatabricks.net/api/2.0/mcp/functions/nfleming/retail_ai
      client_id: *client_id
      client_secret: *client_secret
      workspace_host: *workspace_host

  genie_mcp: &genie_mcp                          # Genie MCP tool configuration
    name: genie_mcp                                  
    function:
      type: mcp                                  # MCP function type
      name: genie_mcp                              
      url:  https://adb-984752964297111.11.azuredatabricks.net/api/2.0/mcp/genie/01f01c91f1f414d59daaefd2b7ec82ea
      client_id: *client_id
      client_secret: *client_secret
      workspace_host: *workspace_host

agents:
  mcp_agent: &mcp_agent                          # MCP agent configuration
    name: mcp_agent                              # Agent identifier
    model: *default_llm                          # Reference to LLM configuration
    tools:                                       # Tools available to this agent
      - *github_mcp_uc
      - *vector_search_mcp
      - *unity_catalog_mcp
      - *genie_mcp
    prompt: |                                    # System prompt defining agent behavior
      You are a multi-purpose agent that can perform vector search, interact with Unity Catalog,
      interact with Genie rooms, and interact with GitHub. Use the tools provided to answer 
      questions and perform tasks. You many need to use the tools in combination to achieve 
      complex tasks.
      
app:
  name: mcp_agent                                # Application name  
  log_level: DEBUG                               # Logging level for the application
  registered_model:                              # MLflow registered model configuration
    schema: *retail_schema                       # Schema where model will be registered
    name: mcp_agent                              # Model name in MLflow registry
  agents:                                        # List of agents included in the system
    - *mcp_agent                                 # MCP agent
  orchestration:                                 # Agent orchestration configuration
    swarm:                                       # Supervisor orchestration pattern
      model: *default_llm                        # LLM for routing decisions
