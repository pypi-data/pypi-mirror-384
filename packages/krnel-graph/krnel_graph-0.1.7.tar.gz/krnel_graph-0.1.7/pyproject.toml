[project]
name = "krnel-graph"
version = "0.1.7"
description = "Lightweight dataflow library for mechanistic interpretability."
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "Kimberly Wilber", email = "kimmy+pypispam@krnel.ai" },
    { name = "Peyman Faratin", email = "peyman+pypispam@krnel.ai" },
]
requires-python = ">=3.10"

# The library should be importable with this minimal set of base dependencies.
# Most users will want to install with extras, e.g. `pip install krnel-graph[ml,cli,viz]`
dependencies = [
    "fsspec>=2024.0.0",
    "httpx>=0.20",
    "numpy>=1.26",
    "platformdirs>=4.0",
    "pyarrow>=15.0",
    "pydantic>=2.11.0",
    "pydantic-settings>=2.5.0",
    "structlog>=23.0.0",
    "tqdm>=4",
    "scikit-learn>=1.7.1", # TODO move to .[ml]

    # CLI tools
    "rich>=13.7",
    "cyclopts>=3.22.5",
    "humanize>=4.0.0",
]

[project.scripts]
krnel-graph = "krnel.graph.cli:app"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.13.1",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-autoapi>=3.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
    "sphinx-autobuild>=2024.0.0",
    "furo>=2025.7.19",
    "autodoc-pydantic>=2.2.0",
    "sphinxcontrib-mermaid>=0.9.2",
    "autoclasstoc>=1.7.0",
    "sphinx-autodoc-annotation>=1.0.post1",
    "sphinx-autodoc-typehints>=2.3.0",
]
ml = [
    "torch==2.7.0; platform_system=='Darwin'",
# torch 2.8 and above has bugs on mps hardware so we need a tighter pin, see https://gist.github.com/gcr/4d8833bb63a85fc8ef1fd77de6622770
# sorry downstream macOS users!
    "torch>=2.5.0; platform_system=='Linux'",
    "torch>=2.5.0; platform_system=='Windows'",
    "datasets>=3.0.0",
    "transformer-lens>=2.15.0",
    "transformers>=4.55.0",
    "fsspec[gcs]>=2023.1.0",
    "sentence-transformers>=5.1.0",
]
viz = [
    "numba>=0.61.2", # an undeclared networkx dep
    "jupyter-scatter>=0.22.0",
    "umap-learn>=0.5.8",
    "seaborn>=0.13.2", # an undeclared umap-learn dep
    "hiplot>=0.1.33",
]


[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.setuptools.package-data]
krnel = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "ml_models: marks tests that require TransformerLens/HuggingFace models (expensive, requires HF auth)",
]

[tool.ruff.lint]
select = [
    "E",  # All pycodestyle errors
    "F",  # All pyflakes codes
    "I",  # All isort codes
    "N",  # All naming convention codes
    "Q",  # All flake8-quotes codes
    "R",  # All mccabe complexity codes
    "S",  # All bandit security linter codes
    "B",  # All flake8-bugbear codes
    "C4", # All flake8-comprehensions codes
]

ignore = [
    "E501",  # line too long
    "RET505", "RET506", # if/else around Raise
    "S105", "S106", # hardcoded passwords
]

[tool.ruff.lint.pydocstyle]
convention = "google"
