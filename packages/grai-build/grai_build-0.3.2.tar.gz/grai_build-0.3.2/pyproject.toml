[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grai-build"
version = "0.3.2"
description = "Declarative knowledge graph modeling tool inspired by dbt"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "grai.build", email = "hello@grai.build"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic>=2.0",
    "pyyaml>=6.0",
    "typer>=0.9.0",
    "rich>=13.0",
    "neo4j>=5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "black>=23.0",
    "ruff>=0.1",
    "mypy>=1.5",
    "pre-commit>=3.0",
]

[project.scripts]
grai = "grai.cli.main:main_cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["grai*"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = [
    "E501",  # Line too long (handled by Black for code, ignore for strings/HTML)
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=grai --cov-report=term-missing"
