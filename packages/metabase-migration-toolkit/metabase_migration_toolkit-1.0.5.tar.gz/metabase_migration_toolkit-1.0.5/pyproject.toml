[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "metabase-migration-toolkit"
version = "1.0.5"
description = "Export and import Metabase content (collections, questions, dashboards) between instances"
readme = "README.md"
authors = [
    {name = "Metabase Migration Toolkit Contributors"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = [
    "metabase",
    "migration",
    "export",
    "import",
    "backup",
    "analytics",
    "business-intelligence",
    "bi-tools",
]
requires-python = ">=3.10"
dependencies = [
    "requests>=2.28.0",
    "tqdm>=4.64.0",
    "tenacity>=8.1.0",
    "python-dotenv>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests>=2.28.0",
    "pre-commit>=3.0.0",
    "isort>=5.0.0",

]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
]

[project.urls]
Homepage = "https://github.com/Finverity/metabase-migration-toolkit"
Documentation = "https://github.com/Finverity/metabase-migration-toolkit#readme"
Repository = "https://github.com/Finverity/metabase-migration-toolkit"
"Bug Tracker" = "https://github.com/Finverity/metabase-migration-toolkit/issues"
Changelog = "https://github.com/Finverity/metabase-migration-toolkit/blob/main/CHANGELOG.md"

[project.scripts]
metabase-export = "export_metabase:main"
metabase-import = "import_metabase:main"

[tool.setuptools]
packages = ["lib"]
py-modules = ["export_metabase", "import_metabase"]

[tool.setuptools.package-data]
lib = ["py.typed"]

# ============================================================================
# Testing Configuration
# ============================================================================

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=metabase_migration",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--strict-markers",
    "-v",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

# ============================================================================
# Code Quality Tools
# ============================================================================

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | metabase_export
  | tmp
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
    "metabase_export",
    "tmp",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "N812",  # lowercase imported as non-lowercase (TOOL_VERSION is a constant)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["N802", "N803"]  # allow non-lowercase function names in tests

[tool.ruff.lint.isort]
known-first-party = ["metabase_migration"]

# ============================================================================
# Type Checking Configuration
# ============================================================================

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "tqdm.*",
    "tenacity.*",
]
ignore_missing_imports = true

# ============================================================================
# Coverage Configuration
# ============================================================================

[tool.coverage.run]
source = ["lib"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true
