[build-system]
requires = ["setuptools>=68"]
build-backend = "setuptools.build_meta"

[project]
name = "valentine"
version = "0.4.1"
description = "Valentine Matcher"
readme = "README.md"
authors = [
    { name = "Delft Data", email = "delftdatasystems@gmail.com" }
]
maintainers = [
    { name = "Delft Data", email = "delftdatasystems@gmail.com" }
]
license = { file = "LICENSE" }
keywords = ["matching", "valentine", "schema matching", "dataset discovery", "coma", "cupid", "similarity flooding"]

classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

requires-python = ">=3.10,<3.15"
dependencies = [
    "numpy>=2.0,<3.0",
    "pandas>=2.0,<2.4",
    "nltk>=3.9.1,<4.0",
    "anytree>=2.9,<3.0",
    "networkx>=2.8,<4.0",
    "chardet>=5.2.0,<6.0.0",
    "jellyfish>=0.9,<1.3",
    "PuLP>=2.5,<4.0",
    "POT>=0.9.5,<1.0",
    "python-dateutil>=2.8,<3.0"
]

[project.urls]
Homepage = "https://delftdata.github.io/valentine/"
Documentation = "https://delftdata.github.io/valentine/"
Source = "https://github.com/delftdata/valentine"
Issues = "https://github.com/delftdata/valentine/issues"

[tool.setuptools]
packages = { find = { include = ["valentine*"], exclude = ["tests*", "examples*"] } }
include-package-data = true
license-files = ["LICENSE"]

# include the JAR and license files in the wheel
[tool.setuptools.package-data]
"valentine.algorithms.coma" = [
  "artifact/coma.jar",
  "licenses/*",
]
