[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
zoho_creator_sdk = ["py.typed"]

[project]
name = "zoho-creator-sdk"
dynamic = ["version"]
description = "A modern Python SDK for the Zoho Creator API"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Carlos Paiva", email = "carlospaiva87@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8.1"
dependencies = [
    "dotenv>=0.9.9",
    "httpx>=0.23.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic[email]>=2.0.0,<3.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    "flake8>=6.0.0,<7.0.0",
    "pylint>=3.2.0,<4.0.0",
    "build>=1.0.0,<2.0.0",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    "flake8>=6.0.0,<7.0.0",
    "pylint>=3.2.0,<4.0.0",
    "build>=1.0.0,<2.0.0",
    "twine>=6.1.0",
]

[project.urls]
Homepage = "https://github.com/carlospaiva/zoho-creator-sdk"
Repository = "https://github.com/carlospaiva/zoho-creator-sdk"
Issues = "https://github.com/carlospaiva/zoho-creator-sdk/issues"
Documentation = "https://github.com/carlospaiva/zoho-creator-sdk#readme"

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["zoho_creator_sdk", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_errors = true

[tool.pylint.master]
extension-pkg-whitelist = ["pydantic"]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "too-many-arguments",
    "too-many-locals",
    "too-many-statements",
    "import-error",
    "no-member",
    "line-too-long",
    "duplicate-code",
]

[tool.pylint.format]
max-line-length = 88
good-names = [
    "i",
    "j",
    "k",
    "x",
    "y",
    "z",
    "_",
    "id",
    "db",
    "dt",
    "df",
    "fn",
    "fp",
    "fs",
    "fw",
    "fx",
    "fy",
    "fz",
    "ga",
    "gb",
    "gc",
    "gd",
    "ge",
    "gf",
    "gg",
    "gh",
    "gi",
    "gj",
    "gk",
    "gl",
    "gm",
    "gn",
    "go",
    "gp",
    "gq",
    "gr",
    "gs",
    "gt",
    "gu",
    "gv",
    "gw",
    "gx",
    "gy",
    "gz",
]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-statements = 60
max-branches = 20
max-returns = 10
max-attributes = 10
max-public-methods = 25
max-nested-blocks = 5
max-parents = 7
max-module-lines = 1000

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--cov=zoho_creator_sdk",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=95",
    "-ra",
    "--maxfail=1",
    "-q",
    "--disable-warnings",
    "--color=yes",
    "--capture=sys",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "performance: marks tests as performance tests",
    "flaky: marks tests as flaky (may fail intermittently)",
]

[tool.coverage.run]
source = ["zoho_creator_sdk"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
    "*/dist/*",
    "*/build/*",
    "*/__pycache__/*",
    "*/.git/*",
    "*/.tox/*",
    "*/.eggs/*",
    "*/.mypy_cache/*",
    "*/.pytest_cache/*",
    "*/htmlcov/*",
    "*/.coverage*",
    "*/conftest.py",
    "*/setup.py",
    "*/run_*.py",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
    "@overload",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
