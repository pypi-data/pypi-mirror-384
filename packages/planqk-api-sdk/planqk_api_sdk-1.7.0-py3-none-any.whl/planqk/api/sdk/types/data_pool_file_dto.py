# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class DataPoolFileDto(UniversalBaseModel):
    id: typing.Optional[str] = None
    data_pool_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dataPoolId")] = None
    name: typing.Optional[str] = None
    full_path: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="fullPath")] = None
    content_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="contentType")] = None
    content_length: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="contentLength")] = None
    created_at: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="createdAt")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
