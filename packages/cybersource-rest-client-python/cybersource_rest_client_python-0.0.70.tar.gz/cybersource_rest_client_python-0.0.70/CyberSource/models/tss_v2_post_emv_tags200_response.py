# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class TssV2PostEmvTags200Response(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'parsed_emv_tags_list': 'list[TssV2PostEmvTags200ResponseParsedEMVTagsList]'
    }

    attribute_map = {
        'parsed_emv_tags_list': 'parsedEMVTagsList'
    }

    def __init__(self, parsed_emv_tags_list=None):
        """
        TssV2PostEmvTags200Response - a model defined in Swagger
        """

        self._parsed_emv_tags_list = None

        if parsed_emv_tags_list is not None:
          self.parsed_emv_tags_list = parsed_emv_tags_list

    @property
    def parsed_emv_tags_list(self):
        """
        Gets the parsed_emv_tags_list of this TssV2PostEmvTags200Response.
        An array of objects (one per object in the passed emvDetailsList), each of which contains a fully parsed EMV string 

        :return: The parsed_emv_tags_list of this TssV2PostEmvTags200Response.
        :rtype: list[TssV2PostEmvTags200ResponseParsedEMVTagsList]
        """
        return self._parsed_emv_tags_list

    @parsed_emv_tags_list.setter
    def parsed_emv_tags_list(self, parsed_emv_tags_list):
        """
        Sets the parsed_emv_tags_list of this TssV2PostEmvTags200Response.
        An array of objects (one per object in the passed emvDetailsList), each of which contains a fully parsed EMV string 

        :param parsed_emv_tags_list: The parsed_emv_tags_list of this TssV2PostEmvTags200Response.
        :type: list[TssV2PostEmvTags200ResponseParsedEMVTagsList]
        """

        self._parsed_emv_tags_list = parsed_emv_tags_list

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TssV2PostEmvTags200Response):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
