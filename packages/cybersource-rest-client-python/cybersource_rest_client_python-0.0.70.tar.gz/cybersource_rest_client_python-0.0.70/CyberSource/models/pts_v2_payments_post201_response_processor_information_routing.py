# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class PtsV2PaymentsPost201ResponseProcessorInformationRouting(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'network': 'str',
        'network_name': 'str',
        'customer_signature_required': 'str'
    }

    attribute_map = {
        'network': 'network',
        'network_name': 'networkName',
        'customer_signature_required': 'customerSignatureRequired'
    }

    def __init__(self, network=None, network_name=None, customer_signature_required=None):
        """
        PtsV2PaymentsPost201ResponseProcessorInformationRouting - a model defined in Swagger
        """

        self._network = None
        self._network_name = None
        self._customer_signature_required = None

        if network is not None:
          self.network = network
        if network_name is not None:
          self.network_name = network_name
        if customer_signature_required is not None:
          self.customer_signature_required = customer_signature_required

    @property
    def network(self):
        """
        Gets the network of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        PIN Debit Services: Contains the ID of the debit network to which the transaction was routed.  | Code | Network | | --- | --- | | 0000 | Priority Routing or Generic File Update | | 0002 | Visa programs, Private Label and non-Visa Authorization Gateway Services | | 0003 | Interlink | | 0004 | Plus | | 0008 | Star | | 0009 | Pulse| | 0010 | Star | | 0011 | Star | | 0012 | Star (primary network ID) | | 0013 | AFFN | | 0015 | Star | | 0016 | Maestro | | 0017 | Pulse (primary network ID) | | 0018 | NYCE (primary network ID) | | 0019 | Pulse | | 0020 | Accel | | 0023 | NETS | | 0024 | CU24 | | 0025 | Alaska Option | | 0027 | NYCE | | 0028 | Shazam | | 0029 | EBT POS |  FDC Nashville Global authorization service:  Indicates whether the transaction was routed to a credit network, a debit network, or the STAR signature debit network. - `C`: Credit network - `D`: Debit network (without signature) - `S`: STAR signature debit network 

        :return: The network of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """
        Sets the network of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        PIN Debit Services: Contains the ID of the debit network to which the transaction was routed.  | Code | Network | | --- | --- | | 0000 | Priority Routing or Generic File Update | | 0002 | Visa programs, Private Label and non-Visa Authorization Gateway Services | | 0003 | Interlink | | 0004 | Plus | | 0008 | Star | | 0009 | Pulse| | 0010 | Star | | 0011 | Star | | 0012 | Star (primary network ID) | | 0013 | AFFN | | 0015 | Star | | 0016 | Maestro | | 0017 | Pulse (primary network ID) | | 0018 | NYCE (primary network ID) | | 0019 | Pulse | | 0020 | Accel | | 0023 | NETS | | 0024 | CU24 | | 0025 | Alaska Option | | 0027 | NYCE | | 0028 | Shazam | | 0029 | EBT POS |  FDC Nashville Global authorization service:  Indicates whether the transaction was routed to a credit network, a debit network, or the STAR signature debit network. - `C`: Credit network - `D`: Debit network (without signature) - `S`: STAR signature debit network 

        :param network: The network of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :type: str
        """

        self._network = network

    @property
    def network_name(self):
        """
        Gets the network_name of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        Name of the network to which the transaction was routed. 

        :return: The network_name of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :rtype: str
        """
        return self._network_name

    @network_name.setter
    def network_name(self, network_name):
        """
        Sets the network_name of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        Name of the network to which the transaction was routed. 

        :param network_name: The network_name of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :type: str
        """

        self._network_name = network_name

    @property
    def customer_signature_required(self):
        """
        Gets the customer_signature_required of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        Indicates whether you need to obtain the cardholder's signature.  Possible values: - `Y`: You need to obtain the cardholder's signature. - `N`: You do not need to obtain the cardholder's signature. 

        :return: The customer_signature_required of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :rtype: str
        """
        return self._customer_signature_required

    @customer_signature_required.setter
    def customer_signature_required(self, customer_signature_required):
        """
        Sets the customer_signature_required of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        Indicates whether you need to obtain the cardholder's signature.  Possible values: - `Y`: You need to obtain the cardholder's signature. - `N`: You do not need to obtain the cardholder's signature. 

        :param customer_signature_required: The customer_signature_required of this PtsV2PaymentsPost201ResponseProcessorInformationRouting.
        :type: str
        """

        self._customer_signature_required = customer_signature_required

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PtsV2PaymentsPost201ResponseProcessorInformationRouting):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
