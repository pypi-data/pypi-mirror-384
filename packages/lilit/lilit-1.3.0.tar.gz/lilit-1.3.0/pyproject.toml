[project]
name = "lilit"
version = "1.3.0"
authors = [
    { name = "Giacomo Galloni", email = "giacomo.galloni@unife.it" }
]
description = "Likelihood for LiteBIRD"
readme = "README.md"
requires-python = ">3.9,<3.14"
license = { text = "GNU General Public License v3.0" }

dependencies = [
    "camb>=1.6.0",
    "cobaya>=3.5.7",
    "healpy>=1.17.3",
    "matplotlib>=3.9.4",
    "numpy>=2.0.2",
    "pyyaml>=6.0.3",
]

[project.urls]
Homepage = "https://github.com/ggalloni/LiLit/"
Documentation = "https://lilit.readthedocs.io/"

[project.optional-dependencies]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=2.0.0",
]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
include = [
    "lilit",
    "tests",
]

[tool.setuptools.package-data]
"*" = ['*.yaml', '*.fits', '*.txt', '*.pkl', '*.gz']
"tests" = ['*.py', '*.yaml', '*.txt', '*.fits']

[tool.setuptools_scm]
version_file = "lilit/_version.py"

[tool.ruff.lint]
select = ["E713", "E703", "E714", "E741", "E10", "E11", "E20", "E22", "E23", "E25", "E262", "E27", "E301", "E302", "E304", "E9", "F405", "F406", "F5", "F6", "F7", "F8", "E501", "W191", "F401", "W1", "W292", "W293", "W3"]
extend-select = ["I"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"docs/*" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff]
exclude = [".tox", "build", "cobaya_packages", "test", ".eggs"]
line-length = 90

[tool.coverage.run]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    "except ModuleNotFoundError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "def main\\(.*\\):",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
