# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: metalstack/admin/v2/image.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import metalstack.admin.v2.image_pb2 as metalstack_dot_admin_dot_v2_dot_image__pb2


class ImageService(Protocol):
    async def create(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def usage(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ImageServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: ImageService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.ImageService/Create": Endpoint.unary(
                    method=MethodInfo(
                        name="Create",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create,
                ),
                "/metalstack.admin.v2.ImageService/Update": Endpoint.unary(
                    method=MethodInfo(
                        name="Update",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update,
                ),
                "/metalstack.admin.v2.ImageService/Delete": Endpoint.unary(
                    method=MethodInfo(
                        name="Delete",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete,
                ),
                "/metalstack.admin.v2.ImageService/Usage": Endpoint.unary(
                    method=MethodInfo(
                        name="Usage",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.usage,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.ImageService"


class ImageServiceClient(ConnectClient):
    async def create(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Create",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Update",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Delete",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def usage(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Usage",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class ImageServiceSync(Protocol):
    def create(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def usage(self, request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class ImageServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: ImageServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.ImageService/Create": EndpointSync.unary(
                    method=MethodInfo(
                        name="Create",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create,
                ),
                "/metalstack.admin.v2.ImageService/Update": EndpointSync.unary(
                    method=MethodInfo(
                        name="Update",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update,
                ),
                "/metalstack.admin.v2.ImageService/Delete": EndpointSync.unary(
                    method=MethodInfo(
                        name="Delete",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete,
                ),
                "/metalstack.admin.v2.ImageService/Usage": EndpointSync.unary(
                    method=MethodInfo(
                        name="Usage",
                        service_name="metalstack.admin.v2.ImageService",
                        input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
                        output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.usage,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.ImageService"


class ImageServiceClientSync(ConnectClientSync):
    def create(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Create",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceCreateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Update",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUpdateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Delete",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceDeleteResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def usage(
        self,
        request: metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Usage",
                service_name="metalstack.admin.v2.ImageService",
                input=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageRequest,
                output=metalstack_dot_admin_dot_v2_dot_image__pb2.ImageServiceUsageResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
