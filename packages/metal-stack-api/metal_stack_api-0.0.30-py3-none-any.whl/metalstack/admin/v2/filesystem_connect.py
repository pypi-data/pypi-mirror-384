# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: metalstack/admin/v2/filesystem.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import metalstack.admin.v2.filesystem_pb2 as metalstack_dot_admin_dot_v2_dot_filesystem__pb2


class FilesystemService(Protocol):
    async def create(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class FilesystemServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: FilesystemService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.FilesystemService/Create": Endpoint.unary(
                    method=MethodInfo(
                        name="Create",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create,
                ),
                "/metalstack.admin.v2.FilesystemService/Update": Endpoint.unary(
                    method=MethodInfo(
                        name="Update",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update,
                ),
                "/metalstack.admin.v2.FilesystemService/Delete": Endpoint.unary(
                    method=MethodInfo(
                        name="Delete",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.FilesystemService"


class FilesystemServiceClient(ConnectClient):
    async def create(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Create",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Update",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Delete",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class FilesystemServiceSync(Protocol):
    def create(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete(self, request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest, ctx: RequestContext) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class FilesystemServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: FilesystemServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/metalstack.admin.v2.FilesystemService/Create": EndpointSync.unary(
                    method=MethodInfo(
                        name="Create",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create,
                ),
                "/metalstack.admin.v2.FilesystemService/Update": EndpointSync.unary(
                    method=MethodInfo(
                        name="Update",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update,
                ),
                "/metalstack.admin.v2.FilesystemService/Delete": EndpointSync.unary(
                    method=MethodInfo(
                        name="Delete",
                        service_name="metalstack.admin.v2.FilesystemService",
                        input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
                        output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.admin.v2.FilesystemService"


class FilesystemServiceClientSync(ConnectClientSync):
    def create(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Create",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceCreateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Update",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceUpdateResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete(
        self,
        request: metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Delete",
                service_name="metalstack.admin.v2.FilesystemService",
                input=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteRequest,
                output=metalstack_dot_admin_dot_v2_dot_filesystem__pb2.FilesystemServiceDeleteResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
