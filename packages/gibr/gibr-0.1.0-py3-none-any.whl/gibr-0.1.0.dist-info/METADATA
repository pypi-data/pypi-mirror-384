Metadata-Version: 2.4
Name: gibr
Version: 0.1.0
Summary: A Git CLI tool for intelligently creating branch names
Project-URL: Homepage, https://github.com/ytreister/gibr
Project-URL: Repository, https://github.com/ytreister/gibr
Project-URL: Issues, https://github.com/ytreister/gibr/issues
Author-email: Yair Treister <ytreister@gmail.com>
License-File: LICENSE
Keywords: automation,cli,git,github,gitlab,jira
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.11
Requires-Dist: click==8.3.0
Requires-Dist: gitpython==3.1.43
Requires-Dist: pygithub==2.8.1
Requires-Dist: python-slugify>=8.0.4
Description-Content-Type: text/markdown

# gibr

A CLI that generates Git branch names from issue trackers (currently GitHub) and
creates + pushes the branch to `origin`.

## Quick start
### Installation
```bash
pip install gibr
```
### Usage
```bash
gibr 123
```

The command above will:
1. Load `.gibrconfig` from the current directory or a parent directory.
2. Use the configured issue tracker to fetch issue `#123`.
3. Generate a branch name using the `DEFAULT.branch_name_format` (see config example).
4. Create the branch locally and push it to `origin`.

## Verbose logging

Add `--verbose` to any command to enable debug-level logging:

```bash
gibr 123 --verbose
# or
gibr --verbose 123
```

## Configuration (`.gibrconfig`)

Example `.gibrconfig` (place in repo root or parent directory):

```ini
[DEFAULT]
branch_name_format = {issuetype}/{issue}-{title}

[issue-tracker]
name = github

[github]
repo = owner/repo
token = $GITHUB_TOKEN
```

Notes:
- Environment variables in config values are expanded.
- `branch_name_format` uses these placeholders: `{issuetype}`, `{issue}`, `{title}`.
