"""
    EMIL DocumentService

    The EMIL DocumentService API description  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eis.document.api_client import ApiClient, Endpoint as _Endpoint
from eis.document.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eis.document.model.list_searchable_documents_response_class import ListSearchableDocumentsResponseClass


class SearchableDocumentsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.list_searchable_documents_endpoint = _Endpoint(
            settings={
                'response_type': (ListSearchableDocumentsResponseClass,),
                'auth': [
                    'bearer'
                ],
                'endpoint_path': '/documentservice/v1/searchable-documents',
                'operation_id': 'list_searchable_documents',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'search_text',
                    'owner_ids',
                    'authorization',
                    'product',
                ],
                'required': [
                    'search_text',
                    'owner_ids',
                ],
                'nullable': [
                ],
                'enum': [
                    'product',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('product',): {

                        "CAR": "car",
                        "HOMEOWNER": "homeowner",
                        "HOUSEHOLD": "household",
                        "PRIVATELIABILITY": "privateLiability"
                    },
                },
                'openapi_types': {
                    'search_text':
                        (str,),
                    'owner_ids':
                        (str,),
                    'authorization':
                        (str,),
                    'product':
                        (str,),
                },
                'attribute_map': {
                    'search_text': 'searchText',
                    'owner_ids': 'ownerIds',
                    'authorization': 'Authorization',
                    'product': 'product',
                },
                'location_map': {
                    'search_text': 'query',
                    'owner_ids': 'query',
                    'authorization': 'header',
                    'product': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def list_searchable_documents(
        self,
        search_text,
        owner_ids,
        **kwargs
    ):
        """List searchable documents  # noqa: E501

        Returns a list of searchable documents you have previously created.        The searchable documents are returned in sorted order, with the oldest one appearing first.        For more information about pagination, read the Pagination documentation.  **Required Permissions**  \"document-management.documents.view\"  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_searchable_documents(search_text, owner_ids, async_req=True)
        >>> result = thread.get()

        Args:
            search_text (str): Text to search in the documents.
            owner_ids (str): List of searched document owner IDs separated with | (search in all documents if an '*' list provided).

        Keyword Args:
            authorization (str): Bearer Token. [optional]
            product (str): PBM product the documents belongs to.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListSearchableDocumentsResponseClass
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['search_text'] = \
            search_text
        kwargs['owner_ids'] = \
            owner_ids
        return self.list_searchable_documents_endpoint.call_with_http_info(**kwargs)

