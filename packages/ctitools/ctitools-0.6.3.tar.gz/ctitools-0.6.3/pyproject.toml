[project]

name = "ctitools"

version = "0.6.3"

description = "Work with cti index files for the Heise papers c't and iX"

readme = "docs/README.md"

authors = [{ name = "Berthold Höllmann", email = "berthold-gitlab@xn--hllmanns-n4a.de" }]

requires-python = ">=3.13,<4.0"

license = { text = "BSD 3" }

maintainers = [{ name = "Berthold Höllmann", email = "berthold-gitlab@xn--hllmanns-n4a.de" }]

classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: German",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities",
]

dependencies = [
             "click",
             "rich",
             "typing-extensions",
]

copyright = "Copyright © 2022-2025 by Berthold Höllmann"

[project.urls]
Homepage = "https://python.xn--hllmanns-n4a.de/"
Repository = "https://gitlab.com/berhoel/python/ctitools.git"
Documentation = "https://python.xn--hllmanns-n4a.de/ctitools/"

[project.scripts]
cti2bibtex = "berhoel.ctitools.cti2bibtex:cti2bibtex"
cti_statistics = "berhoel.ctitools:cti_statistics"

[dependency-groups]
dev = [
    "black",
    "ipython",
    "isort",
    "mypy",
    "pdbp",
    "ruff",
]
test = [
    "doc8",
    "pytest",
    "pytest-benchmark[histogram]",
    "pytest-cache",
    "pytest-cov",
    "pytest-mock",
    "pytest-ruff",
    "pytest-runner",
    "pytest-sugar",
    "rope",
    "tox",
    "xdoctest",
]
doc = [
    "griffe_pydantic",
    "griffe_sphinx",
    "griffe_typingdoc",
    "markdown-callouts",
    "mkdocs-click",
    "mkdocs-llmstxt",
    "mkdocs-material-berhoel",
    "mkdocs-minify-plugin",
]

[tool.uv]
default-groups = [
    "dev",
    "test",
    "doc",
]

[tool.uv.sources]
mkdocs-material-berhoel = { git = "https://gitlab.com/berhoel/python/mkdocs-material-berhoel.git", rev = "main" }

[tool.hatch.build.targets.sdist]
include = ["berhoel"]
from="src"
exclude = [
    "**/.#*.py",
    "**/#*.py#",
]

[tool.hatch.build.targets.wheel]
include = ["berhoel"]
from="src"
exclude = [
    "**/.#*.py",
    "**/#*.py#",
]

[build-system]
requires = ["uv_build>=0.8.18,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "berhoel.ctitools"

[tool.isort]
dedup_headings = true
include_trailing_comma = true
float_to_top = true
namespace_packages = ['berhoel']
force_grid_wrap = 0
balanced_wrapping = true
use_parentheses = true
length_sort = true
line_length = 88
combine_as_imports = true
known_first_party = ["berhoel"]
known_third_party = ["pytest"]

[tool.black]
line-length = 88
target-version = ['py314']
include = '\.pyi?$'

[tool.ruff]
namespace-packages = ['berhoel']
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D211", "D213", "COM812"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"docs/**.py" = ["INP001"]
"src/**/tests/**.py" = ["INP001"]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-sort-within-sections = true
force-wrap-aliases = true
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
default-section = "third-party"
known-first-party = ["berhoel"]
known-third-party = ["pytest"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.mypy]
packages = ["berhoel.ctitools"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/.stubs/:src/"

[tool.tox]
requires = ["tox>=4.19"]
env_list = ["3.12", "3.13", "3.13t", "3.14", "3.14t"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
deps = [
  "pdbpp",
  "pytest",
  "pytest-benchmark[histogram]",
  "pytest-cov",
  "pytest-mock",
  "pytest-ruff",
  "pytest-runner",
  "pytest-sugar",
  "rope",
  "toml",
  "xdoctest",
]
allowlist_externals = ["uv"]
commands = [["uv", "run", "pytest"]]

[tool.pytest.ini_options]
junit_family = "xunit2"
doctest_encoding = "UTF-8"
minversion = "7.0"
addopts = [
  #"--benchmark-histogram=plots/benchmark-histogram",
  #"--benchmark-compare",
  "--xdoctest",
  "--xdoctest-glob=*.md",
  "--failed-first",
  "--capture=no",
  "--cov=src/berhoel/ctitools",
  "--cov-report=term",
  "--cov-report=html:htmlcov",
  "--cov-branch",
  "--cov-context=test",
  "--ruff",
  "--strict-config",
  "--strict-markers",
  "--pyargs", "berhoel.ctitools"
]

[tool.doc8]
ignore-path=["ctitools.egg-info", ".tox"]
