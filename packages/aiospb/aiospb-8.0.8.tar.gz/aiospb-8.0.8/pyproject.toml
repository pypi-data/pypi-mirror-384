[tool.poetry]
name = "aiospb"
version = "8.0.8"
description = "Library to comunicate with MQTT following Sparkplug B estandard"
authors = ["Salvador Ruiz <sruiz@gruposavia.eu>"]
license = "LGPL"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
aiomqtt = "^2.0.0"
aiofiles = "^24.1.0"
protobuf = "^5.28.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
pytest = "^7.3.1"
isort = "^5.12.0"
flake8 = "^6.0.0"
pyright = "^1.1.309"
pre-commit = "^3.3.2"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
commitizen = "^3.6.0"
ipython = "^8.22.2"
testcontainers = "^4.12.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]
python_files = "test_* feat_*"
python_classes = "A_* An_* UseCase_* Test*"
python_functions = "should_* scenario_* test_*"
markers = [
    "integration: tests comunication to simulated external systems(devel mode)",
    "acceptance: test application layer as external user"
]
asyncio_mode = "auto"

[tool.pyright]
# Include directories to analyze
include = ["aiospb", "tests"]

# Define execution environment to set Python path
executionEnvironments = [
    { root = ".", extraPaths = ["."] }
]

[tool.coverage.run]
omit = [
    "aiospb/infra/encoding/protobuf/sparkplug_pb2.py"
]

[tool.commitizen]
version_provider = "poetry"
version = "7.1.3"  # Optional, but recommended to sync with Poetry
tag_format = "v$version"
update_changelog_on_bump = true  # Optional, if you want changelog updates
