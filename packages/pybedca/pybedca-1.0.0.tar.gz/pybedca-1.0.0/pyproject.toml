[project]
name = "pybedca"
version = "1.0.0"
description = "Python client library to parse BEDCA API XML into Python objects."
readme = "README.md"
authors = [{ name = "LÃ¡zaro Candea", email = "lazaro@candea.es" }]
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.16.0",
]

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "pandas>=2.3.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.0",
    "responses>=0.25.8",
]

[project.scripts]
pybedca = "pybedca:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pybedca"]

[tool.hatch.build]
directory = "src"

[tool.uv]
package = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src/pybedca",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
markers = [
    "unit: Unit tests that run quickly and don't require external dependencies",
    "integration: Integration tests that may require network access or external services",
    "slow: Tests that take a long time to run",
    "asyncio: Async tests",
]
asyncio_mode = "auto"
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["src/pybedca"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
