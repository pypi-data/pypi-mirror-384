import posets
import sys
try:
	n = 4 if len(sys.argv)<2 else int(sys.argv[1])
	assert(n>1)
except:
	print('Usage: '+sys.argv[0]+' [n] [outfile]\n\nChecks the conjectured lower bound for cd-indices of minor posets of generator-enriched lattices with n generators. The lower bound and any counter examples are written to outfile or to standard output if no output file is provided.')

genlatts = list(posets.Genlatt.iterator(n))
cdIndices = [posets.MinorPoset(LG).cdIndex() for LG in genlatts]
A = posets.Genlatt(posets.Antichain(n-1).adjoin_onehat().adjoin_zerohat(),G=list(range(1,n+1)),G_indices=True)
M = posets.MinorPoset(A)

counterExamples = [(LG,phi) for LG,phi in zip(genlatts,cdIndices) if not phi>=M.cdIndex()]

if len(sys.argv)>=3: file = sys.argv[2]
else: file = sys.stdout

print('Conjectured lower bound for generator-enriched lattices with',n,'generators:')
print('\t',M.cdIndex())
print('\nThe lower bound is',len(counterExamples)==0)
if len(counterExamples)>0:
	print('\nCounter examples:\n')
	for LG,phi in counterExamples: print(repr(LG),'\n',phi,'\n')
