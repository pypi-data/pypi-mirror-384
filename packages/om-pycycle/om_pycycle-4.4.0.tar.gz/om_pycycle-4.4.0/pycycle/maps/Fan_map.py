import numpy as np

from pycycle.maps.map_data import MapData


"""Python version of HBTF Fan map from NPSS"""
FanMap = MapData()

# Map design point values
FanMap.defaults = {}
FanMap.defaults['alphaMap'] = 0.0
FanMap.defaults['NcMap'] = 0.99
FanMap.defaults['PR'] = 1.754
FanMap.defaults['RlineMap'] = 2.20
FanMap.RlineStall = 1.0

FanMap.alphaMap = np.array([0.000, 90.000])
FanMap.NcMap = np.array([0.300, 0.400, 0.500, 0.600, 0.700, 0.750, 0.800, 0.850, 0.900, 0.950, 1.000, 1.050, 1.100, 1.150])
FanMap.RlineMap = np.array([1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600, 2.800, 3.000])

FanMap.WcMap = np.array([[[121.797, 150.895, 179.422, 207.275, 234.359, 260.582, 285.861, 310.120, 333.291, 355.315, 369.552],
  [194.867, 227.417, 258.872, 289.101, 317.981, 345.407, 371.284, 395.535, 418.097, 438.921, 457.973],
  [265.640, 302.320, 337.109, 369.834, 400.351, 428.543, 454.320, 477.621, 498.412, 516.684, 532.453],
  [330.650, 373.304, 412.750, 448.759, 481.163, 509.851, 534.771, 555.926, 573.366, 587.188, 597.526],
  [380.373, 433.991, 481.896, 523.736, 559.314, 588.580, 611.621, 628.642, 639.948, 645.923, 647.172],
  [408.374, 467.955, 520.262, 564.886, 601.649, 630.583, 651.910, 666.008, 673.384, 674.865, 674.865],
  [432.494, 499.118, 556.491, 604.137, 641.921, 670.010, 688.838, 699.045, 701.536, 701.536, 701.536],
  [470.522, 540.248, 599.144, 646.786, 683.165, 708.637, 723.856, 729.705, 729.841, 729.841, 729.841],
  [527.146, 594.695, 650.583, 694.581, 726.881, 748.023, 758.831, 760.796, 760.796, 760.796, 760.796],
  [593.025, 653.568, 702.700, 740.438, 767.140, 783.445, 790.213, 790.533, 790.533, 790.533, 790.533],
  [643.809, 697.196, 739.568, 771.126, 792.350, 803.950, 806.892, 806.892, 806.892, 806.892, 806.892],
  [684.120, 729.283, 764.846, 791.078, 808.441, 817.554, 819.416, 819.416, 819.416, 819.416, 819.416],
  [723.881, 760.550, 789.192, 810.094, 823.667, 830.421, 831.443, 831.443, 831.443, 831.443, 831.443],
  [762.811, 790.037, 811.271, 826.753, 836.786, 841.724, 842.410, 842.410, 842.410, 842.410, 842.410]],
  [[121.797, 150.895, 179.422, 207.275, 234.359, 260.582, 285.861, 310.120, 333.291, 355.315, 369.552],
  [194.867, 227.417, 258.872, 289.101, 317.981, 345.407, 371.284, 395.535, 418.097, 438.921, 457.973],
  [265.640, 302.320, 337.109, 369.834, 400.351, 428.543, 454.320, 477.621, 498.412, 516.684, 532.453],
  [330.650, 373.304, 412.750, 448.759, 481.163, 509.851, 534.771, 555.926, 573.366, 587.188, 597.526],
  [380.373, 433.991, 481.896, 523.736, 559.314, 588.580, 611.621, 628.642, 639.948, 645.923, 647.172],
  [408.374, 467.955, 520.262, 564.886, 601.649, 630.583, 651.910, 666.008, 673.384, 674.865, 674.865],
  [432.494, 499.118, 556.491, 604.137, 641.921, 670.010, 688.838, 699.045, 701.536, 701.536, 701.536],
  [470.522, 540.248, 599.144, 646.786, 683.165, 708.637, 723.856, 729.705, 729.841, 729.841, 729.841],
  [527.146, 594.695, 650.583, 694.581, 726.881, 748.023, 758.831, 760.796, 760.796, 760.796, 760.796],
  [593.025, 653.568, 702.700, 740.438, 767.140, 783.445, 790.213, 790.533, 790.533, 790.533, 790.533],
  [643.809, 697.196, 739.568, 771.126, 792.350, 803.950, 806.892, 806.892, 806.892, 806.892, 806.892],
  [684.120, 729.283, 764.846, 791.078, 808.441, 817.554, 819.416, 819.416, 819.416, 819.416, 819.416],
  [723.881, 760.550, 789.192, 810.094, 823.667, 830.421, 831.443, 831.443, 831.443, 831.443, 831.443],
  [762.811, 790.037, 811.271, 826.753, 836.786, 841.724, 842.410, 842.410, 842.410, 842.410, 842.410]]])

FanMap.effMap = np.array([[[.6931, .7672, .8306, .8802, .9112, .9167, .8887, .8138, .6634, .3791, .0000],
  [.7418, .8033, .8552, .8953, .9199, .9241, .9030, .8489, .7461, .5672, .2591],
  [.7517, .8112, .8613, .8997, .9233, .9277, .9089, .8607, .7712, .6201, .3720],
  [.7322, .7985, .8543, .8973, .9240, .9297, .9103, .8596, .7650, .6063, .3482],
  [.6641, .7519, .8264, .8844, .9213, .9308, .9071, .8412, .7151, .4988, .1381],
  [.6357, .7325, .8148, .8789, .9199, .9310, .9059, .8350, .6992, .4665, .0800],
  [.6109, .7155, .8044, .8738, .9183, .9307, .9044, .8294, .6858, .4403, .0347],
  [.6261, .7262, .8108, .8763, .9179, .9294, .9052, .8376, .7105, .4991, .1625],
  [.6875, .7679, .8348, .8857, .9173, .9253, .9067, .8573, .7685, .6279, .4175],
  [.7557, .8118, .8576, .8916, .9119, .9161, .9030, .8710, .8162, .7337, .6169],
  [.7947, .8341, .8656, .8885, .9014, .9030, .8926, .8695, .8315, .7761, .6998],
  [.8153, .8449, .8684, .8851, .8940, .8942, .8853, .8669, .8376, .7958, .7392],
  [.8289, .8503, .8669, .8783, .8838, .8829, .8753, .8608, .8386, .8076, .7666],
  [.8385, .8532, .8643, .8715, .8745, .8728, .8664, .8552, .8387, .8163, .7873]],
  [[.6931, .7672, .8306, .8802, .9112, .9167, .8887, .8138, .6634, .3791, .0000],
  [.7418, .8033, .8552, .8953, .9199, .9241, .9030, .8489, .7461, .5672, .2591],
  [.7517, .8112, .8613, .8997, .9233, .9277, .9089, .8607, .7712, .6201, .3720],
  [.7322, .7985, .8543, .8973, .9240, .9297, .9103, .8596, .7650, .6063, .3482],
  [.6641, .7519, .8264, .8844, .9213, .9308, .9071, .8412, .7151, .4988, .1381],
  [.6357, .7325, .8148, .8789, .9199, .9310, .9059, .8350, .6992, .4665, .0800],
  [.6109, .7155, .8044, .8738, .9183, .9307, .9044, .8294, .6858, .4403, .0347],
  [.6261, .7262, .8108, .8763, .9179, .9294, .9052, .8376, .7105, .4991, .1625],
  [.6875, .7679, .8348, .8857, .9173, .9253, .9067, .8573, .7685, .6279, .4175],
  [.7557, .8118, .8576, .8916, .9119, .9161, .9030, .8710, .8162, .7337, .6169],
  [.7947, .8341, .8656, .8885, .9014, .9030, .8926, .8695, .8315, .7761, .6998],
  [.8153, .8449, .8684, .8851, .8940, .8942, .8853, .8669, .8376, .7958, .7392],
  [.8289, .8503, .8669, .8783, .8838, .8829, .8753, .8608, .8386, .8076, .7666],
  [.8385, .8532, .8643, .8715, .8745, .8728, .8664, .8552, .8387, .8163, .7873]]])

FanMap.PRmap = np.array([[[1.0546, 1.0558, 1.0553, 1.0532, 1.0494, 1.0440, 1.0372, 1.0290, 1.0196, 1.0089, 1.0000],
  [1.1002, 1.1010, 1.0994, 1.0955, 1.0892, 1.0807, 1.0702, 1.0578, 1.0436, 1.0278, 1.0102],
  [1.1593, 1.1606, 1.1584, 1.1527, 1.1434, 1.1307, 1.1149, 1.0964, 1.0753, 1.0517, 1.0258],
  [1.2313, 1.2363, 1.2353, 1.2283, 1.2154, 1.1968, 1.1730, 1.1449, 1.1125, 1.0764, 1.0366],
  [1.3042, 1.3232, 1.3306, 1.3261, 1.3100, 1.2825, 1.2450, 1.1992, 1.1457, 1.0854, 1.0193],
  [1.3479, 1.3775, 1.3917, 1.3901, 1.3728, 1.3402, 1.2944, 1.2376, 1.1708, 1.0956, 1.0133],
  [1.3935, 1.4356, 1.4581, 1.4602, 1.4420, 1.4040, 1.3488, 1.2797, 1.1982, 1.1065, 1.0068],
  [1.4654, 1.5127, 1.5381, 1.5409, 1.5209, 1.4789, 1.4178, 1.3413, 1.2513, 1.1501, 1.0406],
  [1.5830, 1.6221, 1.6408, 1.6386, 1.6155, 1.5723, 1.5116, 1.4367, 1.3492, 1.2512, 1.1448],
  [1.7258, 1.7494, 1.7565, 1.7469, 1.7208, 1.6787, 1.6229, 1.5555, 1.4778, 1.3912, 1.2969],
  [1.8381, 1.8472, 1.8432, 1.8260, 1.7960, 1.7537, 1.7006, 1.6386, 1.5684, 1.4910, 1.4073],
  [1.9316, 1.9312, 1.9197, 1.8973, 1.8642, 1.8209, 1.7687, 1.7091, 1.6427, 1.5702, 1.4923],
  [2.0237, 2.0149, 1.9970, 1.9704, 1.9352, 1.8918, 1.8414, 1.7850, 1.7231, 1.6562, 1.5848],
  [2.1043, 2.0885, 2.0659, 2.0366, 2.0008, 1.9588, 1.9114, 1.8595, 1.8033, 1.7433, 1.6797]],
  [[1.0546, 1.0558, 1.0553, 1.0532, 1.0494, 1.0440, 1.0372, 1.0290, 1.0196, 1.0089, 1.0000],
  [1.1002, 1.1010, 1.0994, 1.0955, 1.0892, 1.0807, 1.0702, 1.0578, 1.0436, 1.0278, 1.0102],
  [1.1593, 1.1606, 1.1584, 1.1527, 1.1434, 1.1307, 1.1149, 1.0964, 1.0753, 1.0517, 1.0258],
  [1.2313, 1.2363, 1.2353, 1.2283, 1.2154, 1.1968, 1.1730, 1.1449, 1.1125, 1.0764, 1.0366],
  [1.3042, 1.3232, 1.3306, 1.3261, 1.3100, 1.2825, 1.2450, 1.1992, 1.1457, 1.0854, 1.0193],
  [1.3479, 1.3775, 1.3917, 1.3901, 1.3728, 1.3402, 1.2944, 1.2376, 1.1708, 1.0956, 1.0133],
  [1.3935, 1.4356, 1.4581, 1.4602, 1.4420, 1.4040, 1.3488, 1.2797, 1.1982, 1.1065, 1.0068],
  [1.4654, 1.5127, 1.5381, 1.5409, 1.5209, 1.4789, 1.4178, 1.3413, 1.2513, 1.1501, 1.0406],
  [1.5830, 1.6221, 1.6408, 1.6386, 1.6155, 1.5723, 1.5116, 1.4367, 1.3492, 1.2512, 1.1448],
  [1.7258, 1.7494, 1.7565, 1.7469, 1.7208, 1.6787, 1.6229, 1.5555, 1.4778, 1.3912, 1.2969],
  [1.8381, 1.8472, 1.8432, 1.8260, 1.7960, 1.7537, 1.7006, 1.6386, 1.5684, 1.4910, 1.4073],
  [1.9316, 1.9312, 1.9197, 1.8973, 1.8642, 1.8209, 1.7687, 1.7091, 1.6427, 1.5702, 1.4923],
  [2.0237, 2.0149, 1.9970, 1.9704, 1.9352, 1.8918, 1.8414, 1.7850, 1.7231, 1.6562, 1.5848],
  [2.1043, 2.0885, 2.0659, 2.0366, 2.0008, 1.9588, 1.9114, 1.8595, 1.8033, 1.7433, 1.6797]]])

#FanMap.Nc_data, FanMap.alpha_data, FanMap.Rline_data = np.meshgrid(FanMap.Nc_vals, FanMap.alpha_vals, FanMap.Rline_vals, sparse=False)
FanMap.Npts = FanMap.NcMap.size

FanMap.units = {}
FanMap.units['NcMap'] = 'rpm'
FanMap.units['WcMap'] = 'lbm/s'


# format for new regular grid interpolator:

FanMap.param_data = []
FanMap.output_data = []

FanMap.param_data.append({'name': 'alphaMap', 'values': FanMap.alphaMap,
                          'default': 0, 'units': None})
FanMap.param_data.append({'name': 'NcMap', 'values': FanMap.NcMap,
                          'default': 0.99, 'units': 'rpm'})
FanMap.param_data.append({'name': 'RlineMap', 'values': FanMap.RlineMap,
                          'default': 2.2, 'units': None})

FanMap.output_data.append({'name': 'WcMap', 'values': FanMap.WcMap,
                           'default': np.mean(FanMap.WcMap), 'units': 'lbm/s'})
FanMap.output_data.append({'name': 'effMap', 'values': FanMap.effMap,
                           'default': np.mean(FanMap.effMap), 'units': None})
FanMap.output_data.append({'name': 'PRmap', 'values': FanMap.PRmap,
                           'default': 1.754, 'units': None})
