import numpy as np

from pycycle.maps.map_data import MapData


"""Python version of HBTF HPC map from NPSS"""
HPCMap = MapData()

# Map design point values
HPCMap.defaults = {}
HPCMap.defaults['alphaMap'] = 0.0
HPCMap.defaults['NcMap'] = 0.976
HPCMap.defaults['PR'] = 10.894
HPCMap.defaults['RlineMap'] = 2.050
HPCMap.RlineStall = 1.0

HPCMap.alphaMap = np.array([0.000, 90.000])
HPCMap.NcMap = np.array([0.500, 0.600, 0.700, 0.750, 0.800, 0.850, 0.900, 0.925, 0.950, 0.975, 1.000, 1.025, 1.050, 1.150])
HPCMap.RlineMap = np.array([1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600, 2.800, 3.000]) 

HPCMap.WcMap = np.array([[[ 7.267,  7.543,  7.802,  8.046,  8.273,  8.484,  8.678,  8.855,  9.017,  9.162,  9.292],
  [ 9.809, 10.081, 10.331, 10.558, 10.764, 10.948, 11.111, 11.253, 11.374, 11.475, 11.557],
  [13.119, 13.369, 13.593, 13.791, 13.964, 14.111, 14.235, 14.335, 14.412, 14.467, 14.501],
  [15.487, 15.754, 15.990, 16.196, 16.372, 16.519, 16.638, 16.729, 16.794, 16.834, 16.850],
  [18.810, 19.118, 19.386, 19.614, 19.804, 19.956, 20.073, 20.155, 20.203, 20.219, 20.219],
  [24.726, 25.163, 25.538, 25.851, 26.105, 26.302, 26.444, 26.532, 26.570, 26.572, 26.572],
  [32.579, 33.147, 33.628, 34.025, 34.340, 34.576, 34.736, 34.824, 34.844, 34.844, 34.844],
  [37.318, 37.919, 38.426, 38.843, 39.173, 39.418, 39.582, 39.669, 39.685, 39.685, 39.685],
  [42.541, 43.049, 43.481, 43.840, 44.126, 44.343, 44.493, 44.579, 44.603, 44.603, 44.603],
  [47.740, 48.152, 48.505, 48.801, 49.040, 49.225, 49.358, 49.440, 49.472, 49.473, 49.473],
  [53.232, 53.466, 53.672, 53.849, 53.998, 54.120, 54.216, 54.285, 54.330, 54.349, 54.350],
  [55.614, 55.749, 55.870, 55.976, 56.068, 56.146, 56.211, 56.261, 56.299, 56.323, 56.335],
  [57.892, 57.961, 58.023, 58.079, 58.130, 58.174, 58.213, 58.245, 58.273, 58.294, 58.310],
  [60.960, 60.963, 60.966, 60.969, 60.972, 60.975, 60.977, 60.980, 60.983, 60.985, 60.987]],
  [[14.708, 15.130, 15.496, 15.807, 16.064, 16.269, 16.424, 16.530, 16.591, 16.608, 16.608],
  [18.840, 19.257, 19.615, 19.914, 20.157, 20.346, 20.482, 20.569, 20.607, 20.610, 20.610],
  [23.739, 24.131, 24.469, 24.753, 24.986, 25.168, 25.302, 25.390, 25.433, 25.439, 25.439],
  [26.858, 27.271, 27.625, 27.924, 28.167, 28.356, 28.494, 28.583, 28.624, 28.628, 28.628],
  [30.784, 31.249, 31.648, 31.980, 32.248, 32.454, 32.601, 32.690, 32.724, 32.725, 32.725],
  [36.143, 36.742, 37.248, 37.664, 37.993, 38.237, 38.401, 38.488, 38.505, 38.505, 38.505],
  [41.743, 42.432, 43.011, 43.483, 43.851, 44.119, 44.291, 44.371, 44.379, 44.379, 44.379],
  [44.341, 45.025, 45.599, 46.066, 46.430, 46.695, 46.864, 46.943, 46.949, 46.949, 46.949],
  [47.355, 47.903, 48.366, 48.748, 49.050, 49.276, 49.427, 49.508, 49.523, 49.523, 49.523],
  [50.174, 50.600, 50.963, 51.267, 51.511, 51.699, 51.831, 51.911, 51.938, 51.938, 51.938],
  [53.232, 53.466, 53.672, 53.849, 53.998, 54.120, 54.216, 54.285, 54.330, 54.349, 54.350],
  [55.614, 55.749, 55.870, 55.976, 56.068, 56.146, 56.211, 56.261, 56.299, 56.323, 56.335],
  [57.892, 57.961, 58.023, 58.079, 58.130, 58.174, 58.213, 58.245, 58.273, 58.294, 58.310],
  [60.960, 60.963, 60.966, 60.969, 60.972, 60.975, 60.977, 60.980, 60.983, 60.985, 60.987]]])

HPCMap.effMap = np.array([[[.7176, .7276, .7328, .7322, .7247, .7090, .6806, .6339, .5639, .4639, .3239],
  [.7345, .7429, .7471, .7467, .7407, .7282, .7060, .6702, .6179, .5450, .4465],
  [.7558, .7623, .7657, .7653, .7609, .7516, .7355, .7100, .6734, .6239, .5589],
  [.7685, .7756, .7795, .7800, .7765, .7687, .7544, .7315, .6985, .6538, .5955],
  [.7846, .7928, .7979, .7996, .7975, .7910, .7783, .7571, .7261, .6839, .6287],
  [.8102, .8218, .8300, .8345, .8348, .8303, .8191, .7984, .7670, .7233, .6654],
  [.8343, .8477, .8577, .8639, .8659, .8632, .8537, .8349, .8055, .7642, .7093],
  [.8423, .8554, .8651, .8713, .8735, .8713, .8628, .8456, .8189, .7814, .7316],
  [.8576, .8673, .8745, .8790, .8804, .8786, .8722, .8596, .8404, .8137, .7789],
  [.8593, .8659, .8707, .8734, .8739, .8721, .8671, .8579, .8440, .8253, .8012],
  [.8633, .8658, .8674, .8681, .8677, .8662, .8632, .8584, .8516, .8427, .8316],
  [.8384, .8389, .8390, .8385, .8376, .8361, .8339, .8309, .8269, .8220, .8162],
  [.8113, .8109, .8103, .8095, .8086, .8074, .8059, .8042, .8020, .7995, .7967],
  [.7363, .7361, .7359, .7357, .7355, .7353, .7351, .7348, .7346, .7344, .7342]],
  [[.7488, .7639, .7740, .7786, .7767, .7670, .7456, .7075, .6490, .5652, .4496],
  [.7761, .7888, .7976, .8018, .8008, .7937, .7779, .7496, .7067, .6466, .5657],
  [.8081, .8183, .8254, .8290, .8287, .8240, .8130, .7934, .7639, .7233, .6697],
  [.8216, .8318, .8390, .8429, .8431, .8393, .8296, .8120, .7855, .7489, .7008],
  [.8341, .8450, .8529, .8576, .8586, .8555, .8467, .8301, .8047, .7694, .7230],
  [.8400, .8533, .8633, .8695, .8717, .8694, .8606, .8429, .8153, .7765, .7250],
  [.8453, .8595, .8703, .8773, .8801, .8783, .8699, .8525, .8250, .7863, .7349],
  [.8449, .8582, .8683, .8747, .8772, .8754, .8674, .8510, .8253, .7892, .7416],
  [.8515, .8611, .8682, .8726, .8739, .8721, .8657, .8532, .8342, .8080, .7739],
  [.8564, .8630, .8677, .8704, .8709, .8691, .8641, .8548, .8411, .8225, .7986],
  [.8633, .8658, .8674, .8681, .8677, .8662, .8632, .8584, .8516, .8427, .8316],
  [.8384, .8389, .8390, .8385, .8376, .8361, .8339, .8309, .8269, .8220, .8162],
  [.8113, .8109, .8103, .8095, .8086, .8074, .8059, .8042, .8020, .7995, .7967],
  [.7363, .7361, .7359, .7357, .7355, .7353, .7351, .7348, .7346, .7344, .7342]]])

HPCMap.PRmap = np.array([[[ 1.6474,  1.6178,  1.5830,  1.5432,  1.4988,  1.4501,  1.3958,  1.3350,  1.2684,  1.1967,  1.1210],
  [ 2.0524,  2.0061,  1.9528,  1.8928,  1.8267,  1.7549,  1.6760,  1.5887,  1.4942,  1.3937,  1.2887],
  [ 2.6917,  2.6224,  2.5441,  2.4574,  2.3630,  2.2618,  2.1517,  2.0312,  1.9020,  1.7659,  1.6247],
  [ 3.1844,  3.0989,  3.0017,  2.8938,  2.7763,  2.6501,  2.5128,  2.3625,  2.2016,  2.0325,  1.8576],
  [ 3.9146,  3.8061,  3.6811,  3.5412,  3.3876,  3.2221,  3.0412,  2.8428,  2.6301,  2.4070,  2.1770],
  [ 5.2748,  5.1343,  4.9640,  4.7661,  4.5434,  4.2989,  4.0272,  3.7250,  3.3991,  3.0567,  2.7054],
  [ 7.2269,  7.0482,  6.8214,  6.5500,  6.2382,  5.8909,  5.4999,  5.0605,  4.5840,  4.0826,  3.5692],
  [ 8.4539,  8.2523,  7.9945,  7.6844,  7.3269,  6.9275,  6.4764,  5.9681,  5.4154,  4.8326,  4.2344],
  [ 9.7989,  9.5666,  9.2844,  8.9557,  8.5845,  8.1752,  7.7182,  7.2068,  6.6512,  6.0625,  5.4522],
  [11.0964, 10.8394, 10.5411, 10.2040,  9.8313,  9.4263,  8.9800,  8.4856,  7.9504,  7.3823,  6.7898],
  [12.3279, 12.0811, 11.8131, 11.5251, 11.2183, 10.8940, 10.5466, 10.1712,  9.7705,  9.3472,  8.9045],
  [12.8281, 12.6098, 12.3814, 12.1431, 11.8957, 11.6395, 11.3715, 11.0885, 10.7917, 10.4821, 10.1607],
  [13.2984, 13.1308, 12.9593, 12.7839, 12.6048, 12.4222, 12.2345, 12.0405, 11.8404, 11.6343, 11.4228],
  [13.9406, 13.9123, 13.8840, 13.8556, 13.8272, 13.7988, 13.7703, 13.7417, 13.7130, 13.6842, 13.6554]],
  [[ 3.2456,  3.1584,  3.0490,  2.9191,  2.7709,  2.6066,  2.4228,  2.2175,  1.9961,  1.7647,  1.5293],
  [ 4.0747,  3.9616,  3.8233,  3.6619,  3.4798,  3.2796,  3.0571,  2.8099,  2.5440,  2.2658,  1.9823],
  [ 4.9841,  4.8498,  4.6905,  4.5081,  4.3049,  4.0832,  3.8384,  3.5674,  3.2756,  2.9689,  2.6534],
  [ 5.6533,  5.5043,  5.3270,  5.1237,  4.8968,  4.6490,  4.3749,  4.0710,  3.7434,  3.3985,  3.0431],
  [ 6.6069,  6.4375,  6.2327,  5.9950,  5.7277,  5.4339,  5.1073,  4.7434,  4.3501,  3.9355,  3.5084],
  [ 8.1407,  7.9453,  7.6950,  7.3939,  7.0466,  6.6587,  6.2206,  5.7270,  5.1907,  4.6255,  4.0459],
  [ 9.9036,  9.6826,  9.3874,  9.0231,  8.5960,  8.1135,  7.5633,  6.9385,  6.2570,  5.5381,  4.8019],
  [10.6503, 10.4133, 10.0994,  9.7137,  9.2627,  8.7539,  8.1744,  7.5166,  6.7986,  6.0402,  5.2618],
  [11.3117, 11.0497, 10.7272, 10.3482,  9.9174,  9.4403,  8.9052,  8.3043,  7.6502,  6.9563,  6.2370],
  [11.9341, 11.6599, 11.3401, 10.9776, 10.5759, 10.1384,  9.6555,  9.1197,  8.5390,  7.9223,  7.2789],
  [12.3279, 12.0811, 11.8131, 11.5251, 11.2183, 10.8940, 10.5466, 10.1712,  9.7705,  9.3472,  8.9045],
  [12.8281, 12.6098, 12.3814, 12.1431, 11.8957, 11.6395, 11.3715, 11.0885, 10.7917, 10.4821, 10.1607],
  [13.2984, 13.1308, 12.9593, 12.7839, 12.6048, 12.4222, 12.2345, 12.0405, 11.8404, 11.6343, 11.4228],
  [13.9406, 13.9123, 13.8840, 13.8556, 13.8272, 13.7988, 13.7703, 13.7417, 13.7130, 13.6842, 13.6554]]])

#HPCMap.Nc_data, HPCMap.alpha_data, HPCMap.Rline_data = np.meshgrid(HPCMap.Nc_vals, HPCMap.alpha_vals, HPCMap.Rline_vals, sparse=False)
HPCMap.Npts = HPCMap.NcMap.size

HPCMap.units = {}
HPCMap.units['NcMap'] = 'rpm'
HPCMap.units['WcMap'] = 'lbm/s'

# format for new regular grid interpolator:

HPCMap.param_data = []
HPCMap.output_data = []

HPCMap.param_data.append({'name': 'alphaMap', 'values': HPCMap.alphaMap,
                          'default': 0, 'units': None})
HPCMap.param_data.append({'name': 'NcMap', 'values': HPCMap.NcMap,
                          'default': 0.976, 'units': 'rpm'})
HPCMap.param_data.append({'name': 'RlineMap', 'values': HPCMap.RlineMap,
                          'default': 2.05, 'units': None})

HPCMap.output_data.append({'name': 'WcMap', 'values': HPCMap.WcMap,
                           'default': np.mean(HPCMap.WcMap), 'units': 'lbm/s'})
HPCMap.output_data.append({'name': 'effMap', 'values': HPCMap.effMap,
                           'default': np.mean(HPCMap.effMap), 'units': None})
HPCMap.output_data.append({'name': 'PRmap', 'values': HPCMap.PRmap,
                           'default': 10.894, 'units': None})
