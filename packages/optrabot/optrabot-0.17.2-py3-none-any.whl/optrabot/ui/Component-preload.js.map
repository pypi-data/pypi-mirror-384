{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","init","async","_init","UIComponent.prototype.init.call","this","setModel","createDeviceModel","oControlModel","JSONModel","initializeGlobalModel","getRouter","initialize","_initializeGlobalModel","environment","window","backendBaseUrl","location","origin","slice","lastIndexOf","globalData","appVersion","globalModel","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","Device","support","touch"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport models from \"./model/models\";\nimport Device from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\n/**\n * @namespace com.optrabot.ui\n */\nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic async init(): void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n\t\t// create the device model\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\tvar oControlModel = new JSONModel();\n\t\tthis.setModel(oControlModel, \"control\");\n\n\t\t// Initialisiere das global-Model\n\t\tawait this.initializeGlobalModel();\n\n\t\t// create the views based on the url/hash\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * Initializes the global model with the backend URL and the app version.\n\t * @returns {Promise<void>}\n\t */\n\tprivate async initializeGlobalModel(): Promise<void> {\n\t\tvar environment = (window as any).environment || \"PROD\";\n\t\tvar backendBaseUrl = \"\";\n\t\tbackendBaseUrl = window.location.origin;\n\t\tif (environment !== \"PROD\") {\n\t\t\t// In development the backend uses a different port\n\t\t\tbackendBaseUrl = backendBaseUrl.slice(0, backendBaseUrl.lastIndexOf(\":\"));\n\t\t\tbackendBaseUrl = backendBaseUrl+ \":8080\"\n\t\t}\n\t\tconst globalData = {\n\t\t\t\"backendBaseUrl\": backendBaseUrl,\n\t\t\t\"appVersion\": \"1.0.0\"\n\t\t};\n\t\tconst globalModel = new JSONModel(globalData);\n\t\tthis.setModel(globalModel, \"global\");\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t * @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n}\n"],"mappings":"AAAA,4OACOA,EAAMC,EAAAC,GAIb,MAGqBC,EAAkBC,EAAWC,OAAA,6BACnCC,SAAW,CACxBC,SAAU,QAKEC,KAAIC,eAAAC,IAEhBC,sBAAAC,MAGAA,KAAKC,SAASb,EAAOc,oBAAqB,UAE1C,IAAIC,EAAgB,IAAIC,EACxBJ,KAAKC,SAASE,EAAe,iBAGvBH,KAAKK,wBAGXL,KAAKM,YAAYC,YAClB,EAMcF,sBAAqBR,eAAAW,IAClC,IAAIC,EAAeC,OAAeD,aAAe,OACjD,IAAIE,EAAiB,GACrBA,EAAiBD,OAAOE,SAASC,OACjC,GAAIJ,IAAgB,OAAQ,CAE3BE,EAAiBA,EAAeG,MAAM,EAAGH,EAAeI,YAAY,MACpEJ,EAAiBA,EAAgB,OAClC,CACA,MAAMK,EAAa,CAClBL,eAAkBA,EAClBM,WAAc,SAEf,MAAMC,EAAc,IAAId,EAAUY,GAClChB,KAAKC,SAASiB,EAAa,SAC5B,EAQOC,uBAAsB,SAAAC,IAC5B,GAAIpB,KAAKqB,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9G1B,KAAKqB,oBAAsB,EAC5B,MAAO,IAAKM,EAAOC,QAAQC,MAAO,CAEjC7B,KAAKqB,oBAAsB,kBAC5B,KAAO,CAENrB,KAAKqB,oBAAsB,eAC5B,CACD,CACA,OAAOrB,KAAKqB,mBACb,IAAC,OAjEmB9B,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","App","extend","onInit","_onInit","this","getView","addStyleClass","getOwnerComponent","getContentDensityClass","Device","resize","width","onSideNavButtonPress","getBundleText","_getBundleText","sI18nKey","aPlaceholderValues","Promise","resolve","getBundleTextByModel","getModel","_onSideNavButtonPress","console","log","oToolPage","byId","bSideExpanded","getSideExpanded","setSideExpanded","_setToggleButtonTooltip","async","oToggleButton","setTooltip"],"sources":["App.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\nimport Device from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ToolPage from \"sap/tnt/ToolPage\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\n\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class App extends BaseController {\n\tpublic onInit(): void {\n\t\t// apply content density mode to root view\n\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\n\t\t// if the app starts on desktop devices with small or medium screen size, collaps the side navigation\n\t\tif (Device.resize.width <= 1024) {\n\t\t\tthis.onSideNavButtonPress();\n\t\t}\n\t}\n\t\n\tpublic getBundleText(sI18nKey: string, aPlaceholderValues?: string[]): Promise<string> {\n\t\treturn Promise.resolve(this.getBundleTextByModel(sI18nKey, this.getOwnerComponent().getModel(\"i18n\") as ResourceModel, aPlaceholderValues));\n\t}\n\n\tpublic onSideNavButtonPress(): void {\n\t\tconsole.log(\"SideNavButton pressed\");\n\t\tconst oToolPage = this.byId(\"optrabot_app\") as ToolPage;\n\t\tvar bSideExpanded = oToolPage.getSideExpanded();\n\t\toToolPage.setSideExpanded(!bSideExpanded);\n\t\tthis._setToggleButtonTooltip(!bSideExpanded);\n\t}\n\n\tpublic async _setToggleButtonTooltip(bSideExpanded: boolean): Promise<void> {\n\t\tconst oToggleButton = this.byId(\"sideNavigationToggleButton\");\n\t\tif (bSideExpanded) {\n\t\t\toToggleButton.setTooltip(await this.getBundleText(\"sideNavigationCollapseTooltip\"));\n\t\t} else {\n\t\t\toToggleButton.setTooltip(await this.getBundleText(\"sideNavigationExpandTooltip\"));\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,kLAAOA,EAAcC,EAAAC,GAMrB,MAGqBC,EAAYH,EAAcI,OAAA,kCACvCC,OAAM,SAAAC,IAEZC,KAAKC,UAAUC,cAAcF,KAAKG,oBAAoBC,0BAGtD,GAAIC,EAAOC,OAAOC,OAAS,KAAM,CAChCP,KAAKQ,sBACN,CACD,EAEOC,cAAa,SAAAC,EAACC,EAAkBC,GACtC,OAAOC,QAAQC,QAAQd,KAAKe,qBAAqBJ,EAAUX,KAAKG,oBAAoBa,SAAS,QAA0BJ,GACxH,EAEOJ,qBAAoB,SAAAS,IAC1BC,QAAQC,IAAI,yBACZ,MAAMC,EAAYpB,KAAKqB,KAAK,gBAC5B,IAAIC,EAAgBF,EAAUG,kBAC9BH,EAAUI,iBAAiBF,GAC3BtB,KAAKyB,yBAAyBH,EAC/B,EAEaG,wBAAuBC,eAAAD,EAACH,GACpC,MAAMK,EAAgB3B,KAAKqB,KAAK,8BAChC,GAAIC,EAAe,CAClBK,EAAcC,iBAAiB5B,KAAKS,cAAc,iCACnD,KAAO,CACNkB,EAAcC,iBAAiB5B,KAAKS,cAAc,+BACnD,CACD,IAAC,OA9BmBb,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"BaseController.js","names":["BaseController","Controller","extend","getOwnerComponent","_getOwnerComponent","Controller.prototype.getOwnerComponent.call","this","getRouter","_getRouter","UIComponent","getRouterFor","getResourceBundle","_getResourceBundle","oModel","getModel","getBundleTextByModel","async","_getBundleTextByModel","sI18nKey","oResourceModel","aPlaceholderValues","oBundle","getText","_getModel","sName","getView","setModel","_setModel","navTo","_navTo","oParameters","bReplace","undefined","onNavBack","_onNavBack","sPreviousHash","History","getInstance","getPreviousHash","window","history","go","showFunctionNotImplementedMessage","_showFunctionNotImplementedMessage","showMessage","_showMessage","messageKey","messageType","arguments","length","i18nModel","resourceBundle","message","MessageBox","information","error","success"],"sources":["BaseController.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport AppComponent from \"../Component\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Model from \"sap/ui/model/Model\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Router from \"sap/ui/core/routing/Router\";\nimport History from \"sap/ui/core/routing/History\";\n\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default abstract class BaseController extends Controller {\n\t/**\n\t * Convenience method for accessing the component of the controller's view.\n\t * @returns The component of the controller's view\n\t */\n\tpublic getOwnerComponent(): AppComponent {\n\t\treturn super.getOwnerComponent() as AppComponent;\n\t}\n\n\t/**\n\t * Convenience method to get the components' router instance.\n\t * @returns The router instance\n\t */\n\tpublic getRouter(): Router {\n\t\treturn UIComponent.getRouterFor(this);\n\t}\n\n\t/**\n\t * Convenience method for getting the i18n resource bundle of the component.\n\t * @returns The i18n resource bundle of the component\n\t */\n\tpublic getResourceBundle(): ResourceBundle | Promise<ResourceBundle> {\n\t\tconst oModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\n\t\treturn oModel.getResourceBundle();\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic async getBundleTextByModel(sI18nKey: string, oResourceModel: ResourceModel, aPlaceholderValues?: string[]): Promise<string> {\n\t\tconst oBundle = await oResourceModel.getResourceBundle();\n\t\treturn oBundle.getText(sI18nKey, aPlaceholderValues);\n\t}\n\n\t/**\n\t * Convenience method for getting the view model by name in every controller of the application.\n\t * @param [sName] The model name\n\t * @returns The model instance\n\t */\n\tpublic getModel(sName?: string): Model {\n\t\treturn this.getView().getModel(sName);\n\t}\n\n\t/**\n\t * Convenience method for setting the view model in every controller of the application.\n\t * @param oModel The model instance\n\t * @param [sName] The model name\n\t * @returns The current base controller instance\n\t */\n\tpublic setModel(oModel: Model, sName?: string): BaseController {\n\t\tthis.getView().setModel(oModel, sName);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Convenience method for triggering the navigation to a specific target.\n\t * @public\n\t * @param sName Target name\n\t * @param [oParameters] Navigation parameters\n\t * @param [bReplace] Defines if the hash should be replaced (no browser history entry) or set (browser history entry)\n\t */\n\tpublic navTo(sName: string, oParameters?: object, bReplace?: boolean): void {\n\t\tthis.getRouter().navTo(sName, oParameters, undefined, bReplace);\n\t}\n\n\t/**\n\t * Convenience event handler for navigating back.\n\t * It there is a history entry we go one step back in the browser history\n\t * If not, it will replace the current entry of the browser history with the main route.\n\t */\n\tpublic onNavBack(): void {\n\t\tconst sPreviousHash = History.getInstance().getPreviousHash();\n\t\tif (sPreviousHash !== undefined) {\n\t\t\twindow.history.go(-1);\n\t\t} else {\n\t\t\tthis.getRouter().navTo(\"main\", {}, undefined, true);\n\t\t}\n\t}\n\n\tpublic showFunctionNotImplementedMessage(): void {\n\t\tthis.showMessage(\"FunctionNotImplemented\", \"information\");\n\t}\n\n\tpublic showMessage(messageKey: string, messageType: \"information\" | \"error\" | \"success\" = \"information\"): void {\n\t\tconst i18nModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\n    \tconst resourceBundle = i18nModel.getResourceBundle();\n    \tconst message = resourceBundle.getText(messageKey);\n\n\t\tswitch (messageType) {\n\t\t\tcase \"information\":\n\t\t\t\tMessageBox.information(message);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tMessageBox.error(message);\n\t\t\t\tbreak;\n\t\t\tcase \"success\":\n\t\t\t\tMessageBox.success(message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,oKAUA,MAG8BA,EAAuBC,EAAUC,OAAA,6CAKvDC,kBAAiB,SAAAC,IACvB,OAAAC,mCAAAC,KACD,EAMOC,UAAS,SAAAC,IACf,OAAOC,EAAYC,aAAaJ,KACjC,EAMOK,kBAAiB,SAAAC,IACvB,MAAMC,EAASP,KAAKH,oBAAoBW,SAAS,QACjD,OAAOD,EAAOF,mBACf,EAKaI,qBAAoBC,eAAAC,EAACC,EAAkBC,EAA+BC,GAClF,MAAMC,QAAgBF,EAAeR,oBACrC,OAAOU,EAAQC,QAAQJ,EAAUE,EAClC,EAOON,SAAQ,SAAAS,EAACC,GACf,OAAOlB,KAAKmB,UAAUX,SAASU,EAChC,EAQOE,SAAQ,SAAAC,EAACd,EAAeW,GAC9BlB,KAAKmB,UAAUC,SAASb,EAAQW,GAChC,OAAOlB,IACR,EASOsB,MAAK,SAAAC,EAACL,EAAeM,EAAsBC,GACjDzB,KAAKC,YAAYqB,MAAMJ,EAAOM,EAAaE,UAAWD,EACvD,EAOOE,UAAS,SAAAC,IACf,MAAMC,EAAgBC,EAAQC,cAAcC,kBAC5C,GAAIH,IAAkBH,UAAW,CAChCO,OAAOC,QAAQC,IAAI,EACpB,KAAO,CACNnC,KAAKC,YAAYqB,MAAM,OAAQ,CAAC,EAAGI,UAAW,KAC/C,CACD,EAEOU,kCAAiC,SAAAC,IACvCrC,KAAKsC,YAAY,yBAA0B,cAC5C,EAEOA,YAAW,SAAAC,EAACC,GAA4F,IAAxEC,EAAgDC,UAAAC,OAAA,GAAAD,UAAA,KAAAhB,UAAAgB,UAAA,GAAG,cACzF,MAAME,EAAY5C,KAAKH,oBAAoBW,SAAS,QACjD,MAAMqC,EAAiBD,EAAUvC,oBACjC,MAAMyC,EAAUD,EAAe7B,QAAQwB,GAE1C,OAAQC,GACP,IAAK,cACJM,EAAWC,YAAYF,GACvB,MACD,IAAK,QACJC,EAAWE,MAAMH,GACjB,MACD,IAAK,UACJC,EAAWG,QAAQJ,GACnB,MAEH,IAAC,OAnG4BpD,CAAc","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":12,"column":0},"map":{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","sayHello","_sayHello","MessageBox","show"],"sources":["Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\nimport BaseController from \"./BaseController\";\n\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class Main extends BaseController {\n\tpublic sayHello(): void {\n\t\tMessageBox.show(\"Hello World!\");\n\t}\n}\n"],"mappings":"AAAA,qLACOA,EAAcC,EAAAC,GAErB,MAGqBC,EAAaH,EAAcI,OAAA,mCACxCC,SAAQ,SAAAC,IACdC,EAAWC,KAAK,eACjB,IAAC,OAHmBL,CAAI","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":15,"column":0},"map":{"version":3,"file":"NotFound.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","NotFoundController","extend","onInit","_onInit"],"sources":["NotFound.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class NotFoundController extends BaseController {\n\tpublic onInit(): void {\n\t}\n}"],"mappings":"AAAA,gKAAOA,EAAcC,EAAAC,GACrB,MAGqBC,EAA2BH,EAAcI,OAAA,iDACtDC,OAAM,SAAAC,IACb,IAAC,OAFmBH,CAAkB","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":18,"column":0},"map":{"version":3,"file":"TradeTemplateDetail.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","TradeTemplateDetail","extend","onInit","_onInit","oOwnerComponent","this","getOwnerComponent","oRouter","getRouter","oControlModel","getModel","oViewModel","JSONModel","template","editable","getView","setModel","getRoute","attachPatternMatched","_onTemplateMatched","onEditToggleButtonPress","_onEditToggleButtonPress","showFunctionNotImplementedMessage","oTemplatePage","byId","bCurrentShowFooterState","getShowFooter","setShowFooter","loadTemplateDetails","async","_loadTemplateDetails","globalModel","backendBaseUrl","getProperty","response","fetch","_template","ok","Error","console","log","templateData","json","setProperty","error","MessageBox","message","oEvent","getParameter","layout","onFullscreenPressed","_onFullscreenPressed","sCurrentLayout","sNewLayout","navTo","onClosePressed","_onClosePressed","onExit","_onExit","detachPatternMatched"],"sources":["TradeTemplateDetail.controller.ts"],"sourcesContent":["import Router from \"sap/ui/core/routing/Router\";\nimport BaseController from \"./BaseController\";\nimport Page from \"sap/m/Page\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageBox from \"sap/m/MessageBox\";\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class TradeTemplateDetail extends BaseController {\n\tprivate oRouter: Router;\n\tprivate oControlModel: any;\n\tprivate oViewModel: JSONModel;\n\tprivate _template: string;\n\t\n\tpublic onInit(): void {\n\t\tvar oOwnerComponent = this.getOwnerComponent();\n\t\tthis.oRouter = oOwnerComponent.getRouter();\n\t\tthis.oControlModel = oOwnerComponent.getModel(\"control\");\n\n\t\tthis.oViewModel = new JSONModel({\n\t\t\ttemplate: null,\n\t\t\teditable: false\n\t\t});\n\t\tthis.getView().setModel(this.oViewModel, \"viewModel\");\n\n\t\tthis.oRouter.getRoute(\"template\").attachPatternMatched(this._onTemplateMatched, this);\n\t\tthis.oRouter.getRoute(\"templateWOLayout\").attachPatternMatched(this._onTemplateMatched, this);\n\t}\n\n\tpublic onEditToggleButtonPress(): void {\n\t\tthis.showFunctionNotImplementedMessage();\n\t\treturn;\n\n\t\tvar oTemplatePage = this.getView().byId(\"TemplatePageLayout\") as Page;\n\t\tvar bCurrentShowFooterState = oTemplatePage.getShowFooter();\n\t\toTemplatePage.setShowFooter(!bCurrentShowFooterState);\n\t}\n\n\tprivate async loadTemplateDetails(): Promise<void> {\n\t\ttry {\n\t\t\tconst globalModel = this.getOwnerComponent().getModel(\"global\") as JSONModel;\n\t\t\tconst backendBaseUrl = globalModel.getProperty(\"/backendBaseUrl\");\n\t\t\tconst response = await fetch(`${backendBaseUrl}/api/templates/` + this._template);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch template details');\n\t\t\t}\n\t\t\tconsole.log(\"Template details loaded\");\n\t\t\tconst templateData = await response.json();\n\t\t\tthis.oViewModel.setProperty(\"/template\", templateData);\n\t\t} catch (error) {\n\t\t\tMessageBox.error(\"Failed to load template details: \" + error.message);\n\t\t}\n\t}\n\n\tpublic _onTemplateMatched(oEvent: any): void {\n\t\tconsole.log(\"Template matched\");\n\t\tthis._template = oEvent.getParameter(\"arguments\").template || this._template || \"0\";\n\t\t\n\t\t// Store the current template in the model\n\t\tvar layout = oEvent.getParameter(\"arguments\").layout || \"TwoColumnsMidExpanded\";\n\t\tthis.oControlModel.setProperty(\"/currentLayout\", layout);\n\n\t\tthis.loadTemplateDetails();\n\t}\n\n\tpublic onFullscreenPressed(): void {\n\t\tvar sCurrentLayout = this.oControlModel.getProperty(\"/currentLayout\");\n\t\tvar sNewLayout = sCurrentLayout;\n\t\tif (sCurrentLayout === \"MidColumnFullScreen\") {\n\t\t\tsNewLayout = \"TwoColumnsMidExpanded\";\n\t\t} else if (sCurrentLayout === \"TwoColumnsMidExpanded\") {\n\t\t\tsNewLayout = \"MidColumnFullScreen\";\n\t\t}\n\t\tthis.oRouter.navTo(\"template\", {\n\t\t\tlayout: sNewLayout, template: this._template}, true);\n\t}\n\n\tpublic onClosePressed(): void {\n\t\tthis.oRouter.navTo(\"templates\", {\n\t\t\tlayout: \"OneColumn\"}, true);\n\t}\n\n\tpublic onExit(): void {\n\t\tthis.oRouter.getRoute(\"template\").detachPatternMatched(this._onTemplateMatched, this);\n\t\tthis.oRouter.getRoute(\"templateWOLayout\").detachPatternMatched(this._onTemplateMatched, this);\n\t}\n}"],"mappings":"AAAA,qNACOA,EAAcC,EAAAC,GAIrB,MAGqBC,EAA4BH,EAAcI,OAAA,kDAMvDC,OAAM,SAAAC,IACZ,IAAIC,EAAkBC,KAAKC,oBAC3BD,KAAKE,QAAUH,EAAgBI,YAC/BH,KAAKI,cAAgBL,EAAgBM,SAAS,WAE9CL,KAAKM,WAAa,IAAIC,EAAU,CAC/BC,SAAU,KACVC,SAAU,QAEXT,KAAKU,UAAUC,SAASX,KAAKM,WAAY,aAEzCN,KAAKE,QAAQU,SAAS,YAAYC,qBAAqBb,KAAKc,mBAAoBd,MAChFA,KAAKE,QAAQU,SAAS,oBAAoBC,qBAAqBb,KAAKc,mBAAoBd,KACzF,EAEOe,wBAAuB,SAAAC,IAC7BhB,KAAKiB,oCACL,OAEA,IAAIC,EAAgBlB,KAAKU,UAAUS,KAAK,sBACxC,IAAIC,EAA0BF,EAAcG,gBAC5CH,EAAcI,eAAeF,EAC9B,EAEcG,oBAAmBC,eAAAC,IAChC,IACC,MAAMC,EAAc1B,KAAKC,oBAAoBI,SAAS,UACtD,MAAMsB,EAAiBD,EAAYE,YAAY,mBAC/C,MAAMC,QAAiBC,MAAM,GAAGH,mBAAkC3B,KAAK+B,WACvE,IAAKF,EAASG,GAAI,CACjB,MAAM,IAAIC,MAAM,mCACjB,CACAC,QAAQC,IAAI,2BACZ,MAAMC,QAAqBP,EAASQ,OACpCrC,KAAKM,WAAWgC,YAAY,YAAaF,EAC1C,CAAE,MAAOG,GACRC,EAAWD,MAAM,oCAAsCA,EAAME,QAC9D,CACD,EAEO3B,mBAAkB,SAAAA,EAAC4B,GACzBR,QAAQC,IAAI,oBACZnC,KAAK+B,UAAYW,EAAOC,aAAa,aAAanC,UAAYR,KAAK+B,WAAa,IAGhF,IAAIa,EAASF,EAAOC,aAAa,aAAaC,QAAU,wBACxD5C,KAAKI,cAAckC,YAAY,iBAAkBM,GAEjD5C,KAAKuB,qBACN,EAEOsB,oBAAmB,SAAAC,IACzB,IAAIC,EAAiB/C,KAAKI,cAAcwB,YAAY,kBACpD,IAAIoB,EAAaD,EACjB,GAAIA,IAAmB,sBAAuB,CAC7CC,EAAa,uBACd,MAAO,GAAID,IAAmB,wBAAyB,CACtDC,EAAa,qBACd,CACAhD,KAAKE,QAAQ+C,MAAM,WAAY,CAC9BL,OAAQI,EAAYxC,SAAUR,KAAK+B,WAAY,KACjD,EAEOmB,eAAc,SAAAC,IACpBnD,KAAKE,QAAQ+C,MAAM,YAAa,CAC/BL,OAAQ,aAAc,KACxB,EAEOQ,OAAM,SAAAC,IACZrD,KAAKE,QAAQU,SAAS,YAAY0C,qBAAqBtD,KAAKc,mBAAoBd,MAChFA,KAAKE,QAAQU,SAAS,oBAAoB0C,qBAAqBtD,KAAKc,mBAAoBd,KACzF,IAAC,OA7EmBL,CAAmB","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":21,"column":0},"map":{"version":3,"file":"TradeTemplateList.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","TradeTemplateList","extend","onInit","_onInit","this","oView","getView","oRouter","getOwnerComponent","getRouter","oViewModel","JSONModel","TemplateCollection","setModel","loadTemplates","async","_loadTemplates","globalModel","getModel","backendBaseUrl","getProperty","response","fetch","ok","Error","templates","json","setProperty","error","MessageBox","message","onAdd","_onAdd","showFunctionNotImplementedMessage","onTemplatePress","_onTemplatePress","oEvent","oFCL","getParent","setLayout","templatePath","getSource","getBindingContext","getPath","templateName","split","slice","pop","console","log","navTo","layout","template"],"sources":["TradeTemplateList.controller.ts"],"sourcesContent":["import Router from \"sap/ui/core/routing/Router\";\nimport BaseController from \"./BaseController\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class TradeTemplateList extends BaseController {\n\tprivate oView: any;\n\tprivate oRouter: Router;\n\tprivate oViewModel: JSONModel;\n\n\tpublic onInit(): void {\n\t\tthis.oView = this.getView();\n\t\tthis.oRouter = this.getOwnerComponent().getRouter();\n\n\t\tthis.oViewModel = new JSONModel({\n\t\t\tTemplateCollection: []\n\t\t});\n\t\tthis.oView.setModel(this.oViewModel, \"tradetemplates\");\n\n\t\tthis.loadTemplates();\n\t}\n\n\tprivate async loadTemplates(): Promise<void> {\n\t\ttry {\n\t\t\tconst globalModel = this.getOwnerComponent().getModel(\"global\") as JSONModel;\n\t\t\tconst backendBaseUrl = globalModel.getProperty(\"/backendBaseUrl\");\n\t\t\tconst response = await fetch(`${backendBaseUrl}/api/templates/`);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch templates');\n\t\t\t}\n\t\t\tconst templates = await response.json();\n\t\t\tthis.oViewModel.setProperty(\"/TemplateCollection\", templates);\n\t\t} catch (error) {\n\t\t\tMessageBox.error(\"Failed to load templates: \" + error.message);\n\t\t}\n\t}\n\n\tpublic onAdd(): void {\n\t\tthis.showFunctionNotImplementedMessage();\n\t}\n\n\tpublic onTemplatePress(oEvent: any): void {\n\t\tvar oFCL = this.oView.getParent().getParent();\n\t\toFCL.setLayout(\"TwoColumnsMidExpanded\");\n\t\tvar templatePath = oEvent.getSource().getBindingContext(\"tradetemplates\").getPath();\n\t\tvar templateName = templatePath.split(\"/\").slice(-1).pop();\n\t\tconsole.log(\"Template name: \" + templateName);\n\t\tthis.oRouter.navTo(\"template\", {layout: \"TwoColumnsMidExpanded\", template: templateName} );\n\t}\n}"],"mappings":"AAAA,qNACOA,EAAcC,EAAAC,GAIrB,MAGqBC,EAA0BH,EAAcI,OAAA,gDAKrDC,OAAM,SAAAC,IACZC,KAAKC,MAAQD,KAAKE,UAClBF,KAAKG,QAAUH,KAAKI,oBAAoBC,YAExCL,KAAKM,WAAa,IAAIC,EAAU,CAC/BC,mBAAoB,KAErBR,KAAKC,MAAMQ,SAAST,KAAKM,WAAY,kBAErCN,KAAKU,eACN,EAEcA,cAAaC,eAAAC,IAC1B,IACC,MAAMC,EAAcb,KAAKI,oBAAoBU,SAAS,UACtD,MAAMC,EAAiBF,EAAYG,YAAY,mBAC/C,MAAMC,QAAiBC,MAAM,GAAGH,oBAChC,IAAKE,EAASE,GAAI,CACjB,MAAM,IAAIC,MAAM,4BACjB,CACA,MAAMC,QAAkBJ,EAASK,OACjCtB,KAAKM,WAAWiB,YAAY,sBAAuBF,EACpD,CAAE,MAAOG,GACRC,EAAWD,MAAM,6BAA+BA,EAAME,QACvD,CACD,EAEOC,MAAK,SAAAC,IACX5B,KAAK6B,mCACN,EAEOC,gBAAe,SAAAC,EAACC,GACtB,IAAIC,EAAOjC,KAAKC,MAAMiC,YAAYA,YAClCD,EAAKE,UAAU,yBACf,IAAIC,EAAeJ,EAAOK,YAAYC,kBAAkB,kBAAkBC,UAC1E,IAAIC,EAAeJ,EAAaK,MAAM,KAAKC,OAAO,GAAGC,MACrDC,QAAQC,IAAI,kBAAoBL,GAChCxC,KAAKG,QAAQ2C,MAAM,WAAY,CAACC,OAAQ,wBAAyBC,SAAUR,GAC5E,IAAC,OA3CmB5C,CAAiB","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":24,"column":0},"map":{"version":3,"file":"TradeTemplates.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","TradeTemplates","extend","onInit","_onInit","console","log","this","oOwnerComponent","getOwnerComponent","oRouter","getRouter","attachRouteMatched","onRouteMatched","oControlModel","getModel","_onRouteMatched","oEvent","sRouteName","getParameter","oArguments","sCurrentRouteName","sCurrentTemplate","template","sLayout","layout","getView","byId","setLayout","onStateChange","_onStateChange","onExit","_onExit"],"sources":["TradeTemplates.controller.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseController from \"./BaseController\";\nimport Component from \"../Component\";\nimport Router from \"sap/ui/core/routing/Router\";\n\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default class TradeTemplates extends BaseController {\n\tprivate oOwnerComponent: Component;\n\tprivate oRouter: Router;\n\tprivate sCurrentRouteName: string;\n\tprivate sCurrentTemplate: string;\n\tprivate sLayout: string;\n\tprivate oControlModel: JSONModel;\n\n\tpublic onInit(): void {\n\t\tconsole.log(\"TradeTemplates controller initialized\");\n\t\tthis.oOwnerComponent = this.getOwnerComponent();\n\t\tthis.oRouter = this.oOwnerComponent.getRouter();\n\t\tthis.oRouter.attachRouteMatched(this.onRouteMatched, this);\n\t\tthis.oControlModel = this.oOwnerComponent.getModel(\"control\") as JSONModel;\n\t\t//const oTemplatesModel = new JSONModel('model/TradeTemplates.json');\n\t\t//this.setModel(oTemplatesModel, \"tradetemplates\");\n\t}\n\n\tpublic onRouteMatched(oEvent: any): void {\n\t\tconst sRouteName = oEvent.getParameter(\"name\");\n\t\tconst oArguments = oEvent.getParameter(\"arguments\");\n\t\t// Save the current route name\n\t\tthis.sCurrentRouteName = sRouteName;\n\t\tthis.sCurrentTemplate = oArguments.template;\n\t\tvar sLayout = \"\";\n\t\tif (!oArguments.layout && this.sCurrentTemplate) {\n\t\t\tsLayout = \"TwoColumnsMidExpanded\";\n\t\t} else {\n\t\t\tsLayout = oArguments.layout || \"OneColumn\";\n\t\t}\n\t\t\n\t\t// Get Layout from route and set it\n\t\tthis.getView().byId(\"flexibleColumnLayout\").setLayout(sLayout);\n\t}\n\n\tpublic onStateChange(oEvent: any): void {\n\t\tconsole.log(\"State change event triggered\");\n\t\t/*var bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\");\n\t\tvar sLayout = oEvent.getParameter(\"layout\");\n\n\t\t// Replace the URL with the new layout if a navigation arrow was used\n\t\tif (bIsNavigationArrow) {\n\t\t\tthis.oRouter.navTo(this.sCurrentRouteName, {layout: sLayout, template: this.sCurrentTemplate}, true);\n\t\t}*/\n\t}\n\n\tpublic onExit(): void {\n\t\t//this.oRouter.detachRouteMatched(this.onRouteMatched, this);\n\t}\n}"],"mappings":"AAAA,gKACOA,EAAcC,EAAAC,GAIrB,MAGqBC,EAAuBH,EAAcI,OAAA,6CAQlDC,OAAM,SAAAC,IACZC,QAAQC,IAAI,yCACZC,KAAKC,gBAAkBD,KAAKE,oBAC5BF,KAAKG,QAAUH,KAAKC,gBAAgBG,YACpCJ,KAAKG,QAAQE,mBAAmBL,KAAKM,eAAgBN,MACrDA,KAAKO,cAAgBP,KAAKC,gBAAgBO,SAAS,UAGpD,EAEOF,eAAc,SAAAG,EAACC,GACrB,MAAMC,EAAaD,EAAOE,aAAa,QACvC,MAAMC,EAAaH,EAAOE,aAAa,aAEvCZ,KAAKc,kBAAoBH,EACzBX,KAAKe,iBAAmBF,EAAWG,SACnC,IAAIC,EAAU,GACd,IAAKJ,EAAWK,QAAUlB,KAAKe,iBAAkB,CAChDE,EAAU,uBACX,KAAO,CACNA,EAAUJ,EAAWK,QAAU,WAChC,CAGAlB,KAAKmB,UAAUC,KAAK,wBAAwBC,UAAUJ,EACvD,EAEOK,cAAa,SAAAC,EAACb,GACpBZ,QAAQC,IAAI,+BAQb,EAEOyB,OAAM,SAAAC,IACZ,IACA,OAhDmB/B,CAAc","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":31,"column":0},"map":{"version":3,"file":"formatter.js","names":["formatValue","value","toUpperCase","__exports"],"sources":["formatter.ts"],"sourcesContent":["export default {\n\tformatValue: (value: string) => {\n\t\treturn value?.toUpperCase();\n\t}\n};\n"],"mappings":"AAAA,4DAAe,CACdA,YAAcC,GACNA,GAAOC,eAEf,OAAAC,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":34,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","oModel","JSONModel","Device","setDefaultBindingMode","BindingMode","OneWay","__exports"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\n\nimport Device from \"sap/ui/Device\";\n\n\nexport default {\n\tcreateDeviceModel: () => {\n\t\tconst oModel = new JSONModel(Device);\n\t\toModel.setDefaultBindingMode(BindingMode.OneWay);\n\t\treturn oModel;\n\t}\n};\n"],"mappings":"AAAA,yIAMe,CACdA,kBAAmBA,KAClB,MAAMC,EAAS,IAAIC,EAAUC,GAC7BF,EAAOG,sBAAsBC,EAAYC,QACzC,OAAOL,CAAM,GAEd,OAAAM,CAAA","ignoreList":[],"sourceRoot":"model"}}]}