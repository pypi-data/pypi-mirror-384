{"version":3,"file":"BaseController.js","names":["BaseController","Controller","extend","getOwnerComponent","_getOwnerComponent","Controller.prototype.getOwnerComponent.call","this","getRouter","_getRouter","UIComponent","getRouterFor","getResourceBundle","_getResourceBundle","oModel","getModel","getBundleTextByModel","async","_getBundleTextByModel","sI18nKey","oResourceModel","aPlaceholderValues","oBundle","getText","_getModel","sName","getView","setModel","_setModel","navTo","_navTo","oParameters","bReplace","undefined","onNavBack","_onNavBack","sPreviousHash","History","getInstance","getPreviousHash","window","history","go","showFunctionNotImplementedMessage","_showFunctionNotImplementedMessage","showMessage","_showMessage","messageKey","messageType","arguments","length","i18nModel","resourceBundle","message","MessageBox","information","error","success"],"sources":["BaseController.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport AppComponent from \"../Component\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Model from \"sap/ui/model/Model\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Router from \"sap/ui/core/routing/Router\";\nimport History from \"sap/ui/core/routing/History\";\n\n/**\n * @namespace com.optrabot.ui.controller\n */\nexport default abstract class BaseController extends Controller {\n\t/**\n\t * Convenience method for accessing the component of the controller's view.\n\t * @returns The component of the controller's view\n\t */\n\tpublic getOwnerComponent(): AppComponent {\n\t\treturn super.getOwnerComponent() as AppComponent;\n\t}\n\n\t/**\n\t * Convenience method to get the components' router instance.\n\t * @returns The router instance\n\t */\n\tpublic getRouter(): Router {\n\t\treturn UIComponent.getRouterFor(this);\n\t}\n\n\t/**\n\t * Convenience method for getting the i18n resource bundle of the component.\n\t * @returns The i18n resource bundle of the component\n\t */\n\tpublic getResourceBundle(): ResourceBundle | Promise<ResourceBundle> {\n\t\tconst oModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\n\t\treturn oModel.getResourceBundle();\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic async getBundleTextByModel(sI18nKey: string, oResourceModel: ResourceModel, aPlaceholderValues?: string[]): Promise<string> {\n\t\tconst oBundle = await oResourceModel.getResourceBundle();\n\t\treturn oBundle.getText(sI18nKey, aPlaceholderValues);\n\t}\n\n\t/**\n\t * Convenience method for getting the view model by name in every controller of the application.\n\t * @param [sName] The model name\n\t * @returns The model instance\n\t */\n\tpublic getModel(sName?: string): Model {\n\t\treturn this.getView().getModel(sName);\n\t}\n\n\t/**\n\t * Convenience method for setting the view model in every controller of the application.\n\t * @param oModel The model instance\n\t * @param [sName] The model name\n\t * @returns The current base controller instance\n\t */\n\tpublic setModel(oModel: Model, sName?: string): BaseController {\n\t\tthis.getView().setModel(oModel, sName);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Convenience method for triggering the navigation to a specific target.\n\t * @public\n\t * @param sName Target name\n\t * @param [oParameters] Navigation parameters\n\t * @param [bReplace] Defines if the hash should be replaced (no browser history entry) or set (browser history entry)\n\t */\n\tpublic navTo(sName: string, oParameters?: object, bReplace?: boolean): void {\n\t\tthis.getRouter().navTo(sName, oParameters, undefined, bReplace);\n\t}\n\n\t/**\n\t * Convenience event handler for navigating back.\n\t * It there is a history entry we go one step back in the browser history\n\t * If not, it will replace the current entry of the browser history with the main route.\n\t */\n\tpublic onNavBack(): void {\n\t\tconst sPreviousHash = History.getInstance().getPreviousHash();\n\t\tif (sPreviousHash !== undefined) {\n\t\t\twindow.history.go(-1);\n\t\t} else {\n\t\t\tthis.getRouter().navTo(\"main\", {}, undefined, true);\n\t\t}\n\t}\n\n\tpublic showFunctionNotImplementedMessage(): void {\n\t\tthis.showMessage(\"FunctionNotImplemented\", \"information\");\n\t}\n\n\tpublic showMessage(messageKey: string, messageType: \"information\" | \"error\" | \"success\" = \"information\"): void {\n\t\tconst i18nModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\n    \tconst resourceBundle = i18nModel.getResourceBundle();\n    \tconst message = resourceBundle.getText(messageKey);\n\n\t\tswitch (messageType) {\n\t\t\tcase \"information\":\n\t\t\t\tMessageBox.information(message);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tMessageBox.error(message);\n\t\t\t\tbreak;\n\t\t\tcase \"success\":\n\t\t\t\tMessageBox.success(message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],"mappings":"oKAUA,MAG8BA,EAAuBC,EAAUC,OAAA,6CAKvDC,kBAAiB,SAAAC,IACvB,OAAAC,mCAAAC,KACD,EAMOC,UAAS,SAAAC,IACf,OAAOC,EAAYC,aAAaJ,KACjC,EAMOK,kBAAiB,SAAAC,IACvB,MAAMC,EAASP,KAAKH,oBAAoBW,SAAS,QACjD,OAAOD,EAAOF,mBACf,EAKaI,qBAAoBC,eAAAC,EAACC,EAAkBC,EAA+BC,GAClF,MAAMC,QAAgBF,EAAeR,oBACrC,OAAOU,EAAQC,QAAQJ,EAAUE,EAClC,EAOON,SAAQ,SAAAS,EAACC,GACf,OAAOlB,KAAKmB,UAAUX,SAASU,EAChC,EAQOE,SAAQ,SAAAC,EAACd,EAAeW,GAC9BlB,KAAKmB,UAAUC,SAASb,EAAQW,GAChC,OAAOlB,IACR,EASOsB,MAAK,SAAAC,EAACL,EAAeM,EAAsBC,GACjDzB,KAAKC,YAAYqB,MAAMJ,EAAOM,EAAaE,UAAWD,EACvD,EAOOE,UAAS,SAAAC,IACf,MAAMC,EAAgBC,EAAQC,cAAcC,kBAC5C,GAAIH,IAAkBH,UAAW,CAChCO,OAAOC,QAAQC,IAAI,EACpB,KAAO,CACNnC,KAAKC,YAAYqB,MAAM,OAAQ,CAAC,EAAGI,UAAW,KAC/C,CACD,EAEOU,kCAAiC,SAAAC,IACvCrC,KAAKsC,YAAY,yBAA0B,cAC5C,EAEOA,YAAW,SAAAC,EAACC,GAA4F,IAAxEC,EAAgDC,UAAAC,OAAA,GAAAD,UAAA,KAAAhB,UAAAgB,UAAA,GAAG,cACzF,MAAME,EAAY5C,KAAKH,oBAAoBW,SAAS,QACjD,MAAMqC,EAAiBD,EAAUvC,oBACjC,MAAMyC,EAAUD,EAAe7B,QAAQwB,GAE1C,OAAQC,GACP,IAAK,cACJM,EAAWC,YAAYF,GACvB,MACD,IAAK,QACJC,EAAWE,MAAMH,GACjB,MACD,IAAK,UACJC,EAAWG,QAAQJ,GACnB,MAEH,IAAC,OAnG4BpD,CAAc","ignoreList":[]}