{"version":3,"file":"Component.js","names":["models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","init","async","_init","UIComponent.prototype.init.call","this","setModel","createDeviceModel","oControlModel","JSONModel","initializeGlobalModel","getRouter","initialize","_initializeGlobalModel","environment","window","backendBaseUrl","location","origin","slice","lastIndexOf","globalData","appVersion","globalModel","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","Device","support","touch"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport models from \"./model/models\";\nimport Device from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\n/**\n * @namespace com.optrabot.ui\n */\nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic async init(): void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n\t\t// create the device model\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\tvar oControlModel = new JSONModel();\n\t\tthis.setModel(oControlModel, \"control\");\n\n\t\t// Initialisiere das global-Model\n\t\tawait this.initializeGlobalModel();\n\n\t\t// create the views based on the url/hash\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * Initializes the global model with the backend URL and the app version.\n\t * @returns {Promise<void>}\n\t */\n\tprivate async initializeGlobalModel(): Promise<void> {\n\t\tvar environment = (window as any).environment || \"PROD\";\n\t\tvar backendBaseUrl = \"\";\n\t\tbackendBaseUrl = window.location.origin;\n\t\tif (environment !== \"PROD\") {\n\t\t\t// In development the backend uses a different port\n\t\t\tbackendBaseUrl = backendBaseUrl.slice(0, backendBaseUrl.lastIndexOf(\":\"));\n\t\t\tbackendBaseUrl = backendBaseUrl+ \":8080\"\n\t\t}\n\t\tconst globalData = {\n\t\t\t\"backendBaseUrl\": backendBaseUrl,\n\t\t\t\"appVersion\": \"1.0.0\"\n\t\t};\n\t\tconst globalModel = new JSONModel(globalData);\n\t\tthis.setModel(globalModel, \"global\");\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t * @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n}\n"],"mappings":"4OACOA,EAAMC,EAAAC,GAIb,MAGqBC,EAAkBC,EAAWC,OAAA,6BACnCC,SAAW,CACxBC,SAAU,QAKEC,KAAIC,eAAAC,IAEhBC,sBAAAC,MAGAA,KAAKC,SAASb,EAAOc,oBAAqB,UAE1C,IAAIC,EAAgB,IAAIC,EACxBJ,KAAKC,SAASE,EAAe,iBAGvBH,KAAKK,wBAGXL,KAAKM,YAAYC,YAClB,EAMcF,sBAAqBR,eAAAW,IAClC,IAAIC,EAAeC,OAAeD,aAAe,OACjD,IAAIE,EAAiB,GACrBA,EAAiBD,OAAOE,SAASC,OACjC,GAAIJ,IAAgB,OAAQ,CAE3BE,EAAiBA,EAAeG,MAAM,EAAGH,EAAeI,YAAY,MACpEJ,EAAiBA,EAAgB,OAClC,CACA,MAAMK,EAAa,CAClBL,eAAkBA,EAClBM,WAAc,SAEf,MAAMC,EAAc,IAAId,EAAUY,GAClChB,KAAKC,SAASiB,EAAa,SAC5B,EAQOC,uBAAsB,SAAAC,IAC5B,GAAIpB,KAAKqB,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9G1B,KAAKqB,oBAAsB,EAC5B,MAAO,IAAKM,EAAOC,QAAQC,MAAO,CAEjC7B,KAAKqB,oBAAsB,kBAC5B,KAAO,CAENrB,KAAKqB,oBAAsB,eAC5B,CACD,CACA,OAAOrB,KAAKqB,mBACb,IAAC,OAjEmB9B,CAAS","ignoreList":[]}