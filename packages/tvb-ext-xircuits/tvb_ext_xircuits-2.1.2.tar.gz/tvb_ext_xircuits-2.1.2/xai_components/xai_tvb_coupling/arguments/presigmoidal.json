{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-coupling-presigmoidal\">\n<h1 class=\"title\">Traited class [tvb.simulator.coupling.PreSigmoidal]</h1>\n<blockquote>\n<p>Provides a pre-summation sigmoidal coupling function with a static or dynamic\nand local or global threshold.</p>\n<div class=\"math\">\n\\begin{equation*}\nH * (Q + \\tanh(G * (P*x - \\theta)))\n\\end{equation*}\n</div>\n<p>The dynamic threshold as state variable given by the second state variable.\nWith the coupling term, returns the direct node output for the dynamic threshold.</p>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>H <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.H = NArray(label='H', dtype=float64, default=array([0.5]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Global Factor.</dd>\n<dt>Q <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.Q = NArray(label='Q', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Average.</dd>\n<dt>G <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.G = NArray(label='G', dtype=float64, default=array([60.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Gain.</dd>\n<dt>P <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.P = NArray(label='P', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitation-Inhibition ratio.</dd>\n<dt>theta <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.theta = NArray(label='<span class=\"math\">\\(\\\\theta\\)</span>', dtype=float64, default=array([0.5]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold.</dd>\n<dt>dynamic <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.dynamic = Attr(field_type=&lt;class 'bool'&gt;, default=True, required=True)</span></dt>\n<dd>Use dynamic threshold (otherwise static).</dd>\n<dt>globalT <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.coupling.PreSigmoidal.globalT = Attr(field_type=&lt;class 'bool'&gt;, default=False, required=True)</span></dt>\n<dd>Use global threshold (otherwise local).</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "H": "<div class=\"document\">\n<p>Global Factor.</p>\n</div>\n",
        "Q": "<div class=\"document\">\n<p>Average.</p>\n</div>\n",
        "G": "<div class=\"document\">\n<p>Gain.</p>\n</div>\n",
        "P": "<div class=\"document\">\n<p>Excitation-Inhibition ratio.</p>\n</div>\n",
        "theta": "<div class=\"document\">\n<p>Threshold.</p>\n</div>\n",
        "dynamic": "<div class=\"document\">\n<p>Use dynamic threshold (otherwise static).</p>\n</div>\n",
        "globalT": "<div class=\"document\">\n<p>Use global threshold (otherwise local).</p>\n</div>\n"
    }
}