{
    "description": "<div class=\"document\" id=\"traited-class-tvb-datatypes-equations-doublegaussian\">\n<h1 class=\"title\">Traited class [tvb.datatypes.equations.DoubleGaussian]</h1>\n<blockquote>\nA Mexican-hat function approximated by the difference of Gaussians functions.</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>equation <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.datatypes.equations.DoubleGaussian.equation = Final(field_type=&lt;class 'str'&gt;, default='(amp_1 * exp(-((var-midpoint_1)**2 / (2.0 * sigma_1**2)))) - (amp_2 * exp(-((var-midpoint_2)**2 / (2.0 * sigma_2**2))))', required=True)</span></dt>\n<dd><span class=\"math\">\\(amp_1 \\exp\\left(-\\left((x-midpoint_1)^2 / \\left(2.0\n\\sigma_1^2\\right)\\right)\\right) -\namp_2 \\exp\\left(-\\left((x-midpoint_2)^2 / \\left(2.0\n\\sigma_2^2\\right)\\right)\\right)\\)</span></dd>\n</dl>\n<p>parameters : tvb.datatypes.equations.DoubleGaussian.parameters = Attr(field_type=&lt;class 'dict'&gt;, default=&lt;function DoubleGaussian.&lt;lambda&gt; at 0x7fa7c52db920&gt;, required=True)</p>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "equation": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>:math:`amp_1 expleft(-left((x-midpoint_1)^2 / left(2.0</dt>\n<dd>sigma_1^2right)right)right) -\namp_2 expleft(-left((x-midpoint_2)^2 / left(2.0\nsigma_2^2right)right)right)`</dd>\n</dl>\n</div>\n"
    }
}