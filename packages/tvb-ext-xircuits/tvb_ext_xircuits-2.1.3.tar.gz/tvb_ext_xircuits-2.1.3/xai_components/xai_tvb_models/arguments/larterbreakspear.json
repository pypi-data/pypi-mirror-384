{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-models-larter-breakspear-larterbreakspear\">\n<h1 class=\"title\">Traited class [tvb.simulator.models.larter_breakspear.LarterBreakspear]</h1>\n<blockquote>\n<p>A modified Morris-Lecar model that includes a third equation which simulates\nthe effect of a population of inhibitory interneurons synapsing on\nthe pyramidal cells.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"larteretal-1999\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Larteretal_1999]</td><td>Larter et.al. <em>A coupled ordinary differential equation\nlattice model for the simulation of epileptic seizures.</em> Chaos. 9(3):\n795, 1999.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"breaksetal-2003-a\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Breaksetal_2003_a]</td><td><em>(<a class=\"fn-backref\" href=\"#citation-reference-2\">1</a>, <a class=\"fn-backref\" href=\"#citation-reference-3\">2</a>)</em> Breakspear, M.; Terry, J. R. &amp; Friston, K. J.  <em>Modulation of excitatory\nsynaptic coupling facilitates synchronization and complex dynamics in an\nonlinear model of neuronal dynamics</em>. Neurocomputing 52\u201354 (2003).151\u2013158</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"breaksetal-2003-b\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Breaksetal_2003_b]</td><td><em>(<a class=\"fn-backref\" href=\"#citation-reference-1\">1</a>, <a class=\"fn-backref\" href=\"#citation-reference-4\">2</a>, <a class=\"fn-backref\" href=\"#citation-reference-5\">3</a>)</em> M. J. Breakspear et.al. <em>Modulation of excitatory\nsynaptic coupling facilitates synchronization and complex dynamics in a\nbiophysical model of neuronal dynamics.</em> Network: Computation in Neural\nSystems 14: 703-732, 2003.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"honeyetal-2007\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Honeyetal_2007]</td><td>Honey, C.; K\u00f6tter, R.; Breakspear, M. &amp; Sporns, O. * Network structure of\ncerebral cortex shapes functional connectivity on multiple time scales*. (2007)\nPNAS, 104, 10240</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"honeyetal-2009\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Honeyetal_2009]</td><td>Honey, C. J.; Sporns, O.; Cammoun, L.; Gigandet, X.; Thiran, J. P.; Meuli,\nR. &amp; Hagmann, P. <em>Predicting human resting-state functional connectivity\nfrom structural connectivity.</em> (2009), PNAS, 106, 2035-2040</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"alstottetal-2009\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Alstottetal_2009]</td><td>Alstott, J.; Breakspear, M.; Hagmann, P.; Cammoun, L. &amp; Sporns, O.\n<em>Modeling the impact of lesions in the human brain</em>. (2009)),  PLoS Comput Biol, 5, e1000408</td></tr>\n</tbody>\n</table>\n<p>Equations and default parameters are taken from <a class=\"citation-reference\" href=\"#breaksetal-2003-b\" id=\"citation-reference-1\">[Breaksetal_2003_b]</a>.\nAll equations and parameters are non-dimensional and normalized.\nFor values of d_v  &lt; 0.55, the dynamics of a single column settles onto a\nsolitary fixed point attractor.</p>\n<p>Parameters used for simulations in <a class=\"citation-reference\" href=\"#breaksetal-2003-a\" id=\"citation-reference-2\">[Breaksetal_2003_a]</a> Table 1. Page 153.\nTwo nodes were coupled. C=0.1</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"54%\" />\n<col width=\"46%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\" colspan=\"2\">Table 1</th>\n</tr>\n<tr><th class=\"head\">Parameter</th>\n<th class=\"head\">Value</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>I</td>\n<td>0.3</td>\n</tr>\n<tr><td>a_ee</td>\n<td>0.4</td>\n</tr>\n<tr><td>a_ei</td>\n<td>0.1</td>\n</tr>\n<tr><td>a_ie</td>\n<td>1.0</td>\n</tr>\n<tr><td>a_ne</td>\n<td>1.0</td>\n</tr>\n<tr><td>a_ni</td>\n<td>0.4</td>\n</tr>\n<tr><td>r_NMDA</td>\n<td>0.2</td>\n</tr>\n<tr><td>delta</td>\n<td>0.001</td>\n</tr>\n<tr><td colspan=\"2\">Breakspear et al. 2003</td>\n</tr>\n</tbody>\n</table>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"54%\" />\n<col width=\"46%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\" colspan=\"2\">Table 2</th>\n</tr>\n<tr><th class=\"head\">Parameter</th>\n<th class=\"head\">Value</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr><td>gK</td>\n<td>2.0</td>\n</tr>\n<tr><td>gL</td>\n<td>0.5</td>\n</tr>\n<tr><td>gNa</td>\n<td>6.7</td>\n</tr>\n<tr><td>gCa</td>\n<td>1.0</td>\n</tr>\n<tr><td>a_ne</td>\n<td>1.0</td>\n</tr>\n<tr><td>a_ni</td>\n<td>0.4</td>\n</tr>\n<tr><td>a_ee</td>\n<td>0.36</td>\n</tr>\n<tr><td>a_ei</td>\n<td>2.0</td>\n</tr>\n<tr><td>a_ie</td>\n<td>2.0</td>\n</tr>\n<tr><td>VK</td>\n<td>-0.7</td>\n</tr>\n<tr><td>VL</td>\n<td>-0.5</td>\n</tr>\n<tr><td>VNa</td>\n<td>0.53</td>\n</tr>\n<tr><td>VCa</td>\n<td>1.0</td>\n</tr>\n<tr><td>phi</td>\n<td>0.7</td>\n</tr>\n<tr><td>b</td>\n<td>0.1</td>\n</tr>\n<tr><td>I</td>\n<td>0.3</td>\n</tr>\n<tr><td>r_NMDA</td>\n<td>0.25</td>\n</tr>\n<tr><td>C</td>\n<td>0.1</td>\n</tr>\n<tr><td>TCa</td>\n<td>-0.01</td>\n</tr>\n<tr><td>d_Ca</td>\n<td>0.15</td>\n</tr>\n<tr><td>TK</td>\n<td>0.0</td>\n</tr>\n<tr><td>d_K</td>\n<td>0.3</td>\n</tr>\n<tr><td>VT</td>\n<td>0.0</td>\n</tr>\n<tr><td>ZT</td>\n<td>0.0</td>\n</tr>\n<tr><td>TNa</td>\n<td>0.3</td>\n</tr>\n<tr><td>d_Na</td>\n<td>0.15</td>\n</tr>\n<tr><td>d_V</td>\n<td>0.65</td>\n</tr>\n<tr><td>d_Z</td>\n<td>d_V</td>\n</tr>\n<tr><td>QV_max</td>\n<td>1.0</td>\n</tr>\n<tr><td>QZ_max</td>\n<td>1.0</td>\n</tr>\n<tr><td colspan=\"2\">Alstott et al. 2009</td>\n</tr>\n</tbody>\n</table>\n<p>NOTES about parameters</p>\n<p><span class=\"math first last\">\\(\\delta_V\\)</span> : for <span class=\"math first last\">\\(\\delta_V\\)</span> &lt; 0.55, in an uncoupled network,\nthe system exhibits fixed point dynamics; for 0.55 &lt; <span class=\"math first last\">\\(\\delta_V\\)</span> &lt; 0.59,\nlimit cycle attractors; and for <span class=\"math first last\">\\(\\delta_V\\)</span> &gt; 0.59 chaotic attractors\n(eg, d_V=0.6,aee=0.5,aie=0.5, gNa=0, Iext=0.165)</p>\n<p><span class=\"math first last\">\\(\\delta_Z\\)</span>\nthis parameter might be spatialized: ones(N,1).*0.65 + modn*(rand(N,1)-0.5);</p>\n<p><span class=\"math first last\">\\(C\\)</span>\nThe long-range coupling <span class=\"math first last\">\\(\\delta_C\\)</span> is \u2018weak\u2019 in the sense that\nthe model is well behaved for parameter values for which C &lt; a_ee and C &lt;&lt; a_ie.</p>\n<div class=\"figure\">\n<img width=\"500\" height=\"500\" src=\"https://raw.githubusercontent.com/the-virtual-brain/tvb-root/master/tvb_documentation/sim_doc/img/LarterBreakspear_01_mode_0_pplane.svg\" type=\"image/svg+xml\">Larter-Breaskpear phase plane (V, W)</img>\n<p class=\"caption\">The (<span class=\"math first last\">\\(V\\)</span>, <span class=\"math first last\">\\(W\\)</span>) phase-plane for the Larter-Breakspear model.</p>\n</div>\n<p>Dynamic equations:</p>\n<div class=\"math first last\">\n\\begin{align*}\n\\dot{V}_k &amp; = - (g_{Ca} + (1 - C) \\, r_{NMDA} \\, a_{ee} \\, Q_V + C \\, r_{NMDA} \\, a_{ee} \\, \\langle Q_V\\rangle^{k}) \\, m_{Ca} \\, (V - VCa) \\\\\n               &amp; \\,\\,- g_K \\, W \\, (V - VK) -  g_L \\, (V - VL) \\\\\n               &amp; \\,\\,- (g_{Na} \\, m_{Na} + (1 - C) \\, a_{ee} \\, Q_V + C \\, a_{ee} \\, \\langle Q_V\\rangle^{k}) \\,(V - VNa) \\\\\n               &amp; \\,\\,- a_{ie} \\, Z \\, Q_Z + a_{ne} \\, I \\\\\n               &amp; \\\\\n\\dot{W}_k &amp; = \\phi \\, \\dfrac{m_K - W}{\\tau_{K}} \\\\\n               &amp; \\nonumber\\\\\n\\dot{Z}_k &amp;= b (a_{ni}\\, I + a_{ei}\\,V\\,Q_V) \\\\\nQ_{V}   &amp;= Q_{V_{max}} \\, (1 + \\tanh\\left(\\dfrac{V_{k} - VT}{\\delta_{V}}\\right)) \\\\\nQ_{Z}   &amp;= Q_{Z_{max}} \\, (1 + \\tanh\\left(\\dfrac{Z_{k} - ZT}{\\delta_{Z}}\\right))\n\\end{align*}\n</div>\n<p>See Equations (7), (3), (6) and (2) respectively in <a class=\"citation-reference\" href=\"#breaksetal-2003-a\" id=\"citation-reference-3\">[Breaksetal_2003_a]</a>.\nPag: 705-706</p>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>gCa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.gCa = NArray(label='<span class=\"math first last\">\\(g_{Ca}\\)</span>', dtype=float64, default=array([1.1]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Conductance of population of Ca++ channels.</dd>\n<dt>gK <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.gK = NArray(label='<span class=\"math first last\">\\(g_{K}\\)</span>', dtype=float64, default=array([2.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Conductance of population of K channels.</dd>\n<dt>gL <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.gL = NArray(label='<span class=\"math first last\">\\(g_{L}\\)</span>', dtype=float64, default=array([0.5]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Conductance of population of leak channels.</dd>\n<dt>phi <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.phi = NArray(label='<span class=\"math first last\">\\(\\\\phi\\)</span>', dtype=float64, default=array([0.7]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Temperature scaling factor.</dd>\n<dt>gNa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.gNa = NArray(label='<span class=\"math first last\">\\(g_{Na}\\)</span>', dtype=float64, default=array([6.7]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Conductance of population of Na channels.</dd>\n<dt>TK <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.TK = NArray(label='<span class=\"math first last\">\\(T_{K}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold value for K channels.</dd>\n<dt>TCa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.TCa = NArray(label='<span class=\"math first last\">\\(T_{Ca}\\)</span>', dtype=float64, default=array([-0.01]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold value for Ca channels.</dd>\n<dt>TNa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.TNa = NArray(label='<span class=\"math first last\">\\(T_{Na}\\)</span>', dtype=float64, default=array([0.3]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold value for Na channels.</dd>\n<dt>VCa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.VCa = NArray(label='<span class=\"math first last\">\\(V_{Ca}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Ca Nernst potential.</dd>\n<dt>VK <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.VK = NArray(label='<span class=\"math first last\">\\(V_{K}\\)</span>', dtype=float64, default=array([-0.7]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>K Nernst potential.</dd>\n<dt>VL <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.VL = NArray(label='<span class=\"math first last\">\\(V_{L}\\)</span>', dtype=float64, default=array([-0.5]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Nernst potential leak channels.</dd>\n<dt>VNa <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.VNa = NArray(label='<span class=\"math first last\">\\(V_{Na}\\)</span>', dtype=float64, default=array([0.53]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Na Nernst potential.</dd>\n<dt>d_K <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.d_K = NArray(label='<span class=\"math first last\">\\(\\\\delta_{K}\\)</span>', dtype=float64, default=array([0.3]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Variance of K channel threshold.</dd>\n<dt>tau_K <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.tau_K = NArray(label='<span class=\"math first last\">\\(\\\\tau_{K}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Time constant for K relaxation time (ms)</dd>\n<dt>d_Na <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.d_Na = NArray(label='<span class=\"math first last\">\\(\\\\delta_{Na}\\)</span>', dtype=float64, default=array([0.15]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Variance of Na channel threshold.</dd>\n<dt>d_Ca <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.d_Ca = NArray(label='<span class=\"math first last\">\\(\\\\delta_{Ca}\\)</span>', dtype=float64, default=array([0.15]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Variance of Ca channel threshold.</dd>\n<dt>aei <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.aei = NArray(label='<span class=\"math first last\">\\(a_{ei}\\)</span>', dtype=float64, default=array([2.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory-to-inhibitory synaptic strength.</dd>\n<dt>aie <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.aie = NArray(label='<span class=\"math first last\">\\(a_{ie}\\)</span>', dtype=float64, default=array([2.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Inhibitory-to-excitatory synaptic strength.</dd>\n<dt>b <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.b = NArray(label='<span class=\"math first last\">\\(b\\)</span>', dtype=float64, default=array([0.1]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Time constant scaling factor. The original value is 0.1</dd>\n<dt>C <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.C = NArray(label='<span class=\"math first last\">\\(C\\)</span>', dtype=float64, default=array([0.1]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Strength of excitatory coupling. Balance between internal and\nlocal (and global) coupling strength. C &gt; 0 introduces interdependences between\nconsecutive columns/nodes. C=1 corresponds to maximum coupling between node and no self-coupling.\nThis strenght should be set to sensible values when a whole network is connected.</dd>\n<dt>ane <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.ane = NArray(label='<span class=\"math first last\">\\(a_{ne}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Non-specific-to-excitatory synaptic strength.</dd>\n<dt>ani <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.ani = NArray(label='<span class=\"math first last\">\\(a_{ni}\\)</span>', dtype=float64, default=array([0.4]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Non-specific-to-inhibitory synaptic strength.</dd>\n<dt>aee <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.aee = NArray(label='<span class=\"math first last\">\\(a_{ee}\\)</span>', dtype=float64, default=array([0.4]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory-to-excitatory synaptic strength.</dd>\n<dt>Iext <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.Iext = NArray(label='<span class=\"math first last\">\\(I_{ext}\\)</span>', dtype=float64, default=array([0.3]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Subcortical input strength. It represents a non-specific\nexcitation or thalamic inputs.</dd>\n<dt>rNMDA <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.rNMDA = NArray(label='<span class=\"math first last\">\\(r_{NMDA}\\)</span>', dtype=float64, default=array([0.25]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Ratio of NMDA to AMPA receptors.</dd>\n<dt>VT <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.VT = NArray(label='<span class=\"math first last\">\\(V_{T}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold potential (mean) for excitatory neurons.\nIn <a class=\"citation-reference\" href=\"#breaksetal-2003-b\" id=\"citation-reference-4\">[Breaksetal_2003_b]</a> this value is 0.</dd>\n<dt>d_V <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.d_V = NArray(label='<span class=\"math first last\">\\(\\\\delta_{V}\\)</span>', dtype=float64, default=array([0.65]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Variance of the excitatory threshold. It is one of the main\nparameters explored in <a class=\"citation-reference\" href=\"#breaksetal-2003-b\" id=\"citation-reference-5\">[Breaksetal_2003_b]</a>.</dd>\n<dt>ZT <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.ZT = NArray(label='<span class=\"math first last\">\\(Z_{T}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Threshold potential (mean) for inihibtory neurons.</dd>\n<dt>d_Z <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.d_Z = NArray(label='<span class=\"math first last\">\\(\\\\delta_{Z}\\)</span>', dtype=float64, default=array([0.7]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Variance of the inhibitory threshold.</dd>\n<dt>QV_max <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.QV_max = NArray(label='<span class=\"math first last\">\\(QV_{max}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Maximal firing rate for excitatory populations (kHz)</dd>\n<dt>QZ_max <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.QZ_max = NArray(label='<span class=\"math first last\">\\(QZ_{max}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Maximal firing rate for excitatory populations (kHz)</dd>\n<dt>t_scale <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.t_scale = NArray(label='<span class=\"math first last\">\\(t_{scale}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Time scale factor</dd>\n<dt>variables_of_interest <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.variables_of_interest = List(of=&lt;class 'str'&gt;, default=('V',), required=True)</span></dt>\n<dd>This represents the default state-variables of this Model to be\nmonitored. It can be overridden for each Monitor if desired.</dd>\n<dt>state_variable_range <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.larter_breakspear.LarterBreakspear.state_variable_range = Final(field_type=&lt;class 'dict'&gt;, default={'V': array([-1.5,  1.5]), 'W': array([-1.5,  1.5]), 'Z': array([-1.5,  1.5])}, required=True)</span></dt>\n<dd>The values for each state-variable should be set to encompass\nthe expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random inital\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "gCa": "<div class=\"document\">\n<p>Conductance of population of Ca++ channels.</p>\n</div>\n",
        "gK": "<div class=\"document\">\n<p>Conductance of population of K channels.</p>\n</div>\n",
        "gL": "<div class=\"document\">\n<p>Conductance of population of leak channels.</p>\n</div>\n",
        "phi": "<div class=\"document\">\n<p>Temperature scaling factor.</p>\n</div>\n",
        "gNa": "<div class=\"document\">\n<p>Conductance of population of Na channels.</p>\n</div>\n",
        "TK": "<div class=\"document\">\n<p>Threshold value for K channels.</p>\n</div>\n",
        "TCa": "<div class=\"document\">\n<p>Threshold value for Ca channels.</p>\n</div>\n",
        "TNa": "<div class=\"document\">\n<p>Threshold value for Na channels.</p>\n</div>\n",
        "VCa": "<div class=\"document\">\n<p>Ca Nernst potential.</p>\n</div>\n",
        "VK": "<div class=\"document\">\n<p>K Nernst potential.</p>\n</div>\n",
        "VL": "<div class=\"document\">\n<p>Nernst potential leak channels.</p>\n</div>\n",
        "VNa": "<div class=\"document\">\n<p>Na Nernst potential.</p>\n</div>\n",
        "d_K": "<div class=\"document\">\n<p>Variance of K channel threshold.</p>\n</div>\n",
        "tau_K": "<div class=\"document\">\n<p>Time constant for K relaxation time (ms)</p>\n</div>\n",
        "d_Na": "<div class=\"document\">\n<p>Variance of Na channel threshold.</p>\n</div>\n",
        "d_Ca": "<div class=\"document\">\n<p>Variance of Ca channel threshold.</p>\n</div>\n",
        "aei": "<div class=\"document\">\n<p>Excitatory-to-inhibitory synaptic strength.</p>\n</div>\n",
        "aie": "<div class=\"document\">\n<p>Inhibitory-to-excitatory synaptic strength.</p>\n</div>\n",
        "b": "<div class=\"document\">\n<p>Time constant scaling factor. The original value is 0.1</p>\n</div>\n",
        "C": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>Strength of excitatory coupling. Balance between internal and</dt>\n<dd>local (and global) coupling strength. C &gt; 0 introduces interdependences between\nconsecutive columns/nodes. C=1 corresponds to maximum coupling between node and no self-coupling.\nThis strenght should be set to sensible values when a whole network is connected.</dd>\n</dl>\n</div>\n",
        "ane": "<div class=\"document\">\n<p>Non-specific-to-excitatory synaptic strength.</p>\n</div>\n",
        "ani": "<div class=\"document\">\n<p>Non-specific-to-inhibitory synaptic strength.</p>\n</div>\n",
        "aee": "<div class=\"document\">\n<p>Excitatory-to-excitatory synaptic strength.</p>\n</div>\n",
        "Iext": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>Subcortical input strength. It represents a non-specific</dt>\n<dd>excitation or thalamic inputs.</dd>\n</dl>\n</div>\n",
        "rNMDA": "<div class=\"document\">\n<p>Ratio of NMDA to AMPA receptors.</p>\n</div>\n",
        "VT": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>Threshold potential (mean) for excitatory neurons.</dt>\n<dd>In [Breaksetal_2003_b]_ this value is 0.</dd>\n</dl>\n</div>\n",
        "d_V": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>Variance of the excitatory threshold. It is one of the main</dt>\n<dd>parameters explored in [Breaksetal_2003_b]_.</dd>\n</dl>\n</div>\n",
        "ZT": "<div class=\"document\">\n<p>Threshold potential (mean) for inihibtory neurons.</p>\n</div>\n",
        "d_Z": "<div class=\"document\">\n<p>Variance of the inhibitory threshold.</p>\n</div>\n",
        "QV_max": "<div class=\"document\">\n<p>Maximal firing rate for excitatory populations (kHz)</p>\n</div>\n",
        "QZ_max": "<div class=\"document\">\n<p>Maximal firing rate for excitatory populations (kHz)</p>\n</div>\n",
        "t_scale": "<div class=\"document\">\n<p>Time scale factor</p>\n</div>\n",
        "variables_of_interest": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>This represents the default state-variables of this Model to be</dt>\n<dd>monitored. It can be overridden for each Monitor if desired.</dd>\n</dl>\n</div>\n",
        "state_variable_range": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>The values for each state-variable should be set to encompass</dt>\n<dd>the expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random inital\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n</dl>\n</div>\n"
    }
}