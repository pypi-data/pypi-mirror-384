{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-models-hopfield-hopfield\">\n<h1 class=\"title\">Traited class [tvb.simulator.models.hopfield.Hopfield]</h1>\n<blockquote>\n<p>The Hopfield neural network is a discrete time dynamical system composed\nof multiple binary nodes, with a connectivity matrix built from a\npredetermined set of patterns. The update, inspired from the spin-glass\nmodel (used to describe magnetic properties of dilute alloys), is based on\na random scanning of every node. The existence of a fixed point dynamics\nis guaranteed by a Lyapunov function. The Hopfield network is expected to\nhave those multiple patterns as attractors (multistable dynamical system).\nWhen the initial conditions are close to one of the 'learned' patterns,\nthe dynamical system is expected to relax on the corresponding attractor.\nA possible output of the system is the final attractive state (interpreted\nas an associative memory).</p>\n<p>Various extensions of the initial model have been proposed, among which a\nnoiseless and continuous version [Hopfield 1984] having a slightly\ndifferent Lyapunov function, but essentially the same dynamical\nproperties, with more straightforward physiological interpretation. A\ncontinuous Hopfield neural network (with a sigmoid transfer function) can\nindeed be interpreted as a network of neural masses with every node\ncorresponding to the mean field activity of a local brain region, with\nmany bridges with the Wilson Cowan model [WC_1972].</p>\n<p><strong>References</strong>:</p>\n<blockquote>\n<table class=\"docutils citation\" frame=\"void\" id=\"hopfield1982\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Hopfield1982]</td><td>Hopfield, J. J., <em>Neural networks and physical systems with emergent collective\ncomputational abilities</em>, Proc. Nat. Acad. Sci. (USA) 79, 2554-2558, 1982.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"hopfield1984\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Hopfield1984]</td><td>Hopfield, J. J., <em>Neurons with graded response have collective computational\nproperties like those of two-sate neurons</em>, Proc. Nat. Acad. Sci. (USA) 81, 3088-3092, 1984.</td></tr>\n</tbody>\n</table>\n</blockquote>\n<p>See also, <a class=\"reference external\" href=\"http://www.scholarpedia.org/article/Hopfield_network\">http://www.scholarpedia.org/article/Hopfield_network</a></p>\n<!-- #This model can use a global threshold permitting multistable dynamic for -->\n<!-- #a positive structural connectivity matrix. -->\n<p>Dynamic equations:</p>\n<dl class=\"docutils\">\n<dt>dfun equation</dt>\n<dd><div class=\"math first last\">\n\\begin{equation*}\n\\dot{x_{i}} &amp;= 1 / \\tau_{x} (-x_{i} + c_0)\n\\end{equation*}\n</div>\n</dd>\n<dt>dfun dynamic equation</dt>\n<dd><div class=\"math first last\">\n\\begin{align*}\n\\dot{x_{i}} &amp;= 1 / \\tau_{x} (-x_{i} + c_0(i)) \\\\\n\\dot{\\theta_{i}} &amp;= 1 / \\tau_{\\theta_{i}} (-\\theta + c_1(i))\n\\end{align*}\n</div>\n</dd>\n</dl>\n<div class=\"figure\">\n<img width=\"500\" height=\"500\" src=\"https://raw.githubusercontent.com/the-virtual-brain/tvb-root/master/tvb_documentation/sim_doc/img/Hopfield_01_mode_0_pplane.svg\" type=\"image/svg+xml\">img/Hopfield_01_mode_0_pplane.svg</img>\n</div>\n<p>The phase-plane for the Hopfield model.</p>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>taux <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.hopfield.Hopfield.taux = NArray(label='<span class=\"math first last\">\\(\\\\tau_{x}\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>The fast time-scale for potential calculus <span class=\"math first last\">\\(x\\)</span>, state-variable of the model.</dd>\n<dt>tauT <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.hopfield.Hopfield.tauT = NArray(label='<span class=\"math first last\">\\(\\\\tau_{\\\\theta}\\)</span>', dtype=float64, default=array([5.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>The slow time-scale for threshold calculus <span class=\"math first last\">\\(\\theta\\)</span>, state-variable of the model.</dd>\n<dt>dynamic <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.hopfield.Hopfield.dynamic = NArray(label='Dynamic', dtype=int64, default=array([0]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Boolean value for static/dynamic threshold theta for (0/1).</dd>\n<dt>state_variable_range <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.hopfield.Hopfield.state_variable_range = Final(field_type=&lt;class 'dict'&gt;, default={'x': array([-1.,  2.]), 'theta': array([0., 1.])}, required=True)</span></dt>\n<dd>The values for each state-variable should be set to encompass\nthe expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random inital\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n<dt>variables_of_interest <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.hopfield.Hopfield.variables_of_interest = List(of=&lt;class 'str'&gt;, default=('x',), required=True)</span></dt>\n<dd>The values for each state-variable should be set to encompass\nthe expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random initial\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "taux": "<div class=\"document\">\n<p>The fast time-scale for potential calculus <span class=\"math first last\">\\(x\\)</span>, state-variable of the model.</p>\n</div>\n",
        "tauT": "<div class=\"document\">\n<p>The slow time-scale for threshold calculus <span class=\"math first last\">\\(\\theta\\)</span>, state-variable of the model.</p>\n</div>\n",
        "dynamic": "<div class=\"document\">\n<p>Boolean value for static/dynamic threshold theta for (0/1).</p>\n</div>\n",
        "state_variable_range": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>The values for each state-variable should be set to encompass</dt>\n<dd>the expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random inital\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n</dl>\n</div>\n",
        "variables_of_interest": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>The values for each state-variable should be set to encompass</dt>\n<dd>the expected dynamic range of that state-variable for the current\nparameters, it is used as a mechanism for bounding random initial\nconditions when the simulation isn't started from an explicit\nhistory, it is also provides the default range of phase-plane plots.</dd>\n</dl>\n</div>\n"
    }
}