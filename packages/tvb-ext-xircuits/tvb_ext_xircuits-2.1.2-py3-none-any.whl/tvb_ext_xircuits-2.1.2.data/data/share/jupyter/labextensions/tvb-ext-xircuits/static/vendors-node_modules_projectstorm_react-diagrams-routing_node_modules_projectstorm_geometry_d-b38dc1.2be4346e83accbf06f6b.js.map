{"version":3,"file":"vendors-node_modules_projectstorm_react-diagrams-routing_node_modules_projectstorm_geometry_d-b38dc1.2be4346e83accbf06f6b.js","mappings":"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","sources":["webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/BezierCurve.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/Bounds.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/Matrix.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/Point.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/Polygon.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/Rectangle.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/index.ts","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-routing/node_modules/@projectstorm/geometry/src/toolkit.ts"],"sourcesContent":["import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n","import { Point } from './Point';\n\nexport enum BoundsCorner {\n\tTOP_LEFT = 'TL',\n\tTOP_RIGHT = 'TR',\n\tBOTTOM_RIGHT = 'BR',\n\tBOTTOM_LEFT = 'BL'\n}\n\nexport type Bounds = { [k in BoundsCorner]: Point };\n\nexport const boundsFromPositionAndSize = (x: number, y: number, width: number, height: number): Bounds => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(x, y),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(x + width, y),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(x + width, y + height),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(x, y + height)\n\t};\n};\n\nexport const createEmptyBounds = () => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point()\n\t};\n};\n","import { Point } from './Point';\n\nexport class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.scaleMatrix(x, y),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.rotateMatrix(deg),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n","import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n}\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\nimport { boundingBoxFromPoints } from './toolkit';\nimport { Bounds, BoundsCorner } from './Bounds';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _.map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _.map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Matrix.createScaleMatrix(x, y, origin);\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _.map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = boundingBoxFromPoints(this.points);\n\t\treturn Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\n\t}\n\n\tgetBoundingBox(): Bounds {\n\t\treturn boundingBoxFromPoints(this.points);\n\t}\n}\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, boundsFromPositionAndSize, createEmptyBounds } from './Bounds';\n\nexport class Rectangle extends Polygon {\n\tstatic fromPositionAndSize(x: number, y: number, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(x, y, width, height));\n\t}\n\n\tstatic fromPointAndSize(position: Point, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(position.x, position.y, width, height));\n\t}\n\n\tconstructor(points?: Bounds) {\n\t\tif (!points) {\n\t\t\tpoints = createEmptyBounds();\n\t\t}\n\n\t\tsuper([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tconst points = boundsFromPositionAndSize(x, y, width, height);\n\t\tthis.setPoints([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n","export * from './Point';\nexport * from './Matrix';\nexport * from './Polygon';\nexport * from './Rectangle';\nexport * from './BezierCurve';\nexport * from './toolkit';\nexport * from './Bounds';\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, createEmptyBounds } from './Bounds';\n\nexport const boundingBoxFromPoints = (points: Point[]): Bounds => {\n\tif (points.length === 0) {\n\t\treturn createEmptyBounds();\n\t}\n\n\tlet minX = points[0].x;\n\tlet maxX = points[0].x;\n\tlet minY = points[0].y;\n\tlet maxY = points[0].y;\n\n\tfor (let i = 1; i < points.length; i++) {\n\t\tif (points[i].x < minX) {\n\t\t\tminX = points[i].x;\n\t\t}\n\t\tif (points[i].x > maxX) {\n\t\t\tmaxX = points[i].x;\n\t\t}\n\t\tif (points[i].y < minY) {\n\t\t\tminY = points[i].y;\n\t\t}\n\t\tif (points[i].y > maxY) {\n\t\t\tmaxY = points[i].y;\n\t\t}\n\t}\n\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(minX, minY),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(maxX, minY),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(maxX, maxY),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(minX, maxY)\n\t};\n};\n\nexport const boundingBoxFromPolygons = (polygons: Polygon[]): Bounds => {\n\treturn boundingBoxFromPoints(\n\t\t_.flatMap(polygons, (polygon) => {\n\t\t\treturn polygon.getPoints();\n\t\t})\n\t);\n};\n"],"names":[],"sourceRoot":""}