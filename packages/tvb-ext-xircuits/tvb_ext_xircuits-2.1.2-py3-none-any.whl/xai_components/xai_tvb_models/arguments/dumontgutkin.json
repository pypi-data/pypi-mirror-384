{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-models-infinite-theta-dumontgutkin\">\n<h1 class=\"title\">Traited class [tvb.simulator.models.infinite_theta.DumontGutkin]</h1>\n<blockquote>\n<p>8D model describing the Ott-Antonsen reduction of infinite all-to-all\ncoupled QIF Excitatory E and Inhibitory I Theta-neurons with local synaptic\ndynamics <a class=\"citation-reference\" href=\"#dumontgutkin2019\" id=\"citation-reference-1\">[DumontGutkin2019]</a>.</p>\n<p>State variables <span class=\"math first last\">\\(r\\)</span> and <span class=\"math first last\">\\(V\\)</span> represent the average firing rate and\nthe average membrane potential of our QIF neurons.\nThe neural masses are coupled through the firing rate of <span class=\"math first last\">\\(E_i\\)</span> population from node i-th into <span class=\"math first last\">\\(E_j\\)</span> and <span class=\"math first last\">\\(I_j\\)</span> subpopulations in node j-th.</p>\n<p>The equations of the excitatory infinite QIF 4D population model read (similar for inhibitory):</p>\n<div class=\"math first last\">\n\\begin{align*}\n\\dot{r} &amp;= 1/\\tau (\\Delta/(\\pi \\tau) + 2 V r)\\\\\n\\dot{V} &amp;= 1/\\tau (V^2 + \\eta + \\gamma I - \\tau^2 \\pi^2 r^2 + \\tau g - \\tau s)\\\\\n\\dot{g} &amp;= 1/\\tau_s (-g + J_ r)\\\\\n\\dot{s} &amp;= 1/\\tau_s (-s) \\\\\n\\end{align*}\n</div>\n<table class=\"docutils citation\" frame=\"void\" id=\"dumontgutkin2019\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#citation-reference-1\">[DumontGutkin2019]</a></td><td>Dumont, G., &amp; Gutkin, B. (2019). Macroscopic phase resetting-curves determine oscillatory coherence and signal transfer in inter-coupled neural circuits. PLoS computational biology, 15(5), e1007019.</td></tr>\n</tbody>\n</table>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>I_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.I_e = NArray(label='<span class=\"math first last\">\\(I_{ext_e}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>External homogeneous current on excitatory population</dd>\n<dt>Delta_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.Delta_e = NArray(label='<span class=\"math first last\">\\(\\\\Delta_e\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Half-width of heterogeneous noise distribution over excitatory population</dd>\n<dt>eta_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.eta_e = NArray(label='<span class=\"math first last\">\\(\\\\eta_e\\)</span>', dtype=float64, default=array([-5.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Mean heterogeneous current on excitatory population</dd>\n<dt>tau_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.tau_e = NArray(label='<span class=\"math first last\">\\(\\\\tau_e\\)</span>', dtype=float64, default=array([10.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Characteristic time of excitatory population</dd>\n<dt>I_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.I_i = NArray(label='<span class=\"math first last\">\\(I_{ext_i}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>External current on inhibitory population</dd>\n<dt>Delta_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.Delta_i = NArray(label='<span class=\"math first last\">\\(\\\\Delta_i\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Half-width of heterogeneous noise distribution over inhibitory population</dd>\n<dt>eta_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.eta_i = NArray(label='<span class=\"math first last\">\\(\\\\eta_i\\)</span>', dtype=float64, default=array([-5.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Mean heterogeneous current on inhibitory population</dd>\n<dt>tau_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.tau_i = NArray(label='<span class=\"math first last\">\\(\\\\tau_i\\)</span>', dtype=float64, default=array([10.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Characteristic time of inhibitory population</dd>\n<dt>tau_s <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.tau_s = NArray(label='<span class=\"math first last\">\\(\\\\tau_s\\)</span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Synaptic time constant</dd>\n<dt>J_ee <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.J_ee = NArray(label='<span class=\"math first last\">\\(J_{ee}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Synaptic weight e--&gt;e</dd>\n<dt>J_ei <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.J_ei = NArray(label='<span class=\"math first last\">\\(J_{ei}\\)</span>', dtype=float64, default=array([10.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Synaptic weight i--&gt;e</dd>\n<dt>J_ie <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.J_ie = NArray(label='<span class=\"math first last\">\\(J_{ie}\\)</span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Synaptic weight e--&gt;i</dd>\n<dt>J_ii <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.J_ii = NArray(label='<span class=\"math first last\">\\(J_{ii}\\)</span>', dtype=float64, default=array([15.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Synaptic weight i--&gt;i</dd>\n<dt>Gamma <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.Gamma = NArray(label='<span class=\"math first last\">\\(\\\\Gamma\\)</span>', dtype=float64, default=array([5.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Ratio of excitatory VS inhibitory global couplings G_ie/G_ee .</dd>\n<dt>state_variable_range <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.state_variable_range = Final(field_type=&lt;class 'dict'&gt;, default={'r_e': array([0., 2.]), 'V_e': array([-2. ,  1.5]), 's_ee': array([-1.,  1.]), 's_ei': array([-1.,  1.]), 'r_i': array([0., 2.]), 'V_i': array([-2. ,  1.5]), 's_ie': array([-1.,  1.]), 's_ii': array([-1.,  1.])}, required=True)</span></dt>\n<dd>Expected ranges of the state variables for initial condition generation and phase plane setup.</dd>\n</dl>\n<p>state_variable_boundaries : tvb.simulator.models.infinite_theta.DumontGutkin.state_variable_boundaries = Final(field_type=&lt;class 'dict'&gt;, default={'r_e': array([ 0., inf]), 'r_i': array([ 0., inf])}, required=True)</p>\n<dl class=\"docutils\">\n<dt>variables_of_interest <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.infinite_theta.DumontGutkin.variables_of_interest = List(of=&lt;class 'str'&gt;, default=('r_e', 'V_e', 's_ee', 's_ei', 'r_i', 'V_i', 's_ie', 's_ii'), required=True)</span></dt>\n<dd>The quantities of interest for monitoring for the Infinite QIF 2D oscillator.</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "I_e": "<div class=\"document\">\n<p>External homogeneous current on excitatory population</p>\n</div>\n",
        "Delta_e": "<div class=\"document\">\n<p>Half-width of heterogeneous noise distribution over excitatory population</p>\n</div>\n",
        "eta_e": "<div class=\"document\">\n<p>Mean heterogeneous current on excitatory population</p>\n</div>\n",
        "tau_e": "<div class=\"document\">\n<p>Characteristic time of excitatory population</p>\n</div>\n",
        "I_i": "<div class=\"document\">\n<p>External current on inhibitory population</p>\n</div>\n",
        "Delta_i": "<div class=\"document\">\n<p>Half-width of heterogeneous noise distribution over inhibitory population</p>\n</div>\n",
        "eta_i": "<div class=\"document\">\n<p>Mean heterogeneous current on inhibitory population</p>\n</div>\n",
        "tau_i": "<div class=\"document\">\n<p>Characteristic time of inhibitory population</p>\n</div>\n",
        "tau_s": "<div class=\"document\">\n<p>Synaptic time constant</p>\n</div>\n",
        "J_ee": "<div class=\"document\">\n<p>Synaptic weight e--&gt;e</p>\n</div>\n",
        "J_ei": "<div class=\"document\">\n<p>Synaptic weight i--&gt;e</p>\n</div>\n",
        "J_ie": "<div class=\"document\">\n<p>Synaptic weight e--&gt;i</p>\n</div>\n",
        "J_ii": "<div class=\"document\">\n<p>Synaptic weight i--&gt;i</p>\n</div>\n",
        "Gamma": "<div class=\"document\">\n<p>Ratio of excitatory VS inhibitory global couplings G_ie/G_ee .</p>\n</div>\n",
        "state_variable_range": "<div class=\"document\">\n<p>Expected ranges of the state variables for initial condition generation and phase plane setup.</p>\n</div>\n",
        "variables_of_interest": "<div class=\"document\">\n<p>The quantities of interest for monitoring for the Infinite QIF 2D oscillator.</p>\n</div>\n"
    }
}