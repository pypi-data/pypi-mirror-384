"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .responseenvelopelistcollectionsresponsev1 import (
    ResponseEnvelopeListCollectionsResponseV1,
    ResponseEnvelopeListCollectionsResponseV1TypedDict,
)
from censys_platform.types import BaseModel
from censys_platform.utils import FieldMetadata, QueryParamMetadata
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V3CollectionsCrudListGlobalsTypedDict(TypedDict):
    organization_id: NotRequired[str]


class V3CollectionsCrudListGlobals(BaseModel):
    organization_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class V3CollectionsCrudListRequestTypedDict(TypedDict):
    organization_id: NotRequired[str]
    r"""The ID of a Censys organization to associate the request with. See the [Getting Started docs](https://docs.censys.com/reference/get-started#step-3-find-and-use-your-organization-id-optional) for more information."""
    page_token: NotRequired[str]
    r"""page token for the requested page of collection results"""
    page_size: NotRequired[int]
    r"""amount of results to return per page"""


class V3CollectionsCrudListRequest(BaseModel):
    organization_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""The ID of a Censys organization to associate the request with. See the [Getting Started docs](https://docs.censys.com/reference/get-started#step-3-find-and-use-your-organization-id-optional) for more information."""

    page_token: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""page token for the requested page of collection results"""

    page_size: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""amount of results to return per page"""


class V3CollectionsCrudListResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ResponseEnvelopeListCollectionsResponseV1TypedDict


class V3CollectionsCrudListResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ResponseEnvelopeListCollectionsResponseV1
