"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from censys_platform.types import BaseModel, Nullable, UNSET_SENTINEL
from datetime import datetime
from pydantic import model_serializer
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class AssetWebpropertyListInputBodyTypedDict(TypedDict):
    webproperty_ids: Nullable[List[str]]
    r"""A list of web property identifiers."""
    at_time: NotRequired[datetime]
    r"""RFC3339 Timestamp to view all requested webproperties at a specific point in time. Must be a valid RFC3339 string. Ensure that you suffix the date with T00:00:00Z or a specific time"""


class AssetWebpropertyListInputBody(BaseModel):
    webproperty_ids: Nullable[List[str]]
    r"""A list of web property identifiers."""

    at_time: Optional[datetime] = None
    r"""RFC3339 Timestamp to view all requested webproperties at a specific point in time. Must be a valid RFC3339 string. Ensure that you suffix the date with T00:00:00Z or a specific time"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["at_time"]
        nullable_fields = ["webproperty_ids"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
