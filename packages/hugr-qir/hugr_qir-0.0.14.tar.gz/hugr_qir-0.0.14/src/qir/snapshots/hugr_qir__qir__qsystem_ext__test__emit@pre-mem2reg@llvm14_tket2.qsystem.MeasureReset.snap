---
source: src/qir/qsystem_ext.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

%Qubit = type opaque
%Result = type opaque

define { %Qubit*, { i1, i1 } } @_hl.main.1(%Qubit* %0) {
alloca_block:
  %"0" = alloca %Qubit*, align 8
  %"1" = alloca { i1, i1 }, align 8
  %"2_0" = alloca %Qubit*, align 8
  %"4_0" = alloca %Qubit*, align 8
  %"4_1" = alloca { i1, i1 }, align 8
  %"6_0" = alloca %Qubit*, align 8
  %"8_0" = alloca %Qubit*, align 8
  %"8_1" = alloca i1, align 1
  %"9_0" = alloca { i1, i1 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store %Qubit* %0, %Qubit** %"2_0", align 8
  %"2_01" = load %Qubit*, %Qubit** %"2_0", align 8
  store %Qubit* %"2_01", %Qubit** %"6_0", align 8
  %"6_02" = load %Qubit*, %Qubit** %"6_0", align 8
  %1 = call %Result* @__QIR__CONV_Qubit_TO_Result(%Qubit* %"6_02")
  call void @__quantum__qis__mz__body(%Qubit* %"6_02", %Result* %1)
  call void @__quantum__qis__reset__body(%Qubit* %"6_02")
  %2 = call i1 @__quantum__qis__read_result__body(%Result* %1)
  %3 = select i1 %2, i1 true, i1 false
  store %Qubit* %"6_02", %Qubit** %"8_0", align 8
  store i1 %3, i1* %"8_1", align 1
  %"8_13" = load i1, i1* %"8_1", align 1
  %4 = insertvalue { i1, i1 } { i1 true, i1 poison }, i1 %"8_13", 1
  store { i1, i1 } %4, { i1, i1 }* %"9_0", align 1
  %"8_04" = load %Qubit*, %Qubit** %"8_0", align 8
  %"9_05" = load { i1, i1 }, { i1, i1 }* %"9_0", align 1
  store %Qubit* %"8_04", %Qubit** %"4_0", align 8
  store { i1, i1 } %"9_05", { i1, i1 }* %"4_1", align 1
  %"4_06" = load %Qubit*, %Qubit** %"4_0", align 8
  %"4_17" = load { i1, i1 }, { i1, i1 }* %"4_1", align 1
  store %Qubit* %"4_06", %Qubit** %"0", align 8
  store { i1, i1 } %"4_17", { i1, i1 }* %"1", align 1
  %"08" = load %Qubit*, %Qubit** %"0", align 8
  %"19" = load { i1, i1 }, { i1, i1 }* %"1", align 1
  %mrv = insertvalue { %Qubit*, { i1, i1 } } undef, %Qubit* %"08", 0
  %mrv10 = insertvalue { %Qubit*, { i1, i1 } } %mrv, { i1, i1 } %"19", 1
  ret { %Qubit*, { i1, i1 } } %mrv10
}

declare %Result* @__QIR__CONV_Qubit_TO_Result(%Qubit*)

declare void @__quantum__qis__mz__body(%Qubit*, %Result*)

declare void @__quantum__qis__reset__body(%Qubit*)

declare i1 @__quantum__qis__read_result__body(%Result*)
