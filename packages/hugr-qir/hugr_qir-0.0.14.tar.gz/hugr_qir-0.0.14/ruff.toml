# See https://docs.astral.sh/ruff/rules/
target-version = "py312"

line-length = 88

extend-exclude = ["submit-guppy-h1-h2-via-qir.ipynb"]

lint.select = [
  "E",    # pycodestyle Errors
  "W",    # pycodestyle Warnings

  "A",    # flake8-builtins
  "ANN",  # flake8-annotations
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-Bugbear
  "BLE",  # flake8-blind-except
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  # "D",    # pydocstyle
  "EM",   # flake8-errmsg
  "ERA",  # eradicate
  "EXE",  # flake8-executable
  "F",    # pyFlakes
  "FA",   # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "FIX",  # flake8-fixme
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "INP",  # flake8-no-pep420
  "INT",  # flake8-gettext
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-Naming
  "NPY",  # NumPy-specific
  "PERF", # Perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific
  "S",    # flake8-bandit (Security)
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  # "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TD",   # flake8-todos
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
]

[lint.pydocstyle]
convention = "google"

[lint.per-file-ignores]
"guppy_examples/*" = ["INP"]
"python/tests/*" = ["PGH003", "S101"]
"python/hugr_qir/*" = ["FBT001", "FBT002"]
