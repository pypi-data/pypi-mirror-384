[tool.poetry]
name = "pydggsapi"

[project]
name = "pydggsapi"
version = "0.1.5"
description = "A python FastAPI OGC DGGS API implementation"
license = "Apache-2.0"
license-files = ["LICENSE"]
readme = {file = "README.md", content-type = "text/markdown"}
authors = [
  {name = "Wai Tik Chan", email = "wai.tik.chan@ut.ee"},
  {name = "Alexander Kmoch", email = "alexander.kmoch@ut.ee"},
]
maintainers = [
  {name = "Wai Tik Chan", email = "wai.tik.chan@ut.ee"},
  {name = "Alexander Kmoch", email = "alexander.kmoch@ut.ee"},
  {name = "Francis Charette-Migneault", email = "francis.charette-migneault@crim.ca"}
]
packages = [
    { include = "pydggsapi" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
uvicorn = "^0.23.2"
clickhouse-driver = {extras = ["lz4", "zstd"], version = "^0.2.6"}
shapely = "^2.0.2"
morecantile = "^5.0.0"
mapbox-vector-tile = "^2.0.1"
pyproj = "^3.6.1"
clickhouse-cityhash = "^1.0.2.4"
dggrid4py = "~0.4.1"
python-dotenv = "^1.0.0"
gunicorn = "^23.0.0"
tinydb = "^4.8.2"
pytest = "^8.3.4"
fastapi = "^0.115.6"
h3 = "^4.2.0"
scipy = "^1.15.0"
xarray = {extras = ["io"], version = "^2025.3.1"}
nest-asyncio = "^1.6.0"
duckdb = "^1.3.2"

[tool.poetry.group.dev.dependencies]
bump-my-version = ">=1.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pydggsapi = "pydggsapi.main:run"

[tool.pytest.ini_options]
minversion = "6.0"
#addopts = "-ra -s"

[tool.bumpversion]
current_version = "0.1.5"
parse = """(?x)
  (?P<major>0|[1-9]\\d*)\\.
  (?P<minor>0|[1-9]\\d*)\\.
  (?P<patch>0|[1-9]\\d*)
  (?:
      -                             # dash separator for pre-release section
      (?P<pre_l>[a-zA-Z-]+)         # pre-release label
      (?P<pre_n>0|[1-9]\\d*)?       # optinal pre-release version number
  )?                                # pre-release section is optional
"""
serialize =[
  "{major}.{minor}.{patch}-{pre_l}{pre_n}",
  "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = true
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
commit_args = "--no-verify"
message = "Bump version: {current_version} → {new_version}"

[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", ""]
optional_value = ""

[[tool.bumpversion.files]]
glob = "**/*.@(json|yml|yaml|py|md)"
glob_exclude = [
  ".git/**",
  "**/__pycache__/**",
  ".mypy_cache/**",
  ".tox/**",
  ".venv/**",
  "_build/**",
  "build/**",
  "dist/**",
  "node_modules/**",
  "htmlcov/**",
]
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "pydggsapi/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "version: \"{current_version}\""
replace = "version: \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "date-released: \\d{{4}}-\\d{{2}}-\\d{{2}}"
replace = "date-released: {utcnow:%Y-%m-%d}"

[[tool.bumpversion.files]]
filename = "docker/Dockerfile"
search = "LABEL version=\"{current_version}\""
replace = "LABEL version=\"{new_version}\""
