[project]
name = "tripwire-py"
version = "0.11.0"
description = "Catch config errors before they explode - Python environment variable management with import-time validation, type safety, and secret detection"
authors = [
    { name = "Kibukx" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
keywords = ["environment", "config", "validation", "dotenv", "env", "configuration"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]

dependencies = [
    "click>=8.1.8",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.3",
    "rich>=14.1.0",
    "tomli>=2.2.1",
    "tomli-w>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=25.9.0",
    "pre-commit>=4.3.0",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.13.3",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pip-audit>=2.6.1",
    "pip-licenses>=4.3.0",
    "types-click>=7.1.8",
    "types-pyyaml>=6.0.12.20250915",
]

[project.urls]
Homepage = "https://github.com/Daily-Nerd/TripWire"
Documentation = "https://github.com/Daily-Nerd/TripWire/tree/main/docs"
Repository = "https://github.com/Daily-Nerd/TripWire"
Issues = "https://github.com/Daily-Nerd/TripWire/issues"

[project.scripts]
tripwire = "tripwire.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/tripwire"]

[tool.hatch.build.targets.wheel.force-include]
"src/tripwire/plugins/data/registry.json" = "tripwire/plugins/data/registry.json"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "src/tripwire/plugins/data/*.json"
]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tripwire",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-n",
    "auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/tripwire"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]

[tool.ruff]
line-length = 100
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]

[tool.ruff.lint.isort]
known-first-party = ["tripwire"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_concatenate = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# v0.6.0: Type safety improvements - validation.py fully typed
# v0.7.0: core.py and cli type safety completed - full strict type checking enabled

[tool.black]
line-length = 100
target-version = ["py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

# Dependency groups are now in [project.optional-dependencies]
