# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from helix_platform_api_public_client_legacy.models.business_process_content_block import BusinessProcessContentBlock  # noqa: E501

class TestBusinessProcessContentBlock(unittest.TestCase):
    """BusinessProcessContentBlock unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BusinessProcessContentBlock:
        """Test BusinessProcessContentBlock
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BusinessProcessContentBlock`
        """
        model = BusinessProcessContentBlock()  # noqa: E501
        if include_optional:
            return BusinessProcessContentBlock(
                block_type = '',
                blocks = [
                    [
                        null
                        ]
                    ],
                step_type = helix_platform_api_public_client_legacy.models.business_process_step_type.BusinessProcessStepType(
                    id = '', 
                    display_name = '', ),
                logic_type = 'INTERNAL_LOGIC',
                data_flow_direction = 'INCOMING',
                interface = helix_platform_api_public_client_legacy.models.interface.Interface(
                    id = '', 
                    display_name = '', ),
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                resolvable = True,
                rerunnable = True,
                attempts = [
                    helix_platform_api_public_client_legacy.models.business_process_step_attempt.BusinessProcessStepAttempt(
                        status = 'SCHEDULED', 
                        started_at = '2022-01-04T00:00:00.000Z', 
                        ended_at = '2022-01-04T00:00:00.000Z', 
                        fail_reason = '', )
                    ],
                data_flow_version_id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09'
            )
        else:
            return BusinessProcessContentBlock(
                block_type = '',
                blocks = [
                    [
                        null
                        ]
                    ],
                step_type = helix_platform_api_public_client_legacy.models.business_process_step_type.BusinessProcessStepType(
                    id = '', 
                    display_name = '', ),
                logic_type = 'INTERNAL_LOGIC',
                resolvable = True,
                rerunnable = True,
                attempts = [
                    helix_platform_api_public_client_legacy.models.business_process_step_attempt.BusinessProcessStepAttempt(
                        status = 'SCHEDULED', 
                        started_at = '2022-01-04T00:00:00.000Z', 
                        ended_at = '2022-01-04T00:00:00.000Z', 
                        fail_reason = '', )
                    ],
        )
        """

    def testBusinessProcessContentBlock(self):
        """Test BusinessProcessContentBlock"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
