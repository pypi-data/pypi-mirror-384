# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from helix_platform_api_public_client_legacy.models.profile import Profile  # noqa: E501

class TestProfile(unittest.TestCase):
    """Profile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Profile:
        """Test Profile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Profile`
        """
        model = Profile()  # noqa: E501
        if include_optional:
            return Profile(
                user = helix_platform_api_public_client_legacy.models.profile_user.ProfileUser(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', 
                    email = 'example@example.com', 
                    role = 'ICO_ADMIN', 
                    organisation = helix_platform_api_public_client_legacy.models.profile_user_organisation.ProfileUserOrganisation(
                        id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                        name = '', 
                        auth_method = 'PLATFORM', ), ),
                permissions = [
                    'VIEW_CAPACITY_OVERVIEW'
                    ],
                appearance = 'DEFAULT',
                impersonated_by = helix_platform_api_public_client_legacy.models.profile_user.ProfileUser(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', 
                    email = 'example@example.com', 
                    role = 'ICO_ADMIN', 
                    organisation = helix_platform_api_public_client_legacy.models.profile_user_organisation.ProfileUserOrganisation(
                        id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                        name = '', 
                        auth_method = 'PLATFORM', ), )
            )
        else:
            return Profile(
                user = helix_platform_api_public_client_legacy.models.profile_user.ProfileUser(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', 
                    email = 'example@example.com', 
                    role = 'ICO_ADMIN', 
                    organisation = helix_platform_api_public_client_legacy.models.profile_user_organisation.ProfileUserOrganisation(
                        id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                        name = '', 
                        auth_method = 'PLATFORM', ), ),
                permissions = [
                    'VIEW_CAPACITY_OVERVIEW'
                    ],
                appearance = 'DEFAULT',
        )
        """

    def testProfile(self):
        """Test Profile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
