# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from helix_platform_api_public_client_legacy.models.user import User  # noqa: E501

class TestUser(unittest.TestCase):
    """User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> User:
        """Test User
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `User`
        """
        model = User()  # noqa: E501
        if include_optional:
            return User(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                organisation = helix_platform_api_public_client_legacy.models.audit_log_user_organisation.AuditLogUserOrganisation(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', ),
                name = '',
                email = 'example@example.com',
                phone_number = '+4807288800152802',
                role = 'ICO_ADMIN',
                status = 'ACTIVE',
                job_title = ''
            )
        else:
            return User(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
                organisation = helix_platform_api_public_client_legacy.models.audit_log_user_organisation.AuditLogUserOrganisation(
                    id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09', 
                    name = '', ),
                name = '',
                email = 'example@example.com',
                phone_number = '+4807288800152802',
                role = 'ICO_ADMIN',
                status = 'ACTIVE',
        )
        """

    def testUser(self):
        """Test User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
