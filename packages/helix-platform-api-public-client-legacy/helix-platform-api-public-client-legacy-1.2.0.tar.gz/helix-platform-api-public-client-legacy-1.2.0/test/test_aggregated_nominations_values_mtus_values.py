# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from helix_platform_api_public_client_legacy.models.aggregated_nominations_values_mtus_values import AggregatedNominationsValuesMtusValues  # noqa: E501

class TestAggregatedNominationsValuesMtusValues(unittest.TestCase):
    """AggregatedNominationsValuesMtusValues unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AggregatedNominationsValuesMtusValues:
        """Test AggregatedNominationsValuesMtusValues
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregatedNominationsValuesMtusValues`
        """
        model = AggregatedNominationsValuesMtusValues()  # noqa: E501
        if include_optional:
            return AggregatedNominationsValuesMtusValues(
                direction = 'GB_FR',
                value = 56
            )
        else:
            return AggregatedNominationsValuesMtusValues(
                direction = 'GB_FR',
                value = 56,
        )
        """

    def testAggregatedNominationsValuesMtusValues(self):
        """Test AggregatedNominationsValuesMtusValues"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
