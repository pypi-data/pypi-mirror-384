# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class AuditLogDomain(str, Enum):
    """
    AuditLogDomain
    """

    """
    allowed enum values
    """
    NTC_MANAGEMENT = 'NTC_MANAGEMENT'
    ATC_MANAGEMENT = 'ATC_MANAGEMENT'
    UNPLANNED_OUTAGES = 'UNPLANNED_OUTAGES'
    PLANNED_OUTAGES = 'PLANNED_OUTAGES'
    NOMINATIONS = 'NOMINATIONS'
    DEFAULT_NOMINATIONS = 'DEFAULT_NOMINATIONS'
    NOMINATION_CANCELLATION = 'NOMINATION_CANCELLATION'
    CRISIS_MANAGEMENT = 'CRISIS_MANAGEMENT'
    ATTACHMENTS = 'ATTACHMENTS'
    ORGANISATIONS = 'ORGANISATIONS'
    USERS = 'USERS'
    EXTERNAL_USERS = 'EXTERNAL_USERS'
    PROFILE = 'PROFILE'
    PARTICIPANT_DASHBOARD = 'PARTICIPANT_DASHBOARD'
    BPP = 'BPP'
    MESSAGES = 'MESSAGES'
    MANUAL_FILE_UPLOAD = 'MANUAL_FILE_UPLOAD'
    BUSINESS_SETTINGS = 'BUSINESS_SETTINGS'
    BUSINESS_PROCESSES = 'BUSINESS_PROCESSES'
    DATA_FLOWS = 'DATA_FLOWS'
    AUTHENTICATION = 'AUTHENTICATION'

    @classmethod
    def from_json(cls, json_str: str) -> AuditLogDomain:
        """Create an instance of AuditLogDomain from a JSON string"""
        return AuditLogDomain(json.loads(json_str))


