startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      pipeboardApiToken:
        type: string
        description: "Pipeboard API token for Meta authentication (recommended). Get your free token at https://pipeboard.co"
      metaAppId:
        type: string
        description: "Meta App ID (Client ID) for direct OAuth method (only needed if not using Pipeboard authentication)"
    required: []
  commandFunction: |
    (config) => {
      const env = {};
      const args = ["-m", "meta_ads_mcp"];
      
      // Add Pipeboard API token to environment if provided (recommended auth method)
      if (config.pipeboardApiToken) {
        env.PIPEBOARD_API_TOKEN = config.pipeboardApiToken;
      }
      
      // Add Meta App ID as command-line argument if provided (alternative auth method)
      if (config.metaAppId) {
        args.push("--app-id", config.metaAppId);
      }
      
      return {
        command: 'python',
        args: args,
        env: env
      };
    } 
remotes:
  - type: streamable-http
    url: "https://mcp.pipeboard.co/meta-ads-mcp"