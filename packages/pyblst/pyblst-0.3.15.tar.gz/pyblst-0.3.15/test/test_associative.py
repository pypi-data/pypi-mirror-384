import pyblst


def test_g1_add_associative():
    a = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0xAB,
                0xD6,
                0x18,
                0x64,
                0xF5,
                0x19,
                0x74,
                0x80,
                0x32,
                0x55,
                0x1E,
                0x42,
                0xE0,
                0xAC,
                0x41,
                0x7F,
                0xD8,
                0x28,
                0xF0,
                0x79,
                0x45,
                0x4E,
                0x3E,
                0x3C,
                0x98,
                0x91,
                0xC5,
                0xC2,
                0x9E,
                0xD7,
                0xF1,
                0x0B,
                0xDE,
                0xCC,
                0x04,
                0x68,
                0x54,
                0xE3,
                0x93,
                0x1C,
                0xB7,
                0x00,
                0x27,
                0x79,
                0xBD,
                0x76,
                0xD7,
                0x1F,
            ]
        )
    )
    b = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0x95,
                0x0D,
                0xFD,
                0x33,
                0xDA,
                0x26,
                0x82,
                0x26,
                0x0C,
                0x76,
                0x03,
                0x8D,
                0xFB,
                0x8B,
                0xAD,
                0x6E,
                0x84,
                0xAE,
                0x9D,
                0x59,
                0x9A,
                0x3C,
                0x15,
                0x18,
                0x15,
                0x94,
                0x5A,
                0xC1,
                0xE6,
                0xEF,
                0x6B,
                0x10,
                0x27,
                0xCD,
                0x91,
                0x7F,
                0x39,
                0x07,
                0x47,
                0x9D,
                0x20,
                0xD6,
                0x36,
                0xCE,
                0x43,
                0x7A,
                0x41,
                0xF5,
            ]
        )
    )
    c = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0xB9,
                0x62,
                0xFD,
                0x0C,
                0xC8,
                0x10,
                0x48,
                0xE0,
                0xCF,
                0x75,
                0x57,
                0xBF,
                0x3E,
                0x4B,
                0x6E,
                0xDC,
                0x5A,
                0xB4,
                0xBF,
                0xB3,
                0xDC,
                0x87,
                0xF8,
                0x3A,
                0xF4,
                0x28,
                0xB6,
                0x30,
                0x07,
                0x27,
                0xB1,
                0x39,
                0xC4,
                0x04,
                0xAB,
                0x15,
                0x9B,
                0xDF,
                0x2E,
                0xAE,
                0xA3,
                0xF6,
                0x49,
                0x90,
                0x34,
                0x21,
                0x53,
                0x7F,
            ]
        )
    )
    assert a + b + c == a + (b + c)


def test_g1_add_associative_2():
    a = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0xAB,
                0xD6,
                0x18,
                0x64,
                0xF5,
                0x19,
                0x74,
                0x80,
                0x32,
                0x55,
                0x1E,
                0x42,
                0xE0,
                0xAC,
                0x41,
                0x7F,
                0xD8,
                0x28,
                0xF0,
                0x79,
                0x45,
                0x4E,
                0x3E,
                0x3C,
                0x98,
                0x91,
                0xC5,
                0xC2,
                0x9E,
                0xD7,
                0xF1,
                0x0B,
                0xDE,
                0xCC,
                0x04,
                0x68,
                0x54,
                0xE3,
                0x93,
                0x1C,
                0xB7,
                0x00,
                0x27,
                0x79,
                0xBD,
                0x76,
                0xD7,
                0x1F,
            ]
        )
    )
    b = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0x95,
                0x0D,
                0xFD,
                0x33,
                0xDA,
                0x26,
                0x82,
                0x26,
                0x0C,
                0x76,
                0x03,
                0x8D,
                0xFB,
                0x8B,
                0xAD,
                0x6E,
                0x84,
                0xAE,
                0x9D,
                0x59,
                0x9A,
                0x3C,
                0x15,
                0x18,
                0x15,
                0x94,
                0x5A,
                0xC1,
                0xE6,
                0xEF,
                0x6B,
                0x10,
                0x27,
                0xCD,
                0x91,
                0x7F,
                0x39,
                0x07,
                0x47,
                0x9D,
                0x20,
                0xD6,
                0x36,
                0xCE,
                0x43,
                0x7A,
                0x41,
                0xF5,
            ]
        )
    )
    c = pyblst.BlstP1Element.uncompress(
        bytes(
            [
                0xB9,
                0x62,
                0xFD,
                0x0C,
                0xC8,
                0x10,
                0x48,
                0xE0,
                0xCF,
                0x75,
                0x57,
                0xBF,
                0x3E,
                0x4B,
                0x6E,
                0xDC,
                0x5A,
                0xB4,
                0xBF,
                0xB3,
                0xDC,
                0x87,
                0xF8,
                0x3A,
                0xF4,
                0x28,
                0xB6,
                0x30,
                0x07,
                0x27,
                0xB1,
                0x39,
                0xC4,
                0x04,
                0xAB,
                0x15,
                0x9B,
                0xDF,
                0x2E,
                0xAE,
                0xA3,
                0xF6,
                0x49,
                0x90,
                0x34,
                0x21,
                0x53,
                0x7F,
            ]
        )
    )
    assert a + b + c == (a + b) + c

if __name__ == '__main__':
    test_g1_add_associative()
    test_g1_add_associative_2()
    print("All tests passed.")