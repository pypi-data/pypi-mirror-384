"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class AugmentedMatrix(google.protobuf.message.Message):
    """Augmented transformation matrix such that `x' = xA + t`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AFFINE_FIELD_NUMBER: builtins.int
    TRANSLATION_FIELD_NUMBER: builtins.int
    @property
    def affine(self) -> luminarycloud._proto.base.base_pb2.Matrix3:
        """Affine/linear transformation matrix."""
    @property
    def translation(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Translation vector."""
    def __init__(
        self,
        *,
        affine: luminarycloud._proto.base.base_pb2.Matrix3 | None = ...,
        translation: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["affine", b"affine", "translation", b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["affine", b"affine", "translation", b"translation"]) -> None: ...

global___AugmentedMatrix = AugmentedMatrix

class MagnitudeVector3(google.protobuf.message.Message):
    """Vector defined by direction and magnitude."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIRECTION_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    @property
    def direction(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Direction of the vector, with "magnitude" dictating its length."""
    magnitude: builtins.float
    """Magnitude of the vector."""
    def __init__(
        self,
        *,
        direction: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
        magnitude: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["direction", b"direction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "magnitude", b"magnitude"]) -> None: ...

global___MagnitudeVector3 = MagnitudeVector3

class Translation(google.protobuf.message.Message):
    """Translation along a vector."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VECTOR_FIELD_NUMBER: builtins.int
    MAGNITUDE_VECTOR_FIELD_NUMBER: builtins.int
    @property
    def vector(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Arbitrary input."""
    @property
    def magnitude_vector(self) -> global___MagnitudeVector3:
        """Arbitrary input with magnitude."""
    def __init__(
        self,
        *,
        vector: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
        magnitude_vector: global___MagnitudeVector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["displacement", b"displacement", "magnitude_vector", b"magnitude_vector", "vector", b"vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["displacement", b"displacement", "magnitude_vector", b"magnitude_vector", "vector", b"vector"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["displacement", b"displacement"]) -> typing_extensions.Literal["vector", "magnitude_vector"] | None: ...

global___Translation = Translation

class AnchoredVector3(google.protobuf.message.Message):
    """A vector with an origin, which can describe an axis or a plane in 3D."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Origin of the Vector3."""
    @property
    def direction(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Direction (norm is ignored)."""
    def __init__(
        self,
        *,
        origin: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
        direction: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["direction", b"direction", "origin", b"origin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "origin", b"origin"]) -> None: ...

global___AnchoredVector3 = AnchoredVector3

class Rotation(google.protobuf.message.Message):
    """Rotation around an axis."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANGLE_FIELD_NUMBER: builtins.int
    ARBITRARY_FIELD_NUMBER: builtins.int
    angle: builtins.float
    """Angle in degrees."""
    @property
    def arbitrary(self) -> global___AnchoredVector3:
        """Arbitrary input."""
    def __init__(
        self,
        *,
        angle: builtins.float = ...,
        arbitrary: global___AnchoredVector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arbitrary", b"arbitrary", "axis", b"axis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["angle", b"angle", "arbitrary", b"arbitrary", "axis", b"axis"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["axis", b"axis"]) -> typing_extensions.Literal["arbitrary"] | None: ...

global___Rotation = Rotation

class Scaling(google.protobuf.message.Message):
    """Isotropic scaling."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARBITRARY_FIELD_NUMBER: builtins.int
    ISOTROPIC_FIELD_NUMBER: builtins.int
    @property
    def arbitrary(self) -> luminarycloud._proto.base.base_pb2.Vector3:
        """Arbitrary input."""
    isotropic: builtins.float
    """Isotropic scaling."""
    def __init__(
        self,
        *,
        arbitrary: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
        isotropic: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arbitrary", b"arbitrary", "factor", b"factor", "isotropic", b"isotropic", "origin", b"origin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arbitrary", b"arbitrary", "factor", b"factor", "isotropic", b"isotropic", "origin", b"origin"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["factor", b"factor"]) -> typing_extensions.Literal["isotropic"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["origin", b"origin"]) -> typing_extensions.Literal["arbitrary"] | None: ...

global___Scaling = Scaling

class Reflection(google.protobuf.message.Message):
    """Reflection across a plane"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARBITRARY_FIELD_NUMBER: builtins.int
    @property
    def arbitrary(self) -> global___AnchoredVector3:
        """Arbitrary input."""
    def __init__(
        self,
        *,
        arbitrary: global___AnchoredVector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arbitrary", b"arbitrary", "plane", b"plane"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arbitrary", b"arbitrary", "plane", b"plane"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["plane", b"plane"]) -> typing_extensions.Literal["arbitrary"] | None: ...

global___Reflection = Reflection
