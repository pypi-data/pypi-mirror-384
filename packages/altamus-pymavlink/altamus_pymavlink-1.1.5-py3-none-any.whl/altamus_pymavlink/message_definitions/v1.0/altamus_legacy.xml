<?xml version="1.0"?>
<mavlink>
    <include>common_minimal.xml</include>
    <version>1</version>
    <dialect>8</dialect>
    <enums>
        <enum name="MAV_RESULT">
            <entry value="7" name="MAV_RESULT_TIMED_OUT">
                <description>Indicates that a command has timed out. Intended for use on GCS side to indicate that target hasn't replied back with an expected ACK/NACK</description>
                </entry>
        </enum>
        <enum name="MAV_CMD">
            <entry value="1" name="MAV_CMD_START_EOS_SCAN">
                <description>Starts a scan on the targeted scanner. Takes no arguments</description>
            </entry>
            <entry value="2" name="MAV_CMD_STOP_EOS_SCAN">
                <description>Stops a scan on the targeted scanner. Takes no arguments</description>
            </entry>
            <entry value="3" name="MAV_CMD_IDENTIFY">
              <description>Requests that device identify itself by flashing it's LED. Takes no arguments</description>
            </entry>
            <entry value="4" name="MAV_CMD_SEND_SETTINGS_TO_SERVER">
              <description>Requests that device sends it's settings to the settings server configured in REMOTE_SERVER_SETTINGS. Takes no arguments</description>
            </entry>
            <entry value="5" name="MAV_CMD_CLEAR_EEPROM">
              <description>Requests that device clears it's stored EEPROM. Takes no Arguments</description>
            </entry>
        </enum>
        <enum name="EOS_COMPONENT" bitmask="true">
            <description> Components within the EOS scanner </description>
            <entry value="1" name="EOS_COMPONENT_LIDAR"></entry>
            <entry value="2" name="EOS_COMPONENT_YAW_MOTOR"></entry>
            <entry value="4" name="EOS_COMPONENT_PITCH_MOTOR"></entry>
            <entry value="8" name="EOS_COMPONENT_GPS"></entry>
            <entry value="16" name="EOS_COMPONENT_COMPASS"></entry>
            <entry value="32" name="EOS_COMPONENT_MCU"></entry>
            <entry value="64" name="EOS_COMPONENT_LED"></entry>
            <entry value="128" name="EOS_COMPONENT_ACCEL"></entry>
            <entry value="256" name="EOS_COMPONENT_POWER_SENSOR"></entry>
            <entry value="512" name="EOS_COMPONENT_SERIAL_BRIDGE"></entry>
            <entry value="1024" name="EOS_COMPONENT_PORT_EXPANDER"></entry>
            <entry value="2048" name="EOS_COMPONENT_FLASH"></entry>
            <entry value="4096" name="EOS_COMPONENT_ALL"></entry>
        </enum>
        <enum name="EOS_STATE">
            <description> State of the device </description>
            <entry value="1" name="EOS_STATE_IDLE"></entry>
            <entry value="2" name="EOS_STATE_UPLOADING"></entry>
            <entry value="3" name="EOS_STATE_SCANNING"></entry>
            <entry value="4" name="EOS_STATE_INIT"></entry>
            <entry value="5" name="EOS_STATE_ERROR"></entry>
            <entry value="6" name="EOS_STATE_HOMING"></entry>
        </enum>
        <enum name="MOTOR_BEHAVIOR">
            <description> Behaviors a motor can execute </description>
            <entry value="1" name="MOTOR_BEHAVIOR_MOTOR_ENABLE"></entry>
            <entry value="2" name="MOTOR_BEHAVIOR_MOTOR_DISABLE"></entry>
            <entry value="3" name="MOTOR_BEHAVIOR_MOTOR_RPM"></entry>
            <entry value="4" name="MOTOR_BEHAVIOR_DEVICE_RPM"></entry>
            <entry value="5" name="MOTOR_BEHAVIOR_VACTUAL"></entry>
            <entry value="6" name="MOTOR_BEHAVIOR_GOTO_ANGLE"></entry>
            <entry value="7" name="MOTOR_BEHAVIOR_STEP"></entry>
            <entry value="8" name="MOTOR_BEHAVIOR_HOME"></entry>
        </enum>
        <enum name="EOS_COMPONENT_POWER_BEHAVIOR">
            <description> Power behavior to execute </description>
            <entry value="1" name="EOS_COMPONENT_POWER_BEHAVIOR_ENABLE"></entry>
            <entry value="2" name="EOS_COMPONENT_POWER_BEHAVIOR_DISABLE"></entry>
            <entry value="3" name="EOS_COMPONENT_POWER_BEHAVIOR_REBOOT"></entry>
        </enum>
        <enum name="WIFI_CREDIENTIALS_BEHAVIOR">
            <description> Behavior to execute related to wifi network</description>
            <entry value="1" name="WIFI_CREDIENTIALS_BEHAVIOR_ADD"></entry>
            <entry value="2" name="WIFI_CREDIENTIALS_BEHAVIOR_CLEAR"></entry>
            <entry value="3" name="WIFI_CREDIENTIALS_BEHAVIOR_LIST"></entry>
            <entry value="4" name="WIFI_CREDIENTIALS_BEHAVIOR_LIST_RESPONSE"></entry>
        </enum>
        <enum name="WIFI_AUTH_TYPE">
            <description>Auth type of the wifi</description>
            <entry value="1" name="WIFI_AUTH_TYPE_UNSECURED"></entry>
            <entry value="2" name="WIFI_AUTH_TYPE_WEP"></entry>
            <entry value="3" name="WIFI_AUTH_TYPE_WPA"></entry>
            <entry value="4" name="WIFI_AUTH_TYPE_WPA2"></entry>
        </enum>
        <enum name="SCAN_STOP_REASON" bitmask="true">
            <description>Reasons to stop a scan</description>
            <entry value="2**0" name="SCAN_STOP_REASON_INCOMPLETE"></entry> 
            <entry value="2**1" name="SCAN_STOP_REASON_PITCH_HOME_ERROR"></entry> 
            <entry value="2**2" name="SCAN_STOP_REASON_PITCH_INDEX_ERROR"></entry> 
            <entry value="2**3" name="SCAN_STOP_REASON_PITCH_MAGNET_ERROR"></entry> 
            <entry value="2**4" name="SCAN_STOP_REASON_YAW_HOME_ERROR"></entry> 
            <entry value="2**5" name="SCAN_STOP_REASON_YAW_INDEX_ERROR"></entry> 
            <entry value="2**6" name="SCAN_STOP_REASON_RANGEFINDER_ERROR_DISABLE_OUTPUT"></entry> 
            <entry value="2**7" name="SCAN_STOP_REASON_RANGEFINDER_ERROR_ENABLE_OUTPUT"></entry> 
            <entry value="2**8" name="SCAN_STOP_REASON_RANGEFINDER_ERROR_RATE"></entry> 
            <entry value="2**9" name="SCAN_STOP_REASON_RANGEFINDER_ERROR_SAVE"></entry> 
            <entry value="2**10" name="SCAN_STOP_REASON_RANGEFINDER_ERROR_FOG"></entry> 
            <entry value="2**11" name="SCAN_STOP_REASON_USER_CANCELED"></entry> 
            <entry value="2**12" name="SCAN_STOP_REASON_SCAN_TIMEOUT"></entry> 
            <entry value="2**13" name="SCAN_STOP_REASON_NORMAL_COMPLETE"></entry> 
        </enum>
        <enum name="SCAN_START_REASON" bitmask="true">
            <entry value="2**0" name="SCAN_START_REASON_LOCAL_APP"></entry>
            <entry value="2**1" name="SCAN_START_REASON_WEB"></entry>
            <entry value="2**2" name="SCAN_START_REASON_SCHEDULE"></entry>
        </enum>
        <enum name="SCAN_RESULT_INFO_TYPE">
            <entry value="1" name="SCAN_RESULT_INFO_ACTUAL"></entry>
            <entry value="2" name="SCAN_RESULT_INFO_ESTIMATED"></entry>
        </enum>
        <enum name="POWER_INFORMATION_TYPE">
            <entry value="1" name="POWER_INFORMATION_TYPE_INSTANT"></entry>
            <entry value="2" name="POWER_INFORMATION_TYPE_AVERAGE"></entry>
            <entry value="3" name="POWER_INFORMATION_TYPE_MAXIMUM"></entry>
            <entry value="4" name="POWER_INFORMATION_TYPE_MINIMUM"></entry>
        </enum>
    </enums>
    <messages>
        <message name="LIDAR_READING" id="1">
            <description> Readings from the lidar. Compressed into an array of uint64 to take advantage of Mavlink2 truncating empty packets. Each field is 2 bytes. [distance][pitch][yaw][return strength]</description>
            <field name="readings" type="uint64_t[31]"></field>
        </message>
        <message name="COMPONENT_POWER_CONTROL" id="2">
            <description> Message that will component devices on or off in the EOS scanner </description>
            <field name="device" type="uint16_t" enum="EOS_COMPONENT"> Device to target </field>
            <field name="behavior" type="uint8_t" enum="EOS_COMPONENT_POWER_BEHAVIOR"> Behavior to execute </field>
        </message>
        <message name="SYSTEM_STATUS" id = "3">
            <description> Overall System Status Message </description>
            <field name="state" type="uint8_t" enum="EOS_STATE"> Current State of the Device </field>
            <field name="power_status_bitmask" type="uint16_t" enum="EOS_COMPONENT"> Bitmask of devices and their power status: 1 = on 0 = off </field>
            <field name="health_status_bitmask" type="uint16_t" enum="EOS_COMPONENT"> Bitmask of health of devices: 1 = healthy 0 = unhealthy </field>
            <field name="uptime" type="uint16_t" units="seconds"> Device uptime in seconds </field>
        </message>
        <!-- messages 5 and 6 are used in common_minimal.xml -->
        <message name="IDENTIFIER" id = "7">
            <description> Indentifiying information about the EOS device </description>
            <field name="particle_id" type="char[24]"> Particle ID of device. Unique and unchangable </field>
            <field name="local_ip" type="uint8_t[4]"> local IPV4 Address of the device</field>
            <field name="mac" type="uint8_t[6]"> MAC address of the device</field>
            <field name="name" type="char[20]">Friendly name of device i.e. P2-123456</field>
            <field name="site_friendly_name" type="char[30]"> Friendly name for the site it's at, i.e. "57 Rock West"</field>
            <field name="site_name" type="char[30]"> Name of the site where the scanner is located, i.e. "Gainesville Plant"</field>
        </message>
        <message name="COMPONENT_HEALTH_TEST" id="8">
            <description> Requests that the device tests/retests a specified component. Pass EOS_COMPONENT_ALL to test all</description>
            <field name="component" type="uint32_t" enum="EOS_COMPONENT"> Which component(s) to request retest for</field>
        </message>
        <message name="SCAN_SETTINGS" id = "9">
            <description> Settings for a space scan</description>
            <field name="yaw_start" type="float" units="deg"> Starting yaw angle, relative to the homed position </field>
            <field name="yaw_stop" type="float" units="deg"> Ending yaw angle, relative to the homed position</field>
            <field name="pitch_start" type="float" units="deg"> Starting pitch angle, relative to the homed position</field>
            <field name="pitch_stop" type="float" units="deg"> Ending pitch angle, relative to the homed position</field>
            <field name="pitch_rest_angle" type="float" units="deg"> Angle that the pitch to should go to at end of the scan</field>
            <field name="point_spacing" type="float" units="deg"> Spacing between point samples. Smaller spacing leads to denser point clouds </field>
            <field name="scan_speed" type="float" units="rpm"> How fast, in RPM to spin the pitch motor</field>
            <field name="scan_stop_reasons" type="uint16_t" display="bitmask" enum="SCAN_STOP_REASON"> Bitmask of allowed reasons for the scan to stop. 0 means that no detected errors will stop the scan. </field>
        </message>
        <message name="SCAN_STATUS" id = "10">
            <description> Status of a scan</description>
            <field name="start_time_unix" type="uint32_t"> Time that scan started </field>
            <field name="scan_completion" type="uint8_t" units="%"> Percentage complete of the scan </field>
            <field name="time_remaining" type="uint16_t" units="seconds"> Estimated time remaining in the scan, in seconds</field>
        </message>
        <message name="REMOTE_SERVER_SETTINGS" id = "11">
            <description> Settings for remote server locations. Includes settings server and FTP server </description>
            <field name="server_enable" type="uint8_t">Bool value controlling if settings and checkin information should be sent to a remote server. 0 = disabled, 1 = enabled. If enabled must provide server information.</field>
            <field name="post_server" type="char[64]">Server to send checkin info to, as well as get settings from</field>
            <field name="post_uri" type="char[32]">URI to send checkin info to. appended to post server. E.g. /php/api.php</field>
            <field name="post_port" type="uint16_t">Port to send checkin info to. Defaults to 80</field>
            <field name="ftp_enable" type="uint8_t">Bool value controlling if files should be sent to FTP server. 0 = disabled, 1 = enabled. If enabled, must provide valid settings.</field>
            <field name="ftp_server" type="char[64]">Address of server to send FTP files too.</field>
            <field name="ftp_username" type="char[32]">Username to use when logging into FTP server</field>
            <field name="ftp_password" type="char[32]">Password to use for FTP upload</field>
            <field name="ftp_port" type="uint16_t">Port to send FTP info to. Defaults to 21</field>
        </message>
        <message name="POWER_INFORMATION" id = "12">
            <description> Power stats of device</description>
            <field name="type" type="uint8_t" enum="POWER_INFORMATION_TYPE"> Type of reading: instant, average, max, min</field>
            <field name="current" type="uint16_t" units="mA"> current in Milliamps</field>
            <field name="voltage" type="uint16_t" units="mV"> voltage in Millivolts</field>
            <field name="power" type="uint16_t" units="mW"> power in Milliwatts</field>
            <field name="energy_consumed" type="uint32_t" units="J"> Accumulated power since last reset in Joules</field>
        </message>
        <message name="WIFI_INFORMATION" id = "13">
            <description> Information about the WiFi connection</description>
            <field name="ssid" type="char[32]"> Name of the SSID </field>
            <field name="bssid" type="uint8_t[6]">BSSID of the access point that the scanner is connected to</field>
            <field name="rssi" type="uint8_t"> RSSI of the signal. expressed in negative dBm</field>
            <field name="rssi_percent" type="uint8_t"> RSSI of the signal, expressed as a percentage</field>
            <field name="snr" type="uint8_t"> SNR of the wifi. expressed as positive dB</field>
            <field name="snr_percent" type="uint8_t">SNR of the wifi, expreseed as a percentage</field>
        </message>
        <message name="UPLOAD_STATUS" id = "14">
            <description> Status of an upload</description>
            <field name="start_time_unix" type="uint32_t"> Time that scan started </field>
            <field name="upload_completion" type="uint8_t" units="%"> Percentage complete of the scan </field>
            <field name="bytes_uploaded" type="uint32_t"> number of bytes uploaded</field>
            <field name="upload_size" type="uint32_t" units="bytes"> Size of the upload</field>
            <field name="upload_rate" type="uint16_t" units="Bps"> Upload rate in bytes per seconds</field>
            <field name="time_remaining" type="uint16_t" units="seconds"> Estimated time remaining, in seconds</field>
        </message>
        <message name="MOTOR_CONTROL" id = "15">
            <description> Controls Motors </description>
            <field name="target" type="uint8_t" enum="EOS_COMPONENT"> Which motor to target. Only responds to EOS_COMPONENT_YAW_MOTOR and EOS_COMPONENT_PITCH_MOTOR</field>
            <field name="behavior" type="uint8_t" enum="MOTOR_BEHAVIOR"> Behavior to Execute </field>
            <field name="motor_rpm" type="float"> RPM to set motor shaft too. Ignores gearing. Only used if MOTOR_BEHAVIOR_MOTOR_RPM is selected. </field>
            <field name="target_angle" type="float">Angle to goto. Accounts for gearing. 0-360. Values above 360 will be wrapped around.</field>
            <field name="device_rpm" type="float" minValue="0"> RPM to set device too. Takes into account gearing. Only used if MOTOR_BEHAVIOR_DEVICE_RPM is selected </field>
            <field name="steps_count" type="int16_t"> Number of steps to execute. Negative values will step backwards. Only used if MOTOR_BEHAVIOR_STEP is selected</field>
            <field name="vactual" type="int16_t"> VACTUAL value to send to stepper driver. Negative values will go backwards. Only used if MOTOR_BEHAVIOR_VACTUAL is selected</field>
        </message>
        <message name="MOTOR_SETTINGS" id = "16">
            <description>Motor settings. If emitted by device, represents current settings. If emitted by control software, device will update accordingly </description>
            <field name="motor" type="uint8_t" enum="EOS_COMPONENT" instance="true">Which motor we're referring to.</field>
            <field name="current" type="uint16_t"> Motor current 0-2500 </field>
            <field name="microsteps" type="uint8_t"> Microsteps used for stepping 1-256 in powers of 2</field>
            <field name="gearing_ratio" type="float"> Gearing ratio to apply, specified as Motor Teeth:Device Teeth; Send as float i.e. 20.0/72.0 becomes 0.2777777</field>
            <field name="spread_cycle" type="uint8_t">Boolean if spread cycle is enabled. 0 = disabled, 1 = enabled</field>
            <field name="pwm_autoscale" type="uint8_t">Boolean if pwm_autoscale is enabled. 0 = disabled, 1 = enabled</field>
            <field name="pwm_autograd" type="uint8_t">Boolean if pwm_autograd is enabled. 0 = disabled, 1 = enabled</field>
            <field name="min_steps_to_next_index" type="uint8_t" invalid="0">Mininimum steps between index pulse and home switch. Set to 0 to not enforce a minimum</field>
            <field name="home_offset_steps" type="int16_t">Number of steps to move from home position after homing.</field>
            <field name="steps_to_next_index" type="uint16_t">Number of steps from home switch triggering to repeatable index pulse. Read Only.</field>
            <field name="usteps_rate" type="float" units="Hz">Rate at which microsteps are being triggered by the driver internal oscillator. Read Only.</field>
            <field name="ustep_angle" type="float" units="deg">Device angle travelled per microstep. Read Only.</field>
        </message>
        <message name="MOTOR_STATUS" id = "17">
            <description> Current Status of the motor </description>
            <field name="motor" type="uint8_t" enum="EOS_COMPONENT" instance="true">Which motor we're referring to.</field>
            <field name="enabled" type="uint8_t">Boolean if the motor is enabled or not. 0 = disabled, 1 = enabled.</field>
            <field name="homed" type="uint8_t">Boolean if the motor is homed or not. 0 = not homed, 1 = homed.</field>
            <field name="motor_rpm" type="float">Current RPM of the motor.</field>
            <field name="device_rpm" type="float">Current RPM of the device, accounting for gearing.</field>
            <field name="measured_rpm" type="float"> Measured RPM, if external sensor is available</field>
            <field name="vactual" type="uint16_t">Current VACTUAL value.</field>
            <field name="steps_count" type="int16_t">Number of steps from home. UINT16_MAX if motor is in RPM mode.</field>
            <field name="current_angle" type="float">Current angle: 0-360. INF if not homed.</field>
        </message>
        <message name="ORIENTATION" id = "18">
            <description> Combined Orientation message, including GPS, compass, and accelerometer. If components are off, their respective fields will use the "INVALID" values provided.</description>
            <field type="float" name="roll" units="rad" invalid="NaN">Roll angle (-pi..+pi). Comes from Accelerometer</field>
            <field type="float" name="pitch" units="rad" invalid="NaN">Pitch angle (-pi..+pi). Comes from Accelerometer</field>
            <field type="float" name="temp" units="degreesC" invalid="NaN">Temperature. Comes from Accelerometer</field>
            <field type="int16_t" name="xmag" units="mgauss" invalid="INT16_MAX">X magnetic field strength. Comes from compass </field>
            <field type="int16_t" name="ymag" units="mgauss" invalid="INT16_MAX">Y magnetic field strength. Comes from compass </field>
            <field type="int16_t" name="zmag" units="mgauss" invalid="INT16_MAX">Z magnetic field strength. Comes from compass </field>
            <field type="float" name="heading" units="rad" invalid="NaN">heading angle (-pi..+pi). Comes from Compass</field>
            <field type="int32_t" name="lat" units="degE7" invalid="INT32_MAX">Latitude (WGS84, EGM96 ellipsoid)</field>
            <field type="int32_t" name="lon" units="degE7" invalid="INT32_MAX">Longitude (WGS84, EGM96 ellipsoid)</field>
            <field type="int32_t" name="alt" units="mm" invalid="INT32_MAX">Altitude (MSL). Positive for up.</field>
        </message>
        <message name="WIFI_CREDENTIALS" id = "19">
            <description>Used to query/set the wifi credientials of the device</description>
            <field name="behavior" type="uint8_t" enum="WIFI_CREDIENTIALS_BEHAVIOR">What behavior to execute, eg, clear, add, list</field>
            <field name="ssid" type="char[64]">Name of the SSID</field>
            <field name="password" type="char[64]">Password of the SSID. leave blank for open networks. Will be left blank if reporting</field>
            <field name="auth_type" type="uint8_t" enum="WIFI_AUTH_TYPE">Auth type of the network; eg; WPA2</field>
        </message>
        <message name="LIDAR_SETTINGS" id="20">
            <description>Settings for Benewake TF* lidar</description>
            <field type="uint16_t" name="update_rate" units="hz">Lidar update rate, in hz</field>
            <field type="uint8_t" name="fog_mode_enable">Boolean for if fog mode should be enabled. 0 = off, 1 = on</field>
            <field type="uint8_t" name="output_disabled_at_boot"> Boolean for if the lidar should be emitting readings when powered up, or if a separate "output enable" command must be sent after it's turned on. 0 = false , 1 = true</field>
            <field type="char[10]" name="firmware_version"> String representation of firmware version of the lidar eg: "2.1.8". Read-only</field>
        </message>
        <message name="SCAN_RESULT_INFO" id="21">
            <description>Information about a scan</description>
            <field type="uint8_t" name="type" enum="SCAN_RESULT_INFO_TYPE"> What type of info this is, estimated or actual</field>
            <field type="uint32_t" name="num_points"> Number of points</field>
            <field type="uint32_t" name="file_size_bytes"> Size of the resulting .bin file</field>
            <field type="uint64_t" name="start_time_unix"> Unix start time</field>
            <field type="uint64_t" name="end_time_unix"> Unix end time</field>
            <field type="uint32_t" name="scan_duration" units="seconds"> Duration of the scan, in seconds</field>
            <field type="uint16_t" name="scan_stop_reason" enum="SCAN_STOP_REASON"> Reason for the scan stopping</field>
            <field type="uint16_t" name="scan_start_reason" enum="SCAN_START_REASON"> Reason for scan starting</field>
        </message>
        <message name="SCAN_TRANSFORM" id="22">
            <description> Transformation to apply to raw points.</description>
            <field type="uint16_t" name="roll_offset" units="RadE-4"></field>
            <field type="uint16_t" name="pitch_offset" units="RadE-4"></field>
            <field type="float" name="pitch_scale" units="%"></field>
            <field type="float" name="yaw_scale" units="%"></field>
        </message>
    </messages>
</mavlink>