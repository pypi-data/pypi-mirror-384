[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "spinifex"
authors = [
    {name="Maaijke Mevius"},
    {name="Tammo Jan Dijkema"},
    {name="Alec Thomson"},
]
description = "Correcting ionospheric Faraday rotation."
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "numpy",
    "astropy>=6",
    "h5py",
    "ppigrf",
    "PyIRI",
    "requests",
    "unlzw3",
    "typing-extensions; python_version < '3.10'",
    "nest-asyncio",
    "pydantic>=2.10.6",
    "eval-type-backport",
]

[project.optional-dependencies]
test = ["pytest >=6", "pytest-cov >=3", "pytest-asyncio", "nbconvert", "jupyter"]
dev = ["pytest >=6", "pytest-cov >=3", "tox-uv", "pre-commit", "ruff", "mypy", "pytest-asyncio", "nbconvert"]
docs = [
    "sphinx!=1.6.6,!=1.6.7,>=1.6.5", # BSD
    "sphinx-rtd-theme>=0.4.3", #MIT
    "sphinxcontrib-apidoc>=0.3.0", #BSD
    "myst-parser>=2.0", # MIT
    "docutils>=0.17", # BSD
    "sphinx-autoapi",
    "sphinx_autodoc_typehints",
    "nbsphinx",
    "jupyter",
    "matplotlib",
    "sphinx-argparse",
    "furo",
]
casacore = ["python-casacore"]

[project.urls]
Homepage = "https://git.astron.nl/RD/spinifex"
"Bug Tracker" = "https://github.com/lofar-astron/spinifex/issues"
Changelog = "https://git.astron.nl/RD/spinifex/-/releases"
source = "https://git.astron.nl/RD/spinifex"
documentation = "https://spinifex.readthedocs.io"
github = "https://github.com/lofar-astron/spinifex"
gitlab = "https://git.astron.nl/RD/spinifex"

[project.scripts]
spinifex = "spinifex.cli:main"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "spinifex/_version.py"

[tool.hatch.envs.default]
features = ["test"]
scripts.test = "pytest {args}"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error", "ignore::pytest.PytestUnraisableExceptionWarning"]
log_cli_level = "INFO"
testpaths = ["tests"]


[tool.coverage]
run.source = ["spinifex"]
report.exclude_also = ['\.\.\.', 'if typing.TYPE_CHECKING:']

[tool.mypy]
files = ["src", "tests"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
plugins = ['pydantic.mypy']

[[tool.mypy.overrides]]
module = "spinifex.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["astropy.*", "requests", "casacore.*", "unlzw3.*", "ppigrf.*", "PyIRI.*"]
ignore_missing_imports = true



[tool.ruff]
src = ["spinifex", "tests"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet,
    "RET", # flake8-return
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["spinifex._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20", "E402"]
"docs/examples/*" = ["T20", "E402", "T201"]
"docs/examples/*.ipynb" = ["T20", "E402", "T201"]
"*.ipynb" = ["T20", "E402", "T201"]
