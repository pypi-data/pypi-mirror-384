# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import enum
import typing

@typing.final
class Jinja:
    def __new__(cls, dir:builtins.str) -> Jinja: ...
    def render(self, template_name:builtins.str, context:typing.Optional[dict]=None) -> builtins.str: ...

@typing.final
class Tera:
    def __new__(cls, dir:builtins.str) -> Tera: ...
    def render(self, template_name:builtins.str, context:typing.Optional[dict]=None) -> builtins.str: ...

@typing.final
class Template(enum.Enum):
    r"""
    Template engine for rendering HTML templates.
    
    This class provides a unified interface for different template engines,
    currently supporting both Jinja and Tera templates.
    
    Args:
        dir (str, optional): Directory pattern to search for templates (default: "./templates/**/*.html").
        engine (str, optional): Template engine to use, either "jinja" or "tera" (default: "jinja").
    
    Returns:
        Template: A new template engine instance.
    
    Raises:
        PyException: If an invalid engine type is specified.
    
    Example:
    ```python
    from oxapy import HttpServer
    from oxapy.templating import Template
    
    app = HttpServer(("127.0.0.1", 8000))
    
    # Configure templates with default settings (Jinja)
    app.template(Template())
    
    # Or use Tera with custom template directory
    app.template(Template("./views/**/*.html", "tera"))
    ```
    """
    Jinja = ...
    Tera = ...

    def __new__(cls, dir:builtins.str='./templates/**/*.html', engine:builtins.str='jinja') -> Template:
        r"""
        Create a new Template instance.
        
        Args:
            dir (str, optional): Directory pattern to search for templates (default: "./templates/**/*.html").
            engine (str, optional): Template engine to use, either "jinja" or "tera" (default: "jinja").
        
        Returns:
            Template: A new template engine instance.
        
        Raises:
            PyException: If an invalid engine type is specified.
        
        Example:
        ```python
        # Use Jinja with default template directory
        template = Template()
        
        # Use Tera with custom template directory
        template = Template("./views/**/*.html", "tera")
        ```
        """

