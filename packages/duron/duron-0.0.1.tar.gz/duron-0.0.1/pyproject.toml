[project]
name = "duron"
version = "0.0.1"
description = ""
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "typing-extensions>=4.15.0",
]

[build-system]
requires = ["uv_build>=0.8.19,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    {include-group = "lint"},
    {include-group = "test"},
    {include-group = "typing"},
]
test = [
    "pydantic",
    "pytest",
    "pytest-asyncio",
    "pytest-codspeed",
    "pytest-xdist",
]
typing = [
    "basedmypy",
    "basedpyright",
    "pydantic",
    "pytest",
]
lint = [
    "ruff",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-mermaid2-plugin",
    "mkdocstrings[python]",
]
examples = [
    "openai",
    "pydantic",
    "rich",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",
    "CPY", "D", "FIX", "TD002", "TD003",
    "PLR0", "PLR1", "PLR2", "C901",
]
extend-safe-fixes = ["TC", "F401"]
preview = true
future-annotations = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S311", "PLC2701"]
"examples/**/*.py" = ["T201", "S311"]

[tool.ruff.lint.isort]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["typing_extensions.TypedDict"]
runtime-evaluated-decorators = ["duron.durable", "duron.effect"]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.TypedDict".msg = "Use typing_extensions.TypedDict instead."

[tool.ruff.format]
preview = true
docstring-code-format = true

[tool.mypy]
files = ["src", "tests"]
strict = true
python_version = "3.10"
disable_error_code = [
    "decorated-any",
    "explicit-any",
    "any",
]

[tool.pyright]
include = ["src", "tests"]
venv = "."
venvPath = ".venv"
typeCheckingMode = "strict"
enableExperimentalFeatures = true
reportAny = false
reportExplicitAny = false
reportUnreachable = false
reportImportCycles = false

[tool.pytest.ini_options]
testpaths = ["tests"]
