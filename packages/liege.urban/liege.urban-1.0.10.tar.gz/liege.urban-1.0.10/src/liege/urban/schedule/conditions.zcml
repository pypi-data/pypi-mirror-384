<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="liege.urban">

    <!-- survey conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.AllParcelsAreValidated"
        name="liege.urban.schedule.parcels_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.ParcelsAdded"
        name="liege.urban.schedule.parcels_added"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.LicenceInTemporaryAddressState"
        name="liege.urban.schedule.temporary_address"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.LicenceInValidatingAddressState"
        name="liege.urban.schedule.validating_address"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.AllParcelsAreValidated"
        name="liege.urban.schedule.parcels_validated"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.ParcelsAdded"
        name="liege.urban.schedule.parcels_added"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.AllParcelsAreValidated"
        name="liege.urban.schedule.parcels_validated"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.ShouldWriteInspectionReportEvent"
        name="liege.urban.schedule.should_write_report_event"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.ShouldReWriteInspectionReportEvent"
        name="liege.urban.schedule.should_rewrite_report_event"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.InspectionReportRedacted"
        name="liege.urban.schedule.report_event_redacted"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InspectionReportRedacted"
        name="liege.urban.schedule.report_event_redacted"
    />

    <adapter
        for="Products.urban.interfaces.IInspection
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InspectionReportValidated"
        name="liege.urban.schedule.report_event_validated_or_refused"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.ParcelsAdded"
        name="liege.urban.schedule.parcels_added"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.LicenceInTemporaryAddressState"
        name="liege.urban.schedule.temporary_address"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.LicenceInValidatingAddressState"
        name="liege.urban.schedule.validating_address"
    />

    <!-- acknowledgment conditions -->

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.AcknowledgmentToWriteCondition"
        name="liege.urban.schedule.acknowledgment_to_write"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.AcknowledgmentProposedToValidationCondition"
        name="liege.urban.schedule.acknowledgment_to_validate"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.AcknowledgmentWrittenCondition"
        name="liege.urban.schedule.acknowledgment_written"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AcknowledgmentWrittenCondition"
        name="liege.urban.schedule.acknowledgment_written"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.AcknowledgmentValidatedCondition"
        name="liege.urban.schedule.acknowledgment_validated"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AcknowledgmentValidatedCondition"
        name="liege.urban.schedule.acknowledgment_validated"
    />

    <!-- opinion requests conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.WaitingForOpinionRequests"
        name="liege.urban.schedule.opinion_requests_waiting"
    />

    <!-- announcement conditions -->

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.WriteAnnouncementDocumentsCreationCondition"
        name="liege.urban.schedule.write_announcement_documents"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.WriteAnnouncementDocumentsCondition"
        name="liege.urban.schedule.write_announcement_documents"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.AnnouncementDocumentsDoneCreationCondition"
        name="liege.urban.schedule.announcement_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.AnnouncementDocumentsDoneCondition"
        name="liege.urban.schedule.announcement_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AnnouncementDocumentsDoneCondition"
        name="liege.urban.schedule.announcement_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.AnnouncementDocumentsValidatedCondition"
        name="liege.urban.schedule.announcement_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AnnouncementDocumentsValidatedCondition"
        name="liege.urban.schedule.announcement_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_BaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AnnouncementDocumentsSentCondition"
        name="liege.urban.schedule.announcement_documents_sent"
    />

    <!-- inquiry conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.WriteInquiryDocumentsCreationCondition"
        name="liege.urban.schedule.write_inquiry_documents"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.WriteInquiryDocumentsCondition"
        name="liege.urban.schedule.write_inquiry_documents"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.InquiryDocumentsDoneCreationCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsSentCondition"
        name="liege.urban.schedule.inquiry_documents_sent"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsSentCondition"
        name="liege.urban.schedule.inquiry_documents_sent"
    />

    <!-- FD opinion conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.OnlyNeedFDOpinion"
        name="liege.urban.schedule.only_need_FD_opinion"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.LicenceStateIsFDOpinion"
        name="liege.urban.schedule.licence_state_is_FD_opinion"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeProjectWritten"
        name="liege.urban.schedule.college_project_writen"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeProjectWritten"
        name="liege.urban.schedule.college_project_writen"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeProjectValidated"
        name="liege.urban.schedule.college_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeProjectValidated"
        name="liege.urban.schedule.college_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.ProjectSentToCollege"
        name="liege.urban.schedule.project_sent_to_college"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.ProjectSentToCollege"
        name="liege.urban.schedule.project_sent_to_college"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeDone"
        name="liege.urban.schedule.college_done"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeDone"
        name="liege.urban.schedule.college_done"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeEventClosed"
        name="liege.urban.schedule.college_event_closed"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeEventClosed"
        name="liege.urban.schedule.college_event_closed"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.OneMayorCollegeProjectCreated"
        name="liege.urban.schedule.one_mayor_project_created"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.MayorCollegeProjectsWritten"
        name="liege.urban.schedule.all_mayor_projects_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.OneMayorCollegeProjectWritten"
        name="liege.urban.schedule.one_mayor_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.OneMayorCollegeMeetingDone"
        name="liege.urban.schedule.one_mayor_project_meeting_done"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.ProjectsValidatedAndSentToMayorCollege"
        name="liege.urban.schedule.all_mayor_projects_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.OneProjectsSentToMayorCollege"
        name="liege.urban.schedule.one_mayor_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.MayorCollegesDone"
        name="liege.urban.schedule.all_mayor_colleges_done"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DoneMayorCollegesEventsClosed"
        name="liege.urban.schedule.all_done_mayor_meeting_colleges_events_are_closed"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.MayorCollegeEventsClosed"
        name="liege.urban.schedule.all_mayor_events_closed"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.FDOpinionAsked"
        name="liege.urban.schedule.FD_opinion_asked"
    />

    <adapter
        for="Products.urban.interfaces.IBaseAllBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.FDOpinionReceived"
        name="liege.urban.schedule.FD_opinion_received"
    />

    <!-- final decision conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.DecisionProjectDraftedCondition"
        name="liege.urban.schedule.decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionProjectDraftedCondition"
        name="liege.urban.schedule.decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.DecisionProjectSentCondition"
        name="liege.urban.schedule.decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionProjectSentCondition"
        name="liege.urban.schedule.decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionNotifiedCondition"
        name="liege.urban.schedule.decision_notified"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.DecisionNotifiedCondition"
        name="liege.urban.schedule.decision_notified"
    />

    <!-- environment validation conditions -->
    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationWritten"
        name="liege.urban.schedule.env_validation_proposed"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationRefused"
        name="liege.urban.schedule.env_validation_refused"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationWritten"
        name="liege.urban.schedule.all_env_validations_proposed"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationValidatedOrRefused"
        name="liege.urban.schedule.all_env_validations_validated_or_refused"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationValidated"
        name="liege.urban.schedule.env_validation_validated"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationClosed"
        name="liege.urban.schedule.all_env_validations_closed"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationWritten"
        name="liege.urban.schedule.env_validation_proposed"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationRefused"
        name="liege.urban.schedule.env_validation_refused"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationWritten"
        name="liege.urban.schedule.all_env_validations_proposed"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationValidatedOrRefused"
        name="liege.urban.schedule.all_env_validations_validated_or_refused"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationValidated"
        name="liege.urban.schedule.env_validation_validated"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_IntegratedLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationClosed"
        name="liege.urban.schedule.all_env_validations_closed"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationWritten"
        name="liege.urban.schedule.env_validation_proposed"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationRefused"
        name="liege.urban.schedule.env_validation_refused"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationWritten"
        name="liege.urban.schedule.all_env_validations_proposed"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationValidatedOrRefused"
        name="liege.urban.schedule.all_env_validations_validated_or_refused"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.EventWithEnvValidationValidated"
        name="liege.urban.schedule.env_validation_validated"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AllEventsWithEnvValidationClosed"
        name="liege.urban.schedule.all_env_validations_closed"
    />

    <!-- environment final decision conditions -->
    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionEventNotCreatedCondition"
        name="liege.urban.schedule.env_decision_mayor_event_not_created"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionEventCreatedCondition"
        name="liege.urban.schedule.env_decision_mayor_event_created"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionEventCreatedCondition"
        name="liege.urban.schedule.env_decision_mayor_event_created"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionEventClosed"
        name="liege.urban.schedule.env_decision_mayor_event_closed"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionEventClosed"
        name="liege.urban.schedule.env_decision_mayor_event_closed"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionProjectDraftedCondition"
        name="liege.urban.schedule.env_decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionProjectDraftedCondition"
        name="liege.urban.schedule.env_decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionProjectValidatedCondition"
        name="liege.urban.schedule.env_decision_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionProjectValidatedCondition"
        name="liege.urban.schedule.env_decision_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.EnvironmentDecisionProjectSentCondition"
        name="liege.urban.schedule.env_decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionProjectSentCondition"
        name="liege.urban.schedule.env_decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionCollegeDone"
        name="liege.urban.schedule.env_decision_college_done"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentBase
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.EnvironmentDecisionNotifiedCondition"
        name="liege.urban.schedule.env_decision_notified"
    />

    <!-- licence ended-->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.LicenceEndedCondition"
        name="liege.urban.schedule.licence_ended"
    />

    <!-- Preliminary advice conditions -->

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.PreliminaryAdviceEventCreated"
        name="liege.urban.schedule.preliminary_advice_event_created"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.PreliminaryAdviceEventCreated"
        name="liege.urban.schedule.preliminary_advice_event_created"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.PreliminaryAdviceWritten"
        name="liege.urban.schedule.preliminary_advice_written"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.PreliminaryAdviceWritten"
        name="liege.urban.schedule.preliminary_advice_written"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.PreliminaryAdviceTechnicalValidationDone"
        name="liege.urban.schedule.preliminary_advice_technical_validation_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.PreliminaryAdviceTechnicalValidationDone"
        name="liege.urban.schedule.preliminary_advice_technical_validation_done"
    />

    <adapter
        for="Products.urban.interfaces.ICODT_UniqueLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.PreliminaryAdviceSent"
        name="liege.urban.schedule.preliminary_advice_sent"
    />

    <adapter
        for="Products.urban.interfaces.IEnvironmentLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".creation_conditions.FTOpinionStateOrIsTemporaryLicence"
        name="liege.urban.schedule.is_temporary_licence_or_in_FT_opinion_state"
    />


    <!-- Road decree specific condition -->

    <adapter
        for="Products.urban.interfaces.IRoadDecree
              imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".road_decree_conditions.DisplayInProgress"
        name="liege.urban.schedule.display_in_progress"
        />

    <adapter
        for="Products.urban.interfaces.IRoadDecree
              imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".road_decree_conditions.DisplayCompleted"
        name="liege.urban.schedule.display_completed"
        />

    <adapter
        for="Products.urban.interfaces.IRoadDecree
              imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".road_decree_conditions.DisplayCompleted"
        name="liege.urban.schedule.display_completed"
        />

</configure>
