# Generated by the gRPC FlatBuffers compiler. DO NOT EDIT!

import flatbuffers
import grpc

from flatflow.rpc.controlplane_generated import InitRequest, ScatterRequest, ScatterResponse
from flatflow.rpc.empty_generated import Empty


class ControlPlaneStub(object):
  '''Interface exported by the server.'''

  def __init__(self, channel):
    '''Constructor.

    Args:
      channel: A grpc.Channel.
    '''

    self.Init = channel.unary_unary(
      method='/flatflow.ControlPlane/Init')

    self.Scatter = channel.unary_unary(
      method='/flatflow.ControlPlane/Scatter')

    self.Finalize = channel.unary_unary(
      method='/flatflow.ControlPlane/Finalize')


class ControlPlaneServicer(object):
  '''Interface exported by the server.'''

  def Init(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Scatter(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Finalize(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControlPlaneServicer_to_server(servicer, server):
  rpc_method_handlers = {
    'Init': grpc.unary_unary_rpc_method_handler(
      servicer.Init),
    'Scatter': grpc.unary_unary_rpc_method_handler(
      servicer.Scatter),
    'Finalize': grpc.unary_unary_rpc_method_handler(
      servicer.Finalize),
  }

  generic_handler = grpc.method_handlers_generic_handler(
    'flatflow.ControlPlane', rpc_method_handlers)

  server.add_generic_rpc_handlers((generic_handler,))


