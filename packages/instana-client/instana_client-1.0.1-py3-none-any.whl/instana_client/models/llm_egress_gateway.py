# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from uuid import UUID
from typing import Optional, Set
from typing_extensions import Self

class LLMEgressGateway(BaseModel):
    """
    Custom handler definition.
    """ # noqa: E501
    ai_model: Optional[StrictStr] = Field(default=None, alias="aiModel")
    configurations: Optional[Dict[str, Any]] = None
    created_at: StrictStr = Field(alias="createdAt")
    description: Optional[StrictStr] = None
    enabled: Optional[StrictBool] = None
    endpoint_api_key: Optional[StrictStr] = Field(default=None, alias="endpointApiKey")
    endpoint_url: Optional[StrictStr] = Field(default=None, alias="endpointUrl")
    id: UUID
    instana_agents: Optional[Dict[str, Any]] = Field(default=None, alias="instanaAgents")
    metadata: Optional[Dict[str, Any]] = None
    modified_at: StrictStr = Field(alias="modifiedAt")
    name: StrictStr
    prompt: StrictStr
    supports: Dict[str, Any]
    system: Optional[StrictBool] = None
    tenant_unit_id: StrictStr = Field(alias="tenantUnitId")
    watsonx_key: Optional[StrictStr] = Field(default=None, alias="watsonxKey")
    watsonx_project: Optional[StrictStr] = Field(default=None, alias="watsonxProject")
    watsonx_url: Optional[StrictStr] = Field(default=None, alias="watsonxUrl")
    __properties: ClassVar[List[str]] = ["aiModel", "configurations", "createdAt", "description", "enabled", "endpointApiKey", "endpointUrl", "id", "instanaAgents", "metadata", "modifiedAt", "name", "prompt", "supports", "system", "tenantUnitId", "watsonxKey", "watsonxProject", "watsonxUrl"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of LLMEgressGateway from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of LLMEgressGateway from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "aiModel": obj.get("aiModel"),
            "configurations": obj.get("configurations"),
            "createdAt": obj.get("createdAt"),
            "description": obj.get("description"),
            "enabled": obj.get("enabled"),
            "endpointApiKey": obj.get("endpointApiKey"),
            "endpointUrl": obj.get("endpointUrl"),
            "id": obj.get("id"),
            "instanaAgents": obj.get("instanaAgents"),
            "metadata": obj.get("metadata"),
            "modifiedAt": obj.get("modifiedAt"),
            "name": obj.get("name"),
            "prompt": obj.get("prompt"),
            "supports": obj.get("supports"),
            "system": obj.get("system"),
            "tenantUnitId": obj.get("tenantUnitId"),
            "watsonxKey": obj.get("watsonxKey"),
            "watsonxProject": obj.get("watsonxProject"),
            "watsonxUrl": obj.get("watsonxUrl")
        })
        return _obj


