# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.o_auth_integration import OAuthIntegration

class TestOAuthIntegration(unittest.TestCase):
    """OAuthIntegration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OAuthIntegration:
        """Test OAuthIntegration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OAuthIntegration`
        """
        model = OAuthIntegration()
        if include_optional:
            return OAuthIntegration(
                config = instana_client.models.o_auth_config.OAuthConfig(
                    additional_parameters = {
                        'key' : ''
                        }, 
                    client_id = '', 
                    client_secret = '', 
                    grant_type = 'CLIENT_CREDENTIALS', 
                    password = '', 
                    token_url = '', 
                    username = '', ),
                token = instana_client.models.o_auth_token.OAuthToken(
                    access_token = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    failed_refresh_attempts = 56, 
                    last_refresh_attempt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    milliseconds_until_refresh_needed = 56, 
                    refresh_token = '', 
                    scope = '', 
                    status = 'VALID', 
                    token_type = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    valid = True, )
            )
        else:
            return OAuthIntegration(
        )
        """

    def testOAuthIntegration(self):
        """Test OAuthIntegration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
