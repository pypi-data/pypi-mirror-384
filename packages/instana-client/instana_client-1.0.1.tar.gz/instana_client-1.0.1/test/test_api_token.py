# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.api_token import ApiToken

class TestApiToken(unittest.TestCase):
    """ApiToken unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiToken:
        """Test ApiToken
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiToken`
        """
        model = ApiToken()
        if include_optional:
            return ApiToken(
                access_granting_token = '',
                can_configure_agent_run_mode = True,
                can_configure_agents = True,
                can_configure_ai_agents = True,
                can_configure_apdex = True,
                can_configure_api_tokens = True,
                can_configure_application_smart_alerts = True,
                can_configure_applications = True,
                can_configure_authentication_methods = True,
                can_configure_automation_actions = True,
                can_configure_automation_policies = True,
                can_configure_bizops = True,
                can_configure_database_management = True,
                can_configure_eum_applications = True,
                can_configure_events_and_alerts = True,
                can_configure_global_alert_payload = True,
                can_configure_global_application_smart_alerts = True,
                can_configure_global_infra_smart_alerts = True,
                can_configure_global_log_smart_alerts = True,
                can_configure_global_synthetic_smart_alerts = True,
                can_configure_integrations = True,
                can_configure_llm = True,
                can_configure_log_management = True,
                can_configure_log_retention_period = True,
                can_configure_maintenance_windows = True,
                can_configure_mobile_app_monitoring = True,
                can_configure_mobile_app_smart_alerts = True,
                can_configure_personal_api_tokens = True,
                can_configure_releases = True,
                can_configure_service_level_correction_windows = True,
                can_configure_service_level_smart_alerts = True,
                can_configure_service_levels = True,
                can_configure_service_mapping = True,
                can_configure_session_settings = True,
                can_configure_subtraces = True,
                can_configure_synthetic_credentials = True,
                can_configure_synthetic_locations = True,
                can_configure_synthetic_tests = True,
                can_configure_teams = True,
                can_configure_users = True,
                can_configure_website_smart_alerts = True,
                can_create_heap_dump = True,
                can_create_public_custom_dashboards = True,
                can_create_thread_dump = True,
                can_delete_automation_action_history = True,
                can_delete_logs = True,
                can_edit_all_accessible_custom_dashboards = True,
                can_install_new_agents = True,
                can_invoke_alert_channel = True,
                can_manually_close_issue = True,
                can_run_automation_actions = True,
                can_use_synthetic_credentials = True,
                can_view_account_and_billing_information = True,
                can_view_audit_log = True,
                can_view_biz_alerts = True,
                can_view_business_activities = True,
                can_view_business_process_details = True,
                can_view_business_processes = True,
                can_view_log_volume = True,
                can_view_logs = True,
                can_view_synthetic_locations = True,
                can_view_synthetic_test_results = True,
                can_view_synthetic_tests = True,
                can_view_trace_details = True,
                created_by = '',
                created_on = 56,
                expires_on = 56,
                id = '',
                internal_id = '',
                last_used_on = 56,
                limited_ai_gateway_scope = True,
                limited_alert_channels_scope = True,
                limited_applications_scope = True,
                limited_automation_scope = True,
                limited_biz_ops_scope = True,
                limited_gen_ai_scope = True,
                limited_infrastructure_scope = True,
                limited_kubernetes_scope = True,
                limited_linux_kvm_hypervisor_scope = True,
                limited_logs_scope = True,
                limited_mobile_apps_scope = True,
                limited_nutanix_scope = True,
                limited_openstack_scope = True,
                limited_pcf_scope = True,
                limited_phmc_scope = True,
                limited_pvc_scope = True,
                limited_service_level_scope = True,
                limited_synthetics_scope = True,
                limited_vsphere_scope = True,
                limited_websites_scope = True,
                limited_windows_hypervisor_scope = True,
                limited_xen_server_scope = True,
                limited_zhmc_scope = True,
                name = ''
            )
        else:
            return ApiToken(
                access_granting_token = '',
                internal_id = '',
                name = '',
        )
        """

    def testApiToken(self):
        """Test ApiToken"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
