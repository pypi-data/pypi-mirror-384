# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.dns_configuration import DNSConfiguration

class TestDNSConfiguration(unittest.TestCase):
    """DNSConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DNSConfiguration:
        """Test DNSConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DNSConfiguration`
        """
        model = DNSConfiguration()
        if include_optional:
            return DNSConfiguration(
                accept_cname = True,
                lookup = '',
                lookup_server_name = True,
                port = 56,
                query_time = instana_client.models.dns_filter_query_time.DNSFilterQueryTime(
                    key = '', 
                    operator = 'CONTAINS', 
                    value = 56, ),
                query_type = 'ALL',
                recursive_lookups = True,
                server = '',
                server_retries = 56,
                target_values = [
                    instana_client.models.dns_filter_target_value.DNSFilterTargetValue(
                        key = 'ALL', 
                        operator = 'CONTAINS', 
                        value = '', )
                    ],
                transport = 'TCP'
            )
        else:
            return DNSConfiguration(
                lookup = '',
                server = '',
        )
        """

    def testDNSConfiguration(self):
        """Test DNSConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
