# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.api_group import ApiGroup

class TestApiGroup(unittest.TestCase):
    """ApiGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiGroup:
        """Test ApiGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiGroup`
        """
        model = ApiGroup()
        if include_optional:
            return ApiGroup(
                id = '',
                members = [
                    instana_client.models.api_member.ApiMember(
                        email = '', 
                        name = '', 
                        user_id = '', )
                    ],
                name = '',
                permission_set = instana_client.models.api_permission_set.ApiPermissionSet(
                    action_filter = instana_client.models.scope_binding.ScopeBinding(
                        scope_id = '', 
                        scope_role_id = '', ), 
                    application_ids = [
                        instana_client.models.scope_binding.ScopeBinding(
                            scope_id = '', 
                            scope_role_id = '', )
                        ], 
                    business_perspective_ids = [
                        
                        ], 
                    infra_dfq_filter = , 
                    kubernetes_cluster_uuids = [
                        
                        ], 
                    kubernetes_namespace_uids = [
                        
                        ], 
                    mobile_app_ids = [
                        
                        ], 
                    permissions = [
                        ''
                        ], 
                    restricted_application_filter = instana_client.models.api_restricted_application_filter.ApiRestrictedApplicationFilter(
                        label = '', 
                        restricting_application_id = '', 
                        scope = 'INCLUDE_NO_DOWNSTREAM', 
                        tag_filter_expression = instana_client.models.tag_filter_expression_element.TagFilterExpressionElement(
                            type = '', ), ), 
                    slo_ids = [
                        
                        ], 
                    synthetic_credential_keys = [
                        
                        ], 
                    synthetic_test_ids = [
                        
                        ], 
                    website_ids = [
                        
                        ], )
            )
        else:
            return ApiGroup(
                id = '',
                members = [
                    instana_client.models.api_member.ApiMember(
                        email = '', 
                        name = '', 
                        user_id = '', )
                    ],
                name = '',
                permission_set = instana_client.models.api_permission_set.ApiPermissionSet(
                    action_filter = instana_client.models.scope_binding.ScopeBinding(
                        scope_id = '', 
                        scope_role_id = '', ), 
                    application_ids = [
                        instana_client.models.scope_binding.ScopeBinding(
                            scope_id = '', 
                            scope_role_id = '', )
                        ], 
                    business_perspective_ids = [
                        
                        ], 
                    infra_dfq_filter = , 
                    kubernetes_cluster_uuids = [
                        
                        ], 
                    kubernetes_namespace_uids = [
                        
                        ], 
                    mobile_app_ids = [
                        
                        ], 
                    permissions = [
                        ''
                        ], 
                    restricted_application_filter = instana_client.models.api_restricted_application_filter.ApiRestrictedApplicationFilter(
                        label = '', 
                        restricting_application_id = '', 
                        scope = 'INCLUDE_NO_DOWNSTREAM', 
                        tag_filter_expression = instana_client.models.tag_filter_expression_element.TagFilterExpressionElement(
                            type = '', ), ), 
                    slo_ids = [
                        
                        ], 
                    synthetic_credential_keys = [
                        
                        ], 
                    synthetic_test_ids = [
                        
                        ], 
                    website_ids = [
                        
                        ], ),
        )
        """

    def testApiGroup(self):
        """Test ApiGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
