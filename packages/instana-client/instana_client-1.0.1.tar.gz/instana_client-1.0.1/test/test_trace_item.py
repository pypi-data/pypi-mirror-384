# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.trace_item import TraceItem

class TestTraceItem(unittest.TestCase):
    """TraceItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TraceItem:
        """Test TraceItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TraceItem`
        """
        model = TraceItem()
        if include_optional:
            return TraceItem(
                cursor = instana_client.models.cursor.cursor(),
                trace = instana_client.models.trace.Trace(
                    duration = 0, 
                    endpoint = instana_client.models.endpoint.Endpoint(
                        entity_type = 'APPLICATION', 
                        id = '', 
                        is_synthetic = True, 
                        label = '', 
                        service_id = '', 
                        synthetic = True, 
                        synthetic_type = 'NON_SYNTHETIC', 
                        technologies = [
                            ''
                            ], 
                        type = 'UNDEFINED', ), 
                    erroneous = True, 
                    id = '', 
                    label = '', 
                    service = instana_client.models.service.Service(
                        entity_type = 'APPLICATION', 
                        id = '', 
                        label = '', 
                        snapshot_ids = [
                            ''
                            ], 
                        technologies = [
                            ''
                            ], 
                        types = [
                            'UNDEFINED'
                            ], ), 
                    start_time = 1, )
            )
        else:
            return TraceItem(
                cursor = instana_client.models.cursor.cursor(),
                trace = instana_client.models.trace.Trace(
                    duration = 0, 
                    endpoint = instana_client.models.endpoint.Endpoint(
                        entity_type = 'APPLICATION', 
                        id = '', 
                        is_synthetic = True, 
                        label = '', 
                        service_id = '', 
                        synthetic = True, 
                        synthetic_type = 'NON_SYNTHETIC', 
                        technologies = [
                            ''
                            ], 
                        type = 'UNDEFINED', ), 
                    erroneous = True, 
                    id = '', 
                    label = '', 
                    service = instana_client.models.service.Service(
                        entity_type = 'APPLICATION', 
                        id = '', 
                        label = '', 
                        snapshot_ids = [
                            ''
                            ], 
                        technologies = [
                            ''
                            ], 
                        types = [
                            'UNDEFINED'
                            ], ), 
                    start_time = 1, ),
        )
        """

    def testTraceItem(self):
        """Test TraceItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
