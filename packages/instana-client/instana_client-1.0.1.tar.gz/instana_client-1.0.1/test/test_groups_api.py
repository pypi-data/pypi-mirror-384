# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.api.groups_api import GroupsApi


class TestGroupsApi(unittest.TestCase):
    """GroupsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = GroupsApi()

    def tearDown(self) -> None:
        pass

    def test_add_permissions_on_group(self) -> None:
        """Test case for add_permissions_on_group

        Add permissions to group
        """
        pass

    def test_add_users_to_group(self) -> None:
        """Test case for add_users_to_group

        Add users to group
        """
        pass

    def test_create_group(self) -> None:
        """Test case for create_group

        Create group
        """
        pass

    def test_create_group_mapping(self) -> None:
        """Test case for create_group_mapping

        Create group mapping
        """
        pass

    def test_delete_group(self) -> None:
        """Test case for delete_group

        Delete group
        """
        pass

    def test_delete_group_mapping(self) -> None:
        """Test case for delete_group_mapping

        Delete group mapping
        """
        pass

    def test_delete_group_mappings(self) -> None:
        """Test case for delete_group_mappings

        Delete multiple group mappings
        """
        pass

    def test_delete_groups(self) -> None:
        """Test case for delete_groups

        Delete groups
        """
        pass

    def test_get_group(self) -> None:
        """Test case for get_group

        Get group
        """
        pass

    def test_get_group_mapping(self) -> None:
        """Test case for get_group_mapping

        Get group mapping
        """
        pass

    def test_get_group_mappings(self) -> None:
        """Test case for get_group_mappings

        Get all group mappings
        """
        pass

    def test_get_group_mappings_overview(self) -> None:
        """Test case for get_group_mappings_overview

        Get all group mappings overview
        """
        pass

    def test_get_groups(self) -> None:
        """Test case for get_groups

        Get groups
        """
        pass

    def test_get_groups_by_user(self) -> None:
        """Test case for get_groups_by_user

        Get groups of a single user
        """
        pass

    def test_get_identity_provider_patch(self) -> None:
        """Test case for get_identity_provider_patch

        Check user restrictions for empty Idp group mapping
        """
        pass

    def test_remove_user_from_group(self) -> None:
        """Test case for remove_user_from_group

        Remove user from group
        """
        pass

    def test_update_group(self) -> None:
        """Test case for update_group

        Update group
        """
        pass

    def test_update_group_mapping(self) -> None:
        """Test case for update_group_mapping

        Update group mapping
        """
        pass

    def test_update_identity_provider(self) -> None:
        """Test case for update_identity_provider

        Allow/Restrict users with empty Idp group mapping
        """
        pass


if __name__ == '__main__':
    unittest.main()
