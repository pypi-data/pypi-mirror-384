# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.test_result_list_result import TestResultListResult

class TestTestResultListResult(unittest.TestCase):
    """TestResultListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestResultListResult:
        """Test TestResultListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestResultListResult`
        """
        model = TestResultListResult()
        if include_optional:
            return TestResultListResult(
                items = [
                    instana_client.models.test_result_list_item.TestResultListItem(
                        metrics = {
                            'key' : [
                                [
                                    1.337
                                    ]
                                ]
                            }, 
                        test_result_common_properties = instana_client.models.test_result_common_properties.TestResultCommonProperties(
                            client_id = '', 
                            custom_tags = {
                                'key' : ''
                                }, 
                            dns_query_type = '', 
                            dns_server_name = '', 
                            errors = [
                                ''
                                ], 
                            id = '', 
                            ism_details = {
                                'key' : ''
                                }, 
                            last_errors = instana_client.models.test_last_error.TestLastError(
                                start_time = 56, ), 
                            location_display_label = '', 
                            location_id = '', 
                            run_type = '', 
                            ssl_days_remaining = '', 
                            test_common_properties = instana_client.models.test_common_properties.TestCommonProperties(
                                active = True, 
                                application_id = '', 
                                application_ids = [
                                    ''
                                    ], 
                                application_label = '', 
                                application_labels = [
                                    ''
                                    ], 
                                created_at = 56, 
                                frequency = 56, 
                                get_website_labels = [
                                    ''
                                    ], 
                                id = '', 
                                label = '', 
                                location_display_labels = [
                                    ''
                                    ], 
                                location_ids = [
                                    ''
                                    ], 
                                location_labels = [
                                    ''
                                    ], 
                                location_status_list = [
                                    instana_client.models.location_status.LocationStatus(
                                        location_display_label = '', 
                                        location_id = '', 
                                        success_rate = 1.337, 
                                        success_runs = 56, 
                                        total_test_runs = 56, )
                                    ], 
                                mobile_application_ids = [
                                    ''
                                    ], 
                                mobile_application_labels = [
                                    ''
                                    ], 
                                modified_at = 56, 
                                service_id = '', 
                                type = '', 
                                website_ids = [
                                    ''
                                    ], 
                                website_labels = [
                                    ''
                                    ], ), 
                            test_id = '', 
                            test_last_error = instana_client.models.test_last_error.TestLastError(
                                start_time = 56, ), 
                            test_name = '', ), )
                    ],
                page = 1,
                page_size = 1,
                total_hits = 0
            )
        else:
            return TestResultListResult(
                items = [
                    instana_client.models.test_result_list_item.TestResultListItem(
                        metrics = {
                            'key' : [
                                [
                                    1.337
                                    ]
                                ]
                            }, 
                        test_result_common_properties = instana_client.models.test_result_common_properties.TestResultCommonProperties(
                            client_id = '', 
                            custom_tags = {
                                'key' : ''
                                }, 
                            dns_query_type = '', 
                            dns_server_name = '', 
                            errors = [
                                ''
                                ], 
                            id = '', 
                            ism_details = {
                                'key' : ''
                                }, 
                            last_errors = instana_client.models.test_last_error.TestLastError(
                                start_time = 56, ), 
                            location_display_label = '', 
                            location_id = '', 
                            run_type = '', 
                            ssl_days_remaining = '', 
                            test_common_properties = instana_client.models.test_common_properties.TestCommonProperties(
                                active = True, 
                                application_id = '', 
                                application_ids = [
                                    ''
                                    ], 
                                application_label = '', 
                                application_labels = [
                                    ''
                                    ], 
                                created_at = 56, 
                                frequency = 56, 
                                get_website_labels = [
                                    ''
                                    ], 
                                id = '', 
                                label = '', 
                                location_display_labels = [
                                    ''
                                    ], 
                                location_ids = [
                                    ''
                                    ], 
                                location_labels = [
                                    ''
                                    ], 
                                location_status_list = [
                                    instana_client.models.location_status.LocationStatus(
                                        location_display_label = '', 
                                        location_id = '', 
                                        success_rate = 1.337, 
                                        success_runs = 56, 
                                        total_test_runs = 56, )
                                    ], 
                                mobile_application_ids = [
                                    ''
                                    ], 
                                mobile_application_labels = [
                                    ''
                                    ], 
                                modified_at = 56, 
                                service_id = '', 
                                type = '', 
                                website_ids = [
                                    ''
                                    ], 
                                website_labels = [
                                    ''
                                    ], ), 
                            test_id = '', 
                            test_last_error = instana_client.models.test_last_error.TestLastError(
                                start_time = 56, ), 
                            test_name = '', ), )
                    ],
        )
        """

    def testTestResultListResult(self):
        """Test TestResultListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
