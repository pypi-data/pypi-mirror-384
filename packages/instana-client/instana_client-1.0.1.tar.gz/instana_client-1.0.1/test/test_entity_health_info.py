# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.entity_health_info import EntityHealthInfo

class TestEntityHealthInfo(unittest.TestCase):
    """EntityHealthInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityHealthInfo:
        """Test EntityHealthInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityHealthInfo`
        """
        model = EntityHealthInfo()
        if include_optional:
            return EntityHealthInfo(
                max_severity = 0,
                open_issues = [
                    instana_client.models.event.Event(
                        end = 1, 
                        endpoint_service_id = '', 
                        entity_id = '', 
                        entity_type = 'Entity10', 
                        event_configuration_type = '', 
                        id = '', 
                        long_form_plugin_id = '', 
                        metadata = {
                            'key' : None
                            }, 
                        metric_access_id = '', 
                        plugin = '', 
                        problem = instana_client.models.problem.Problem(
                            fix_suggestion = '', 
                            id = '', 
                            problem_text = '', 
                            severity = 56, ), 
                        rca = {
                            'key' : None
                            }, 
                        start = 1, 
                        state = '', 
                        type = '', )
                    ]
            )
        else:
            return EntityHealthInfo(
                open_issues = [
                    instana_client.models.event.Event(
                        end = 1, 
                        endpoint_service_id = '', 
                        entity_id = '', 
                        entity_type = 'Entity10', 
                        event_configuration_type = '', 
                        id = '', 
                        long_form_plugin_id = '', 
                        metadata = {
                            'key' : None
                            }, 
                        metric_access_id = '', 
                        plugin = '', 
                        problem = instana_client.models.problem.Problem(
                            fix_suggestion = '', 
                            id = '', 
                            problem_text = '', 
                            severity = 56, ), 
                        rca = {
                            'key' : None
                            }, 
                        start = 1, 
                        state = '', 
                        type = '', )
                    ],
        )
        """

    def testEntityHealthInfo(self):
        """Test EntityHealthInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
