# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.website_monitoring_beacon import WebsiteMonitoringBeacon

class TestWebsiteMonitoringBeacon(unittest.TestCase):
    """WebsiteMonitoringBeacon unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebsiteMonitoringBeacon:
        """Test WebsiteMonitoringBeacon
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebsiteMonitoringBeacon`
        """
        model = WebsiteMonitoringBeacon()
        if include_optional:
            return WebsiteMonitoringBeacon(
                accuracy_radius = -1,
                accurate_timings_available = True,
                agent_version = '',
                app_cache_time = -1,
                backend_time = -1,
                backend_trace_id = '',
                batch_size = 1,
                beacon_id = '',
                browser_name = '',
                browser_version = '',
                bytes_ingested = 56,
                cache_interaction = '',
                children_time = -1,
                city = '',
                clock_skew = -1,
                component_stack = '',
                connection_type = '',
                continent = '',
                continent_code = '',
                country = '',
                country_code = '',
                csp_blocked_uri = '',
                csp_column_number = 56,
                csp_disposition = '',
                csp_effective_directive = '',
                csp_line_number = 56,
                csp_original_policy = '',
                csp_sample = '',
                csp_source_file = '',
                cumulative_layout_shift = 1.337,
                custom_event_name = '',
                custom_metric = 1.337,
                decoded_body_size = -1,
                deprecations = [
                    ''
                    ],
                device_type = '',
                dns_time = -1,
                dom_time = -1,
                duration = 0,
                encoded_body_size = -1,
                error_count = 0,
                error_id = '',
                error_message = '',
                error_type = '',
                first_contentful_paint_time = -1,
                first_input_delay_time = -1,
                first_paint_time = -1,
                frontend_time = -1,
                graphql_operation_name = '',
                graphql_operation_type = '',
                http_call_asynchronous = True,
                http_call_correlation_attempted = True,
                http_call_headers = {
                    'key' : ''
                    },
                http_call_method = '',
                http_call_origin = '',
                http_call_path = '',
                http_call_status = -1,
                http_call_url = '',
                initiator = '',
                interaction_next_paint = 56,
                internal_meta = {
                    'key' : ''
                    },
                label = '',
                largest_contentful_paint_time = -1,
                latitude = 1.337,
                location_origin = '',
                location_path = '',
                location_url = '',
                longitude = 1.337,
                meta = {
                    'key' : ''
                    },
                on_load_time = -1,
                os_name = '',
                os_version = '',
                page = '',
                page_load_id = '',
                parent_beacon_id = '',
                parsed_stack_trace = [
                    instana_client.models.js_stack_trace_line.JsStackTraceLine(
                        column = -1, 
                        file = '', 
                        line = -1, 
                        name = '', 
                        translation_explanation = '', 
                        translation_status = -1, )
                    ],
                phase = '',
                processing_time = -1,
                redirect_time = -1,
                request_time = -1,
                resource_type = '',
                response_time = -1,
                session_id = '',
                snippet_version = '',
                ssl_time = -1,
                stack_trace = '',
                stack_trace_parsing_status = -1,
                stack_trace_readability = 0,
                subdivision = '',
                subdivision_code = '',
                tcp_time = -1,
                timestamp = 1,
                transfer_size = -1,
                type = '',
                unload_time = -1,
                use_features = [
                    ''
                    ],
                user_email = '',
                user_id = '',
                user_ip = '',
                user_languages = [
                    ''
                    ],
                user_name = '',
                website_id = '',
                website_label = '',
                window_height = -1,
                window_hidden = True,
                window_width = -1
            )
        else:
            return WebsiteMonitoringBeacon(
                beacon_id = '',
                location_origin = '',
                location_url = '',
                page_load_id = '',
                type = '',
                website_id = '',
                website_label = '',
        )
        """

    def testWebsiteMonitoringBeacon(self):
        """Test WebsiteMonitoringBeacon"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
