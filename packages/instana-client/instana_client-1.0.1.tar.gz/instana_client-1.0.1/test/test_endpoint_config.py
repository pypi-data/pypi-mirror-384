# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.endpoint_config import EndpointConfig

class TestEndpointConfig(unittest.TestCase):
    """EndpointConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EndpointConfig:
        """Test EndpointConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EndpointConfig`
        """
        model = EndpointConfig()
        if include_optional:
            return EndpointConfig(
                endpoint_case = 'ORIGINAL',
                endpoint_name_by_collected_path_template_rule_enabled = True,
                endpoint_name_by_first_path_segment_rule_enabled = True,
                rules = [
                    instana_client.models.http_endpoint_rule.HttpEndpointRule(
                        enabled = True, 
                        path_segments = [
                            instana_client.models.http_path_segment_matching_rule.HttpPathSegmentMatchingRule(
                                type = 'UNSUPPORTED', )
                            ], 
                        test_cases = [
                            ''
                            ], )
                    ],
                service_id = ''
            )
        else:
            return EndpointConfig(
                endpoint_case = 'ORIGINAL',
                service_id = '',
        )
        """

    def testEndpointConfig(self):
        """Test EndpointConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
