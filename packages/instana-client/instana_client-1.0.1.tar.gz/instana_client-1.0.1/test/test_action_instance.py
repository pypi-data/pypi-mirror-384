# coding: utf-8

"""
    Instana REST API documentation

    Documentation for INSTANA REST API

    The version of the OpenAPI document: 1.306.1368
    Contact: support@instana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from instana_client.models.action_instance import ActionInstance

class TestActionInstance(unittest.TestCase):
    """ActionInstance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionInstance:
        """Test ActionInstance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionInstance`
        """
        model = ActionInstance()
        if include_optional:
            return ActionInstance(
                action_description = '',
                action_id = '',
                action_instance_id = '',
                action_name = '',
                action_snapshot = '',
                actor_id = '',
                actor_name = '',
                actor_type = 'ACTOR_UNKNOWN',
                created_date = 56,
                end_date = 56,
                error_message = '',
                event_entity_type = '',
                event_id = '',
                event_specification_id = '',
                external_source_type = '',
                host_snapshot_id = '',
                input_parameters = [
                    instana_client.models.action_instance_parameter.ActionInstanceParameter(
                        display_name = '', 
                        name = '', 
                        type = '', 
                        value = '', )
                    ],
                metadata = [
                    instana_client.models.action_instance_metadata_entry.ActionInstanceMetadataEntry(
                        name = '', 
                        value = '', )
                    ],
                output = '',
                policy_id = '',
                problem_text = '',
                return_code = 56,
                start_date = 56,
                status = 'STATUS_UNKNOWN',
                target_snapshot_id = '',
                type = 'SCRIPT'
            )
        else:
            return ActionInstance(
                action_id = '',
                action_name = '',
                type = 'SCRIPT',
        )
        """

    def testActionInstance(self):
        """Test ActionInstance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
