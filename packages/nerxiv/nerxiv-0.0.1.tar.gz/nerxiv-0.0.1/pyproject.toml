[build-system]
requires = ["setuptools>=61.0.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
classifiers = [
  "Natural Language :: English",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
name = "nerxiv"
description = "A Python package for extracting structured metadata information from arXiv papers."
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Jose M. Pizarro", email = "jose.pizarro-blanco@bam.de" },
]
maintainers = [
  { name = "Jose M. Pizarro", email = "jose.pizarro-blanco@bam.de" },
]
license = { file = "LICENSE" }
dependencies = [
  "click>=8.2.1",
  "sentence-transformers",
  "langchain-core>=0.3.20",
  "langchain-ollama",
  "langchain-huggingface",
  "pyrxiv>=0.4.3",
  "pymatgen",
  "spacy",
]

[project.urls]
"Homepage" = "https://github.com/JosePizarro3/NERxiv"
"Bug Tracker" = "https://github.com/JosePizarro3/NERxiv/issues"

[project.optional-dependencies]
dev = [
  "mypy>=1.8.0",
  "ruff",
  "pytest",
  "pytest-timeout",
  "pytest-cov",
  "python-decouple",
]
docu = [
  "marimo[recommended]",
  "mkdocs-material",
  "mkdocs-click",
  "mkdocstrings-python",
]

[project.scripts]
nerxiv = "nerxiv.cli:cli"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
include = ["nerxiv/*.py", "tests/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "dependencies",
    "tutorials",
]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "PL", # pylint
    "F", # Pyflakes
    "UP", # pyupgrade
    "I", # isort
]
ignore = [
    "F401", # Module imported but unused
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# this is entirely optional, you can remove this if you wish to
[tool.ruff.format]
# use double quotes for strings.
quote-style = "double"
# indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
pretty = true

[tool.setuptools.packages.find]
where = ["."]
namespaces = false

[tool.setuptools_scm]
write_to = "nerxiv/_version.py"