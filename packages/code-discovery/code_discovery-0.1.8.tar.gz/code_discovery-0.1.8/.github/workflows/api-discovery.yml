name: API Discovery

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  discover-apis:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up Java (for Java projects)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
        continue-on-error: true
      
      - name: Set up .NET (for .NET projects)
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
        continue-on-error: true
      
      - name: Run API Discovery
        env:
          API_DISCOVERY_TOKEN: ${{ secrets.API_DISCOVERY_TOKEN }}
        run: |
          python -m src.main
      
      - name: Upload OpenAPI Spec as artifact
        uses: actions/upload-artifact@v3
        with:
          name: openapi-spec
          path: openapi-spec.*
          if-no-files-found: ignore
      
      - name: Comment PR with API Changes (if PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const specPath = 'openapi-spec.yaml';
            
            if (fs.existsSync(specPath)) {
              const spec = fs.readFileSync(specPath, 'utf8');
              const body = `## üîç API Discovery Results\n\nOpenAPI specification has been generated:\n\n\`\`\`yaml\n${spec.substring(0, 1000)}...\n\`\`\`\n\nFull spec available in workflow artifacts.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

