[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kosmos-core"
dynamic = ["version"]
description = "Koordinations-, Optimierungs- und Simulations-Software für Modulare Quanten-Systeme in 6G Netzwerken"
authors = [
    {name = "Michael Kölle", email = "michael.koelle@aignosco.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.13"
keywords = ["api", "kosmos", "kosmos-core"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "numpy>=2.3.2",
    "torch>=2.8.0",
    "scikit-learn>=1.7.1",
    "pandas>=2.2.3",
    "scipy>=1.16.1",
    "pennylane>=0.43.0",
    "pennylane-lightning>=0.43.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.7",
    "pre-commit>=4.2.0",
    "pipreqs>=0.4.13",
]

[tool.setuptools.dynamic]
version = { attr = "kosmos.__version__" }

[tool.ruff]
line-length = 99
indent-width = 4
# unsafe-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "TD002", # Missing author in todo comment
    "TD003", # Missing link in todo comment
    "FIX002", # line-contains-todo
    "FA102", # Type annotation backward compatibility
    "D203", # blank line required before class docstring
    "COM812", # compat formatter
    "ISC001", # compat formatter
    "D213", # multi-line-summary-second-line
    "TC", # Type checking import
#    "EM101", # raw-string-in-exception"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # asserts allowed in tests...
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
omit = [
    "tests/*",
    "*/tests/*",
    "test_*.py",
    "*_test.py"
]
concurrency = ["thread"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
]