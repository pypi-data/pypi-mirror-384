Metadata-Version: 2.1
Name: virementmaitrise
Version: 2.1.0
Summary: Python bindings for the Virement Maitrise API (powered by Fintecture)
Author-email: Société Générale <support@virementmaitrise.societegenerale.eu>
License: The MIT License
        
        Copyright (c) since 2018 Fintecture (http://fintecture.com)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Project-URL: Homepage, https://console.virementmaitrise.societegenerale.eu
Project-URL: Documentation, https://doc.virementmaitrise.societegenerale.eu
Project-URL: Repository, https://github.com/virementmaitrise/virementmaitrise-sdk-python
Project-URL: Bug Tracker, https://github.com/virementmaitrise/virementmaitrise-sdk-python/issues
Project-URL: Changelog, https://github.com/virementmaitrise/virementmaitrise-sdk-python/blob/master/CHANGELOG.md
Keywords: virementmaitrise,api,payments
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests >=2.32.5
Requires-Dist: cffi >=1.15
Requires-Dist: cryptography <37.0,>=3.4.8 ; python_version < "3.12"
Requires-Dist: cryptography >=37.0.4 ; python_version >= "3.12"
Requires-Dist: pycryptodome ==3.23.0 ; sys_platform == "windows"

# Virement Maitrise Python Library

**Powered by Fintecture**


The Virement Maitrise Python library provides convenient access to the Virement Maitrise API from
applications written in the Python language. It includes a pre-defined set of
classes for API resources that initialize themselves dynamically from API
responses which makes it compatible with a wide range of versions of the Virement Maitrise
API.

## Documentation

See the [Python API docs](https://doc.virementmaitrise.societegenerale.eu).

## Installation (from PyPI)

```sh
pip install --upgrade virementmaitrise
```

### Build Distribution Packages

```sh
pip install build

python -m build
```

### Requirements

-   Python 3.10+ (Python 3.11, 3.12, 3.13 supported)

## Usage

The library needs to be configured with your application identifier, the secret and private keys which is
available in your [Virement Maitrise Developer Console](https://console.virementmaitrise.societegenerale.eu/developers).
For instance, set `virementmaitrise.app_id` to its value:

```python
import virementmaitrise

virementmaitrise.app_id = "39b1597f-b7dd..."

# list application information
resp = virementmaitrise.Application.retrieve()

attributes = resp.data.attributes

# print the description of the application
print(attributes.description)

# print if application supports AIS and PIS scope
print("Supports AIS scope: %r" % attributes.scope.ais)
print("Supports PIS scope: %r" % attributes.scope.pis)
```
