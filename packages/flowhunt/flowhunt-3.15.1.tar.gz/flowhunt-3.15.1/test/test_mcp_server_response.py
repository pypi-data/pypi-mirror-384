# coding: utf-8

"""
    FlowHunt

    FlowHunt API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flowhunt.models.mcp_server_response import MCPServerResponse

class TestMCPServerResponse(unittest.TestCase):
    """MCPServerResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MCPServerResponse:
        """Test MCPServerResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MCPServerResponse`
        """
        model = MCPServerResponse()
        if include_optional:
            return MCPServerResponse(
                workspace_id = 'd719f5f5-5433-4cb4-9993-8053bda1a384',
                mcp_server_id = '0x1d230dabdb5bc7cb',
                name = 'My MCP Server',
                server_configuration = [
                    flowhunt.models.mcp_sub_server_binding.MCPSubServerBinding(
                        subserver_id = '', 
                        capabilities = [
                            flowhunt.models.mcp_capability_binding.MCPCapabilityBinding(
                                capability_id = '', )
                            ], )
                    ],
                is_active = True,
                created_at = '2021-05-07T12:34:56.789Z',
                updated_at = '2021-05-07T12:34:56.789Z',
                remote_mcp_url = ''
            )
        else:
            return MCPServerResponse(
                workspace_id = 'd719f5f5-5433-4cb4-9993-8053bda1a384',
                mcp_server_id = '0x1d230dabdb5bc7cb',
                name = 'My MCP Server',
                server_configuration = [
                    flowhunt.models.mcp_sub_server_binding.MCPSubServerBinding(
                        subserver_id = '', 
                        capabilities = [
                            flowhunt.models.mcp_capability_binding.MCPCapabilityBinding(
                                capability_id = '', )
                            ], )
                    ],
                is_active = True,
                created_at = '2021-05-07T12:34:56.789Z',
                updated_at = '2021-05-07T12:34:56.789Z',
        )
        """

    def testMCPServerResponse(self):
        """Test MCPServerResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
