# coding: utf-8

"""
    FlowHunt

    FlowHunt API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flowhunt.models.reindex_status_response import ReindexStatusResponse

class TestReindexStatusResponse(unittest.TestCase):
    """ReindexStatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReindexStatusResponse:
        """Test ReindexStatusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReindexStatusResponse`
        """
        model = ReindexStatusResponse()
        if include_optional:
            return ReindexStatusResponse(
                scope = 'installation',
                workspace_id = '',
                embedding_model = '',
                overall_status = 'pending',
                sources = {
                    'key' : flowhunt.models.reindex_progress.ReindexProgress(
                        workspace_id = '', 
                        embedding_model = '', 
                        status = 'pending', 
                        data_source = 'documents', 
                        total_items = 56, 
                        processed_items = 56, 
                        failed_items = 56, 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error_message = '', )
                    },
                collection_name = '',
                new_collection_name = '',
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return ReindexStatusResponse(
                scope = 'installation',
                embedding_model = '',
                overall_status = 'pending',
                sources = {
                    'key' : flowhunt.models.reindex_progress.ReindexProgress(
                        workspace_id = '', 
                        embedding_model = '', 
                        status = 'pending', 
                        data_source = 'documents', 
                        total_items = 56, 
                        processed_items = 56, 
                        failed_items = 56, 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error_message = '', )
                    },
                collection_name = '',
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testReindexStatusResponse(self):
        """Test ReindexStatusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
