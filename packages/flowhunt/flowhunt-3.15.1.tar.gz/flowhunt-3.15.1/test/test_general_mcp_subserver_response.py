# coding: utf-8

"""
    FlowHunt

    FlowHunt API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from flowhunt.models.general_mcp_subserver_response import GeneralMCPSubserverResponse

class TestGeneralMCPSubserverResponse(unittest.TestCase):
    """GeneralMCPSubserverResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GeneralMCPSubserverResponse:
        """Test GeneralMCPSubserverResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GeneralMCPSubserverResponse`
        """
        model = GeneralMCPSubserverResponse()
        if include_optional:
            return GeneralMCPSubserverResponse(
                server_id = '0x1d230dabdb5bc7cb',
                name = 'My MCP Subserver',
                description = '',
                status = 'active',
                icon = '',
                version = '1.0.0',
                capabilities = [
                    flowhunt.models.general_mcp_subserver_capabilities_response.GeneralMCPSubserverCapabilitiesResponse(
                        capability_id = '0x1d230dabdb5bc7cb', 
                        name = 'Data Processing', 
                        description = '', )
                    ],
                integration_slug = 'shopify_integration'
            )
        else:
            return GeneralMCPSubserverResponse(
                server_id = '0x1d230dabdb5bc7cb',
                name = 'My MCP Subserver',
                status = 'active',
                version = '1.0.0',
                integration_slug = 'shopify_integration',
        )
        """

    def testGeneralMCPSubserverResponse(self):
        """Test GeneralMCPSubserverResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
