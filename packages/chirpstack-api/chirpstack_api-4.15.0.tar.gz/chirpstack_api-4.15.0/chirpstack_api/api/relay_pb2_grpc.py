# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from chirpstack_api.api import relay_pb2 as chirpstack__api_dot_api_dot_relay__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chirpstack_api/api/relay_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class RelayServiceStub(object):
    """RelayService is the service providing API methos for managing relays.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/api.RelayService/List',
                request_serializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelaysRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelaysResponse.FromString,
                _registered_method=True)
        self.AddDevice = channel.unary_unary(
                '/api.RelayService/AddDevice',
                request_serializer=chirpstack__api_dot_api_dot_relay__pb2.AddRelayDeviceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RemoveDevice = channel.unary_unary(
                '/api.RelayService/RemoveDevice',
                request_serializer=chirpstack__api_dot_api_dot_relay__pb2.RemoveRelayDeviceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListDevices = channel.unary_unary(
                '/api.RelayService/ListDevices',
                request_serializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesResponse.FromString,
                _registered_method=True)


class RelayServiceServicer(object):
    """RelayService is the service providing API methos for managing relays.
    """

    def List(self, request, context):
        """List lists the relays for the given application id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDevice(self, request, context):
        """AddDevice adds the given device to the relay.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDevice(self, request, context):
        """RemoveDevice removes the given device from the relay.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDevices(self, request, context):
        """ListDevices lists the devices for the given relay.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RelayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelaysRequest.FromString,
                    response_serializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelaysResponse.SerializeToString,
            ),
            'AddDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDevice,
                    request_deserializer=chirpstack__api_dot_api_dot_relay__pb2.AddRelayDeviceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDevice,
                    request_deserializer=chirpstack__api_dot_api_dot_relay__pb2.RemoveRelayDeviceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDevices,
                    request_deserializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesRequest.FromString,
                    response_serializer=chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.RelayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.RelayService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RelayService(object):
    """RelayService is the service providing API methos for managing relays.
    """

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.RelayService/List',
            chirpstack__api_dot_api_dot_relay__pb2.ListRelaysRequest.SerializeToString,
            chirpstack__api_dot_api_dot_relay__pb2.ListRelaysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.RelayService/AddDevice',
            chirpstack__api_dot_api_dot_relay__pb2.AddRelayDeviceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.RelayService/RemoveDevice',
            chirpstack__api_dot_api_dot_relay__pb2.RemoveRelayDeviceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.RelayService/ListDevices',
            chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesRequest.SerializeToString,
            chirpstack__api_dot_api_dot_relay__pb2.ListRelayDevicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
