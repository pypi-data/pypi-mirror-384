[build-system]
requires = ["setuptools>=69", "wheel", "setuptools-scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pyparticle"
description = "Describing and analyzing aerosol particles and particle populations"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Laura Fierce" }]
# Runtime deps only (no test tools here)
dependencies = [
  "numpy>=1.24",
  "scipy>=1.10",
  "PyYAML>=6.0",
  "pymiescatt",
  "netCDF4",
]
version = "0.1.1"
#dynamic = ["version"]

keywords = ["aerosol", "atmospheric", "optics", "modeling"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5",
  "mypy>=1.8",
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "pyrcel>=0.4",
]

[project.urls]
Repository = "https://github.com/pnnl/pyparticle"

[tool.setuptools.packages.find]
where = ["src"]
include = ["pyparticle*"]

[tool.setuptools.package-data]
# Ship the tiny runtime tables inside the wheel
pyparticle = ["species/data/*"]

[tool.setuptools]
include-package-data = true

[tool.setuptools-scm]
# Use tags for versions; if absent, fall back cleanly
local_scheme = "no-local-version"
fallback_version = "0.0.0"
# Optional but nice: write a version file for runtime introspection
write_to = "src/pyparticle/_version.py"
