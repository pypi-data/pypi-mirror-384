{
	"line_subst" : [
//		{"from" : "#(\w+?)\.\$(\w+?)#", "to" : "{getArgument('$1')}"},
//		{"from" : "#(\w+?)#", "to" : "{getArgument('$1')}"},
		{"from" : "#(\w+?)\.\$(\w+?)#", "to" : "{str($1)}"},
		{"from" : "#(\w+?)#", "to" : "{str($1)}"},
		{"from" : "\'\"\+(\w+)\+\"\'", "to" : "{str($1)}"},

		{"from" : "\n", "to" : "__NEWLINE__"},

		{"from" : "\+\"\;__NEWLINE__", "to" : "\n\n"},
		{"from" : "\+\"__NEWLINE__", "to" : "\n\n"},
		{"from" : "\;__NEWLINE__", "to" : "\n\n"},
		{"from" : "^\w+\s*\=\s*", "to" : "", "first_match": "1"}
	],

	"block_subst" : [
		//{"from" : "^(\w+)\s*\=\s*", "to" : "$1 = \"\"\"", "first_match": "1"},
		{"from" : "__NEWLINE__", "to" : "\n"},
		//{"from" : "\n\s*(\w+)\s*\=\s*spark", "to" : "\"\"\"\n\n$1 = spark", "first_match": "1"},
		{"from" : "\\\s*\\\n", "to" : "\n"},
		//{"from" : "\"\"\"spark\.sql\(", "to" : "spark.sql("},
		{"from" : "\\\(A\)", "to" : ""}
	],

	"function_subst" : [
		{"from" : "IF", "to" : "IIF"}
	],

	"substitution_iter_limit" : 20000,
	"pattern_match_while_iter_limit" : 20000
}