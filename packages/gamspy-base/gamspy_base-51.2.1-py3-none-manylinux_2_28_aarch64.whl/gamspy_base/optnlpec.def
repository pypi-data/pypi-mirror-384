*
* optnlpec.def
*

allSolves boolean.nv 0 0 1 2 do all solves in a loop regardless of previous failure
dumpValid boolean.nv 0 0 1 2 dump valid reformulation options to a GDX file and exit
noCheck boolean.nv 0 0 1 2 do not check consistency of reformulation options
finalMu double.two 0 0 0 maxdouble 1 2 final value of parameter mu
initMu double.two 0 0 0 maxdouble 1 2 initial value of parameter mu
initSLo double 0 0 mindouble maxdouble 1 2 lower bound for artificials added to the problem
initSUp double 0 maxdouble mindouble maxdouble 1 2 upper bound for artificials added to the problem
dotGams string 0 "" 1 2 name of gams source file for scalar model
parmFile string 0 "" 1 2 extra GAMS options for running scalar model
subSolver string 0 "" 1 2 controls what subsolver to run
subSolverOpt integer 0 0 0 maxint 1 2 optfile value to pass to the subsolver
numSolves integer 0 0 0 maxint 1 2 number of looped solves
equReform integer 0 0 0 33 1 2 outdated and deprecated
testTol double 0 1e-005 0 maxdouble 1 2 tolerance for complementarity check in MPEC/MCP
terminate boolean.nv 0 0 1 2 terminate after generating scalar GAMS source code
updateFac double.two 0 1e-1 1e-280 1.0 1 2 update factor for mu
refType enumstr.two 0 "mult" 1 1 reformulation type
 "mult" 1 inner product <x,f> = 0
 "min" 1 NCP function min(x,f)
 "CMxf" 1 Chen-Mangasarian NCP function, explicit
 "CMfx" 1 Chen-Mangasarian NCP function, explicit
 "fCMxf" 1 Chen-Mangasarian NCP function, intrinsic
 "fCMfx" 1 Chen-Mangasarian NCP function, intrinsic
 "FB" 1 Fischer-Burmeister NCP function, explicit
 "fFB" 1 Fischer-Burmeister NCP function, intrinsic
 "FB_neg" 1 Fischer-Burmeister NCP function negated, explicit
 "fFB_neg" 1 Fischer-Burmeister NCP function negated, intrinsic
 "Bill" 1 Billups function for doubly-bounded variables, explicit
 "fBill" 1 Billups function for doubly-bounded variables, intrinsic
 "penalty" 1 weighted penalization of non-complementarity in objective
 "median" 1 median function for doubly-bounded variables, explicit
 "fVUsin" 1 Veelken-Ulbrich NCP function (smoothed min), intrinsic
 "fVUpow" 1 Veelken-Ulbrich NCP function (smoothed min), intrinsic
slack enumstr.two 0 "positive" 1 1 control use of slacks for function values
 "none" 1 no slacks will be used
 "free" 1 free slacks will be used
 "positive" 1 non-negative slacks will be used
 "one" 1 one free slack will be used for each h_i in the doubly bounded case
constraint enumstr.two 0 "equality" 1 1 controls use of equality/inequality
 "equality" 1 use =E= constraints
 "inequality" 1 use =L= constraints
aggregate enumstr.two 0 "none" 1 1 controls constraint aggregation
 "none" 1 use no aggregation
 "partial" 1 aggregate doubly-bounded variables separately from others
 "full" 1 use maximum aggregation possible
NCPBounds enumstr.two 0 "none" 1 1 sets explicit bounds on arguments of NCP functions
 "none" 1 no explicit bounds
 "function" 1 explicit bound on function/slack argument
 "variable" 1 explicit bound on variable argument
 "all" 1 explicit bound on both function and variable arguments
*
* synonym section
*
fileName synonym dotGams
*
* indicator section
*
myeolchar EOLCOMM #
*
* Groups
* <group-ident> group <group-number <help-context> <help-text>
*
reform group 1 1 Reformulation Options
general group 2 1 General Options
*** End of file
