import os
from pathlib import Path
from .version import __version__
directory = str(Path(__file__).resolve().parent)

defaults = {'CNS': 'PATH', 'DNLP': 'CONOPT', 'EMP': 'CONVERT', 'LP': 'CPLEX', 'MCP': 'PATH', 'MINLP': 'SBB', 'MIP': 'CPLEX', 'MIQCP': 'SBB', 'MPEC': 'NLPEC', 'NLP': 'CONOPT', 'QCP': 'CONOPT', 'RMINLP': 'CONOPT', 'RMIP': 'CPLEX', 'RMIQCP': 'CONOPT'}

default_solvers = ['CONOPT', 'CONOPT4', 'CONVERT', 'CPLEX', 'GUSS', 'KESTREL', 'NLPEC', 'PATH', 'SBB']

addon_solvers = ['BARON', 'CBC', 'CONOPT3', 'COPT', 'DICOPT', 'EXAMINER', 'EXAMINER2', 'GUROBI', 'HIGHS', 'IPOPT', 'IPOPTH', 'KNITRO', 'MILES', 'MINOS', 'MOSEK', 'MPSGE', 'PATHNLP', 'RESHOP', 'SCIP', 'SHOT', 'SNOPT', 'SOPLEX', 'XPRESS']

available_solvers = ['BARON', 'CBC', 'CONOPT', 'CONOPT3', 'CONOPT4', 'CONVERT', 'COPT', 'CPLEX', 'DICOPT', 'EXAMINER', 'EXAMINER2', 'GUROBI', 'HIGHS', 'IPOPT', 'IPOPTH', 'KESTREL', 'KNITRO', 'MILES', 'MINOS', 'MOSEK', 'MPSGE', 'NLPEC', 'PATH', 'PATHNLP', 'RESHOP', 'SBB', 'SCIP', 'SHOT', 'SNOPT', 'SOPLEX', 'XPRESS']

capabilities = {'ALPHAECP': ['MINLP', 'MIQCP'], 'ANTIGONE': ['NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'BARON': ['LP', 'MIP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'CBC': ['LP', 'MIP', 'RMIP'], 'CONOPT': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'CONOPT3': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'CONOPT4': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'CONVERT': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'MPEC', 'RMPEC', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP', 'EMP'], 'COPT': ['LP', 'MIP', 'RMIP', 'QCP', 'MIQCP', 'RMIQCP'], 'CPLEX': ['LP', 'MIP', 'RMIP', 'QCP', 'MIQCP', 'RMIQCP'], 'DE': ['EMP'], 'DECISC': ['LP'], 'DECISM': ['LP'], 'DICOPT': ['MINLP', 'MIQCP'], 'EXAMINER': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'MPEC', 'RMPEC', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'EXAMINER2': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'GAMSCHK': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'GLOMIQO': ['NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'GUROBI': ['LP', 'MIP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'GUROBIOLD': ['LP', 'MIP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'GUSS': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'HIGHS': ['LP', 'MIP', 'RMIP'], 'IPOPT': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'IPOPTH': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'JAMS': ['EMP'], 'KESTREL': ['LP', 'MIP', 'RMIP', 'NLP', 'MCP', 'MPEC', 'RMPEC', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP', 'EMP'], 'KNITRO': ['LP', 'RMIP', 'NLP', 'MCP', 'MPEC', 'RMPEC', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'LINDO': ['LP', 'MIP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP', 'EMP'], 'LINDOGLOBAL': ['LP', 'MIP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'LOGMIP': ['EMP'], 'MILES': ['MCP'], 'MINOS': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'MOSEK': ['LP', 'MIP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'MPSGE': [], 'NLPEC': ['MCP', 'MPEC', 'RMPEC'], 'PATH': ['MCP', 'CNS'], 'PATHNLP': ['LP', 'RMIP', 'NLP', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'QUADMINOS': ['LP', 'RMIP'], 'RESHOP': ['EMP'], 'SBB': ['MINLP', 'MIQCP'], 'SCIP': ['MIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'SHOT': ['MINLP', 'MIQCP'], 'SNOPT': ['LP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'QCP', 'RMIQCP'], 'SOPLEX': ['LP', 'RMIP'], 'XPRESS': ['LP', 'MIP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP'], 'XPRESSOLD': ['LP', 'MIP', 'RMIP', 'NLP', 'CNS', 'DNLP', 'RMINLP', 'MINLP', 'QCP', 'MIQCP', 'RMIQCP']}

files = ['libgmdcclib64.dylib', 'gevopt.def', 'libgsscclib64.dylib', 'gmsprmun.txt', 'libptccclib64.dylib', 'gamsgetkey', 'gamserrs.txt', 'libstdc++.6.dylib', 'mps2gms', 'libconopt464.dylib', 'libcvdcclib64.dylib', 'libcpxcclib64.dylib', 'libgmszlib164.dylib', 'gmscmpun.txt', 'libguccclib64.dylib', 'gamsstmp.txt', 'libssl.3.dylib', 'libgdxdclib64.dylib', 'libconoptlu.dylib', 'libcplex2212.dylib', 'gamscmex.out', 'libcrypto.3.dylib', 'gamslice.txt', 'gdxdump', 'libgfortran.5.dylib', 'optsbb.def', 'gmsgenux.out', 'gmscvnux.out', 'gmssb_us.run', 'optpath.def', 'libgdxcclib64.dylib', 'gmske_us.run', 'libjoatdclib64.dylib', 'libdctmdclib64.dylib', 'gmske_ux.out', 'gamsprobe', 'eula.pdf', 'gmssb_ux.out', 'gmscvnus.run', 'gmsgenus.run', 'optgams.def', 'optcplex.def', 'liboptdclib64.dylib', 'libpath52.dylib', 'gdxdiff', 'libquadmath.0.dylib', 'libgcc_s.1.1.dylib', 'libgomp.1.dylib', 'optconopt.def', 'optnlpec.def', 'gams', 'libco4cclib64.dylib', 'optconvert.def']

file_paths = [directory + os.sep + file for file in files]
