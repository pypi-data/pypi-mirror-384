# Generated by Django 5.2.5 on 2025-09-23 11:23

import django.db.models.deletion
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0210_macaddress_ordering'),
        ('extras', '0129_fix_script_paths'),
        ('netbox_toolkit_plugin', '0011_remove_orphaned_variables_column'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceCredentialSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('encrypted_username', models.TextField()),
                ('encrypted_password', models.TextField()),
                ('encryption_key_id', models.CharField(max_length=64)),
                ('access_token', models.CharField(editable=False, max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_credentials', to=settings.AUTH_USER_MODEL)),
                ('platforms', models.ManyToManyField(blank=True, related_name='credential_sets', to='dcim.platform')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Device Credential Set',
                'verbose_name_plural': 'Device Credential Sets',
                'ordering': ['owner', 'name'],
                'unique_together': {('owner', 'name')},
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
    ]
