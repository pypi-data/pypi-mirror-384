# Generated by Django 5.1.4 on 2025-05-26 15:28

from django.db import migrations


def migrate_command_types(apps, schema_editor):
    """
    Migrate existing diagnostic and troubleshooting commands to 'show' type
    """
    Command = apps.get_model("netbox_toolkit_plugin", "Command")

    # Update diagnostic commands to show
    diagnostic_count = Command.objects.filter(command_type="diagnostic").update(
        command_type="show"
    )

    # Update troubleshooting commands to show
    troubleshooting_count = Command.objects.filter(
        command_type="troubleshooting"
    ).update(command_type="show")

    print(f"Migration: Updated {diagnostic_count} diagnostic commands to 'show' type")
    print(
        f"Migration: Updated {troubleshooting_count} troubleshooting commands to 'show' type"
    )


def reverse_migrate_command_types(apps, schema_editor):
    """
    Reverse migration - this is a simplified reverse that sets all to 'show'
    since we can't reliably determine original diagnostic vs troubleshooting
    """
    # Note: This is a lossy reverse operation
    # In practice, this is acceptable since diagnostic/troubleshooting
    # were being removed as part of the permission system design
    pass


class Migration(migrations.Migration):
    dependencies = [
        (
            "netbox_toolkit_plugin",
            "0002_alter_command_options_alter_command_unique_together_and_more",
        ),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="command",
            options={
                "ordering": ["platform", "name"],
                "permissions": [
                    ("execute_show_command", "Can execute show commands"),
                    ("execute_config_command", "Can execute configuration commands"),
                ],
            },
        ),
        migrations.RunPython(
            migrate_command_types,
            reverse_migrate_command_types,
        ),
    ]
