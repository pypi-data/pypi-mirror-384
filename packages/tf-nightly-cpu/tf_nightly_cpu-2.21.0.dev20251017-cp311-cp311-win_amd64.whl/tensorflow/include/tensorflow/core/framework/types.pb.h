// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/types.proto
// Protobuf C++ Version: 6.31.1

#ifndef tensorflow_2fcore_2fframework_2ftypes_2eproto_2epb_2eh
#define tensorflow_2fcore_2fframework_2ftypes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ftypes_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fframework_2ftypes_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto;
}  // extern "C"
namespace tensorflow {
enum DataType : int;
PROTOBUF_EXPORT extern const uint32_t DataType_internal_data_[];
class SerializedDType;
struct SerializedDTypeDefaultTypeInternal;
PROTOBUF_EXPORT extern SerializedDTypeDefaultTypeInternal _SerializedDType_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SerializedDType_class_data_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::tensorflow::DataType_internal_data_>
    internal::EnumTraitsImpl::value<::tensorflow::DataType>;
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
enum DataType : int {
  DT_INVALID = 0,
  DT_FLOAT = 1,
  DT_DOUBLE = 2,
  DT_INT32 = 3,
  DT_UINT8 = 4,
  DT_INT16 = 5,
  DT_INT8 = 6,
  DT_STRING = 7,
  DT_COMPLEX64 = 8,
  DT_INT64 = 9,
  DT_BOOL = 10,
  DT_QINT8 = 11,
  DT_QUINT8 = 12,
  DT_QINT32 = 13,
  DT_BFLOAT16 = 14,
  DT_QINT16 = 15,
  DT_QUINT16 = 16,
  DT_UINT16 = 17,
  DT_COMPLEX128 = 18,
  DT_HALF = 19,
  DT_RESOURCE = 20,
  DT_VARIANT = 21,
  DT_UINT32 = 22,
  DT_UINT64 = 23,
  DT_FLOAT8_E5M2 = 24,
  DT_FLOAT8_E4M3FN = 25,
  DT_FLOAT8_E4M3FNUZ = 26,
  DT_FLOAT8_E4M3B11FNUZ = 27,
  DT_FLOAT8_E5M2FNUZ = 28,
  DT_INT4 = 29,
  DT_UINT4 = 30,
  DT_INT2 = 31,
  DT_UINT2 = 32,
  DT_FLOAT_REF = 101,
  DT_DOUBLE_REF = 102,
  DT_INT32_REF = 103,
  DT_UINT8_REF = 104,
  DT_INT16_REF = 105,
  DT_INT8_REF = 106,
  DT_STRING_REF = 107,
  DT_COMPLEX64_REF = 108,
  DT_INT64_REF = 109,
  DT_BOOL_REF = 110,
  DT_QINT8_REF = 111,
  DT_QUINT8_REF = 112,
  DT_QINT32_REF = 113,
  DT_BFLOAT16_REF = 114,
  DT_QINT16_REF = 115,
  DT_QUINT16_REF = 116,
  DT_UINT16_REF = 117,
  DT_COMPLEX128_REF = 118,
  DT_HALF_REF = 119,
  DT_RESOURCE_REF = 120,
  DT_VARIANT_REF = 121,
  DT_UINT32_REF = 122,
  DT_UINT64_REF = 123,
  DT_FLOAT8_E5M2_REF = 124,
  DT_FLOAT8_E4M3FN_REF = 125,
  DT_FLOAT8_E4M3FNUZ_REF = 126,
  DT_FLOAT8_E4M3B11FNUZ_REF = 127,
  DT_FLOAT8_E5M2FNUZ_REF = 128,
  DT_INT4_REF = 129,
  DT_UINT4_REF = 130,
  DT_INT2_REF = 131,
  DT_UINT2_REF = 132,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

PROTOBUF_EXPORT extern const uint32_t DataType_internal_data_[];
inline constexpr DataType DataType_MIN =
    static_cast<DataType>(0);
inline constexpr DataType DataType_MAX =
    static_cast<DataType>(132);
inline bool DataType_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, DataType_internal_data_);
}
inline constexpr int DataType_ARRAYSIZE = 132 + 1;
PROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DataType_descriptor();
template <typename T>
const ::std::string& DataType_Name(T value) {
  static_assert(::std::is_same<T, DataType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to DataType_Name().");
  return ::google::protobuf::internal::NameOfEnum(DataType_descriptor(), value);
}
inline bool DataType_Parse(
    ::absl::string_view name, DataType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(DataType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT SerializedDType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.SerializedDType) */ {
 public:
  inline SerializedDType() : SerializedDType(nullptr) {}
  ~SerializedDType() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SerializedDType* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SerializedDType));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SerializedDType(::google::protobuf::internal::ConstantInitialized);

  inline SerializedDType(const SerializedDType& from) : SerializedDType(nullptr, from) {}
  inline SerializedDType(SerializedDType&& from) noexcept
      : SerializedDType(nullptr, ::std::move(from)) {}
  inline SerializedDType& operator=(const SerializedDType& from) {
    CopyFrom(from);
    return *this;
  }
  inline SerializedDType& operator=(SerializedDType&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SerializedDType& default_instance() {
    return *reinterpret_cast<const SerializedDType*>(
        &_SerializedDType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SerializedDType& a, SerializedDType& b) { a.Swap(&b); }
  inline void Swap(SerializedDType* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SerializedDType* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SerializedDType* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SerializedDType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SerializedDType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SerializedDType& from) { SerializedDType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SerializedDType* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.SerializedDType"; }

 protected:
  explicit SerializedDType(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SerializedDType(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SerializedDType& from);
  SerializedDType(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SerializedDType&& from) noexcept
      : SerializedDType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDatatypeFieldNumber = 1,
  };
  // .tensorflow.DataType datatype = 1;
  void clear_datatype() ;
  ::tensorflow::DataType datatype() const;
  void set_datatype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_datatype() const;
  void _internal_set_datatype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.SerializedDType)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SerializedDType& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int datatype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fframework_2ftypes_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull SerializedDType_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SerializedDType

// .tensorflow.DataType datatype = 1;
inline void SerializedDType::clear_datatype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datatype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::tensorflow::DataType SerializedDType::datatype() const {
  // @@protoc_insertion_point(field_get:tensorflow.SerializedDType.datatype)
  return _internal_datatype();
}
inline void SerializedDType::set_datatype(::tensorflow::DataType value) {
  _internal_set_datatype(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:tensorflow.SerializedDType.datatype)
}
inline ::tensorflow::DataType SerializedDType::_internal_datatype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.datatype_);
}
inline void SerializedDType::_internal_set_datatype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datatype_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::DataType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::tensorflow::DataType>() {
  return ::tensorflow::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fframework_2ftypes_2eproto_2epb_2eh
