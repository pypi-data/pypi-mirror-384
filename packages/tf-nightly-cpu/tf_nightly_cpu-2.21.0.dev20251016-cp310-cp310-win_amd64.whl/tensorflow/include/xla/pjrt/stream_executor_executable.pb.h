// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/pjrt/stream_executor_executable.proto
// Protobuf C++ Version: 6.31.1

#ifndef xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto_2epb_2eh
#define xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xla/pjrt/proto/compile_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto;
}  // extern "C"
namespace xla {
class StreamExecutorExecutableProto;
struct StreamExecutorExecutableProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern StreamExecutorExecutableProtoDefaultTypeInternal _StreamExecutorExecutableProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull StreamExecutorExecutableProto_class_data_;
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xla {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT StreamExecutorExecutableProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xla.StreamExecutorExecutableProto) */ {
 public:
  inline StreamExecutorExecutableProto() : StreamExecutorExecutableProto(nullptr) {}
  ~StreamExecutorExecutableProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamExecutorExecutableProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamExecutorExecutableProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamExecutorExecutableProto(::google::protobuf::internal::ConstantInitialized);

  inline StreamExecutorExecutableProto(const StreamExecutorExecutableProto& from) : StreamExecutorExecutableProto(nullptr, from) {}
  inline StreamExecutorExecutableProto(StreamExecutorExecutableProto&& from) noexcept
      : StreamExecutorExecutableProto(nullptr, ::std::move(from)) {}
  inline StreamExecutorExecutableProto& operator=(const StreamExecutorExecutableProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamExecutorExecutableProto& operator=(StreamExecutorExecutableProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamExecutorExecutableProto& default_instance() {
    return *reinterpret_cast<const StreamExecutorExecutableProto*>(
        &_StreamExecutorExecutableProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StreamExecutorExecutableProto& a, StreamExecutorExecutableProto& b) { a.Swap(&b); }
  inline void Swap(StreamExecutorExecutableProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamExecutorExecutableProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamExecutorExecutableProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamExecutorExecutableProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamExecutorExecutableProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamExecutorExecutableProto& from) { StreamExecutorExecutableProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamExecutorExecutableProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xla.StreamExecutorExecutableProto"; }

 protected:
  explicit StreamExecutorExecutableProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamExecutorExecutableProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamExecutorExecutableProto& from);
  StreamExecutorExecutableProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamExecutorExecutableProto&& from) noexcept
      : StreamExecutorExecutableProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutablesFieldNumber = 2,
    kNameFieldNumber = 5,
    kFingerprintFieldNumber = 6,
    kCompileOptionsFieldNumber = 1,
    kNumReplicasFieldNumber = 3,
    kNumPartitionsFieldNumber = 4,
  };
  // repeated bytes executables = 2;
  int executables_size() const;
  private:
  int _internal_executables_size() const;

  public:
  void clear_executables() ;
  const ::std::string& executables(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_executables(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_executables(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_executables();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_executables(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& executables() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_executables();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_executables() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_executables();

  public:
  // string name = 5;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string fingerprint = 6;
  void clear_fingerprint() ;
  const ::std::string& fingerprint() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_fingerprint(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_fingerprint();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_fingerprint();
  void set_allocated_fingerprint(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_fingerprint() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_fingerprint(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_fingerprint();

  public:
  // .xla.CompileOptionsProto compile_options = 1;
  bool has_compile_options() const;
  void clear_compile_options() ;
  const ::xla::CompileOptionsProto& compile_options() const;
  [[nodiscard]] ::xla::CompileOptionsProto* PROTOBUF_NULLABLE release_compile_options();
  ::xla::CompileOptionsProto* PROTOBUF_NONNULL mutable_compile_options();
  void set_allocated_compile_options(::xla::CompileOptionsProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_compile_options(::xla::CompileOptionsProto* PROTOBUF_NULLABLE value);
  ::xla::CompileOptionsProto* PROTOBUF_NULLABLE unsafe_arena_release_compile_options();

  private:
  const ::xla::CompileOptionsProto& _internal_compile_options() const;
  ::xla::CompileOptionsProto* PROTOBUF_NONNULL _internal_mutable_compile_options();

  public:
  // int32 num_replicas = 3;
  void clear_num_replicas() ;
  ::int32_t num_replicas() const;
  void set_num_replicas(::int32_t value);

  private:
  ::int32_t _internal_num_replicas() const;
  void _internal_set_num_replicas(::int32_t value);

  public:
  // int32 num_partitions = 4;
  void clear_num_partitions() ;
  ::int32_t num_partitions() const;
  void set_num_partitions(::int32_t value);

  private:
  ::int32_t _internal_num_partitions() const;
  void _internal_set_num_partitions(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xla.StreamExecutorExecutableProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamExecutorExecutableProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> executables_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr fingerprint_;
    ::xla::CompileOptionsProto* PROTOBUF_NULLABLE compile_options_;
    ::int32_t num_replicas_;
    ::int32_t num_partitions_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull StreamExecutorExecutableProto_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StreamExecutorExecutableProto

// .xla.CompileOptionsProto compile_options = 1;
inline bool StreamExecutorExecutableProto::has_compile_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compile_options_ != nullptr);
  return value;
}
inline const ::xla::CompileOptionsProto& StreamExecutorExecutableProto::_internal_compile_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xla::CompileOptionsProto* p = _impl_.compile_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::CompileOptionsProto&>(::xla::_CompileOptionsProto_default_instance_);
}
inline const ::xla::CompileOptionsProto& StreamExecutorExecutableProto::compile_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.compile_options)
  return _internal_compile_options();
}
inline void StreamExecutorExecutableProto::unsafe_arena_set_allocated_compile_options(
    ::xla::CompileOptionsProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compile_options_);
  }
  _impl_.compile_options_ = reinterpret_cast<::xla::CompileOptionsProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.StreamExecutorExecutableProto.compile_options)
}
inline ::xla::CompileOptionsProto* PROTOBUF_NULLABLE StreamExecutorExecutableProto::release_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::CompileOptionsProto* released = _impl_.compile_options_;
  _impl_.compile_options_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xla::CompileOptionsProto* PROTOBUF_NULLABLE StreamExecutorExecutableProto::unsafe_arena_release_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.StreamExecutorExecutableProto.compile_options)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::xla::CompileOptionsProto* temp = _impl_.compile_options_;
  _impl_.compile_options_ = nullptr;
  return temp;
}
inline ::xla::CompileOptionsProto* PROTOBUF_NONNULL StreamExecutorExecutableProto::_internal_mutable_compile_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.compile_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xla::CompileOptionsProto>(GetArena());
    _impl_.compile_options_ = reinterpret_cast<::xla::CompileOptionsProto*>(p);
  }
  return _impl_.compile_options_;
}
inline ::xla::CompileOptionsProto* PROTOBUF_NONNULL StreamExecutorExecutableProto::mutable_compile_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::xla::CompileOptionsProto* _msg = _internal_mutable_compile_options();
  // @@protoc_insertion_point(field_mutable:xla.StreamExecutorExecutableProto.compile_options)
  return _msg;
}
inline void StreamExecutorExecutableProto::set_allocated_compile_options(::xla::CompileOptionsProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compile_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.compile_options_ = reinterpret_cast<::xla::CompileOptionsProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:xla.StreamExecutorExecutableProto.compile_options)
}

// repeated bytes executables = 2;
inline int StreamExecutorExecutableProto::_internal_executables_size() const {
  return _internal_executables().size();
}
inline int StreamExecutorExecutableProto::executables_size() const {
  return _internal_executables_size();
}
inline void StreamExecutorExecutableProto::clear_executables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executables_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::add_executables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_executables()->Add();
  // @@protoc_insertion_point(field_add_mutable:xla.StreamExecutorExecutableProto.executables)
  return _s;
}
inline const ::std::string& StreamExecutorExecutableProto::executables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.executables)
  return _internal_executables().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::mutable_executables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xla.StreamExecutorExecutableProto.executables)
  return _internal_mutable_executables()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void StreamExecutorExecutableProto::set_executables(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_executables()->Mutable(index), ::std::forward<Arg_>(value),
                        args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:xla.StreamExecutorExecutableProto.executables)
}
template <typename Arg_, typename... Args_>
inline void StreamExecutorExecutableProto::add_executables(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_executables(),
                               ::std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:xla.StreamExecutorExecutableProto.executables)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& StreamExecutorExecutableProto::executables()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xla.StreamExecutorExecutableProto.executables)
  return _internal_executables();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
StreamExecutorExecutableProto::mutable_executables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xla.StreamExecutorExecutableProto.executables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_executables();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
StreamExecutorExecutableProto::_internal_executables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executables_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
StreamExecutorExecutableProto::_internal_mutable_executables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.executables_;
}

// int32 num_replicas = 3;
inline void StreamExecutorExecutableProto::clear_num_replicas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_replicas_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t StreamExecutorExecutableProto::num_replicas() const {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.num_replicas)
  return _internal_num_replicas();
}
inline void StreamExecutorExecutableProto::set_num_replicas(::int32_t value) {
  _internal_set_num_replicas(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:xla.StreamExecutorExecutableProto.num_replicas)
}
inline ::int32_t StreamExecutorExecutableProto::_internal_num_replicas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_replicas_;
}
inline void StreamExecutorExecutableProto::_internal_set_num_replicas(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_replicas_ = value;
}

// int32 num_partitions = 4;
inline void StreamExecutorExecutableProto::clear_num_partitions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_partitions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t StreamExecutorExecutableProto::num_partitions() const {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.num_partitions)
  return _internal_num_partitions();
}
inline void StreamExecutorExecutableProto::set_num_partitions(::int32_t value) {
  _internal_set_num_partitions(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:xla.StreamExecutorExecutableProto.num_partitions)
}
inline ::int32_t StreamExecutorExecutableProto::_internal_num_partitions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_partitions_;
}
inline void StreamExecutorExecutableProto::_internal_set_num_partitions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_partitions_ = value;
}

// string name = 5;
inline void StreamExecutorExecutableProto::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamExecutorExecutableProto::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamExecutorExecutableProto::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.StreamExecutorExecutableProto.name)
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xla.StreamExecutorExecutableProto.name)
  return _s;
}
inline const ::std::string& StreamExecutorExecutableProto::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void StreamExecutorExecutableProto::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamExecutorExecutableProto::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.StreamExecutorExecutableProto.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void StreamExecutorExecutableProto::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.StreamExecutorExecutableProto.name)
}

// string fingerprint = 6;
inline void StreamExecutorExecutableProto::clear_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fingerprint_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StreamExecutorExecutableProto::fingerprint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xla.StreamExecutorExecutableProto.fingerprint)
  return _internal_fingerprint();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamExecutorExecutableProto::set_fingerprint(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.fingerprint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xla.StreamExecutorExecutableProto.fingerprint)
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::mutable_fingerprint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_fingerprint();
  // @@protoc_insertion_point(field_mutable:xla.StreamExecutorExecutableProto.fingerprint)
  return _s;
}
inline const ::std::string& StreamExecutorExecutableProto::_internal_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fingerprint_.Get();
}
inline void StreamExecutorExecutableProto::_internal_set_fingerprint(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.fingerprint_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamExecutorExecutableProto::_internal_mutable_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.fingerprint_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamExecutorExecutableProto::release_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xla.StreamExecutorExecutableProto.fingerprint)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.fingerprint_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.fingerprint_.Set("", GetArena());
  }
  return released;
}
inline void StreamExecutorExecutableProto::set_allocated_fingerprint(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.fingerprint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fingerprint_.IsDefault()) {
    _impl_.fingerprint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xla.StreamExecutorExecutableProto.fingerprint)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xla_2fpjrt_2fstream_5fexecutor_5fexecutable_2eproto_2epb_2eh
