"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from isolate.connections.grpc.definitions import common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FunctionCall(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FUNCTION_FIELD_NUMBER: builtins.int
    SETUP_FUNC_FIELD_NUMBER: builtins.int
    @property
    def function(self) -> common_pb2.SerializedObject:
        """The function to execute and return the results to."""
    @property
    def setup_func(self) -> common_pb2.SerializedObject:
        """Optionally the setup function which will be passed
        as the first argument to the given function. This
        has to be an idempotent step since the result for
        this executable will be cached.
        """
    def __init__(
        self,
        *,
        function: common_pb2.SerializedObject | None = ...,
        setup_func: common_pb2.SerializedObject | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_setup_func", b"_setup_func", "function", b"function", "setup_func", b"setup_func"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_setup_func", b"_setup_func", "function", b"function", "setup_func", b"setup_func"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_setup_func", b"_setup_func"]) -> typing_extensions.Literal["setup_func"] | None: ...

global___FunctionCall = FunctionCall
