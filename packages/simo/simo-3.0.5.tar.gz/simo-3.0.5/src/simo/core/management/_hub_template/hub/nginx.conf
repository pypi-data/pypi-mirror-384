server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    charset     utf-8;


    ssl_certificate /etc/ssl/certs/localhost.crt;
    ssl_certificate_key /etc/ssl/private/localhost.key;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;


    ssl_session_cache shared:TLS:2m;

    client_max_body_size 100M;


    location /protected/static {
        internal;
        alias {{ project_dir }}/_var/static;
    }

    location /protected/media {
        internal;
        alias {{ project_dir }}/_var/media;
    }

    location /public_media{
        alias {{ project_dir }}/_var/public_media;
        access_log off;
        expires max;
    }

    location /ws {
        include proxy_params;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://unix:/tmp/http.sock;
    }

    location = /mcp {
        return 301 /mcp/;
    }

    location ^~ /mcp/ {
        proxy_pass http://0.0.0.0:3333/;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header Authorization     $http_authorization;

        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }


    location / {
        include proxy_params;
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
        proxy_pass http://unix:/tmp/gunicorn.sock;
    }

}
