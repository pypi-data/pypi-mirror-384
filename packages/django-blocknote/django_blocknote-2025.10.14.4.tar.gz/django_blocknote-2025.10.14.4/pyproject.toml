[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-blocknote"
version = "2025.10.14.4"
description = "BlockNote rich text editor integration for Django"
readme = "README.rst"
license = "BSD-3-Clause"
authors = [
    {"name" = "Mark Sevelj", "email" ="mark.sevelj@dunwright.com.au" },
    {"name" = "Ryan Sevelj", "email" ="ryan.sevelj@dunwright.com.au" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["django", "rich-text-editor", "blocknote", "wysiwyg"]
dependencies = [
    "Django>=4.2",
    'Pillow',
    'filetype',
    'structlog',
]
requires-python = ">=3.10"

[project.optional-dependencies]
docs = [
    "furo",
    "pygments-monokai-hcb",
    "myst-parser",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-inline-tabs",
    "sphinxcontrib-mermaid",
]

dev = [
    "build",
    "black",
    "django-extensions",
    "flake8",
    "isort",
    "django-blocknote[docs]",
    "django-coverage",
    "djlint",
    "pytest",
    "pytest-cov",
    "pytest-randomly",
    "pytest-xdist",
    "ruff",
    "tblib",
    'tox',
    "twine",
]
[project.urls]
Homepage = "https://github.com/Dunwright-dev/django-blocknote"
Documentation = "https://django-blocknote.readthedocs.io/"
Repository = "https://github.com/Dunwright-dev/django-blocknote"
Issues = "https://github.com/yourusername/django-blocknote/issues"
Changelog= "https://github.com/Dunwright-dev/django-blocknote/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["django_blocknote*"]

[tool.setuptools.package-data]
django_blocknote = [
    "static/django_blocknote/js/*",
    "static/django_blocknote/css/*", 
    "templates/django_blocknote/*",
    "templates/django_blocknote/*/*",
]
[tool.ruff]
lint.select = [
  "A",      # flake8-builtins
  "AIR",    # Airflow
  "ARG",    # flake8-unused-arguments
  "ASYNC",  # flake8-async
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "CPY",    # Copyright-related rules
  "DJ",     # flake8-django
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "ERA",    # eradicate
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FA",     # flake8-future-annotations
  "FBT",    # flake8-boolean-trap
  "FIX",    # flake8-fixme
  "FLY",    # flynt
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PERF",   # Perflint
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PYI",    # flake8-pyi
  "RET",    # flake8-return
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "SLOT",   # flake8-slots
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TD",     # flake8-todos
  "TID",    # flake8-tidy-imports
  "TRY",    # tryceratops
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  "COM",  # flake8-commas
  # "D",    # pydocstyle
  "EM",   # flake8-errmsg
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "PTH",  # flake8-use-pathlib
  # "Q",    # flake8-quotes
]

lint.ignore = ["RUF012"]
target-version = "py311"
line-length = 88  # Recommended: 88

[tool.ruff.lint.mccabe]
max-complexity = 10  # Recommended: 10

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str"]
max-args = 5  # Recommended: 5
max-branches = 12  # Recommended: 12
max-returns = 6  # Recommended: 6
max-statements = 50  # Recommended: 50