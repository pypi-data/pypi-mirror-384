[project]
name = "weba"
version = "v0.2.32"
description = "html framework"
authors = [{ name = "CJ Lazell", email = "cjlazell@gmail.com" }]
readme = "README.md"
keywords = ['weba', 'htmx', 'python']
requires-python = ">=3.11,<=3.13"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "beautifulsoup4>=4",
    "charset-normalizer>=3.4.0",
    "types-beautifulsoup4>=4",
]

[project.urls]
Homepage = "https://cj.github.io/weba/"
Repository = "https://github.com/cj/weba"
Documentation = "https://cj.github.io/weba/"

[tool.uv]
package = true
default-groups = ["lint", "test", "docs"]

[dependency-groups]
dev = [
    "tox-uv>=1.11.3",
    "aider-chat>=0.70.0",
    "reload>=0.9",
    "sourcery>=1.35.0",
]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings[python]"]
lint = ["ruff>=0.8.2", "pyright", "pre-commit>=2.20.0", "deptry>=0.20.0"]
test = [
    "pytest-asyncio>=0.24.0",
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pytest-watch>=4.2.0",
    "lxml>=5.3.0",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ['weba']

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "N",   # pep8-naming
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "S",   # flake8-bandit
    "PT",  # flake8-pytest-style
    "TC",  # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "YTT", # flake8-2020
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions (specific rules)
    "T10", # flake8-debugger
    "SIM", # flake8-simplify
    "C90", # mccabe
    "PGH", # pygrep-hooks
    "UP",  # pyupgrade
    "RUF", # ruff
    "TRY", # tryceratops
]

ignore = [
    "E501",   # LineTooLong
    "E731",   # DoNotAssignLambda
    "SIM117", # Weba uses nested syntax (found out how to ignore ui)
]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.pyright]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"
extraPaths = [".venv/lib/python3.12/site-packages"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.deptry.per_rule_ignores]
DEP002 = ["types-beautifulsoup4"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["weba"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
