[build-system]
requires = ["hatchling>=1.13.0"]
build-backend = "hatchling.build"

[project]
name = "noveum-trace"
version = "0.3.9"
description = "Cloud-first, decorator-based tracing SDK for LLM applications and multi-agent systems"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Noveum Team", email = "engineering@noveum.ai"},
]
maintainers = [
    {name = "Noveum Team", email = "engineering@noveum.ai"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "tracing",
    "observability",
    "llm",
    "ai",
    "monitoring",
    "multi-agent",
    "langchain",
    "openai",
    "anthropic",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.25.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
# Framework integrations
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.3.0"]
langchain = ["langchain-core>=0.1.0"]

# Development dependencies
dev = [
    # Testing framework
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.0.0",

    # Code quality tools
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",

    # Security tools
    "bandit>=1.7.0",
    "safety>=2.3.0",

    # Type stubs
    "types-requests>=2.25.0",
    "types-PyYAML>=6.0.0",

    # Framework integrations for testing
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "langchain-core>=0.1.0",

    # Development utilities
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "commitizen>=3.0.0",
]

# Testing dependencies (subset of dev)
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

# Linting dependencies
lint = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

[project.urls]
Homepage = "https://github.com/Noveum/noveum-trace"
Documentation = "https://noveum-trace.readthedocs.io"
Repository = "https://github.com/Noveum/noveum-trace"
"Bug Tracker" = "https://github.com/Noveum/noveum-trace/issues"
Changelog = "https://github.com/Noveum/noveum-trace/blob/main/CHANGELOG.md"

[project.entry-points."noveum_trace.plugins"]
# Plugin entry points for auto-discovery

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests",
    "llm: marks tests as LLM-related",
    "agent: marks tests as agent-related",
    "opentelemetry: marks tests as OpenTelemetry-related",
    "async_support: marks tests for async support",
    "comprehensive: marks comprehensive workflow tests",
    "disable_transport_mocking: marks tests that disable transport mocking",
]

[tool.coverage.run]
source = ["src/noveum_trace"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.hatch.build.targets.wheel]
packages = ["src/noveum_trace"]

[tool.hatch.build.targets.sdist]
include = [
    "src/noveum_trace",
    "tests",
    "README.md",
    "LICENSE",
    "CONTRIBUTING.md",
]

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.ruff]
target-version = "py39"
line-length = 88
extend-exclude = ["docs/examples/notebooks/**", "**/*.ipynb"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
"src/noveum_trace/auto_instrument.py" = ["B010"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_unimported = false
no_implicit_optional = true
show_error_codes = true
mypy_path = "src"
packages = ["noveum_trace"]

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "anthropic.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "noveum_trace.auto_instrument"
disable_error_code = ["method-assign"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.9"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "src/noveum_trace/__init__.py:__version__"
]
changelog_file = "CHANGELOG.md"
changelog_format = "### $(title)"
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]
