from typing import Literal, cast

AuditItemType = Literal[
    "ApiKey",
    "Cause",
    "CustomField",
    "CustomFieldOption",
    "CustomForm",
    "Dashboard",
    "Environment",
    "EscalationPolicy",
    "EscalationPolicyPath",
    "ExportJob",
    "FormField",
    "Functionality",
    "GeniusWorkflow",
    "GeniusWorkflowGroup",
    "GeniusWorkflowRun",
    "Group",
    "Heartbeat",
    "Incident",
    "IncidentActionItem",
    "IncidentEvent",
    "IncidentFormFieldSelection",
    "IncidentFormFieldSelectionUser",
    "IncidentPostMortem",
    "IncidentRoleAssignment",
    "IncidentRoleTask",
    "IncidentStatusPageEvent",
    "IncidentTask",
    "IncidentType",
    "LiveCallRouter",
    "OnCallRole",
    "Playbook",
    "PlaybookTask",
    "Role",
    "Schedule",
    "Service",
    "Severity",
    "StatusPage",
]

AUDIT_ITEM_TYPE_VALUES: set[AuditItemType] = {
    "ApiKey",
    "Cause",
    "CustomField",
    "CustomFieldOption",
    "CustomForm",
    "Dashboard",
    "Environment",
    "EscalationPolicy",
    "EscalationPolicyPath",
    "ExportJob",
    "FormField",
    "Functionality",
    "GeniusWorkflow",
    "GeniusWorkflowGroup",
    "GeniusWorkflowRun",
    "Group",
    "Heartbeat",
    "Incident",
    "IncidentActionItem",
    "IncidentEvent",
    "IncidentFormFieldSelection",
    "IncidentFormFieldSelectionUser",
    "IncidentPostMortem",
    "IncidentRoleAssignment",
    "IncidentRoleTask",
    "IncidentStatusPageEvent",
    "IncidentTask",
    "IncidentType",
    "LiveCallRouter",
    "OnCallRole",
    "Playbook",
    "PlaybookTask",
    "Role",
    "Schedule",
    "Service",
    "Severity",
    "StatusPage",
}


def check_audit_item_type(value: str) -> AuditItemType:
    if value in AUDIT_ITEM_TYPE_VALUES:
        return cast(AuditItemType, value)
    raise TypeError(f"Unexpected value {value!r}. Expected one of {AUDIT_ITEM_TYPE_VALUES!r}")
