[project]
name = "typed-diskcache"
dynamic = ["version"]
description = "Disk and file backed persistent cache."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "phi", email = "phi.friday@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Free Threading :: 1 - Unstable",
    "Framework :: AsyncIO",
]
requires-python = ">=3.10"
dependencies = [
    "cloudpickle>=3.1.0",
    "pydantic>=2",
    "sqlalchemy-utils",
    "sqlalchemy>=2.0.13",
    "typing-extensions>=4.10.0",
    "tomli; python_version < '3.11'",
]
[project.optional-dependencies]
asyncio = ["anyio>=4", "aiosqlite", "sqlalchemy[asyncio]>=2"]

[dependency-groups]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-env>=1.2.0",
    "pytest-xdist>=3.8.0",
    "typed-diskcache[asyncio]",
]
dev = [
    { include-group = "test" },
    "ruff==0.14.0",
    "ipykernel>=7.0.0",
    "pre-commit>=4.3.0",
    "poethepoet>=0.37.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocstrings[python]>=0.30.1",
    "black>=25.9.0",
    "griffe-pydantic>=1.1.8",
    "griffe-inherited-docstrings>=1.1.2",
    "griffe-warnings-deprecated>=1.1.0",
]

[tool.uv]
managed = true
default-groups = ["dev"]

[tool.poe.tasks]
lint = ["_lint:check", "_lint:format"]
check = "pre-commit run --all-files --show-diff-on-failure"
"_lint:check" = "ruff check src --fix"
"_lint:format" = "ruff format src"

[project.urls]
Documentation = "https://typed-diskcache.readthedocs.io/"
Repository = "https://github.com/phi-friday/typed-diskcache"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/typed_diskcache"]

[tool.hatch.build.targets.sdist]
include = ["src/typed_diskcache", "src/licenses"]

[tool.pytest.ini_options]
addopts = "-n 4 -W error::UserWarning"
testpaths = ["src/tests"]
markers = ["only"]

[tool.coverage.run]
omit = [
    "./src/tests/**/*",
    "./src/typed_diskcache/database/revision/*",
    "./src/typed_diskcache/utils/deque.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
