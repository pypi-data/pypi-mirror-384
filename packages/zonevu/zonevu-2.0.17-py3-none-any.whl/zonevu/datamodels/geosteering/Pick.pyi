from ..DataModel import DataModel as DataModel
from dataclasses import dataclass, field
from dataclasses_json import config

@dataclass
class Pick(DataModel):
    tvd: float | None = field(default=None, metadata=config(field_name='TVD'))
    md: float = field(default=0, metadata=config(field_name='MD'))
    vx: float | None = field(default=None, metadata=config(field_name='VX'))
    target_tvt: float | None = field(default=None, metadata=config(field_name='TargetTVT'))
    target_tvd: float | None = field(default=None, metadata=config(field_name='TargetTVD'))
    target_elevation: float | None = field(default=None, metadata=config(field_name='TargetElevation'))
    latitude: float | None = ...
    longitude: float | None = ...
    x: float | None = ...
    y: float | None = ...
    dx: float | None = field(default=None, metadata=config(field_name='DX'))
    dy: float | None = field(default=None, metadata=config(field_name='DY'))
    elevation: float | None = ...
    block_flag: bool = ...
    fault_flag: bool = ...
    type_wellbore_id: int = ...
    type_curve_def_id: int | None = ...
    @property
    def valid(self) -> bool: ...
    def hidden(self) -> bool: ...
