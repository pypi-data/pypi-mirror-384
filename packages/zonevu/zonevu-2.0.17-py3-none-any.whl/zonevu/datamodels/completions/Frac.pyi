from ...datamodels.Helpers import MakeIsodateOptionalField as MakeIsodateOptionalField
from ...datamodels.completions.FracEntry import FracEntry as FracEntry
from ...datamodels.completions.Stage import Stage as Stage
from ..DataModel import DataModel as DataModel
from dataclasses import dataclass, field
from datetime import datetime

@dataclass
class UserParam:
    id: int = ...
    name: str = ...
    unit: str = ...

@dataclass
class Frac(FracEntry):
    active: bool = ...
    service_company: str | None = ...
    fleet: str | None = ...
    job_type: str | None = ...
    frac_system: str | None = ...
    fluid_system: str | None = ...
    creator: str | None = ...
    interpretation_id: int | None = ...
    user_param_defs: list[UserParam | None] = field(default_factory=list[UserParam | None])
    stages: list[Stage] = field(default_factory=list[Stage])
    extra_curve_ids: list[int] = field(default_factory=list[int])
    last_modified_date: datetime | None = ...
    last_modified_by_name: str | None = ...
    def copy_ids_from(self, source: DataModel): ...
