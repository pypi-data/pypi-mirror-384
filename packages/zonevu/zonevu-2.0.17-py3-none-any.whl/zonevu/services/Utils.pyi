from dataclasses import dataclass
from pathlib import Path

class Input:
    @staticmethod
    def get_name_from_args(title: str = '') -> str: ...
    @staticmethod
    def get_names_from_args(*titles: str) -> dict[str, str]: ...
    @staticmethod
    def confirm(message: str): ...

class StringUtils:
    @staticmethod
    def is_none_or_whitespace(s: str | None) -> bool: ...
    @staticmethod
    def has_chars(s: str | None) -> bool: ...

class Naming:
    @staticmethod
    def slugify(name: str) -> str: ...
    @staticmethod
    def replace_forbidden_symbols(filename: str) -> str: ...
    @staticmethod
    def make_safe_name(name: str, identifier: str | int | None = None) -> str: ...
    @staticmethod
    def make_safe_name_default(name: str | None, default: str, identifier: str | int | None = None) -> str: ...
    @staticmethod
    def build_safe_entity_dir(parent_dir: Path | str, entity_name: str, identifier: str | int | None = None) -> Path: ...
    @staticmethod
    def check_dir(dir_path: Path): ...
    @staticmethod
    def create_dir_under_home(dir_name: str) -> Path: ...

@dataclass
class CloudBlobCredential:
    url: str
    container: str
    token: str
    path: str | None = ...
    @property
    def full_url(self) -> str: ...
