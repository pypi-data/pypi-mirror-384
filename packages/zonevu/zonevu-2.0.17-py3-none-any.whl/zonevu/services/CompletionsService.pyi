from ..datamodels.completions.Frac import Frac as Frac
from ..datamodels.completions.FracEntry import FracEntry as FracEntry
from ..datamodels.wells.Wellbore import Wellbore as Wellbore
from .Client import Client as Client, ZonevuError as ZonevuError
from strenum import StrEnum

class StageUpdateMethodEnum(StrEnum):
    Preserve = 'Preserve'
    Merge = 'Merge'
    Overwrite = 'Overwrite'
    Bypass = 'Bypass'

class CompletionsService:
    client: Client
    def __init__(self, c: Client) -> None: ...
    def get_fracs(self, wellbore_id: int) -> list[FracEntry]: ...
    def find_frac(self, frac_id: int) -> Frac: ...
    def load_fracs(self, wellbore: Wellbore) -> list[Frac]: ...
    def add_frac(self, wellbore: Wellbore | int, frac: Frac) -> None: ...
    def delete_frac(self, frac: Frac, delete_code: str) -> None: ...
    def update_frac(self, frac: Frac, frac_update: bool, stage_update: StageUpdateMethodEnum = ...) -> None: ...
