from ..datamodels.wells.Curve import Curve as Curve
from ..datamodels.wells.CurveGroup import CurveGroup as CurveGroup
from ..datamodels.wells.Wellbore import Wellbore as Wellbore
from ..datamodels.wells.Welllog import Welllog as Welllog
from .Client import Client as Client

class WelllogService:
    client: Client
    def __init__(self, c: Client) -> None: ...
    def get_welllogs(self, wellboreId: int) -> list[Welllog]: ...
    def load_welllogs(self, wellbore: Wellbore, load_curves: bool = False) -> list[Welllog]: ...
    def get_welllog(self, welllog_id: int) -> Welllog: ...
    def add_welllog(self, wellbore: Wellbore, log: Welllog, *, lookup_alias: bool = False) -> None: ...
    def delete_welllog(self, log: Welllog, delete_code: str) -> None: ...
    def get_lasfile(self, welllog: Welllog) -> str | None: ...
    def post_lasfile(self, welllog: Welllog, las_text: str) -> None: ...
    def create_las_file_server(self, welllog: Welllog, overwrite: bool = False): ...
    def load_curve_samples(self, curve: Curve): ...
    def load_splice_curve_samples(self, curve_group: CurveGroup): ...
    def add_curve_samples(self, curve: Curve) -> None: ...
    def add_curve_group(self, welllog_id: int, curve_group: CurveGroup) -> None: ...
