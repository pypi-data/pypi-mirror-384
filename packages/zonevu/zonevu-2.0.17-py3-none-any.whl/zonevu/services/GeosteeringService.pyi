from ..datamodels.geosteering.Interpretation import Interpretation as Interpretation, InterpretationEntry as InterpretationEntry
from ..datamodels.wells.Wellbore import Wellbore as Wellbore
from .Client import Client as Client
from enum import Enum

class PickAdjustEnum(Enum):
    BlockBoundaries = 0
    NormalFaults = 1
    MidPoints = 2

class GeosteeringService:
    client: Client
    def __init__(self, c: Client) -> None: ...
    def get_interpretations(self, wellbore_id: int) -> list[InterpretationEntry]: ...
    def get_interpretation_entry(self, interp_id: int) -> InterpretationEntry: ...
    def interpretation_changed(self, interp: Interpretation | InterpretationEntry) -> bool: ...
    def load_interpretations(self, wellbore: Wellbore) -> list[InterpretationEntry]: ...
    def get_interpretation(self, entry: int | InterpretationEntry, pic_adjust: PickAdjustEnum = ..., interval: float | None = None) -> Interpretation: ...
    def load_interpretation(self, interp: Interpretation, pic_adjust: PickAdjustEnum = ..., interval: float | None = None) -> Interpretation: ...
    def add_interpretation(self, wellbore_id: int, interp: Interpretation, overwrite: bool = False) -> None: ...
    def delete_interpretation(self, interp: Interpretation | InterpretationEntry, delete_code: str) -> None: ...
