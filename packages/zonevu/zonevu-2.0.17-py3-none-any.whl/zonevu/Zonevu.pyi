from .datamodels.Company import Company as Company
from .datamodels.geospatial.Enums import DepthUnitsEnum as DepthUnitsEnum, DistanceUnitsEnum as DistanceUnitsEnum, UnitsSystemEnum as UnitsSystemEnum
from .services.Client import Client as Client
from .services.CompanyService import CompanyService as CompanyService
from .services.CompletionsService import CompletionsService as CompletionsService
from .services.CoordinatesService import CoordinatesService as CoordinatesService
from .services.DocumentService import DocumentService as DocumentService
from .services.EndPoint import EndPoint as EndPoint
from .services.Error import ZonevuError as ZonevuError
from .services.GeomodelService import GeomodelService as GeomodelService
from .services.GeosteeringService import GeosteeringService as GeosteeringService
from .services.MapService import MapService as MapService
from .services.ProjectService import ProjectService as ProjectService
from .services.SeismicService import SeismicService as SeismicService
from .services.StratService import StratService as StratService
from .services.SurveyService import SurveyService as SurveyService
from .services.Utils import Naming as Naming
from .services.WellService import WellService as WellService
from .services.WelllogService import WelllogService as WelllogService
from .services.WelltopService import WelltopService as WelltopService
from pathlib import Path

class Zonevu:
    company: Company
    def __init__(self, end_point: EndPoint, units_system: UnitsSystemEnum = ...) -> None: ...
    @classmethod
    def init_from_apikey(cls, api_key: str, units_system: UnitsSystemEnum = ...) -> Zonevu: ...
    @classmethod
    def init_from_keyfile(cls, units_system: UnitsSystemEnum = ...) -> Zonevu: ...
    @classmethod
    def init_from_std_keyfile(cls, units_system: UnitsSystemEnum = ...) -> Zonevu: ...
    def append_header(self, key: str, value: str) -> None: ...
    @property
    def company_service(self) -> CompanyService: ...
    @property
    def well_service(self) -> WellService: ...
    @property
    def welllog_service(self) -> WelllogService: ...
    @property
    def welltop_service(self) -> WelltopService: ...
    @property
    def survey_service(self) -> SurveyService: ...
    @property
    def distance_units(self) -> DistanceUnitsEnum: ...
    @distance_units.setter
    def distance_units(self, new_value: DistanceUnitsEnum): ...
    @property
    def depth_units(self) -> DepthUnitsEnum: ...
    @depth_units.setter
    def depth_units(self, new_value: DepthUnitsEnum): ...
    def units_system(self) -> UnitsSystemEnum: ...
    @property
    def geosteering_service(self) -> GeosteeringService: ...
    @property
    def project_service(self) -> ProjectService: ...
    @property
    def coordinates_service(self) -> CoordinatesService: ...
    @property
    def formation_service(self) -> StratService: ...
    @property
    def geomodel_service(self) -> GeomodelService: ...
    @property
    def map_service(self) -> MapService: ...
    @property
    def document_service(self) -> DocumentService: ...
    @property
    def strat_service(self) -> StratService: ...
    @property
    def seismic_service(self) -> SeismicService: ...
    @property
    def completions_service(self) -> CompletionsService: ...
    def get_info(self) -> Company: ...
    def print_notice(self) -> None: ...
    @property
    def archive_directory(self) -> Path: ...
    @property
    def wells_directory(self) -> Path: ...
