# coding: utf-8

"""
    ChannelShipper & Royal Mail Public API

    Import your orders, retrieve your orders and generate labels.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from royal_mail_click_and_drop import ShipmentPackageRequest

class TestShipmentPackageRequest(unittest.TestCase):
    """ShipmentPackageRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ShipmentPackageRequest:
        """Test ShipmentPackageRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ShipmentPackageRequest`
        """
        model = ShipmentPackageRequest()
        if include_optional:
            return ShipmentPackageRequest(
                weight_in_grams = 1,
                package_format_identifier = '',
                custom_package_format_identifier = '',
                dimensions = royal-mail-click-and-drop.models.dimensions_request.DimensionsRequest(
                    height_in_mms = 56, 
                    width_in_mms = 56, 
                    depth_in_mms = 56, ),
                contents = [
                    royal-mail-click-and-drop.models.product_item_request.ProductItemRequest(
                        name = '', 
                        sku = '', 
                        quantity = 1, 
                        unit_value = 0, 
                        unit_weight_in_grams = 0, 
                        customs_description = '', 
                        extended_customs_description = '', 
                        customs_code = '', 
                        origin_country_code = '', 
                        customs_declaration_category = 'none', 
                        requires_export_licence = True, 
                        stock_location = '', 
                        use_origin_preference = True, 
                        supplementary_units = '', 
                        license_number = '', 
                        certificate_number = '', )
                    ]
            )
        else:
            return ShipmentPackageRequest(
                weight_in_grams = 1,
                package_format_identifier = '',
        )
        """

    def testShipmentPackageRequest(self):
        """Test ShipmentPackageRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
