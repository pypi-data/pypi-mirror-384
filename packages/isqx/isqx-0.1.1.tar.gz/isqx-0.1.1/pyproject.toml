[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "isqx"
version = "0.1.1"
description = "Units and quantity kinds defined by ISO/IEC 80000 and other subfields."
readme = "README.md"
authors = [{ name = "Abraham Cheung", email = "abraham@ylcheung.com" }]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
]
dependencies = ["typing-extensions>=4.0.0; python_version<'3.10'"]

[project.urls]
Repository = "https://github.com/abc8747/isqx"
Documentation = "https://abc8747.github.io/isqx"
Releases = "https://github.com/abc8747/isqx/releases"

[dependency-groups]
dev = ["ipykernel>=6.29.5", "typer>=0.16.0"]
lint = ["ruff>=0.11.12"]
test = ["pytest>=8.3.5", "pytest-cov>=6.1.1"]
typing = ["mypy>=1.16.0"]
docs = [
    "mkdocs-material[imaging]>=9.6.14",
    "mkdocstrings-python>=1.16.11",
    "griffe>=1.14.0",
]
wikidata = ["httpx>=0.28.1", "polars>=1.31.0"]

[project.entry-points."mkdocs.plugins"]
isqx = "isqx.mkdocs.plugin:IsqxPlugin"

[project.entry-points."mkdocstrings.python.templates"]
isqx = "isqx.mkdocs.extension:get_templates_path"

[tool.uv]
default-groups = "all"

[tool.ruff]
line-length = 80
target-version = "py39"

[tool.mypy]
python_version = "3.9"
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.coverage.report]
exclude_also = [
    # ellipsis in protocol
    "\\.\\.\\.",
    "assert_never\\(.*\\)",
]
