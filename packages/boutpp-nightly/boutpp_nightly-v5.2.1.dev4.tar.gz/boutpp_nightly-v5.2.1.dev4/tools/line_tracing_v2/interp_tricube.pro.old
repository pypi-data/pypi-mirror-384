;Given 64 function values f(i,j,k) for i,j,k=-1,0,1,2
;and normalized coordinates x(i),y(j),z(k) calculate
;coefficients of P(x)=SUM(i=0,3)SUM(j=0,3)SUM(k=0,3)a_ijk*x^i*y^j*z^k
FUNCTION interp_tricube, f, x, y, z

  COMMON tricube_data, A_int, A_inv
  ;;A_inv is stored in this common data so it only needs to be calculated once

;;First, estimate the derivatives numerically
  f_   =FLTARR(8)
  fx_  =FLTARR(8)
  fy_  =FLTARR(8)
  fz_  =FLTARR(8)
  fxy_ =FLTARR(8)
  fxz_ =FLTARR(8)
  fyz_ =FLTARR(8)
  fxyz_=FLTARR(8)
  FOR k=1,2 DO BEGIN
    FOR j=1,2 DO BEGIN
      FOR i=1,2 DO BEGIN
        f_[(i-1)+(j-1)*2+(k-1)*4]=f[i,j,k]
  ; d_x( f(i,j,k) )~= ( f(i+1,j,k)-f(i-1,j,k) )/( x(i+1)-x(i-1) )
       fx_[(i-1)+(j-1)*2+(k-1)*4]=( f[i+1,j,k]-f[i-1,j,k] )/( x[i+1]-x[i-1] )
  ; d_y( f(i,j,k) )~= ( f(i,j+1,k)-f(i,j-1,k) )/( y(j+1)-y(j-1) )
        fy_[(i-1)+(j-1)*2+(k-1)*4]=( f[i,j+1,k]-f[i,j-1,k] )/( y[j+1]-y[j-1] )
  ; d_z( f(i,j,k) )~= ( f(i,j,k+1)-f(i,j,k-1) )/( z(k+1)-z(k-1) )
        fz_[(i-1)+(j-1)*2+(k-1)*4]=( f[i,j,k+1]-f[i,j,k-1] )/( z[k+1]-z[k-1] )
  ; d_xy(f(i,j,k) )~= ( f(i+1,j+1,k)-f(i+1,j-1,k)-f(i-1,j+1,k)+f(i-1,j-1,k) )
  ;                    /( ( x(i+1)-x(i-1) )*( y(j+1)-y(j-1) ) )
        fxy_[(i-1)+(j-1)*2+(k-1)*4]=                                           $
          ( f[i+1,j+1,k]-f[i+1,j-1,k]-f[i-1,j+1,k]+f[i-1,j-1,k] )              $
           /( (x[i+1]-x[i-1])*(y[j+1]-y[j-1]) )
  ; d_xz(f(i,j,k) )~= ( f(i+1,j,k+1)-f(i+1,j,k-1)-f(i-1,j,k+1)+f(i-1,j,k-1) )
  ;                    /( ( x(i+1)-x(i-1) )*( z(k+1)-z(k-1) ) )
        fxz_[(i-1)+(j-1)*2+(k-1)*4]=                                           $
          ( f[i+1,j,k+1]-f[i+1,j,k-1]-f[i-1,j,k+1]+f[i-1,j,k-1] )              $
           /( (x[i+1]-x[i-1])*(z[k+1]-z[k-1]) )
  ; d_yz(f(i,j,k) )~= ( f(i,j+1,k+1)-f(i,j+1,k-1)-f(i,j-1,k+1)+f(i,j-1,k-1) )
  ;                    /( ( y(j+1)-y(j-1) )*( z(k+1)-z(k-1) ) )
        fyz_[(i-1)+(j-1)*2+(k-1)*4]=                                           $
          ( f[i,j+1,k+1]-f[i,j+1,k-1]-f[i,j-1,k+1]+f[i,j-1,k-1] )              $
           /( (y[j+1]-y[j-1])*(z[k+1]-z[k-1]) )
  ;d_xyz(f(i,j,k))=(f(i+1,j+1,k+1)-f(i+1,j-1,k+1)-f(i-1,j+1,k+1)+f(i-1,j-1,k+1)
  ;                -f(i+1,j+1,k-1)+f(i+1,j-1,k-1)+f(i-1,j+1,k-1)-f(i-1,j-1,k-1))
  ;                /( (x(i+1)-x(i-1))*(y(j+1)-y(j-1))*(z(k+1)-z(k-1)) )

        fxyz_[(i-1)+(j-1)*2+(k-1)*4]=                                          $
          ( f[i+1,j+1,k+1]-f[i+1,j-1,k+1]-f[i-1,j+1,k+1]+f[i-1,j-1,k+1]        $
           -f[i+1,j+1,k-1]+f[i+1,j-1,k-1]+f[i-1,j+1,k-1]-f[i-1,j-1,k-1] )      $
           /( (x[i+1]-x[i-1])*(y[j+1]-y[j-1])*(z[k+1]-z[k-1]) )
      ENDFOR
    ENDFOR
  ENDFOR
;;Next, assemble the RHS vector of function+derivative values
  f_vec=[f_,fx_,fy_,fz_,fxy_,fxz_,fyz_,fxyz_]


;;OLD METHOD HERE
  ;estimates derivative based on nearest two neighbors
  ; d_x( f(i,j,k) )~= ( f(i+1,j,k)-f(i-1,j,k) )/( x(i+1)-x(i-1) )
  fx_000=( f[2,1,1]-f[0,1,1] )/( x[2]-x[0] )
  fx_100=( f[3,1,1]-f[1,1,1] )/( x[3]-x[1] )
  fx_010=( f[2,2,1]-f[0,2,1] )/( x[2]-x[0] )
  fx_110=( f[3,2,1]-f[1,2,1] )/( x[3]-x[1] )
  fx_001=( f[2,1,2]-f[0,1,2] )/( x[2]-x[0] )
  fx_101=( f[3,1,2]-f[1,1,2] )/( x[3]-x[1] )
  fx_011=( f[2,2,2]-f[0,2,2] )/( x[2]-x[0] )
  fx_111=( f[3,2,2]-f[1,2,2] )/( x[3]-x[1] )

  ; d_y( f(i,j,k) )~= ( f(i,j+1,k)-f(i,j-1,k) )/( y(j+1)-y(j-1) )
  fy_000=( f[1,2,1]-f[1,0,1] )/( y[2]-y[0] )
  fy_100=( f[2,2,1]-f[2,0,1] )/( y[2]-y[0] )
  fy_010=( f[1,3,1]-f[1,1,1] )/( y[3]-y[1] )
  fy_110=( f[2,3,1]-f[2,1,1] )/( y[3]-y[1] )
  fy_001=( f[1,2,2]-f[1,0,2] )/( y[2]-y[0] )
  fy_101=( f[2,2,2]-f[2,0,2] )/( y[2]-y[0] )
  fy_011=( f[1,3,2]-f[1,1,2] )/( y[3]-y[1] )
  fy_111=( f[2,3,2]-f[2,1,2] )/( y[3]-y[1] )

  ; d_z( f(i,j,k) )~= ( f(i,j,k+1)-f(i,j,k-1) )/( z(k+1)-z(k-1) )
  fz_000=( f[1,1,2]-f[1,1,0] )/( z[2]-z[0] )
  fz_100=( f[2,1,2]-f[2,1,0] )/( z[2]-z[0] )
  fz_010=( f[1,2,2]-f[1,2,0] )/( z[2]-z[0] )
  fz_110=( f[2,2,2]-f[2,2,0] )/( z[2]-z[0] )
  fz_001=( f[1,1,3]-f[1,1,1] )/( z[3]-z[1] )
  fz_101=( f[2,1,3]-f[2,1,1] )/( z[3]-z[1] )
  fz_011=( f[1,2,3]-f[1,2,1] )/( z[3]-z[1] )
  fz_111=( f[2,2,3]-f[2,2,1] )/( z[3]-z[1] )

  ; d_xy(f(i,j,k) )~= ( f(i+1,j+1,k)-f(i+1,j-1,k)-f(i-1,j+1,k)+f(i-1,j-1,k) )/ $
  ;                     ( ( x(i+1)-x(i-1) )*( y(j+1)-y(j-1) ) )
  fxy_000=( f[2,2,1]-f[2,0,1]-f[0,2,1]+f[0,0,1] )/( (x[2]-x[0])*(y[2]-y[0]) )
  fxy_100=( f[3,2,1]-f[3,0,1]-f[1,2,1]+f[1,0,1] )/( (x[3]-x[1])*(y[2]-y[0]) )
  fxy_010=( f[2,3,1]-f[2,1,1]-f[0,3,1]+f[0,1,1] )/( (x[2]-x[0])*(y[3]-y[1]) )
  fxy_110=( f[3,3,1]-f[3,1,1]-f[1,3,1]+f[1,1,1] )/( (x[3]-x[1])*(y[3]-y[1]) )
  fxy_001=( f[2,2,2]-f[2,0,2]-f[0,2,2]+f[0,0,2] )/( (x[2]-x[0])*(y[2]-y[0]) )
  fxy_101=( f[3,2,2]-f[3,0,2]-f[1,2,2]+f[1,0,2] )/( (x[3]-x[1])*(y[2]-y[0]) )
  fxy_011=( f[2,3,2]-f[2,1,2]-f[0,3,2]+f[0,1,2] )/( (x[2]-x[0])*(y[3]-y[1]) )
  fxy_111=( f[3,3,2]-f[3,1,2]-f[1,3,2]+f[1,1,2] )/( (x[3]-x[1])*(y[3]-y[1]) )

  ; d_xz(f(i,j,k) )~= ( f(i+1,j,k+1)-f(i+1,j,k-1)-f(i-1,j,k+1)+f(i-1,j,k-1) )/ $
  ;                     ( ( x(i+1)-x(i-1) )*( z(k+1)-z(k-1) ) )
  fxz_000=( f[2,1,2]-f[2,1,0]-f[0,1,2]+f[0,1,0] )/( (x[2]-x[0])*(z[2]-z[0]) )
  fxz_100=( f[3,1,2]-f[3,1,0]-f[1,1,2]+f[1,1,0] )/( (x[3]-x[1])*(z[2]-z[0]) )
  fxz_010=( f[2,2,2]-f[2,2,0]-f[0,2,2]+f[0,2,0] )/( (x[2]-x[0])*(z[2]-z[0]) )
  fxz_110=( f[3,2,2]-f[3,2,0]-f[1,2,2]+f[1,2,0] )/( (x[3]-x[1])*(z[2]-z[0]) )
  fxz_001=( f[2,1,3]-f[2,1,1]-f[0,1,3]+f[0,1,1] )/( (x[2]-x[0])*(z[3]-z[1]) )
  fxz_101=( f[3,1,3]-f[3,1,1]-f[1,1,3]+f[1,1,1] )/( (x[3]-x[1])*(z[3]-z[1]) )
  fxz_011=( f[2,2,3]-f[2,2,1]-f[0,2,3]+f[0,2,1] )/( (x[2]-x[0])*(z[3]-z[1]) )
  fxz_111=( f[3,2,3]-f[3,2,1]-f[1,2,3]+f[1,2,1] )/( (x[3]-x[1])*(z[3]-z[1]) )

  ; d_yz(f(i,j,k) )~= ( f(i,j+1,k+1)-f(i,j+1,k-1)-f(i,j-1,k+1)+f(i,j-1,k-1) )/ $
  ;                     ( ( y(j+1)-y(j-1) )*( z(k+1)-z(k-1) ) )
  fyz_000=( f[1,2,2]-f[1,2,0]-f[1,0,2]+f[1,0,0] )/( (y[2]-y[0])*(z[2]-z[0]) )
  fyz_100=( f[2,2,2]-f[2,2,0]-f[2,0,2]+f[2,0,0] )/( (y[2]-y[0])*(z[2]-z[0]) )
  fyz_010=( f[1,3,2]-f[1,3,0]-f[1,1,2]+f[1,1,0] )/( (y[3]-y[1])*(z[2]-z[0]) )
  fyz_110=( f[2,3,2]-f[2,3,0]-f[2,1,2]+f[2,1,0] )/( (y[3]-y[1])*(z[2]-z[0]) )
  fyz_001=( f[1,2,3]-f[1,2,1]-f[1,0,3]+f[1,0,1] )/( (y[2]-y[0])*(z[3]-z[1]) )
  fyz_101=( f[2,2,3]-f[2,2,1]-f[2,0,3]+f[2,0,1] )/( (y[2]-y[0])*(z[3]-z[1]) )
  fyz_011=( f[1,3,3]-f[1,3,1]-f[1,1,3]+f[1,1,1] )/( (y[3]-y[1])*(z[3]-z[1]) )
  fyz_111=( f[2,3,3]-f[2,3,1]-f[2,1,3]+f[2,1,1] )/( (y[3]-y[1])*(z[3]-z[1]) )
 
  ;d_xyz(f(i,j,k))=(f(i+1,j+1,k+1)-f(i+1,j-1,k+1)-f(i-1,j+1,k+1)+f(i-1,j-1,k+1)
  ;                -f(i+1,j+1,k-1)+f(i+1,j-1,k-1)+f(i-1,j+1,k-1)-f(i-1,j-1,k-1))
  ;                /( (x(i+1)-x(i-1))*(y(j+1)-y(j-1))*(z(k+1)-z(k-1)) )
  fxyz_000=( f[2,2,2]-f[2,0,2]-f[0,2,2]+f[0,0,2]                               $
            -f[2,2,0]+f[2,0,0]+f[0,2,0]-f[0,0,0] )                             $
           /( (x[2]-x[0])*(y[2]-y[0])*(z[2]-z[0]) )
  fxyz_100=( f[3,2,2]-f[3,0,2]-f[1,2,2]+f[1,0,2]                               $
            -f[3,2,0]+f[3,0,0]+f[1,2,0]-f[1,0,0] )                             $
           /( (x[3]-x[1])*(y[2]-y[0])*(z[2]-z[0]) )
  fxyz_010=( f[2,3,2]-f[2,1,2]-f[0,3,2]+f[0,1,2]                               $
            -f[2,3,0]+f[2,1,0]+f[0,3,0]-f[0,1,0] )                             $
           /( (x[2]-x[0])*(y[3]-y[1])*(z[2]-z[0]) )
  fxyz_110=( f[3,3,2]-f[3,1,2]-f[1,3,2]+f[1,1,2]                               $
            -f[3,3,0]+f[3,1,0]+f[1,3,0]-f[1,1,0] )                             $
           /( (x[3]-x[1])*(y[3]-y[1])*(z[2]-z[0]) )
  fxyz_001=( f[2,2,3]-f[2,0,3]-f[0,2,3]+f[0,0,3]                               $
            -f[2,2,1]+f[2,0,1]+f[0,2,1]-f[0,0,1] )                             $
           /( (x[2]-x[0])*(y[2]-y[0])*(z[3]-z[1]) )
  fxyz_101=( f[3,2,3]-f[3,0,3]-f[1,2,3]+f[1,0,3]                               $
            -f[3,2,1]+f[3,0,1]+f[1,2,1]-f[1,0,1] )                             $
           /( (x[3]-x[1])*(y[2]-y[0])*(z[3]-z[1]) )
  fxyz_011=( f[2,3,3]-f[2,1,3]-f[0,3,3]+f[0,1,3]                               $
            -f[2,3,1]+f[2,1,1]+f[0,3,1]-f[0,1,1] )                             $
           /( (x[2]-x[0])*(y[3]-y[1])*(z[3]-z[1]) )
  fxyz_111=( f[3,3,3]-f[3,1,3]-f[1,3,3]+f[1,1,3]                               $
            -f[3,3,1]+f[3,1,1]+f[1,3,1]-f[1,1,1] )                             $
           /( (x[3]-x[1])*(y[3]-y[1])*(z[3]-z[1]) )

  ;assemble the RHS vector
  f_old=[                                                                      $
     f[1,1,1],f[2,1,1],f[1,2,1],f[2,2,1],f[1,1,2],f[2,1,2],f[1,2,2],f[2,2,2],  $
       fx_000,  fx_100,  fx_010,  fx_110,  fx_001,  fx_101,  fx_011,  fx_111,  $
       fy_000,  fy_100,  fy_010,  fy_110,  fy_001,  fy_101,  fy_011,  fy_111,  $
       fz_000,  fz_100,  fz_010,  fz_110,  fz_001,  fz_101,  fz_011,  fz_111,  $
      fxy_000, fxy_100, fxy_010, fxy_110, fxy_001, fxy_101, fxy_011, fxy_111,  $
      fxz_000, fxz_100, fxz_010, fxz_110, fxz_001, fxz_101, fxz_011, fxz_111,  $
      fyz_000, fyz_100, fyz_010, fyz_110, fyz_001, fyz_101, fyz_011, fyz_111,  $
     fxyz_000,fxyz_100,fxyz_010,fxyz_110,fxyz_001,fxyz_101,fxyz_011,fxyz_111  ]
;;END OLD METHOD

;  STOP,'Compare f_vec and f_old; if there are differences you screwed up...'

;;Lastly, multiply the inversion matrix by the vector of function values
  coeffs=TRANSPOSE(A_inv)#f_vec
  RETURN,coeffs
END
