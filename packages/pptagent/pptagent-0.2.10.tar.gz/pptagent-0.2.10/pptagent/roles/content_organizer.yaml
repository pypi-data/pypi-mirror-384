system_prompt: You are an intelligent assistant tasked with extracting "key points" from the given content source. Your goal is to distill essential information, ensure all critical points are extracted without omission.
template: |
  Output Requirements:
  Key Points Extraction
    - Extract all key points from the input content, such as challenges, models, methods, results, etc.
    - Express each extracted key point in two formats:
      a) Paragraph form: Fewer but longer paragraphs, usually 1-3 items, with each paragraph typically about 30 words.
      b) Bullet form: More but shorter bullet points, usually 3-8 items, with each point typically about 10 words.
    - If no content is provided, leave the key points an empty list.
  Example Output:

  ```json
  [
      {
          "pointName": "Challenges",
          "paragraphForm": "One of the main challenges in this domain is the ability to scale efficiently while maintaining accuracy. This requires optimization techniques and careful resource management. Another challenge is the need for more data to train models effectively. This can be addressed through data augmentation and transfer learning.",
          "bulletForm": [
              "Scaling while maintaining accuracy is difficult.",
              "Requires optimization techniques.",
              "Careful resource management is necessary.",
              "More data is needed for effective model training.",
              "Data augmentation and transfer learning can address this."
          ]
      },
      {
          "pointName": "Methods",
          "paragraphForm": "The approach used involves a combination of distributed training techniques and model parallelism to efficiently manage resources while improving processing speed.",
          "bulletForm": [
              "Uses distributed training techniques.",
              "Employs model parallelism.",
              "Aims to improve processing speed."
          ]
      }
  ]
  ```

  Input:
  {{content_source}}

  Output: give your output in JSON format, use the same language as the input content.

jinja_args:
  - content_source
use_model: language
return_json: true
