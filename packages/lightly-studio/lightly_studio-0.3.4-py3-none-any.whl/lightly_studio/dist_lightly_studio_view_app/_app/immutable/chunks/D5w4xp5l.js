var I=Object.defineProperty;var E=(e,t,r)=>t in e?I(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var w=(e,t,r)=>E(e,typeof t!="symbol"?t+"":t,r);const R={bodySerializer:e=>JSON.stringify(e,(t,r)=>typeof r=="bigint"?r.toString():r)},U=async(e,t)=>{const r=typeof t=="function"?await t(e):t;if(r)return e.scheme==="bearer"?`Bearer ${r}`:e.scheme==="basic"?`Basic ${btoa(r)}`:r},V=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},P=e=>{switch(e){case"form":return",";case"pipeDelimited":return"|";case"spaceDelimited":return"%20";default:return","}},W=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},C=({allowReserved:e,explode:t,name:r,style:i,value:n})=>{if(!t){const s=(e?n:n.map(c=>encodeURIComponent(c))).join(P(i));switch(i){case"label":return`.${s}`;case"matrix":return`;${r}=${s}`;case"simple":return s;default:return`${r}=${s}`}}const o=V(i),a=n.map(s=>i==="label"||i==="simple"?e?s:encodeURIComponent(s):g({allowReserved:e,name:r,value:s})).join(o);return i==="label"||i==="matrix"?o+a:a},g=({allowReserved:e,name:t,value:r})=>{if(r==null)return"";if(typeof r=="object")throw new Error("Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.");return`${t}=${e?r:encodeURIComponent(r)}`},$=({allowReserved:e,explode:t,name:r,style:i,value:n,valueOnly:o})=>{if(n instanceof Date)return o?n.toISOString():`${r}=${n.toISOString()}`;if(i!=="deepObject"&&!t){let c=[];Object.entries(n).forEach(([p,y])=>{c=[...c,p,e?y:encodeURIComponent(y)]});const f=c.join(",");switch(i){case"form":return`${r}=${f}`;case"label":return`.${f}`;case"matrix":return`;${r}=${f}`;default:return f}}const a=W(i),s=Object.entries(n).map(([c,f])=>g({allowReserved:e,name:i==="deepObject"?`${r}[${c}]`:c,value:f})).join(a);return i==="label"||i==="matrix"?a+s:s},k=/\{[^{}]+\}/g,H=({path:e,url:t})=>{let r=t;const i=t.match(k);if(i)for(const n of i){let o=!1,a=n.substring(1,n.length-1),s="simple";a.endsWith("*")&&(o=!0,a=a.substring(0,a.length-1)),a.startsWith(".")?(a=a.substring(1),s="label"):a.startsWith(";")&&(a=a.substring(1),s="matrix");const c=e[a];if(c==null)continue;if(Array.isArray(c)){r=r.replace(n,C({explode:o,name:a,style:s,value:c}));continue}if(typeof c=="object"){r=r.replace(n,$({explode:o,name:a,style:s,value:c,valueOnly:!0}));continue}if(s==="matrix"){r=r.replace(n,`;${g({name:a,value:c})}`);continue}const f=encodeURIComponent(s==="label"?`.${c}`:c);r=r.replace(n,f)}return r},z=({allowReserved:e,array:t,object:r}={})=>n=>{const o=[];if(n&&typeof n=="object")for(const a in n){const s=n[a];if(s!=null)if(Array.isArray(s)){const c=C({allowReserved:e,explode:!0,name:a,style:"form",value:s,...t});c&&o.push(c)}else if(typeof s=="object"){const c=$({allowReserved:e,explode:!0,name:a,style:"deepObject",value:s,...r});c&&o.push(c)}else{const c=g({allowReserved:e,name:a,value:s});c&&o.push(c)}}return o.join("&")},N=e=>{var r;if(!e)return"stream";const t=(r=e.split(";")[0])==null?void 0:r.trim();if(t){if(t.startsWith("application/json")||t.endsWith("+json"))return"json";if(t==="multipart/form-data")return"formData";if(["application/","audio/","image/","video/"].some(i=>t.startsWith(i)))return"blob";if(t.startsWith("text/"))return"text"}},B=async({security:e,...t})=>{for(const r of e){const i=await U(r,t.auth);if(!i)continue;const n=r.name??"Authorization";switch(r.in){case"query":t.query||(t.query={}),t.query[n]=i;break;case"cookie":t.headers.append("Cookie",`${n}=${i}`);break;case"header":default:t.headers.set(n,i);break}return}},A=e=>L({baseUrl:e.baseUrl,path:e.path,query:e.query,querySerializer:typeof e.querySerializer=="function"?e.querySerializer:z(e.querySerializer),url:e.url}),L=({baseUrl:e,path:t,query:r,querySerializer:i,url:n})=>{const o=n.startsWith("/")?n:`/${n}`;let a=(e??"")+o;t&&(a=H({path:t,url:a}));let s=r?i(r):"";return s.startsWith("?")&&(s=s.substring(1)),s&&(a+=`?${s}`),a},x=(e,t)=>{var i;const r={...e,...t};return(i=r.baseUrl)!=null&&i.endsWith("/")&&(r.baseUrl=r.baseUrl.substring(0,r.baseUrl.length-1)),r.headers=D(e.headers,t.headers),r},D=(...e)=>{const t=new Headers;for(const r of e){if(!r||typeof r!="object")continue;const i=r instanceof Headers?r.entries():Object.entries(r);for(const[n,o]of i)if(o===null)t.delete(n);else if(Array.isArray(o))for(const a of o)t.append(n,a);else o!==void 0&&t.set(n,typeof o=="object"?JSON.stringify(o):o)}return t};class _{constructor(){w(this,"_fns");this._fns=[]}clear(){this._fns=[]}getInterceptorIndex(t){return typeof t=="number"?this._fns[t]?t:-1:this._fns.indexOf(t)}exists(t){const r=this.getInterceptorIndex(t);return!!this._fns[r]}eject(t){const r=this.getInterceptorIndex(t);this._fns[r]&&(this._fns[r]=null)}update(t,r){const i=this.getInterceptorIndex(t);return this._fns[i]?(this._fns[i]=r,t):!1}use(t){return this._fns=[...this._fns,t],this._fns.length-1}}const J=()=>({error:new _,request:new _,response:new _}),M=z({allowReserved:!1,array:{explode:!0,style:"form"},object:{explode:!0,style:"deepObject"}}),Q={"Content-Type":"application/json"},O=(e={})=>({...R,headers:Q,parseAs:"auto",querySerializer:M,...e}),F=(e={})=>{let t=x(O(),e);const r=()=>({...t}),i=a=>(t=x(t,a),r()),n=J(),o=async a=>{const s={...t,...a,fetch:a.fetch??t.fetch??globalThis.fetch,headers:D(t.headers,a.headers)};s.security&&await B({...s,security:s.security}),s.requestValidator&&await s.requestValidator(s),s.body&&s.bodySerializer&&(s.body=s.bodySerializer(s.body)),(s.body===void 0||s.body==="")&&s.headers.delete("Content-Type");const c=A(s),f={redirect:"follow",...s};let p=new Request(c,f);for(const d of n.request._fns)d&&(p=await d(p,s));const y=s.fetch;let l=await y(p);for(const d of n.response._fns)d&&(l=await d(l,p,s));const b={request:p,response:l};if(l.ok){if(l.status===204||l.headers.get("Content-Length")==="0")return s.responseStyle==="data"?{}:{data:{},...b};const d=(s.parseAs==="auto"?N(l.headers.get("Content-Type")):s.parseAs)??"json";let h;switch(d){case"arrayBuffer":case"blob":case"formData":case"json":case"text":h=await l[d]();break;case"stream":return s.responseStyle==="data"?l.body:{data:l.body,...b}}return d==="json"&&(s.responseValidator&&await s.responseValidator(h),s.responseTransformer&&(h=await s.responseTransformer(h))),s.responseStyle==="data"?h:{data:h,...b}}const T=await l.text();let j;try{j=JSON.parse(T)}catch{}const S=j??T;let m=S;for(const d of n.error._fns)d&&(m=await d(S,l,p,s));if(m=m||{},s.throwOnError)throw m;return s.responseStyle==="data"?void 0:{error:m,...b}};return{buildUrl:A,connect:a=>o({...a,method:"CONNECT"}),delete:a=>o({...a,method:"DELETE"}),get:a=>o({...a,method:"GET"}),getConfig:r,head:a=>o({...a,method:"HEAD"}),interceptors:n,options:a=>o({...a,method:"OPTIONS"}),patch:a=>o({...a,method:"PATCH"}),post:a=>o({...a,method:"POST"}),put:a=>o({...a,method:"PUT"}),request:o,setConfig:i,trace:a=>o({...a,method:"TRACE"})}},G=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),v=async e=>(e=e.map(t=>G(t)),e),K=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e.updated_at&&(e.updated_at=new Date(e.updated_at)),e),X=async e=>(e=K(e),e),Y=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),q=e=>(e.tags=e.tags.map(t=>Y(t)),e),Z=e=>(e.data=e.data.map(t=>q(t)),e),ee=async e=>(e=Z(e),e),te=async e=>(e=q(e),e),re=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e),se=async e=>(e=e.map(t=>re(t)),e),ae=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),ne=async e=>(e=ae(e),e),u=F(O()),oe=e=>((e==null?void 0:e.client)??u).get({responseTransformer:v,url:"/api/datasets",...e}),ce=e=>(e.client??u).get({responseTransformer:X,url:"/api/datasets/{dataset_id}",...e}),ue=e=>(e.client??u).post({responseTransformer:ee,url:"/api/datasets/{dataset_id}/samples/list",...e,headers:{"Content-Type":"application/json",...e.headers}}),le=e=>(e.client??u).get({responseTransformer:te,url:"/api/datasets/{dataset_id}/samples/{sample_id}",...e}),de=e=>(e.client??u).delete({url:"/api/datasets/{dataset_id}/samples/{sample_id}/tag/{tag_id}",...e}),fe=e=>((e==null?void 0:e.client)??u).get({url:"/api/annotation_labels",...e}),pe=e=>(e.client??u).post({url:"/api/annotation_labels",...e,headers:{"Content-Type":"application/json",...e.headers}}),he=e=>(e.client??u).get({url:"/api/datasets/{dataset_id}/annotations",...e}),me=e=>(e.client??u).post({url:"/api/datasets/{dataset_id}/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),ye=e=>(e.client??u).put({responseTransformer:se,url:"/api/datasets/{dataset_id}/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),be=e=>(e.client??u).get({url:"/api/datasets/{dataset_id}/annotations/count",...e,headers:{"Content-Type":"application/json",...e.headers}}),ge=e=>(e.client??u).delete({url:"/api/datasets/{dataset_id}/annotations/{annotation_id}",...e}),_e=e=>(e.client??u).get({url:"/api/datasets/{dataset_id}/annotations/{annotation_id}",...e}),Te=e=>((e==null?void 0:e.client)??u).get({responseTransformer:ne,url:"/api/settings",...e}),je=e=>(e.client??u).get({url:"/api/classifiers/{classifier_id}/sample_history",...e}),Se=e=>((e==null?void 0:e.client)??u).post({url:"/api/embeddings2d/tsne",...e,headers:{"Content-Type":"application/json",...e==null?void 0:e.headers}}),we=e=>(e.client??u).get({url:"/api/datasets/{dataset_id}/metadata/info",...e}),Ae=e=>(e.client??u).post({url:"/api/datasets/{dataset_id}/metadata/typicality",...e,headers:{"Content-Type":"application/json",...e.headers}}),xe=e=>(e.client??u).post({url:"/api/datasets/{dataset_id}/selection",...e,headers:{"Content-Type":"application/json",...e.headers}});export{ce as a,ue as b,u as c,ge as d,de as e,me as f,we as g,pe as h,le as i,fe as j,be as k,he as l,_e as m,Se as n,Te as o,xe as p,Ae as q,oe as r,je as s,ye as u};
