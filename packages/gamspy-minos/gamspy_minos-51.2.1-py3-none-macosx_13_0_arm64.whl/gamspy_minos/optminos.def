*
* optminos.def
*
minos lookup
begin string.nv 0 "" 0 5 For compatibility with old MINOS spec files
end string.nv 0 "" 0 5 For compatibility with old MINOS spec files
debug_level integer 0 0 0 maxint 1 1 Controls amount of debug information written
log_frequency integer 0 100 1 maxint 1 1 Controls iteration logging to listing file
print_level integer 0 0 0 maxint 1 1 Controls amount of information printed during optimization
scale_print string.nv 0 "" 1 1 Print scaling factors
solution enumstr 0 "NO" 1 1 Prints MINOS solution
 "NO" 1 Turn off printing of solution
 "YES" 1 Turn on printing of solution
solution_file integer 0 0 0 maxint 0 1 Prints MINOS solution to file in alternate format
summary_frequency integer 0 100 1 maxint 1 1 Controls iteration logging to summary (log file)
crash_tolerance double 0 0.1 0 1.0 1 2 Allow crash procedure to ignore small elements in eligible columns
feasibility_tolerance double 0 1.0e-6 0 maxdouble 1 2 Feasibility tolerance for linear constraints
linesearch_tolerance double 0 0.1 0 1.0 1 2 Controls accuracy of steplength selected
LU_factor_tolerance double 0 100.0 1.0 maxdouble 1 2 Trade-off between stability and sparsity in basis factorization
LU_update_tolerance double 0 10.0 1.0 maxdouble 1 2 Trade-off between stability and sparsity in basis updating
LU_singularity_tolerance double 0 1.0e-11 0 maxdouble 1 2 Protection against ill-conditioned basis matrices
LU_density_tolerance double 0 0.5 0 1.0 1 2 When to use dense factorization
optimality_tolerance double 0 1.0e-6 0 maxdouble 1 2 Reduced gradient optimality check
row_tolerance double 0 1.0e-6 0 maxdouble 1 2 Accuracy requirement for nonlinear rows
scale_tolerance double 0 0.9 0 1.0 1 2 Scale tolerance
scale_print_tolerance double 0 0.9 0 1.0 1 2 Scale print flag and set tolerance
subspace_tolerance double 0 0.5 0 1.0 1 2 Determines when nonbasics becomes superbasic
hessian_dimension integer 0 1 1 maxint 1 3 Size of Hessian matrix
iterations_limit integer 0 1000 0 maxint 1 3 Minor iteration limit
major_iterations integer 0 50 0 maxint 1 3 Max number of major iterations
minor_iterations integer 0 40 0 maxint 1 3 Max number of minor iterations between linearizations of nonlinear constraints
superbasics_limit integer 0 1 1 maxint 1 3 Maximum number of superbasics
unbounded_objective_value double 0 1.0e20 0 maxdouble 1 3 Determines when a problem is called unbounded
unbounded_step_size double 0 1.0e10 0 maxdouble 1 3 Determines when a problem is called unbounded
check_frequency integer 0 60 1 maxint 1 4 Controls frequency of linear constraint satisfaction test
completion enumstr 0 "FULL" 1 4 Completion level for subproblems (full/partial)
 "FULL" 1 Solve subproblems to full accuracy
 "PARTIAL" 1 Solve subproblems to moderate accuracy
crash_option enumint 0 3 1 4 Controls the basis crash algorithm
 0 1 Initial basis will be a slack basis
 1 1 All columns are eligible
 2 1 Only linear columns are eligible
 3 1 Columns appearing nonlinearly in the objective are not eligible
 4 1 Columns appearing nonlinearly in the constraints are not eligible
expand_frequency integer 0 10000 1 maxint 1 4 Setting for anti-cycling mechanism
factorization_frequency integer 0 100 1 maxint 1 4 Number of iterations between basis factorizations
lagrangian enumstr 0 "YES" 1 4 Determines form of objection function in the linearized subproblems
 "NO" 1 Nondefault value (not recommended)
 "YES" 1 Default value (recommended)
LU_partial_pivoting string.nv 0 "" 1 4 LUSOL pivoting strategy
LU_rook_pivoting string.nv 0 "" 1 4 LUSOL pivoting strategy
LU_complete_pivoting string.nv 0 "" 1 4 LUSOL pivoting strategy
major_damping_parameter double 0 2.0 0 maxdouble 1 4 Prevents large relative changes between subproblem solutions
minor_damping_parameter double 0 2.0 0 maxdouble 1 4 Limit change in x during linesearch
multiple_price integer 0 1 1 maxint 1 4 Multiple pricing
partial_price integer 0 10 1 maxint 1 4 Number of segments in partial pricing strategy
penalty_parameter double 0 0 0.0 maxdouble 1 4 Used in modified augmented Lagrangian
radius_of_convergence double 0 0.01 0 maxdouble 1 4 controls final reduction of penalty parameter
scale_option enumint 0 1 1 4 Scaling
 0 1 No scaling
 1 1 Scale linear variables
 2 1 Scale linear + nonlinear variables
scale_no string.nv 0 "" 1 4 Synonym to scale option 0
scale_yes string.nv 0 "" 1 4 Synonym to scale option 1
scale_linear_variables string.nv 0 "" 1 4 Synonym to scale option 1
scale_nonlinear_variables string.nv 0 "" 1 4 Synonym to scale option 2
scale_all_variables string.nv 0 "" 1 4 Synonym to scale option 2
start_assigned_nonlinears enumstr 0 "SUPERBASIC" 1 4 Starting strategy when there is no basis
 "SUPERBASIC" 1 Default
 "BASIC" 1 Good for square systems
 "NONBASIC" 1
 "ELIGIBLE FOR CRASH" 1
verify_level enumint 0 0 1 4 Controls verification of gradients
 0 1 Cheap test
 1 1 Check objective
 2 1 Check Jacobian
 3 1 Check objective and Jacobian
 -1 1 No check
verify_no string.nv 0 "" 1 4 Synonym to verify level 0
verify_objective_gradients string.nv 0 "" 1 4 Synonym to verify level 1
verify_constraint_gradients string.nv 0 "" 1 4 Synonym to verify level 2
verify_gradients string.nv 0 "" 1 4 Synonym to verify level 3
verify_yes string.nv 0 "" 1 4 Synonym to verify level 3
weight_on_linear_objective double 0 0.0 0 maxdouble 1 4 Composite objective weight
secret strlist 0 0 4 back door for secret or undocumented MINOS options
myeolchar EOLCOMM *
*
* Groups
* <group-ident> group <group-number <help-context> <help-text>
*
output group 1 1 Output related options
tolerances group 2 1 Tolerances
limits group 3 1 Limits
other group 4 1 Other algorithmic options
compatibility group 5 0 For compatibility with older option files
*** End of file
