name: DREQ to PyPI and TestPyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build distribution üì¶ on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false  # Ensures that one failure doesn't cancel other builds

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install pypa/build
        run: python -m pip install --upgrade build twine

      # - name: Build a binary wheel and a source tarball
      #   run: python -m build
      - name: Build a binary wheel and a source tarball
        run: |
          echo "${{ github.ref_name }}"
          SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.ref_name }} python -m build
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.ref_name }}

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ matrix.os }}
          path: dist/

    continue-on-error: true  # Allows the workflow to continue even if one OS fails

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tag pushes
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/CMIP7_data_request_api

    permissions:
      id-token: write  # Mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-distributions-*  # Download all successful builds
          merge-multiple: true
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload to GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Mandatory for GitHub Releases
      id-token: write  # Mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-distributions-*
          merge-multiple: true
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"

  # publish-to-testpypi:
  #   name: Publish Python üêç distribution üì¶ to TestPyPI
  #   needs: build
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/CMIP7_data_request_api

  #   permissions:
  #     id-token: write  # Mandatory for trusted publishing

  #   steps:
  #     - name: Download all the dists
  #       uses: actions/download-artifact@v4
  #       with:
  #         pattern: python-package-distributions-*
  #         merge-multiple: true
  #         path: dist/

  #     - name: Publish distribution üì¶ to TestPyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
