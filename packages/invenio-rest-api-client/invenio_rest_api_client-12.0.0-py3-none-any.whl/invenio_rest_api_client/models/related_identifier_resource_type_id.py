from enum import Enum


class RelatedIdentifierResourceTypeId(str, Enum):
    AUDIO = "audio"
    DATASET = "dataset"
    EVENT = "event"
    IMAGE = "image"
    IMAGE_DIAGRAM = "image-diagram"
    IMAGE_DRAWING = "image-drawing"
    IMAGE_FIGURE = "image-figure"
    IMAGE_OTHER = "image-other"
    IMAGE_PHOTO = "image-photo"
    IMAGE_PLOT = "image-plot"
    LESSON = "lesson"
    MODEL = "model"
    OTHER = "other"
    PHYSICALOBJECT = "physicalobject"
    POSTER = "poster"
    PRESENTATION = "presentation"
    PUBLICATION = "publication"
    PUBLICATION_ANNOTATIONCOLLECTION = "publication-annotationcollection"
    PUBLICATION_ARTICLE = "publication-article"
    PUBLICATION_BOOK = "publication-book"
    PUBLICATION_CONFERENCEPAPER = "publication-conferencepaper"
    PUBLICATION_CONFERENCEPROCEEDING = "publication-conferenceproceeding"
    PUBLICATION_DATAMANAGEMENTPLAN = "publication-datamanagementplan"
    PUBLICATION_DATAPAPER = "publication-datapaper"
    PUBLICATION_DELIVERABLE = "publication-deliverable"
    PUBLICATION_DISSERTATION = "publication-dissertation"
    PUBLICATION_JOURNAL = "publication-journal"
    PUBLICATION_MILESTONE = "publication-milestone"
    PUBLICATION_OTHER = "publication-other"
    PUBLICATION_PATENT = "publication-patent"
    PUBLICATION_PEERREVIEW = "publication-peerreview"
    PUBLICATION_PREPRINT = "publication-preprint"
    PUBLICATION_PROPOSAL = "publication-proposal"
    PUBLICATION_REPORT = "publication-report"
    PUBLICATION_SECTION = "publication-section"
    PUBLICATION_SOFTWAREDOCUMENTATION = "publication-softwaredocumentation"
    PUBLICATION_STANDARD = "publication-standard"
    PUBLICATION_TAXONOMICTREATMENT = "publication-taxonomictreatment"
    PUBLICATION_TECHNICALNOTE = "publication-technicalnote"
    PUBLICATION_THESIS = "publication-thesis"
    PUBLICATION_WORKINGPAPER = "publication-workingpaper"
    SOFTWARE = "software"
    SOFTWARE_COMPUTATIONALNOTEBOOK = "software-computationalnotebook"
    VIDEO = "video"
    WORKFLOW = "workflow"

    def __str__(self) -> str:
        return str(self.value)
