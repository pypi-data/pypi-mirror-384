# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.models.sample_class import SampleClass

class TestSampleClass(unittest.TestCase):
    """SampleClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SampleClass:
        """Test SampleClass
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SampleClass`
        """
        model = SampleClass()
        if include_optional:
            return SampleClass(
                created_by = '',
                updated_by = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                owner_group = '',
                access_groups = [
                    ''
                    ],
                instrument_group = '',
                is_published = True,
                sample_id = '',
                owner = '',
                description = '',
                type = '',
                proposal_id = '',
                parent_sample_id = '',
                sample_characteristics = None
            )
        else:
            return SampleClass(
                created_by = '',
                updated_by = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                owner_group = '',
                access_groups = [
                    ''
                    ],
                is_published = True,
                sample_id = '',
        )
        """

    def testSampleClass(self):
        """Test SampleClass"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
