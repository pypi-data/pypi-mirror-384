# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.models.health_controller_check_v3200_response import HealthControllerCheckV3200Response

class TestHealthControllerCheckV3200Response(unittest.TestCase):
    """HealthControllerCheckV3200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HealthControllerCheckV3200Response:
        """Test HealthControllerCheckV3200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HealthControllerCheckV3200Response`
        """
        model = HealthControllerCheckV3200Response()
        if include_optional:
            return HealthControllerCheckV3200Response(
                status = 'ok',
                info = {"database":{"status":"up"}},
                error = {},
                details = {"database":{"status":"up"}}
            )
        else:
            return HealthControllerCheckV3200Response(
        )
        """

    def testHealthControllerCheckV3200Response(self):
        """Test HealthControllerCheckV3200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
