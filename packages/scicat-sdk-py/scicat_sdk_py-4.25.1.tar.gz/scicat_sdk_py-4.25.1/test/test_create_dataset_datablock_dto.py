# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.models.create_dataset_datablock_dto import CreateDatasetDatablockDto

class TestCreateDatasetDatablockDto(unittest.TestCase):
    """CreateDatasetDatablockDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateDatasetDatablockDto:
        """Test CreateDatasetDatablockDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateDatasetDatablockDto`
        """
        model = CreateDatasetDatablockDto()
        if include_optional:
            return CreateDatasetDatablockDto(
                archive_id = '',
                size = 1.337,
                packed_size = 1.337,
                chk_alg = '',
                version = '',
                data_file_list = [
                    scicat_sdk_py.models.data_file.DataFile(
                        path = '', 
                        size = 1.337, 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        chk = '', 
                        uid = '', 
                        gid = '', 
                        perm = '', 
                        type = '', )
                    ]
            )
        else:
            return CreateDatasetDatablockDto(
                archive_id = '',
                size = 1.337,
                packed_size = 1.337,
                version = '',
                data_file_list = [
                    scicat_sdk_py.models.data_file.DataFile(
                        path = '', 
                        size = 1.337, 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        chk = '', 
                        uid = '', 
                        gid = '', 
                        perm = '', 
                        type = '', )
                    ],
        )
        """

    def testCreateDatasetDatablockDto(self):
        """Test CreateDatasetDatablockDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
