# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.api.proposals_api import ProposalsApi


class TestProposalsApi(unittest.TestCase):
    """ProposalsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProposalsApi()

    def tearDown(self) -> None:
        pass

    def test_proposals_controller_count_v3(self) -> None:
        """Test case for proposals_controller_count_v3

        It returns the number of proposals.
        """
        pass

    def test_proposals_controller_create_attachment_v3(self) -> None:
        """Test case for proposals_controller_create_attachment_v3

        It creates a new attachement for the proposal specified.
        """
        pass

    def test_proposals_controller_create_v3(self) -> None:
        """Test case for proposals_controller_create_v3

        It creates a new proposal.
        """
        pass

    def test_proposals_controller_find_all_attachments_v3(self) -> None:
        """Test case for proposals_controller_find_all_attachments_v3

        It returns all the attachments for the proposal specified.
        """
        pass

    def test_proposals_controller_find_all_datasets_v3(self) -> None:
        """Test case for proposals_controller_find_all_datasets_v3

        It returns all the datasets associated with the proposal indicated.
        """
        pass

    def test_proposals_controller_find_all_v3(self) -> None:
        """Test case for proposals_controller_find_all_v3

        It returns a list of proposals.
        """
        pass

    def test_proposals_controller_find_by_id_access_v3(self) -> None:
        """Test case for proposals_controller_find_by_id_access_v3

        Check user access to a specific proposal.
        """
        pass

    def test_proposals_controller_find_by_id_v3(self) -> None:
        """Test case for proposals_controller_find_by_id_v3

        It returns the proposal requested.
        """
        pass

    def test_proposals_controller_find_one_attachment_and_remove_v3(self) -> None:
        """Test case for proposals_controller_find_one_attachment_and_remove_v3

        It deletes the attachment from the proposal.
        """
        pass

    def test_proposals_controller_find_one_attachment_and_update_v3(self) -> None:
        """Test case for proposals_controller_find_one_attachment_and_update_v3

        It updates the attachment specified for the proposal indicated.
        """
        pass

    def test_proposals_controller_fullfacet_v3(self) -> None:
        """Test case for proposals_controller_fullfacet_v3

        """
        pass

    def test_proposals_controller_fullquery_v3(self) -> None:
        """Test case for proposals_controller_fullquery_v3

        It returns a list of proposals matching the query provided.
        """
        pass

    def test_proposals_controller_is_valid_v3(self) -> None:
        """Test case for proposals_controller_is_valid_v3

        It validates the proposal provided as input.
        """
        pass

    def test_proposals_controller_remove_v3(self) -> None:
        """Test case for proposals_controller_remove_v3

        It deletes the proposal.
        """
        pass

    def test_proposals_controller_update_v3(self) -> None:
        """Test case for proposals_controller_update_v3

        It updates the proposal.
        """
        pass


if __name__ == '__main__':
    unittest.main()
