# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_users_controller_can_user_create_dataset_v3(self) -> None:
        """Test case for users_controller_can_user_create_dataset_v3

        """
        pass

    def test_users_controller_create_custom_jwtv3(self) -> None:
        """Test case for users_controller_create_custom_jwtv3

        It creates a new jwt token for the user specified.
        """
        pass

    def test_users_controller_create_settings_v3(self) -> None:
        """Test case for users_controller_create_settings_v3

        """
        pass

    def test_users_controller_find_by_id_v3(self) -> None:
        """Test case for users_controller_find_by_id_v3

        """
        pass

    def test_users_controller_get_my_settings_v3(self) -> None:
        """Test case for users_controller_get_my_settings_v3

        """
        pass

    def test_users_controller_get_my_user_identity_v3(self) -> None:
        """Test case for users_controller_get_my_user_identity_v3

        """
        pass

    def test_users_controller_get_my_user_v3(self) -> None:
        """Test case for users_controller_get_my_user_v3

        Returns the information of the user currently logged in.
        """
        pass

    def test_users_controller_get_settings_v3(self) -> None:
        """Test case for users_controller_get_settings_v3

        """
        pass

    def test_users_controller_get_user_identity_v3(self) -> None:
        """Test case for users_controller_get_user_identity_v3

        """
        pass

    def test_users_controller_get_user_jwtv3(self) -> None:
        """Test case for users_controller_get_user_jwtv3

        It creates a new jwt token.
        """
        pass

    def test_users_controller_login_v3(self) -> None:
        """Test case for users_controller_login_v3

        This endpoint is deprecated and will be removed soon. Use /auth/login instead
        """
        pass

    def test_users_controller_logout_v3(self) -> None:
        """Test case for users_controller_logout_v3

        It logs the current user out.
        """
        pass

    def test_users_controller_patch_external_settings_v3(self) -> None:
        """Test case for users_controller_patch_external_settings_v3

        """
        pass

    def test_users_controller_patch_settings_v3(self) -> None:
        """Test case for users_controller_patch_settings_v3

        """
        pass

    def test_users_controller_remove_settings_v3(self) -> None:
        """Test case for users_controller_remove_settings_v3

        """
        pass

    def test_users_controller_update_own_password_v3(self) -> None:
        """Test case for users_controller_update_own_password_v3

        It change local user's own password.
        """
        pass

    def test_users_controller_update_settings_v3(self) -> None:
        """Test case for users_controller_update_settings_v3

        """
        pass

    def test_users_controller_update_user_password_v3(self) -> None:
        """Test case for users_controller_update_user_password_v3

        Change a userâ€™s password (admin only)
        """
        pass


if __name__ == '__main__':
    unittest.main()
