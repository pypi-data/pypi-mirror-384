[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crossworlds-modmanager"
dynamic = ["version"]
description = 'Manage mods using Crossworlds Mod Manager'
readme = "README.md"
requires-python = ">=3.12"
license = "AGPL-3.0"
keywords = []
authors = [{ name = "Yiannis Charalambous", email = "yiannis128@hotmail.com" }]
classifiers = ["Programming Language :: Python :: 3.12"]
dependencies = [
  "PySide6>=6.5.0",  # Qt6 bindings for cross-platform GUI
  "pydantic>=2.0.0", # Data validation and settings management
  "toml>=0.10.2",    # TOML file parsing
  "py7zr>=0.20.0",   # 7z archive extraction
  "rarfile>=4.0",    # RAR archive extraction
]

[project.scripts]
crossworlds-modmanager = "crossworlds_modmanager.main:main"
crossworlds-modmanager-register = "crossworlds_modmanager.register_mime:main"
crossworlds-modmanager-unregister = "crossworlds_modmanager.unregister_mime:main"

[project.urls]
Documentation = "https://github.com/Yiannis Charalambous/crossworlds-modmanager#readme"
Issues = "https://github.com/Yiannis Charalambous/crossworlds-modmanager/issues"
Source = "https://github.com/Yiannis Charalambous/crossworlds-modmanager"

[tool.hatch.version]
path = "src/crossworlds_modmanager/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/crossworlds_modmanager"]

[tool.hatch.build.targets.wheel.shared-data]
"resources" = "share/crossworlds-modmanager"

[tool.hatch.envs.default.scripts]
crossworlds-modmanager = "python -m crossworlds_modmanager.main"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/crossworlds_modmanager tests}"

[tool.coverage.run]
source_pkgs = ["crossworlds_modmanager", "tests"]
branch = true
parallel = true
omit = ["src/crossworlds_modmanager/__about__.py"]

[tool.coverage.paths]
crossworlds_modmanager = [
  "src/crossworlds_modmanager",
  "*/crossworlds-modmanager/src/crossworlds_modmanager",
]
tests = ["tests", "*/crossworlds-modmanager/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
