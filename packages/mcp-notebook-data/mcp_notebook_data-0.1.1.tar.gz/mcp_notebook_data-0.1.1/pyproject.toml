[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-notebook-data"
dynamic = ["version"]
description = "Modular notebook data server (MCP) with pluggable tools for Jupyter kernels"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
  { name = "Roberto Rodriguez", email = "9653181+Cyb3rWard0g@users.noreply.github.com" }
]
requires-python = ">=3.11"
keywords = ["MCP", "Jupyter", "notebooks", "agents", "data", "server"]

# Host-side runtime deps; kernel-side deps are still ensured dynamically in the tools.
dependencies = [
  "fastmcp>=2.11.3",
  "mcp>=1.12.4",
  "ipykernel>=6.30.1",
  "ipywidgets>=8.1.7",
  "agent-jupyter-toolkit",
  "starlette>=0.47.2",
  "uvicorn>=0.35.0",
]

classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/Cyb3rWard0g/mcp-notebook-data"
Repository = "https://github.com/Cyb3rWard0g/mcp-notebook-data"
Issues   = "https://github.com/Cyb3rWard0g/mcp-notebook-data/issues"

[project.scripts]
mcp-notebook-data = "mcp_notebook_data.server:main"

[project.optional-dependencies]
# Developer/CI helpers
dev = [
  "pytest>=8.4.2",
  "pytest-asyncio>=0.23",
  "ruff",
  "black",
  "anyio>=4",
  "build",
  "twine",
  "packaging",
  "setuptools",
  "setuptools_scm",
  "wheel",
]

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"
write_to = "src/mcp_notebook_data/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra"
pythonpath = ["src"]
norecursedirs = ["repos", ".venv"]
# Avoid 'PytestUnknownMarkWarning' and let you opt-in to kernel tests
markers = [
  "integration: tests that spin a real local ipykernel; require RUN_INTEGRATION=1",
]

[tool.ruff]
target-version = "py311"
line-length = 100
src = ["src", "tests"]
extend-exclude = [".venv", ".tox", "build", "dist", "__pycache__", ".eggs"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "B"]
ignore = []
preview = true

[tool.ruff.lint.per-file-ignores]
"src/mcp_notebook_data/_version.py" = ["ALL"]

# Help import sorting know your first-party package
[tool.ruff.lint.isort]
known-first-party = ["mcp_notebook_data"]

[tool.black]
target-version = ["py311", "py312", "py313"]
line-length = 100
exclude = '''
/(
  \.venv
 | \.tox
 | build
 | dist
 | __pycache__
 | \.eggs
 | src/mcp_notebook_data/_version\.py
)/
'''
