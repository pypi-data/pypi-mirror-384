{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ClientConfig",
  "description": "Struct for the client configuration.\nThis struct contains the endpoint, origin, compression type, rate limit,\nTLS settings, keepalive settings, timeout settings, buffer size settings,\nheaders, and auth settings.\nThe client configuration can be converted to a tonic channel.",
  "type": "object",
  "properties": {
    "auth": {
      "description": "Auth configuration for outgoing RPCs.",
      "$ref": "#/$defs/AuthenticationConfig",
      "default": "none"
    },
    "buffer_size": {
      "description": "ReadBufferSize.",
      "type": [
        "integer",
        "null"
      ],
      "format": "uint",
      "minimum": 0
    },
    "compression": {
      "description": "Compression type - TODO(msardara): not implemented yet.",
      "anyOf": [
        {
          "$ref": "#/$defs/CompressionType"
        },
        {
          "type": "null"
        }
      ]
    },
    "connect_timeout": {
      "description": "Timeout for the connection.",
      "type": "string",
      "default": {
        "nanos": 0,
        "secs": 0
      }
    },
    "endpoint": {
      "description": "The target the client will connect to.",
      "type": "string"
    },
    "headers": {
      "description": "The headers associated with gRPC requests.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {}
    },
    "keepalive": {
      "description": "Keepalive parameters.",
      "anyOf": [
        {
          "$ref": "#/$defs/KeepaliveConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "origin": {
      "description": "Origin for the client.",
      "type": [
        "string",
        "null"
      ]
    },
    "rate_limit": {
      "description": "Rate Limits",
      "type": [
        "string",
        "null"
      ]
    },
    "request_timeout": {
      "description": "Timeout per request.",
      "type": "string",
      "default": {
        "nanos": 0,
        "secs": 0
      }
    },
    "tls": {
      "description": "TLS client configuration.",
      "$ref": "#/$defs/TlsClientConfig",
      "default": {
        "ca_file": null,
        "ca_pem": null,
        "cert_file": null,
        "cert_pem": null,
        "include_system_ca_certs_pool": false,
        "insecure": false,
        "insecure_skip_verify": false,
        "key_file": null,
        "key_pem": null,
        "reload_interval": null,
        "tls_version": "tls1.3"
      }
    }
  },
  "required": [
    "endpoint"
  ],
  "$defs": {
    "AuthenticationConfig": {
      "description": "Enum holding one configuration for the client.",
      "oneOf": [
        {
          "description": "Basic authentication configuration.",
          "type": "object",
          "properties": {
            "basic": {
              "$ref": "#/$defs/Config"
            }
          },
          "additionalProperties": false,
          "required": [
            "basic"
          ]
        },
        {
          "description": "Bearer authentication configuration.",
          "type": "object",
          "properties": {
            "bearer": {
              "$ref": "#/$defs/Config2"
            }
          },
          "additionalProperties": false,
          "required": [
            "bearer"
          ]
        },
        {
          "description": "JWT authentication configuration.",
          "type": "object",
          "properties": {
            "jwt": {
              "$ref": "#/$defs/Config3"
            }
          },
          "additionalProperties": false,
          "required": [
            "jwt"
          ]
        },
        {
          "description": "None",
          "type": "string",
          "const": "none"
        }
      ]
    },
    "Claims": {
      "type": "object",
      "properties": {
        "audience": {
          "description": "JWT audience",
          "type": [
            "string",
            "null"
          ]
        },
        "issuer": {
          "description": "JWT Issuer",
          "type": [
            "string",
            "null"
          ]
        },
        "subject": {
          "description": "JWT Subject",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "CompressionType": {
      "description": "CompressionType represents the supported compression types for gRPC messages.\nThe supported types are: Gzip, Zlib, Deflate, Snappy, Zstd, Lz4, None, and Empty.\nThe default type is None.",
      "type": "string",
      "enum": [
        "Gzip",
        "Zlib",
        "Deflate",
        "Snappy",
        "Zstd",
        "Lz4",
        "None",
        "Empty"
      ]
    },
    "Config": {
      "type": "object",
      "properties": {
        "password": {
          "description": "Origin for the client.",
          "$ref": "#/$defs/OpaqueString"
        },
        "username": {
          "description": "The target the client will connect to.",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "Config2": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/$defs/OpaqueString"
        }
      },
      "required": [
        "token"
      ]
    },
    "Config3": {
      "type": "object",
      "properties": {
        "claims": {
          "description": "Claims",
          "$ref": "#/$defs/Claims",
          "default": {
            "audience": null,
            "custom_claims": null,
            "issuer": null,
            "subject": null
          }
        },
        "duration": {
          "description": "JWT Duration (will become exp: now() + duration)",
          "$ref": "#/$defs/Duration",
          "default": {
            "nanos": 0,
            "secs": 3600
          }
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "nanos": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0
        },
        "secs": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "secs",
        "nanos"
      ]
    },
    "KeepaliveConfig": {
      "description": "Keepalive configuration for the client.\nThis struct contains the keepalive time for TCP and HTTP2,\nthe timeout duration for the keepalive, and whether to permit\nkeepalive without an active stream.",
      "type": "object",
      "properties": {
        "http2_keepalive": {
          "description": "The duration of the keepalive time for HTTP2",
          "type": "string",
          "default": {
            "nanos": 0,
            "secs": 60
          }
        },
        "keep_alive_while_idle": {
          "description": "Whether to permit keepalive without an active stream",
          "type": "boolean",
          "default": false
        },
        "tcp_keepalive": {
          "description": "The duration of the keepalive time for TCP",
          "type": "string",
          "default": {
            "nanos": 0,
            "secs": 60
          }
        },
        "timeout": {
          "description": "The timeout duration for the keepalive",
          "type": "string",
          "default": {
            "nanos": 0,
            "secs": 10
          }
        }
      }
    },
    "OpaqueString": {
      "type": "string"
    },
    "TlsClientConfig": {
      "type": "object",
      "properties": {
        "ca_file": {
          "description": "Path to the CA cert. For a client this verifies the server certificate.\nFor a server this verifies client certificates. If empty uses system root CA.\n(optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "ca_pem": {
          "description": "In memory PEM encoded cert. (optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "cert_file": {
          "description": "Path to the TLS cert to use for TLS required connections. (optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "cert_pem": {
          "description": "In memory PEM encoded TLS cert to use for TLS required connections. (optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "include_system_ca_certs_pool": {
          "description": "If true, load system CA certificates pool in addition to the certificates\nconfigured in this struct.",
          "type": "boolean",
          "default": false
        },
        "insecure": {
          "description": "In gRPC and HTTP when set to true, this is used to disable the client transport security.\n(optional, default false)",
          "type": "boolean",
          "default": false
        },
        "insecure_skip_verify": {
          "description": "InsecureSkipVerify will enable TLS but not verify the server certificate.",
          "type": "boolean",
          "default": false
        },
        "key_file": {
          "description": "Path to the TLS key to use for TLS required connections. (optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "key_pem": {
          "description": "In memory PEM encoded TLS key to use for TLS required connections. (optional)",
          "type": [
            "string",
            "null"
          ]
        },
        "reload_interval": {
          "description": "ReloadInterval specifies the duration after which the certificate will be reloaded\nIf not set, it will never be reloaded",
          "anyOf": [
            {
              "$ref": "#/$defs/Duration"
            },
            {
              "type": "null"
            }
          ]
        },
        "tls_version": {
          "description": "The TLS version to use. If not set, the default is \"tls1.3\".\nThe value must be either \"tls1.2\" or \"tls1.3\".\n(optional)",
          "type": "string",
          "default": "tls1.3"
        }
      }
    }
  }
}