# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_provisioning.models.tenant_dto import TenantDto

class TestTenantDto(unittest.TestCase):
    """TenantDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TenantDto:
        """Test TenantDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TenantDto`
        """
        model = TenantDto()
        if include_optional:
            return TenantDto(
                id = '',
                name = 'Example tenant',
                template_info_map = {
                    'key' : iparapheur_provisioning.models.template_info.TemplateInfo(
                        width = 56, 
                        height = 56, 
                        contains_custom_signature_field = True, )
                    },
                zip_code = '',
                desk_limit = 56,
                user_limit = 56,
                workflow_limit = 56,
                type_limit = 56,
                subtype_limit = 56,
                folder_limit = 56,
                metadata_limit = 56,
                layer_limit = 56
            )
        else:
            return TenantDto(
                name = 'Example tenant',
        )
        """

    def testTenantDto(self):
        """Test TenantDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
