# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_provisioning.models.delegation_dto import DelegationDto

class TestDelegationDto(unittest.TestCase):
    """DelegationDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DelegationDto:
        """Test DelegationDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DelegationDto`
        """
        model = DelegationDto()
        if include_optional:
            return DelegationDto(
                id = '',
                substitute_desk_id = '',
                substitute_desk = iparapheur_provisioning.models.desk_representation.DeskRepresentation(
                    id = '', 
                    name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                    tenant_id = '', ),
                type_id = '',
                type = iparapheur_provisioning.models.type_representation.TypeRepresentation(
                    id = '', 
                    name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                    description = '012', ),
                subtype_id = '',
                subtype = iparapheur_provisioning.models.subtype_representation.SubtypeRepresentation(
                    id = '', 
                    name = 'jXAuKb%@;_5)#fEb-bx%oZ01', ),
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return DelegationDto(
        )
        """

    def testDelegationDto(self):
        """Test DelegationDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
