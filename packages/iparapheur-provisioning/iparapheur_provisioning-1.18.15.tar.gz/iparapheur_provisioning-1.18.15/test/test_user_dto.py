# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_provisioning.models.user_dto import UserDto

class TestUserDto(unittest.TestCase):
    """UserDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserDto:
        """Test UserDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserDto`
        """
        model = UserDto()
        if include_optional:
            return UserDto(
                id = '',
                user_name = '012',
                first_name = '',
                last_name = '',
                email = '',
                privilege = 'NONE',
                is_ldap_synchronized = True,
                associated_tenants = [
                    iparapheur_provisioning.models.tenant_representation.TenantRepresentation(
                        id = '', 
                        name = 'Example tenant', )
                    ],
                associated_tenant_ids = [
                    ''
                    ],
                administered_tenants = [
                    iparapheur_provisioning.models.tenant_representation.TenantRepresentation(
                        id = '', 
                        name = 'Example tenant', )
                    ],
                administered_tenant_ids = [
                    ''
                    ],
                administered_desks = [
                    iparapheur_provisioning.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                administered_desk_ids = [
                    ''
                    ],
                associated_desks = [
                    iparapheur_provisioning.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                associated_desk_ids = [
                    ''
                    ],
                supervised_desks = [
                    iparapheur_provisioning.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                supervised_desk_ids = [
                    ''
                    ],
                delegation_managed_desks = [
                    iparapheur_provisioning.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                delegation_managed_desk_ids = [
                    ''
                    ],
                complementary_field = '',
                reset_password_required = True,
                password = ''
            )
        else:
            return UserDto(
                user_name = '012',
                first_name = '',
                last_name = '',
                email = '',
                privilege = 'NONE',
        )
        """

    def testUserDto(self):
        """Test UserDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
