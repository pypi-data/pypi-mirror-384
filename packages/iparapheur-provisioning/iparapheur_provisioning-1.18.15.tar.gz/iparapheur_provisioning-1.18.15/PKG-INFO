Metadata-Version: 2.4
Name: iparapheur_provisioning
Version: 1.18.15
Summary: iparapheur
Home-page: 
Author: Libriciel SCOP
Author-email: Libriciel SCOP <iparapheur@libriciel.coop>
License-Expression: MIT
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Keywords: OpenAPI,OpenAPI-Generator,iparapheur
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: urllib3<3.0.0,>=2.1.0
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pydantic>=2
Requires-Dist: typing-extensions>=4.7.1
Requires-Dist: lazy-imports<2,>=1
Dynamic: author

# iparapheur-provisioning
iparapheur v5.x main core application.

The main link between every sub-services, integrating business code logic.


This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: DEVELOP
- Package version: 1.18.15
- Generator version: 7.15.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen
For more information, please visit [https://libriciel.fr](https://libriciel.fr)

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import iparapheur_provisioning
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import iparapheur_provisioning
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import iparapheur_provisioning
from iparapheur_provisioning.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://localhost:8080
# See configuration.py for a list of all supported configuration parameters.
configuration = iparapheur_provisioning.Configuration(
    host = "http://localhost:8080"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]


# Enter a context with an instance of the API client
with iparapheur_provisioning.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = iparapheur_provisioning.AdminAllUsersApi(api_client)
    user_dto = iparapheur_provisioning.UserDto() # UserDto | 

    try:
        # Create a new super admin user
        api_response = api_instance.create_super_admin_as_super_admin(user_dto)
        print("The response of AdminAllUsersApi->create_super_admin_as_super_admin:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling AdminAllUsersApi->create_super_admin_as_super_admin: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://localhost:8080*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AdminAllUsersApi* | [**create_super_admin_as_super_admin**](docs/AdminAllUsersApi.md#create_super_admin_as_super_admin) | **POST** /api/provisioning/v1/admin/user | Create a new super admin user
*AdminAllUsersApi* | [**delete_signature_image_as_super_admin**](docs/AdminAllUsersApi.md#delete_signature_image_as_super_admin) | **DELETE** /api/provisioning/v1/admin/user/{userId}/signature-image | Delete user&#39;s signature image
*AdminAllUsersApi* | [**delete_user_as_super_admin**](docs/AdminAllUsersApi.md#delete_user_as_super_admin) | **DELETE** /api/provisioning/v1/admin/user/{userId} | Delete a user
*AdminAllUsersApi* | [**get_signature_image_as_super_admin**](docs/AdminAllUsersApi.md#get_signature_image_as_super_admin) | **GET** /api/provisioning/v1/admin/user/{userId}/signature-image | Get user&#39;s signature image
*AdminAllUsersApi* | [**get_user_as_super_admin**](docs/AdminAllUsersApi.md#get_user_as_super_admin) | **GET** /api/provisioning/v1/admin/user/{userId} | Get a full user representation
*AdminAllUsersApi* | [**list_users_as_super_admin**](docs/AdminAllUsersApi.md#list_users_as_super_admin) | **GET** /api/provisioning/v1/admin/user | List all users on the instance
*AdminAllUsersApi* | [**set_signature_image_as_super_admin**](docs/AdminAllUsersApi.md#set_signature_image_as_super_admin) | **POST** /api/provisioning/v1/admin/user/{userId}/signature-image | Create user&#39;s signature image
*AdminAllUsersApi* | [**update_signature_image_as_super_admin**](docs/AdminAllUsersApi.md#update_signature_image_as_super_admin) | **PUT** /api/provisioning/v1/admin/user/{userId}/signature-image | Replace user&#39;s signature image
*AdminAllUsersApi* | [**update_user_as_super_admin**](docs/AdminAllUsersApi.md#update_user_as_super_admin) | **PUT** /api/provisioning/v1/admin/user/{userId} | Edit a user
*AdminDeskApi* | [**create_delegation_as_admin**](docs/AdminDeskApi.md#create_delegation_as_admin) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId}/delegation | Create a new delegation (active or planned) from target desk
*AdminDeskApi* | [**create_desk**](docs/AdminDeskApi.md#create_desk) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/desk | Create a desk
*AdminDeskApi* | [**delete_delegation_as_admin**](docs/AdminDeskApi.md#delete_delegation_as_admin) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId}/delegation/{delegationId} | Remove an active or planned delegation from target Desk
*AdminDeskApi* | [**delete_desk**](docs/AdminDeskApi.md#delete_desk) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId} | Delete a desk
*AdminDeskApi* | [**edit_desk**](docs/AdminDeskApi.md#edit_desk) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId} | Edit a desk
*AdminDeskApi* | [**get_delegation_as_admin**](docs/AdminDeskApi.md#get_delegation_as_admin) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId}/delegation/{delegationId} | Get a delegation with every information set
*AdminDeskApi* | [**get_desk_as_admin**](docs/AdminDeskApi.md#get_desk_as_admin) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId} | Get a full desk description
*AdminDeskApi* | [**list_desk_delegations_as_admin**](docs/AdminDeskApi.md#list_desk_delegations_as_admin) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId}/delegation | List delegations (active and planned) for given delegating desk
*AdminDeskApi* | [**list_desks**](docs/AdminDeskApi.md#list_desks) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/desk | List desks
*AdminDeskApi* | [**update_delegation_as_admin**](docs/AdminDeskApi.md#update_delegation_as_admin) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/desk/{deskId}/delegation/{delegationId} | Update a delegation from target Desk
*AdminExternalSignatureApi* | [**create_external_signature_config**](docs/AdminExternalSignatureApi.md#create_external_signature_config) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/external-signature-config | Create an external signature config
*AdminExternalSignatureApi* | [**delete_external_signature_config**](docs/AdminExternalSignatureApi.md#delete_external_signature_config) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/external-signature-config/{configId} | Delete an external signature config
*AdminExternalSignatureApi* | [**edit_external_signature_config**](docs/AdminExternalSignatureApi.md#edit_external_signature_config) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/external-signature-config/{configId} | Update an external signature config
*AdminExternalSignatureApi* | [**get_external_signature_config**](docs/AdminExternalSignatureApi.md#get_external_signature_config) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/external-signature-config/{configId} | Get a full external signature config description
*AdminExternalSignatureApi* | [**list_external_signature_configs**](docs/AdminExternalSignatureApi.md#list_external_signature_configs) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/external-signature-config | List external signature configs
*AdminFolderApi* | [**delete_folder_as_admin**](docs/AdminFolderApi.md#delete_folder_as_admin) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/folder/{folderId} | Delete folder
*AdminMetadataApi* | [**create_metadata**](docs/AdminMetadataApi.md#create_metadata) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/metadata | Create a metadata
*AdminMetadataApi* | [**delete_metadata**](docs/AdminMetadataApi.md#delete_metadata) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/metadata/{metadataId} | Delete a metadata
*AdminMetadataApi* | [**get_metadata**](docs/AdminMetadataApi.md#get_metadata) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/metadata/{metadataId} | Get a full metadata description
*AdminMetadataApi* | [**list_internal_metadata_as_admin**](docs/AdminMetadataApi.md#list_internal_metadata_as_admin) | **GET** /api/provisioning/v1/admin/internal-metadata | List internal metadata
*AdminMetadataApi* | [**list_metadata**](docs/AdminMetadataApi.md#list_metadata) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/metadata | List all metadata associated with the tenant
*AdminMetadataApi* | [**update_metadata**](docs/AdminMetadataApi.md#update_metadata) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/metadata/{metadataId} | Edit a metadata
*AdminSealCertificateApi* | [**create_seal_certificate**](docs/AdminSealCertificateApi.md#create_seal_certificate) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/seal-certificate | Create a seal certificate
*AdminSealCertificateApi* | [**create_seal_certificate_deprecated**](docs/AdminSealCertificateApi.md#create_seal_certificate_deprecated) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/sealCertificate | DEPRECATED: Use the \&quot;seal-certificate\&quot; instead. Create a seal certificate
*AdminSealCertificateApi* | [**delete_seal_certificate**](docs/AdminSealCertificateApi.md#delete_seal_certificate) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/seal-certificate/{sealCertificateId} | Delete a stored seal certificate
*AdminSealCertificateApi* | [**delete_seal_certificate_deprecated**](docs/AdminSealCertificateApi.md#delete_seal_certificate_deprecated) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/sealCertificate/{sealCertificateId} | DEPRECATED: Use the \&quot;seal-certificate\&quot; instead. Delete a stored seal certificate
*AdminSealCertificateApi* | [**get_seal_certificate**](docs/AdminSealCertificateApi.md#get_seal_certificate) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/seal-certificate/{sealCertificateId} | Get a seal certificate with every information set
*AdminSealCertificateApi* | [**get_seal_certificate_deprecated**](docs/AdminSealCertificateApi.md#get_seal_certificate_deprecated) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/sealCertificate/{sealCertificateId} | DEPRECATED: Use the \&quot;seal-certificate\&quot; instead. Get a seal certificate with every information set
*AdminSealCertificateApi* | [**list_seal_certificate**](docs/AdminSealCertificateApi.md#list_seal_certificate) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/seal-certificate | List seal certificates
*AdminSealCertificateApi* | [**list_seal_certificate_deprecated**](docs/AdminSealCertificateApi.md#list_seal_certificate_deprecated) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/sealCertificate | DEPRECATED: Use the \&quot;seal-certificate\&quot; instead. List seal certificates
*AdminSealCertificateApi* | [**update_seal_certificate**](docs/AdminSealCertificateApi.md#update_seal_certificate) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/seal-certificate/{sealCertificateId} | Edit a seal certificate
*AdminSealCertificateApi* | [**update_seal_certificate_deprecated**](docs/AdminSealCertificateApi.md#update_seal_certificate_deprecated) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/sealCertificate/{sealCertificateId} | DEPRECATED: Use the \&quot;seal-certificate\&quot; instead. Edit a seal certificate
*AdminTemplateApi* | [**create_custom_template**](docs/AdminTemplateApi.md#create_custom_template) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/templates/{templateType} | Create a custom template
*AdminTemplateApi* | [**delete_custom_template**](docs/AdminTemplateApi.md#delete_custom_template) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/templates/{templateType} | Delete a custom template
*AdminTemplateApi* | [**get_custom_template**](docs/AdminTemplateApi.md#get_custom_template) | **GET** /api/provisioning/v1/tenant/{tenantId}/templates/{templateType} | Get a custom template
*AdminTemplateApi* | [**get_default_template**](docs/AdminTemplateApi.md#get_default_template) | **GET** /api/provisioning/v1/templates/{templateType} | Get the server default template
*AdminTemplateApi* | [**update_custom_template**](docs/AdminTemplateApi.md#update_custom_template) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/templates/{templateType} | Update a custom template
*AdminTenantApi* | [**create_tenant**](docs/AdminTenantApi.md#create_tenant) | **POST** /api/provisioning/v1/admin/tenant | Create a new tenant
*AdminTenantApi* | [**delete_tenant**](docs/AdminTenantApi.md#delete_tenant) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId} | Delete a tenant
*AdminTenantApi* | [**get_tenant**](docs/AdminTenantApi.md#get_tenant) | **GET** /api/provisioning/v1/admin/tenant/{tenantId} | Get a full tenant description
*AdminTenantApi* | [**list_tenants**](docs/AdminTenantApi.md#list_tenants) | **GET** /api/provisioning/v1/admin/tenant | List tenants
*AdminTenantApi* | [**update_tenant**](docs/AdminTenantApi.md#update_tenant) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId} | Edit a tenant
*AdminTenantUserApi* | [**create_user**](docs/AdminTenantUserApi.md#create_user) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/user | Create a new user
*AdminTenantUserApi* | [**delete_signature_image**](docs/AdminTenantUserApi.md#delete_signature_image) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId}/signature-image | Delete user&#39;s signature image
*AdminTenantUserApi* | [**get_signature_image**](docs/AdminTenantUserApi.md#get_signature_image) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId}/signature-image | Get user&#39;s signature image
*AdminTenantUserApi* | [**get_user**](docs/AdminTenantUserApi.md#get_user) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId} | Get a full user description
*AdminTenantUserApi* | [**list_tenant_users**](docs/AdminTenantUserApi.md#list_tenant_users) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/user | List all users associated with the tenant
*AdminTenantUserApi* | [**remove_user**](docs/AdminTenantUserApi.md#remove_user) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId} | Remove the given user from the tenant, deleting it if it was the last tenant linked
*AdminTenantUserApi* | [**set_signature_image**](docs/AdminTenantUserApi.md#set_signature_image) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId}/signature-image | Create user&#39;s signature image
*AdminTenantUserApi* | [**update_signature_image**](docs/AdminTenantUserApi.md#update_signature_image) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId}/signature-image | Replace user&#39;s signature image
*AdminTenantUserApi* | [**update_user**](docs/AdminTenantUserApi.md#update_user) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/user/{userId} | Edit a user
*AdminTypologyApi* | [**create_subtype**](docs/AdminTypologyApi.md#create_subtype) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId}/subtype | Create a subtype
*AdminTypologyApi* | [**create_type**](docs/AdminTypologyApi.md#create_type) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type | Create a type
*AdminTypologyApi* | [**delete_subtype**](docs/AdminTypologyApi.md#delete_subtype) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId}/subtype/{subtypeId} | Delete a subtype
*AdminTypologyApi* | [**delete_type**](docs/AdminTypologyApi.md#delete_type) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId} | Delete a type
*AdminTypologyApi* | [**get_subtype**](docs/AdminTypologyApi.md#get_subtype) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId}/subtype/{subtypeId} | Get a subtype with every information set
*AdminTypologyApi* | [**get_type**](docs/AdminTypologyApi.md#get_type) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId} | Get a type with every information set
*AdminTypologyApi* | [**list_subtypes**](docs/AdminTypologyApi.md#list_subtypes) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId}/subtype | Get subtypes
*AdminTypologyApi* | [**list_types**](docs/AdminTypologyApi.md#list_types) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type | List types
*AdminTypologyApi* | [**update_subtype**](docs/AdminTypologyApi.md#update_subtype) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId}/subtype/{subtypeId} | Edit a subtype
*AdminTypologyApi* | [**update_type**](docs/AdminTypologyApi.md#update_type) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/typology/type/{typeId} | Edit a type
*AdminWorkflowDefinitionApi* | [**create_workflow_definition**](docs/AdminWorkflowDefinitionApi.md#create_workflow_definition) | **POST** /api/provisioning/v1/admin/tenant/{tenantId}/workflow-definition | Create a workflow definition
*AdminWorkflowDefinitionApi* | [**delete_workflow_definition**](docs/AdminWorkflowDefinitionApi.md#delete_workflow_definition) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/workflow-definition/{workflowDefinitionKey} | Delete a workflow definition
*AdminWorkflowDefinitionApi* | [**delete_workflow_definition_legacy**](docs/AdminWorkflowDefinitionApi.md#delete_workflow_definition_legacy) | **DELETE** /api/provisioning/v1/admin/tenant/{tenantId}/workflowDefinition/{workflowDefinitionKey} | Delete a workflow definition
*AdminWorkflowDefinitionApi* | [**get_workflow_definition**](docs/AdminWorkflowDefinitionApi.md#get_workflow_definition) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/workflow-definition/{workflowDefinitionKey} | Get a workflow definition with every information set
*AdminWorkflowDefinitionApi* | [**list_workflow_definitions**](docs/AdminWorkflowDefinitionApi.md#list_workflow_definitions) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/workflow-definition | List workflow definitions
*AdminWorkflowDefinitionApi* | [**list_workflow_definitions_legacy**](docs/AdminWorkflowDefinitionApi.md#list_workflow_definitions_legacy) | **GET** /api/provisioning/v1/admin/tenant/{tenantId}/workflowDefinition | List workflow definitions
*AdminWorkflowDefinitionApi* | [**update_workflow_definition**](docs/AdminWorkflowDefinitionApi.md#update_workflow_definition) | **PUT** /api/provisioning/v1/admin/tenant/{tenantId}/workflow-definition/{workflowDefinitionKey} | Edit a workflow definition


## Documentation For Models

 - [CertificateInformations](docs/CertificateInformations.md)
 - [CreateSealCertificateDeprecatedRequest](docs/CreateSealCertificateDeprecatedRequest.md)
 - [DelegationDto](docs/DelegationDto.md)
 - [DelegationSortBy](docs/DelegationSortBy.md)
 - [DeskDto](docs/DeskDto.md)
 - [DeskRepresentation](docs/DeskRepresentation.md)
 - [ErrorResponse](docs/ErrorResponse.md)
 - [ExternalSignatureConfigDto](docs/ExternalSignatureConfigDto.md)
 - [ExternalSignatureConfigRepresentation](docs/ExternalSignatureConfigRepresentation.md)
 - [ExternalSignatureConfigSortBy](docs/ExternalSignatureConfigSortBy.md)
 - [ExternalSignatureLevel](docs/ExternalSignatureLevel.md)
 - [ExternalSignatureProvider](docs/ExternalSignatureProvider.md)
 - [InternalMetadata](docs/InternalMetadata.md)
 - [LayerRepresentation](docs/LayerRepresentation.md)
 - [LayerSortBy](docs/LayerSortBy.md)
 - [ListableUser](docs/ListableUser.md)
 - [MetadataDto](docs/MetadataDto.md)
 - [MetadataRepresentation](docs/MetadataRepresentation.md)
 - [MetadataSortBy](docs/MetadataSortBy.md)
 - [MetadataType](docs/MetadataType.md)
 - [PageDelegationDto](docs/PageDelegationDto.md)
 - [PageDeskRepresentation](docs/PageDeskRepresentation.md)
 - [PageExternalSignatureConfigRepresentation](docs/PageExternalSignatureConfigRepresentation.md)
 - [PageListableUser](docs/PageListableUser.md)
 - [PageMetadataRepresentation](docs/PageMetadataRepresentation.md)
 - [PageSealCertificateRepresentation](docs/PageSealCertificateRepresentation.md)
 - [PageSubtypeRepresentation](docs/PageSubtypeRepresentation.md)
 - [PageTenantRepresentation](docs/PageTenantRepresentation.md)
 - [PageTypeRepresentation](docs/PageTypeRepresentation.md)
 - [PageWorkflowDefinitionRepresentation](docs/PageWorkflowDefinitionRepresentation.md)
 - [PageableObject](docs/PageableObject.md)
 - [PdfSignaturePosition](docs/PdfSignaturePosition.md)
 - [SealCertificateDto](docs/SealCertificateDto.md)
 - [SealCertificateRepresentation](docs/SealCertificateRepresentation.md)
 - [SealCertificateSortBy](docs/SealCertificateSortBy.md)
 - [SignatureFormat](docs/SignatureFormat.md)
 - [SignatureProtocol](docs/SignatureProtocol.md)
 - [SortObject](docs/SortObject.md)
 - [StepDefinitionDto](docs/StepDefinitionDto.md)
 - [StepDefinitionParallelType](docs/StepDefinitionParallelType.md)
 - [StepDefinitionType](docs/StepDefinitionType.md)
 - [SubtypeDto](docs/SubtypeDto.md)
 - [SubtypeLayerAssociation](docs/SubtypeLayerAssociation.md)
 - [SubtypeLayerDto](docs/SubtypeLayerDto.md)
 - [SubtypeMetadataDto](docs/SubtypeMetadataDto.md)
 - [SubtypeRepresentation](docs/SubtypeRepresentation.md)
 - [TemplateInfo](docs/TemplateInfo.md)
 - [TemplateType](docs/TemplateType.md)
 - [TenantDto](docs/TenantDto.md)
 - [TenantRepresentation](docs/TenantRepresentation.md)
 - [TenantSortBy](docs/TenantSortBy.md)
 - [TypeDto](docs/TypeDto.md)
 - [TypeRepresentation](docs/TypeRepresentation.md)
 - [TypologySortBy](docs/TypologySortBy.md)
 - [UpdateSealCertificateDeprecatedRequest](docs/UpdateSealCertificateDeprecatedRequest.md)
 - [UpdateSignatureImageAsSuperAdminRequest](docs/UpdateSignatureImageAsSuperAdminRequest.md)
 - [UserDto](docs/UserDto.md)
 - [UserPrivilege](docs/UserPrivilege.md)
 - [UserRepresentation](docs/UserRepresentation.md)
 - [UserSortBy](docs/UserSortBy.md)
 - [WorkflowDefinitionDto](docs/WorkflowDefinitionDto.md)
 - [WorkflowDefinitionRepresentation](docs/WorkflowDefinitionRepresentation.md)
 - [WorkflowDefinitionSortBy](docs/WorkflowDefinitionSortBy.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="spring_oauth"></a>
### spring_oauth

- **Type**: OAuth
- **Flow**: accessCode
- **Authorization URL**: ./auth/realms/api/protocol/openid-connect/auth
- **Scopes**: N/A


## Author

iparapheur@libriciel.coop


