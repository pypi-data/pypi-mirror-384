Metadata-Version: 2.4
Name: rabbitmq-mcp-server
Version: 1.1.0
Summary: MCP server for RabbitMQ with semantic discovery (search-ids, get-id, call-id)
Project-URL: Homepage, https://github.com/guercheLE/rabbitmq-mcp-server
Project-URL: Repository, https://github.com/guercheLE/rabbitmq-mcp-server
Project-URL: Issues, https://github.com/guercheLE/rabbitmq-mcp-server/issues
Project-URL: Changelog, https://github.com/guercheLE/rabbitmq-mcp-server/blob/main/CHANGELOG.md
Author-email: Your Name <you@example.com>
License: LGPL-3.0-or-later
License-File: LICENSE
Keywords: ai,llm,mcp,model-context-protocol,rabbitmq,semantic-search
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Communications
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Monitoring
Requires-Python: >=3.12
Requires-Dist: httpx>=0.27
Requires-Dist: jsonschema>=4.20
Requires-Dist: mcp>=1.0.0
Requires-Dist: opentelemetry-api>=1.22
Requires-Dist: opentelemetry-instrumentation>=0.43b0
Requires-Dist: opentelemetry-sdk>=1.22
Requires-Dist: pika>=1.3
Requires-Dist: pydantic-settings>=2.0
Requires-Dist: pydantic>=2.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: slowapi>=0.1
Requires-Dist: structlog>=24.1
Provides-Extra: dev
Requires-Dist: black>=24.1; extra == 'dev'
Requires-Dist: datamodel-code-generator>=0.25; extra == 'dev'
Requires-Dist: mypy>=1.8; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.23; extra == 'dev'
Requires-Dist: pytest-cov>=4.1; extra == 'dev'
Requires-Dist: pytest-mock>=3.12; extra == 'dev'
Requires-Dist: pytest>=8.0; extra == 'dev'
Requires-Dist: python-semantic-release>=9.0; extra == 'dev'
Requires-Dist: ruff>=0.2; extra == 'dev'
Requires-Dist: testcontainers>=3.7; extra == 'dev'
Description-Content-Type: text/markdown

# RabbitMQ MCP Connection

Esta feature implementa conexão básica com RabbitMQ exposta via MCP (Model Context Protocol) seguindo o padrão de descoberta semântica (`search-ids`, `get-id`, `call-id`).

## Estrutura

- `src/`
  - `connection/`: componentes núcleo de conexão AMQP
  - `logging/`: configuração de logging estruturado
  - `schemas/`: validações Pydantic
  - `tools/`: MCP tools para operações RabbitMQ
- `tests/`
  - `unit/`, `integration/`, `contract/`: suites de teste
- `config/`: exemplos de configuração (`config.toml.example`, `.env.example`)

Consulte `specs/002-basic-rabbitmq-connection/` para spec, plano e tasks completas.
