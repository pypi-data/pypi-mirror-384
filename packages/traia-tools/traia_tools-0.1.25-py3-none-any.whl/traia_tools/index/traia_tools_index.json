{
    "tools": [
        {
            "name": "coingecko_universal_quote_tool", 
            "className": "CoingeckoUniversalQuoteTool()",
            "description": "A tool for fetching token prices from Coingecko API, supporting both token and chain price queries.",
            "selection_criteria": "Use this tool when you need to fetch token prices from Coingecko API.",
            "required_env": ["COINGECKO_API_KEY"]
        },
        {
            "name": "serply_news_search_tool",
            "className": "SerplyNewsSearchTool()",
            "description": "A tool that searches for news articles using the Serply API, returning titles, links, snippets, sources, and publication dates.",
            "selection_criteria": "Use this tool when you need to search for news articles using the Serply API.",
            "required_env": ["SERPLY_API_KEY"]
        },
        {
            "name": "scrape_website_tool",
            "className": "ScrapeWebsiteTool()",
            "description": "A tool that scrapes content from websites using BeautifulSoup, allowing for targeted content extraction using CSS selectors.",
            "selection_criteria": "Use this tool when you need to scrape content from websites using BeautifulSoup.",
            "required_env": ["SERPER_API_KEY"]
        },
        {
            "name": "serper_dev_tool",
            "className": "SerperDevTool()",
            "description": "A tool for performing web searches using the Serper API.",
            "selection_criteria": "Use this tool when you need to perform web searches using the Serper API.",
            "required_env": ["SERPER_API_KEY"]
        },
        {
            "name": "json_search_tool",
            "className": "JSONSearchTool(json_file_path=<path_to_json_file>)",
            "description": "A tool for searching JSON data using the JSONSearchTool.",
            "selection_criteria": "Use this tool ONLY if you have a json file that needs to be searched upon. The json file path should be provided as a parameter to the tool (replace <path_to_json_file> with the actual path to the json file).",
            "required_env": []
        },
        {
            "name": "file_read_tool",
            "className": "FileReadTool(file_path=<path_to_file>)",
            "description": "A tool for read entire files e.g. .json or .txt files, with custom converters to python objects.",
            "selection_criteria": "Use this tool ONLY if you have a file of type .txt or .json that needs to be properly collected, formatted and fed into the context of tasks/agents. The  file path should be provided as a parameter to the tool (replace <path_to_file> with the actual path to the file).",
            "required_env": []
        },
        {
            "name": "rag_tool",
            "className": "RagTool()",
            "description": "A tool for implementing Retrieval-Augmented Generation (RAG) functionality.",
            "selection_criteria": "Use this tool ONLY if you need to implement Retrieval-Augmented Generation (RAG) functionality.",
            "required_env": []
        },
        {
            "name": "s3_reader_tool",
            "className": "S3ReaderTool()",
            "description": "A tool for reading data from Amazon S3 storage.",
            "selection_criteria": "Use this tool ONLY when you need to read data from Amazon S3 storage.",
            "required_env": ["S3_BUCKET_NAME", "S3_ACCESS_KEY", "S3_SECRET_ACCESS_KEY"]
        },
        {
            "name": "s3_writer_tool",
            "className": "S3WriterTool()",
            "description": "A tool for writing data to Amazon S3 storage.",
            "selection_criteria": "Use this tool ONLY when you need to write data to Amazon S3 storage.",
            "required_env": ["S3_BUCKET_NAME", "S3_ACCESS_KEY", "S3_SECRET_ACCESS_KEY"]
        }
    ],
    "allToolClasses": [
        "CoingeckoUniversalQuoteTool()",
        "SerplyNewsSearchTool()",
        "ScrapeWebsiteTool()",
        "SerperDevTool()",
        "JSONSearchTool()",
        "RagTool()",
        "S3ReaderTool()",
        "S3WriterTool()"
    ]
} 