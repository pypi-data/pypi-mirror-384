name: CI/CD

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  FORCE_COLOR: 1

jobs:
  validate:
    uses: ./.github/workflows/_validate.yml
    if: github.actor != 'alexfayers-auto-cd[bot]'
    permissions:
      contents: write
      pull-requests: write
    secrets: inherit

  semantic-release:
    name: GitHub Release
    needs:
      - validate
    runs-on: ubuntu-latest
    if: needs.validate.outputs.check-result == 'success' && needs.validate.outputs.new-release == 'true'

    environment: gh-release

    permissions:
      contents: write

    steps:
      # bot integration taken from https://gist.github.com/0xernesto/a8065cce55940e6ccc523664a87ee9bc
      - name: Setup | Checkout repository
        uses: actions/checkout@v5

      - name: Setup | Configure bot user
        id: setup-bot
        uses: ./.github/actions/setup-bot
        with:
          app-id: ${{ secrets.RELEASER_ID }}
          private-key: ${{ secrets.RELEASER_PRIVATE_KEY }}

      - name: Setup | Checkout repository as bot user with history and tags
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          filter: tree:0
          token: ${{ steps.setup-bot.outputs.token }}

      - uses: ./.github/actions/setup

      - name: Release | Python Semantic Release
        id: release
        env:
          GH_TOKEN: ${{ steps.setup-bot.outputs.token }}
          GIT_COMMIT_AUTHOR: ${{ steps.setup-bot.outputs.name }} <${{ steps.setup-bot.outputs.email }}>
        run: |
          git config --local user.name ${{ steps.setup-bot.outputs.name }}
          git config --local user.email ${{ steps.setup-bot.outputs.email }}
          just release

      - name: Store artifact | Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-build-artifacts
          path: dist/

    outputs:
      released: ${{ steps.release.outputs.released || 'false' }}
      new-version: ${{ steps.release.outputs.version }}
      new-tag: ${{ steps.release.outputs.tag }}
