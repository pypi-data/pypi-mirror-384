name: CI

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout repository with history and tags
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Validate | Check commit messages
        uses: wagoid/commitlint-github-action@v6.2.1
        # uses this config by default: https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional

  validate:
    needs: commitlint
    uses: ./.github/workflows/_validate.yml
    with:
      fast-mode: true
    permissions:
      contents: write
      pull-requests: write
    secrets: inherit

  auto-approve:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    # Auto-approve if PR is created by repo owner or if repo owner is involved (via approval/review)
    if: |
      github.actor == github.repository_owner ||
      contains(github.event.pull_request.requested_reviewers.*.login, github.repository_owner) ||
      github.event.pull_request.user.login == github.repository_owner
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v5

      - name: Setup | Configure bot user
        id: setup-bot
        uses: ./.github/actions/setup-bot
        with:
          app-id: ${{ secrets.CI_BOT_ID }}
          private-key: ${{ secrets.CI_BOT_PRIVATE_KEY }}

      - name: Check if repo owner has approved
        id: check-approval
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const ownerApproved = reviews.data.some(review =>
              review.user.login === context.payload.repository.owner.login &&
              review.state === 'APPROVED'
            );

            core.setOutput('owner-approved', ownerApproved);
            return ownerApproved;

      - uses: hmarr/auto-approve-action@v4
        if: |
          github.actor == github.repository_owner ||
          steps.check-approval.outputs.owner-approved == 'true'
        with:
          review-message: "Auto-approved due to repo owner involvement: PR created by @${{ github.actor }}${{ steps.check-approval.outputs.owner-approved == 'true' && ' and approved by repo owner' || '' }}."
          github-token: ${{ steps.setup-bot.outputs.token }}
