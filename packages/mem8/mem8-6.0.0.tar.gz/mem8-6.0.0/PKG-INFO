Metadata-Version: 2.4
Name: mem8
Version: 6.0.0
Summary: Context management toolkit for AI-assisted development
Project-URL: Homepage, https://github.com/killerapp/mem8
Project-URL: Documentation, https://github.com/killerapp/mem8#readme
Project-URL: Repository, https://github.com/killerapp/mem8
Project-URL: Issues, https://github.com/killerapp/mem8/issues
Author-email: killerapp <vaskin@gmail.com>
License: Apache-2.0
License-File: LICENSE
Keywords: ai-development,claude-code,context-management,memory,port-management,templates,toolbelt
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Documentation
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing
Requires-Python: >=3.11
Requires-Dist: click>=8.1.0
Requires-Dist: colorama>=0.4.6
Requires-Dist: cookiecutter>=2.4.0
Requires-Dist: fastapi>=0.118.0
Requires-Dist: gitpython>=3.1.0
Requires-Dist: packaging>=23.0
Requires-Dist: pathlib>=1.0.0
Requires-Dist: platformdirs>=3.0.0
Requires-Dist: psutil>=5.9.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: requests>=2.28.0
Requires-Dist: rich>=13.0.0
Requires-Dist: typer>=0.9.0
Requires-Dist: uvicorn>=0.37.0
Requires-Dist: watchdog>=3.0.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: build>=1.0.0; extra == 'dev'
Requires-Dist: isort>=5.0.0; extra == 'dev'
Requires-Dist: mypy>=1.0.0; extra == 'dev'
Requires-Dist: pytest-cov>=4.0.0; extra == 'dev'
Requires-Dist: pytest-html>=4.0.0; extra == 'dev'
Requires-Dist: pytest-xdist>=3.0.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Requires-Dist: python-semantic-release>=9.0.0; extra == 'dev'
Provides-Extra: semantic
Requires-Dist: sentence-transformers>=2.2.0; extra == 'semantic'
Provides-Extra: server
Requires-Dist: aiosqlite>=0.19.0; extra == 'server'
Requires-Dist: alembic>=1.12.0; extra == 'server'
Requires-Dist: asyncpg>=0.29.0; extra == 'server'
Requires-Dist: email-validator>=2.1.0; extra == 'server'
Requires-Dist: httpx>=0.25.0; extra == 'server'
Requires-Dist: passlib[bcrypt]>=1.7.4; extra == 'server'
Requires-Dist: prometheus-client>=0.19.0; extra == 'server'
Requires-Dist: pydantic-settings>=2.0.0; extra == 'server'
Requires-Dist: pyjwt>=2.8.0; extra == 'server'
Requires-Dist: python-jose[cryptography]>=3.3.0; extra == 'server'
Requires-Dist: python-json-logger>=2.0.7; extra == 'server'
Requires-Dist: python-multipart>=0.0.6; extra == 'server'
Requires-Dist: redis>=5.0.0; extra == 'server'
Requires-Dist: sqlalchemy>=2.0.0; extra == 'server'
Requires-Dist: websockets>=12.0; extra == 'server'
Description-Content-Type: text/markdown

# mem8

Context management toolkit for AI-assisted development. Manage memory, templates, and workflows with Claude Code and other AI tools.

## Quick Start

```bash
# Install
uv tool install mem8

# Initialize workspace
cd your-project
mem8 init

# Check status
mem8 status
```

## Core Features

### 🧠 Context Window Management
Persistent memory system for Claude Code with structured documentation. Keep AI context focused and relevant across long development sessions.

```bash
# Search your memory
mem8 search "authentication"

# Use Claude Code commands
/mem8:research "payment system"
/mem8:plan "add OAuth support"
/mem8:implement memory/shared/plans/oauth.md
/mem8:commit
```

### 🔧 Toolbelt Integration
Verify and manage CLI tools required for AI workflows.

```bash
# Check for missing tools
mem8 doctor

# Auto-install missing tools
mem8 doctor --fix

# List all tools and versions
mem8 tools
```

Verified tools include: `ripgrep`, `fd`, `jq`, `gh`, `git`, `bat`, `delta`, `ast-grep`, and more.

### 🚢 Port Management
Global port leasing system prevents conflicts across projects.

```bash
# Lease port range for project
mem8 ports --lease

# View assigned ports
mem8 ports

# Kill process on port (safe mode)
mem8 ports --kill 20000
```

### 🎨 External Templates
Share standardized configurations across teams using GitHub templates.

```bash
# Use official templates
mem8 init --template-source killerapp/mem8-plugin

# Use team templates
mem8 init --template-source your-org/templates

# Set default for all projects
mem8 templates set-default your-org/templates
```

### 🤖 Claude Code Integration
Custom commands and agents for enhanced AI workflows.

Commands installed by default:
- `/mem8:research` - Parallel codebase exploration
- `/mem8:plan` - Structured implementation planning
- `/mem8:implement` - Execute plans with progress tracking
- `/mem8:validate` - Verify implementation completeness
- `/mem8:commit` - Create semantic commits
- `/mem8:describe-pr` - Generate PR descriptions

## Documentation

**📚 Full documentation at [codebasecontext.org](https://codebasecontext.org)**

- [Getting Started](https://codebasecontext.org/docs/user-guide/getting-started)
- [CLI Commands](https://codebasecontext.org/docs/user-guide/cli-commands)
- [External Templates](https://codebasecontext.org/docs/external-templates)
- [Contributing](https://codebasecontext.org/docs/contributing)

## Development Workflow

mem8 provides a structured development cycle:

1. **Research** (`/mem8:research`) - Understand existing patterns
2. **Plan** (`/mem8:plan`) - Design with concrete steps
3. **Implement** (`/mem8:implement`) - Execute with progress tracking
4. **Validate** (`/mem8:validate`) - Verify completeness
5. **Commit** (`/mem8:commit`) - Create semantic commits

## Project Structure

After running `mem8 init --template full`:

```
your-project/
├── .claude/
│   ├── commands/          # Custom slash commands
│   └── agents/           # Custom agent definitions
├── memory/
│   └── shared/
│       ├── research/     # Research documents
│       ├── plans/        # Implementation plans
│       ├── prs/         # PR descriptions
│       └── decisions/    # Technical decisions
└── .mem8/
    ├── config.yaml      # Configuration
    ├── ports.md         # Port assignments
    └── tools.md         # Tool inventory
```

## Requirements

- Python 3.11+
- uv (recommended) or pip

Optional:
- Docker (for backend API features)
- Node.js 18+ (for web interface)

## Support

- 📖 [Documentation](https://codebasecontext.org)
- 🐛 [Report Issues](https://github.com/killerapp/mem8/issues)
- 💬 [Discussions](https://github.com/killerapp/mem8/discussions)
- 🔧 [Template Repository](https://github.com/killerapp/mem8-plugin)

## License

MIT License - see LICENSE file for details.
