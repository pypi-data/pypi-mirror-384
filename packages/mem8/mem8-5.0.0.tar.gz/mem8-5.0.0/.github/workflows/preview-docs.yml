name: Deploy Documentation Preview to Cloudflare Pages

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'documentation/**'
      - '.github/workflows/preview-docs.yml'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: documentation/package-lock.json

      - name: Cache Docusaurus build
        uses: actions/cache@v4
        with:
          path: |
            documentation/.docusaurus
            documentation/node_modules/.cache
          key: ${{ runner.os }}-docusaurus-${{ hashFiles('documentation/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-docusaurus-

      - name: Install dependencies
        working-directory: ./documentation
        run: npm ci

      - name: Build documentation
        working-directory: ./documentation
        run: npm run build

      - name: Deploy preview to Cloudflare Pages
        id: deploy
        working-directory: ./documentation
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          OUTPUT=$(npx wrangler pages deploy ./build \
            --project-name=mem8 \
            --commit-hash=${{ github.event.pull_request.head.sha }} \
            --commit-message="PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}" \
            --branch=pr-${{ github.event.pull_request.number }})

          # Extract deployment URL from output
          DEPLOYMENT_URL=$(echo "$OUTPUT" | grep -oP 'https://[a-z0-9]+\.mem8\.pages\.dev' | head -1)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployment_url = '${{ steps.deploy.outputs.deployment_url }}';
            const comment = `### ðŸš€ Documentation Preview Ready!

            Your changes have been deployed to Cloudflare Pages:

            ðŸ”— **Preview URL**: ${deployment_url}

            This preview will be updated automatically as you push new commits to this PR.`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Documentation Preview Ready')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
