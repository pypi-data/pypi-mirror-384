Id,Preface,Original
,DO NOT EDIT,THIS FILE WAS AUTOGENERATED BY MAKE
1,[INFO] (profiler.c: 36): ,Reading profile setup from 0x%08x
2,[INFO] (profiler.c: 42): ,Initialising profiler with storage for %u samples starting at 0x%08x
3,[INFO] (profiler.c: 56): ,Profiler wrote %u bytes to 0x%08x
4,[INFO] (tdma_processing.c: 55): ,TDMA initial_expected_time=%u, min_expected_time=%u, time_between_sends=%u
5,[WARNING] (recording.c: 122): ,WARNING: recording channel %u out of space
6,[ERROR] (recording.c: 136): ,DMA transfer of non-word data quantity in recording! (data=0x%08x, size=0x%x)
7,[DEBUG] (recording.c: 141): ,Finalising recording channels
8,[INFO] (recording.c: 150): ,Recording channel %u, start=0x%08x, end=0x%08x, write=0x%08x, space=%u
9,[INFO] (recording.c: 154): ,Recording channel %u - has missing data
10,[INFO] (recording.c: 156): ,Recording channel %u wrote %u bytes
11,[ERROR] (recording.c: 174): ,Not enough space to allocate recording channels
12,[ERROR] (recording.c: 196): ,Could not allocate recording region %u of %u bytes, available was %u bytes
13,[INFO] (recording.c: 200): ,Allocated %u bytes for recording channel %u at 0x%08x
14,[INFO] (recording.c: 228): ,Recording channel %u configured to use %u byte memory block starting at 0x%08x
15,[INFO] (recording.c: 231): ,Recording channel %u left uninitialised
16,[DEBUG] (data_specification.c: 57): ,SDRAM data begins at address: %08x
17,[ERROR] (data_specification.c: 77): ,Magic number is incorrect: %08x
18,[ERROR] (data_specification.c: 82): ,Version number is incorrect: %08x
19,[INFO] (data_specification.c: 89): ,magic = %08x, version = %d.%d
20,[INFO] (simulation.c: 97): ,Starting basic provenance gathering
21,[INFO] (simulation.c: 100): ,running other provenance gathering
22,[INFO] (simulation.c: 191): ,Received exit signal. Program complete.
23,[INFO] (simulation.c: 198): ,Calling pre-exit function
24,[INFO] (simulation.c: 201): ,Exiting
25,[INFO] (simulation.c: 207): ,Setting the runtime of this model to %d starting at %d
26,[INFO] (simulation.c: 209): ,Setting the flag of infinite run for this model to %d
27,[INFO] (simulation.c: 227): ,Calling pre-resume function
28,[INFO] (simulation.c: 236): ,Resuming
29,[INFO] (simulation.c: 248): ,Forced provenance gathering
30,[INFO] (simulation.c: 255): ,Calling pre-exit function
31,[ERROR] (simulation.c: 278): ,received packet with unknown command code %d
32,[ERROR] (simulation.c: 300): ,Cannot allocate SDP callback on port %d as its already been allocated.
33,[ERROR] (simulation.c: 324): ,Cannot handle tag value above %d, please reduce the tag value accordingly.
34,[ERROR] (simulation.c: 332): ,Cannot allocate DMA transfer callback on tag %d as its already been allocated.
35,[ERROR] (simulation.c: 356): ,Unexpected magic number 0x%08x instead of 0x%08x at 0x%08x
36,[ERROR] (simulation.c: 363): ,The SDP callback priority should be set to a number greater than or equal to -1.  It is currently set to %d
37,[DEBUG] (simulation.c: 427): ,Sync at %d
38,[DEBUG] (simulation.c: 431): ,Pausing
39,[DEBUG] (simulation.c: 436): ,Waiting for sync
40,[DEBUG] (simulation.c: 440): ,Sync done, next sync at %d
41,[ERROR] (malloc_extras.c: 113): ,flag is actually %x for ptr %x
42,[ERROR] (malloc_extras.c: 115): ,Unexpected ptr %x
43,[ERROR] (malloc_extras.c: 137): ,there is no way to measure size when the safety is off.
44,[ERROR] (malloc_extras.c: 151): ,test failed with marker %d
45,[ERROR] (malloc_extras.c: 155): ,check cannot operate with safety turned off.
46,[ERROR] (malloc_extras.c: 166): ,the malloc with index %d has overran
47,[ERROR] (malloc_extras.c: 167): ,this test is marked by marker %d
48,[ERROR] (malloc_extras.c: 176): ,cannot do checks with safety turned off
49,[ERROR] (malloc_extras.c: 207): ,FAILED to allocate the tracker code!
50,[ERROR] (malloc_extras.c: 249): ,failed to allocate %d
51,[INFO] (malloc_extras.c: 360): ,free block %d has address %x and size of %d
52,[INFO] (malloc_extras.c: 367): ,total free size is %d
53,[ERROR] (malloc_extras.c: 421): ,cant find space for the heap
54,[ERROR] (malloc_extras.c: 438): ,failed to add heap
55,[INFO] (malloc_extras.c: 466): ,freeing %x
56,[ERROR] (malloc_extras.c: 474): ,over ran whatever is being freed
57,[ERROR] (malloc_extras.c: 475): ,marker is %d
58,[INFO] (malloc_extras.c: 492): ,freeing index %d
59,[ERROR] (malloc_extras.c: 523): ,failed to allocate space for next range.
60,[ERROR] (malloc_extras.c: 567): ,Failed to malloc %u bytes.\n
61,[ERROR] (malloc_extras.c: 590): ,cant track this malloc. failing
62,[INFO] (malloc_extras.c: 597): ,index %d
63,[INFO] (malloc_extras.c: 598): ,address is %x
64,[INFO] (malloc_extras.c: 636): ,went to SDRAM
65,[INFO] (malloc_extras.c: 643): ,went to SDRAM without checking DTCM. as requested
7001,[DEBUG] (spike_source_poisson.c: 277): ,writing other provenance data
7002,[DEBUG] (spike_source_poisson.c: 282): ,finished other provenance data
7003,[INFO] (spike_source_poisson.c: 358): ,atom %d
7004,[INFO] (spike_source_poisson.c: 359): ,scaled_start = %u
7005,[INFO] (spike_source_poisson.c: 360): ,scaled end = %u
7006,[INFO] (spike_source_poisson.c: 361): ,scaled next = %u
7007,[INFO] (spike_source_poisson.c: 362): ,is_fast_source = %d
7008,[INFO] (spike_source_poisson.c: 363): ,exp_minus_lamda = %k
7009,[INFO] (spike_source_poisson.c: 364): ,isi_val = %k
7010,[INFO] (spike_source_poisson.c: 365): ,time_to_spike = %k
7011,[INFO] (spike_source_poisson.c: 381): ,read global_parameters: starting
7012,[INFO] (spike_source_poisson.c: 386): ,\tkey = %08x, set rate mask = %08x
7013,[INFO] (spike_source_poisson.c: 390): ,\tseed = %u %u %u %u
7014,[INFO] (spike_source_poisson.c: 393): ,\tspike sources = %u, starting at %u
7015,[INFO] (spike_source_poisson.c: 394): ,seconds_per_tick = %k\n
7016,[INFO] (spike_source_poisson.c: 395): ,ticks_per_second = %k\n
7017,[INFO] (spike_source_poisson.c: 397): ,slow_rate_per_tick_cutoff = %k\n
7018,[INFO] (spike_source_poisson.c: 399): ,fast_rate_per_tick_cutoff = %k\n
7019,[INFO] (spike_source_poisson.c: 401): ,read_global_parameters: completed successfully
7020,[ERROR] (spike_source_poisson.c: 431): ,Failed to allocate local sources
7021,[ERROR] (spike_source_poisson.c: 437): ,Failed to allocate SDRAM source links
7022,[INFO] (spike_source_poisson.c: 460): ,read_poisson_parameters: completed successfully
7023,[INFO] (spike_source_poisson.c: 473): ,Recording flags = 0x%08x
7024,[ERROR] (spike_source_poisson.c: 484): ,Cannot reallocate spike buffer
7025,[INFO] (spike_source_poisson.c: 510): ,Initialise: started
7026,[ERROR] (spike_source_poisson.c: 578): ,Could not allocate %d bytes for SDRAM inputs
7027,[INFO] (spike_source_poisson.c: 585): ,Writing output to address 0x%08x, size in total %d,offset in half-words %d, size to write %d
7028,[ERROR] (spike_source_poisson.c: 590): ,Could not allocate %d bytes for input this timestep
7029,[INFO] (spike_source_poisson.c: 596): ,Initialise: completed successfully
7030,[ERROR] (spike_source_poisson.c: 611): ,failed to reread the Poisson parameters from SDRAM
7031,[ERROR] (spike_source_poisson.c: 617): ,failed to reread the Poisson rates from SDRAM
7032,[INFO] (spike_source_poisson.c: 630): ,Successfully resumed Poisson spike source at time: %u
7033,[INFO] (spike_source_poisson.c: 642): ,store_parameters: starting
7034,[INFO] (spike_source_poisson.c: 657): ,store_parameters: completed successfully
7035,[DEBUG] (spike_source_poisson.c: 717): ,Generating %d spikes
7036,[DEBUG] (spike_source_poisson.c: 791): ,Timer tick %u
7037,[ERROR] (spike_source_poisson.c: 800): ,Failed to write poisson parameters to SDRAM
7038,[DEBUG] (spike_source_poisson.c: 838): ,Moving to next rate at time %d
7039,[DEBUG] (spike_source_poisson.c: 873): ,Setting rate of %u (%u) to %kHz (%k per tick)
7040,[ERROR] (spike_source_poisson.c: 910): ,Error in initialisation - exiting!
7041,[DEBUG] (synapse_expander.c: 109): ,Synaptic matrix offset = %u, delayed offset = %u
7042,[DEBUG] (synapse_expander.c: 111): ,Max row synapses = %u, max delayed row synapses = %u
7043,[DEBUG] (synapse_expander.c: 123): ,Generating matrix at 0x%08x, delayed at 0x%08x
7044,[ERROR] (synapse_expander.c: 146): ,\tMatrix generation failed
7045,[INFO] (synapse_expander.c: 168): ,Generating %u edges for %u atoms starting at %u
7046,[INFO] (synapse_expander.c: 198): ,Starting To Build Connectors
7047,[INFO] (synapse_expander.c: 210): ,\tReading SDRAM at 0x%08x
7048,[INFO] (synapse_expander.c: 214): ,!!!   Error reading SDRAM data   !!!
7049,[INFO] (synapse_expander.c: 218): ,Finished On Machine Connectors!
7050,[ERROR] (connection_generator.c: 115): ,Could not create generator
7051,[ERROR] (connection_generator.c: 127): ,Connection generator with hash %u not found
7052,[DEBUG] (delay_expander.c: 94): ,Generated %u synapses
7053,[DEBUG] (delay_expander.c: 113): ,Rounded delay %k to %u
7054,[INFO] (delay_expander.c: 164): ,Generating %u delay edges for %u atoms starting at %u
7055,[INFO] (delay_expander.c: 183): ,Starting To Build Delays
7056,[INFO] (delay_expander.c: 192): ,\tReading SDRAM delay params at 0x%08x, expander params at 0x%08x
7057,[INFO] (delay_expander.c: 197): ,!!!   Error reading SDRAM data   !!!
7058,[INFO] (delay_expander.c: 201): ,Finished On-Machine Delays!
7059,[ERROR] (matrix_generator.c: 104): ,Could not create generator
7060,[ERROR] (matrix_generator.c: 116): ,Matrix generator with hash %u not found
7061,[DEBUG] (matrix_generator.c: 176): ,Rounded delay %k to %u
7062,[DEBUG] (matrix_generator.c: 194): ,Rounded weight %k to %u (scale is %k)
7063,[DEBUG] (matrix_generator.c: 225): ,Generated %u synapses
7064,[ERROR] (matrix_generator.c: 229): ,Index %u out of bounds for %u neurons
7065,[DEBUG] (matrix_generator.c: 262): ,\t\tTotal synapses generated = %u. Done!
7066,[ERROR] (param_generator.c: 126): ,Could not create generator
7067,[ERROR] (param_generator.c: 138): ,Param generator with hash %u not found
7068,[DEBUG] (matrix_generator_static.h: 123): ,Max stage = %u
7069,[DEBUG] (matrix_generator_static.h: 139): ,row[0] = 0x%08x
7070,[DEBUG] (matrix_generator_static.h: 151): ,row[%u] = 0x%08x
7071,[DEBUG] (matrix_generator_static.h: 157): ,row[%u] = 0x%08x
7072,[DEBUG] (matrix_generator_static.h: 166): ,Row size at 0x%08x for stage %u
7073,[DEBUG] (matrix_generator_static.h: 174): ,write[%u] = 0x%08x
7074,[ERROR] (matrix_generator_static.h: 201): ,Delay stage %u has not been initialised; raw delay = %u, delay = %u, max stage = %u
7075,[WARNING] (matrix_generator_static.h: 208): ,Row for delay stage %u is full - word not added!
7076,[DEBUG] (matrix_generator_static.h: 218): ,Writing word to 0x%08x
7077,[ERROR] (matrix_generator_stdp.h: 214): ,Delay stage %u has not been initialised
7078,[WARNING] (matrix_generator_stdp.h: 222): ,Row %u only has %u half words of %u free - not writing
7079,[DEBUG] (matrix_generator_common.h: 52): ,Delay of %u is too small
7080,[DEBUG] (matrix_generator_common.h: 59): ,Delay of %u is too big
7081,[DEBUG] (connection_generator_fixed_post.h: 84): ,Fixed Number Post Connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow self connections = %u, with replacement = %u, n_post = %u, n post neurons = %u
7082,[DEBUG] (connection_generator_fixed_post.h: 151): ,Generating %u from %u possible synapses
7083,[INFO] (connection_generator_fixed_post.h: 232): ,Check: indices[%u] is %u
7084,[INFO] (connection_generator_fixed_post.h: 234): ,pre_neuron_index is %u count_indices is %u
7085,[DEBUG] (connection_generator_fixed_pre.h: 100): ,Fixed Number Pre Connector parameters: pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow self connections = %u, with replacement = %u, n_pre = %u, n pre neurons = %u
7086,[DEBUG] (connection_generator_fixed_pre.h: 110): ,Generating %u from %u possible synapses
7087,[WARNING] (connection_generator_fixed_pre.h: 120): ,Could not allocate in DTCM, trying SDRAM
7088,[ERROR] (connection_generator_fixed_pre.h: 126): ,Could not allocate array for indices
7089,[DEBUG] (connection_generator_all_to_all.h: 57): ,All to all connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow_self_connections = %u
7090,[DEBUG] (connection_generator_all_to_all.h: 94): ,Generating for %u
7091,[DEBUG] (connection_generator_all_to_all.h: 115): ,Not generating for post %u
7092,[DEBUG] (connection_generator_one_to_one.h: 51): ,One to one connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u
7093,[DEBUG] (connection_generator_one_to_one.h: 89): ,pre_neuron_index %u
7094,[DEBUG] (connection_generator_kernel.h: 89): ,Kernel connector, m_kernelWidth, m_kernelHeight = %u %u
7095,[DEBUG] (connection_generator_kernel.h: 126): ,Generating for %u
7096,[DEBUG] (connection_generator_fixed_total.h: 74): ,Fixed Total Number Connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow self connections = %u, with replacement = %u, n connections = %u, n potential connections = %u
7097,[WARNING] (connection_generator_fixed_total.h: 229): ,Could not create %u connections
7098,[DEBUG] (connection_generator_fixed_total.h: 234): ,Generating %u of %u synapses
7099,[DEBUG] (connection_generator_fixed_prob.h: 71): ,Fixed Probability Connector, pre_lo = %u, pre_hi = %u, post_lo = %u, post_hi = %u, allow self connections = %u, probability = %k
7100,[WARNING] (connection_generator_fixed_prob.h: 145): ,Row overflow
7101,[DEBUG] (param_generator_uniform.h: 63): ,Uniform low = %k, high = %k
7102,[DEBUG] (param_generator_normal_clipped.h: 72): ,normal clipped mu = %k, sigma = %k, low = %k, high = %k
7103,[ERROR] (param_generator_normal_clipped.h: 117): ,Maximum number of redraws (%u) exceeded on clipped normal distribution with mu=%k, sigma=%k, low=%k, high=%k
7104,[DEBUG] (param_generator_normal.h: 63): ,normal mu = %k, sigma = %k
7105,[DEBUG] (param_generator_kernel.h: 94): ,Kernel param generator; kernelWidth, kernelHeight = %u,%u
7106,[ERROR] (param_generator_kernel.h: 162): ,Kernel coordinates off range (%d, %d)
7107,[DEBUG] (param_generator_constant.h: 50): ,Constant value %k
7108,[DEBUG] (param_generator_exponential.h: 60): ,exponential beta = %k
7109,[DEBUG] (param_generator_normal_clipped_to_boundary.h: 67): ,normal clipped to boundary mu = %k, sigma = %k, low = %k, high = %k
7110,[INFO] (bit_field_expander.c: 162): ,structural matrix region id = %d
7111,[ERROR] (bit_field_expander.c: 173): ,Couldn't allocate memory for key_to_max_atoms
7112,[DEBUG] (bit_field_expander.c: 179): ,master_pop_table_base_address = %0x
7113,[DEBUG] (bit_field_expander.c: 181): ,synaptic_matrix_base_address = %0x
7114,[DEBUG] (bit_field_expander.c: 182): ,bit_field_base_address = %0x
7115,[DEBUG] (bit_field_expander.c: 184): ,direct_matrix_region_base_address = %0x
7116,[DEBUG] (bit_field_expander.c: 186): ,Structural matrix region base address = %0x
7117,[INFO] (bit_field_expander.c: 187): ,Finished reading in vertex data region addresses
7118,[INFO] (bit_field_expander.c: 193): ,Number of items is %d
7119,[INFO] (bit_field_expander.c: 203): ,Entry %d has key %x and n_atoms of %d
7120,[INFO] (bit_field_expander.c: 213): ,Direct synapse init
7121,[ERROR] (bit_field_expander.c: 216): ,Failed to init the synapses. failing
7122,[INFO] (bit_field_expander.c: 221): ,Pop table init
7123,[ERROR] (bit_field_expander.c: 225): ,Failed to init the master pop table. failing
7124,[INFO] (bit_field_expander.c: 229): ,Structural plastic if needed
7125,[ERROR] (bit_field_expander.c: 234): ,Failed to init the synaptogenesis
7126,[INFO] (bit_field_expander.c: 241): ,There were no bitfields to process.
7127,[DEBUG] (bit_field_expander.c: 252): ,Allocating dtcm for row data
7128,[ERROR] (bit_field_expander.c: 255): ,Could not allocate dtcm for the row data
7129,[DEBUG] (bit_field_expander.c: 258): ,Finished pop table set connectivity lookup
7130,[DEBUG] (bit_field_expander.c: 269): ,Plastic row had entries, so cant be pruned
7131,[DEBUG] (bit_field_expander.c: 277): ,Plastic and fixed do not have entries, so can be pruned
7132,[DEBUG] (bit_field_expander.c: 280): ,Fixed row has entries, so cant be pruned
7133,[DEBUG] (bit_field_expander.c: 293): ,Process synaptic row
7134,[INFO] (bit_field_expander.c: 326): ,    Key: 0x%08x, Filter:
7135,[INFO] (bit_field_expander.c: 329): ,        0x%08x
7136,[DEBUG] (bit_field_expander.c: 338): ,Update by pop length
7137,[DEBUG] (bit_field_expander.c: 344): ,bit_field_words_location is %x
7138,[DEBUG] (bit_field_expander.c: 348): ,Starting master pop entry bit field generation
7139,[DEBUG] (bit_field_expander.c: 359): ,Bitfield %d, key = %d, n_neurons = %d
7140,[ERROR] (bit_field_expander.c: 362): ,Could not allocate dtcm for bit field
7141,[DEBUG] (bit_field_expander.c: 370): ,Searching neuron ids
7142,[DEBUG] (bit_field_expander.c: 374): ,New key for neurons %d is %0x
7143,[DEBUG] (bit_field_expander.c: 394): ,%d
7144,[DEBUG] (bit_field_expander.c: 399): ,Direct synapse
7145,[DEBUG] (bit_field_expander.c: 403): ,DMA read synapse
7146,[DEBUG] (bit_field_expander.c: 410): ,%d
7147,[DEBUG] (bit_field_expander.c: 415): ,Direct synapse
7148,[DEBUG] (bit_field_expander.c: 419): ,DMA read synapse
7149,[DEBUG] (bit_field_expander.c: 429): ,bit_found %d
7150,[DEBUG] (bit_field_expander.c: 435): ,Writing bitfield to sdram for core use
7151,[DEBUG] (bit_field_expander.c: 437): ,Putting master pop key %d in entry %d
7152,[DEBUG] (bit_field_expander.c: 439): ,Putting n_atom %d in entry %d
7153,[DEBUG] (bit_field_expander.c: 442): ,Writing to address %0x, %d words to write
7154,[DEBUG] (bit_field_expander.c: 453): ,Freeing the bitfield dtcm
7155,[INFO] (bit_field_expander.c: 466): ,Starting the bit field expander
7156,[ERROR] (bit_field_expander.c: 473): ,Failed to init the master pop and synaptic matrix
7157,[INFO] (bit_field_expander.c: 478): ,Generating bit field
7158,[ERROR] (bit_field_expander.c: 480): ,Failed to generate bitfield
7159,[INFO] (bit_field_expander.c: 484): ,Successfully processed the bitfield
7160,[DEBUG] (delay_extension.c: 201): ,read_parameters: starting
7161,[DEBUG] (delay_extension.c: 210): ,\t key = 0x%08x, incoming key = 0x%08x, incoming mask = 0x%08x,incoming key mask = 0x%08x
7162,[INFO] (delay_extension.c: 232): ,\t parrot neurons = %u, neuron bit field words = %u, num delay stages = %u, num delay slots = %u (pot = %u), num delay slots mask = %08x, n delay in a stage = %u
7163,[ERROR] (delay_extension.c: 240): ,failed to allocate memory for array of size %u bytes
7164,[DEBUG] (delay_extension.c: 246): ,\t delay stage %u
7165,[ERROR] (delay_extension.c: 253): ,failed to allocate memory for bitfield of size %u bytes
7166,[ERROR] (delay_extension.c: 278): ,failed to allocate memory for array of size %u bytes
7167,[ERROR] (delay_extension.c: 287): ,failed to allocate memory for bitfield of size %u bytes
7168,[DEBUG] (delay_extension.c: 293): ,read_parameters: completed successfully
7169,[DEBUG] (delay_extension.c: 300): ,writing other provenance data
7170,[DEBUG] (delay_extension.c: 319): ,finished other provenance data
7171,[INFO] (delay_extension.c: 325): ,initialise: started
7172,[INFO] (delay_extension.c: 361): ,initialise: completed successfully
7173,[DEBUG] (delay_extension.c: 379): ,Received spike %x
7174,[DEBUG] (delay_extension.c: 408): ,%d: Current time slot %u
7175,[DEBUG] (delay_extension.c: 430): ,Incrementing counter %u = %u\n
7176,[DEBUG] (delay_extension.c: 434): ,Invalid neuron ID %u
7177,[DEBUG] (delay_extension.c: 438): ,Invalid spike key 0x%08x
7178,[DEBUG] (delay_extension.c: 477): ,%u: Checking time slot %u for delay stage %u
7179,[DEBUG] (delay_extension.c: 495): ,Neuron %u sending %u spikes after delaystage %u with key %x
7180,[DEBUG] (delay_extension.c: 504): ,%d: sending packet with key %d and payload %d
7181,[DEBUG] (delay_extension.c: 513): ,%d: sending spike with key %d
7182,[DEBUG] (delay_extension.c: 546): ,%d: Clearing time slot %d
7183,[DEBUG] (delay_extension.c: 550): ,Timer tick %u
7184,[DEBUG] (delay_extension.c: 560): ,Delay extension finished at time %u, %u received spikes, %u processed spikes, %u sent spikes, %u added spikes
7185,[DEBUG] (delay_extension.c: 562): ,Delayed %u times
7186,[INFO] (delay_extension.c: 587): ,max dtcm supply %d
7187,[ERROR] (delay_extension.c: 589): ,Error in initialisation - exiting!
7188,[DEBUG] (delay_extension.c: 602): ,Timer period %u
7189,[DEBUG] (robot_motor_control.c: 143): ,%s = %d, %s = %d, delta = %d, threshold = %u
7190,[DEBUG] (robot_motor_control.c: 146): ,Moving %s
7191,[DEBUG] (robot_motor_control.c: 151): ,Moving %s
7192,[DEBUG] (robot_motor_control.c: 157): ,Motion is indeterminate in %s-%s direction
7193,[DEBUG] (robot_motor_control.c: 177): ,Resending %s = %d
7194,[DEBUG] (robot_motor_control.c: 180): ,Resending %s = %d
7195,[DEBUG] (robot_motor_control.c: 184): ,Resending No Motion in the %s-%s direction
7196,[DEBUG] (robot_motor_control.c: 197): ,Timer tick %d
7197,[INFO] (robot_motor_control.c: 201): ,Simulation complete.\n
7198,[DEBUG] (robot_motor_control.c: 214): ,Received spike from unknown neuron %d
7199,[INFO] (robot_motor_control.c: 242): ,Reading parameters from 0x%.8x
7200,[INFO] (robot_motor_control.c: 263): ,Key = %d, speed = %d, sample_time = %d, update_time = %d, delay_time = %d, delta_threshold = %d, continue_if_not_different = %d
7201,[DEBUG] (robot_motor_control.c: 270): ,Received spike %x at time %d\n
7202,[DEBUG] (robot_motor_control.c: 282): ,Received spike %x at time %d\n
7203,[DEBUG] (robot_motor_control.c: 293): ,writing other provenance data
7204,[DEBUG] (robot_motor_control.c: 299): ,finished other provenance data
7205,[INFO] (robot_motor_control.c: 306): ,initialise: started
7206,[INFO] (robot_motor_control.c: 332): ,initialise: completed successfully
7207,[ERROR] (robot_motor_control.c: 342): ,Error in initialisation - exiting!
7208,[ERROR] (munich_protocol.h: 779): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7209,[ERROR] (munich_protocol.h: 799): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7210,[ERROR] (munich_protocol.h: 818): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7211,[ERROR] (munich_protocol.h: 842): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7212,[ERROR] (munich_protocol.h: 863): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7213,[ERROR] (munich_protocol.h: 883): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7214,[ERROR] (munich_protocol.h: 903): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7215,[ERROR] (munich_protocol.h: 925): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7216,[ERROR] (munich_protocol.h: 944): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7217,[ERROR] (munich_protocol.h: 963): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7218,[ERROR] (munich_protocol.h: 982): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7219,[ERROR] (munich_protocol.h: 1004): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7220,[ERROR] (munich_protocol.h: 1023): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7221,[ERROR] (munich_protocol.h: 1043): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7222,[ERROR] (munich_protocol.h: 1063): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7223,[ERROR] (munich_protocol.h: 1113): ,The number of pixels is not supported in this protocol.
7224,[ERROR] (munich_protocol.h: 1152): ,Unknown size of timestamp in bytes: %d\n
7225,[WARNING] (munich_protocol.h: 1164): ,The current sPyNNaker models do not support the reception of packets with payloads, therefore you will need to add a adaptor model between the device and sPyNNaker models.
7226,[ERROR] (munich_protocol.h: 1170): ,If you are using payloads to store events, you cannot have time stamps at all.
7227,[DEBUG] (c_main_synapses.c: 155): ,Initialise: started
7228,[DEBUG] (c_main_synapses.c: 198): ,setting timer tick callback for %d microseconds
7229,[DEBUG] (c_main_synapses.c: 203): ,Initialise: finished
7230,[DEBUG] (direct_synapses.c: 49): ,Direct matrix malloc size is %d
7231,[ERROR] (direct_synapses.c: 54): ,Not enough memory to allocate direct matrix
7232,[DEBUG] (direct_synapses.c: 58): ,Copying %u bytes of direct synapses to 0x%08x
7233,[DEBUG] (synapses.c: 104): ,Synaptic row, at address %08x, Num plastic words:%u
7234,[DEBUG] (synapses.c: 154): ,Ring Buffer at %u
7235,[DEBUG] (synapses.c: 264): ,synapses_initialise: starting
7236,[ERROR] (synapses.c: 281): ,Not enough memory to allocate ring buffer
7237,[DEBUG] (synapses.c: 292): ,synapses_initialise: completed successfully
7238,[ERROR] (synapses.c: 315): ,Could not allocate %u entries for ring buffers
7239,[INFO] (synapses.c: 324): ,Ready to process synapses for %u neurons with %u synapse types
7240,[DEBUG] (c_main_common.h: 127): ,updating recording regions
7241,[ERROR] (neuron_recording.c: 134): ,couldn't allocate recording data space for %d
7242,[ERROR] (neuron_recording.c: 166): ,couldn't allocate bitfield recording data space for %d
7243,[ERROR] (neuron_recording.c: 184): ,failed to reread in the new elements after reset
7244,[ERROR] (neuron_recording.c: 196): ,Could not allocated space for recording_info
7245,[ERROR] (neuron_recording.c: 204): ,Could not allocate space for var_recording_indexes
7246,[ERROR] (neuron_recording.c: 210): ,Could not allocate space for recording_values
7247,[ERROR] (neuron_recording.c: 221): ,failed to allocate memory for recording index %d
7248,[ERROR] (neuron_recording.c: 236): ,Failed to allocate space for bitfield_info
7249,[ERROR] (neuron_recording.c: 244): ,Could not allocate space for bitfield_recording_indexes
7250,[ERROR] (neuron_recording.c: 250): ,Could not allocate space for bitfield_values
7251,[ERROR] (neuron_recording.c: 262): ,failed to allocate memory for bitfield index %d
7252,[ERROR] (neuron_recording.c: 290): ,Data spec number of recording variables %d != neuron implementation number of recorded variables %d
7253,[ERROR] (neuron_recording.c: 296): ,Data spec number of bitfield variables %d != neuron implementation number of bitfield variables %d
7254,[DEBUG] (neuron_recording.c: 303): ,Recording %d variables and %d bitfield variables
7255,[ERROR] (neuron_recording.c: 306): ,failed to allocate DTCM for the neuron recording structs.
7256,[ERROR] (neuron_recording.c: 310): ,failed to allocate DTCM for the bitfield recording structs
7257,[ERROR] (neuron_recording.c: 317): ,failed to read in the elements
7258,[ERROR] (c_main_neurons.c: 156): ,failed to resume neuron.
7259,[DEBUG] (c_main_neurons.c: 184): ,Timer tick %u \n
7260,[DEBUG] (c_main_neurons.c: 253): ,Initialise: started
7261,[INFO] (c_main_neurons.c: 279): ,Transferring ring buffers from 0x%08x for %d neurons (%d bits) and %d synapse types from %d cores using %d bytes per core
7262,[ERROR] (c_main_neurons.c: 286): ,Could not allocate %d bytes for synaptic contributions %d
7263,[ERROR] (c_main_neurons.c: 296): ,Could not allocate %d bytes for all synaptic contributions
7264,[DEBUG] (c_main_neurons.c: 309): ,setting timer tick callback for %d microseconds
7265,[DEBUG] (c_main_neurons.c: 312): ,Initialise: finished
7266,[DEBUG] (spike_processing.c: 285): ,Writing back %u bytes of plastic region to %08x for spike %u
7267,[DEBUG] (spike_processing.c: 300): ,Sending user event for new spike
7268,[DEBUG] (spike_processing.c: 314): ,Received spike %x at %d, DMA Busy = %d
7269,[DEBUG] (spike_processing.c: 326): ,Received spike %x with payload %d at %d, DMA Busy = %d
7270,[DEBUG] (spike_processing.c: 346): ,DMA transfer complete at time %u with tag %u
7271,[ERROR] (spike_processing.c: 388): ,Error processing spike 0x%.8x for address 0x%.8x (local=0x%.8x)
7272,[ERROR] (spike_processing.c: 394): ,%u: 0x%08x
7273,[ERROR] (spike_processing.c: 454): ,Could not initialise DMA buffers
7274,[DEBUG] (spike_processing.c: 458): ,DMA buffer %u allocated at 0x%08x
7275,[DEBUG] (neuron.c: 70): ,loading parameters
7276,[ERROR] (neuron.c: 81): ,failed to reload the neuron recording parameters
7277,[DEBUG] (neuron.c: 85): ,neuron_reloading_neuron_parameters: starting
7278,[DEBUG] (neuron.c: 92): ,neuron_initialise: starting
7279,[DEBUG] (neuron.c: 109): ,\tThis model is not expecting to transmit as it has no key
7280,[DEBUG] (neuron.c: 111): ,\tThis model is expected to transmit with key = %08x
7281,[ERROR] (neuron.c: 123): ,Not enough memory to allocate ring buffer
7282,[INFO] (neuron.c: 136): ,\t n_neurons = %u, peak %u, n_synapse_types %u
7283,[DEBUG] (neuron.c: 173): ,time left of the timer after tdma is %d
7284,[ERROR] (neuron.c: 189): ,Neuron index %u out of range
7285,[ERROR] (spike_processing_fast.c: 144): ,Timeout on DMA loop: DMA stat = 0x%08x!
7286,[DEBUG] (spike_processing_fast.c: 166): ,Writing %d bytes to 0x%08x from ring buffer %d at 0x%08x
7287,[ERROR] (spike_processing_fast.c: 274): ,Error processing spike 0x%.8x for address 0x%.8x (local=0x%.8x)
7288,[ERROR] (spike_processing_fast.c: 279): ,    %u: 0x%08x
7289,[ERROR] (spike_processing_fast.c: 286): ,\nFixed-Fixed Region (%u synapses):
7290,[ERROR] (spike_processing_fast.c: 296): ,    Delay %u, Synapse Type %u, Neuron %u
7291,[INFO] (spike_processing_fast.c: 362): ,Transfer of %u bytes to 0x%08x took %u cycles
7292,[DEBUG] (spike_processing_fast.c: 392): ,Start of time step %d, timer = %d, loading with %d
7293,[DEBUG] (spike_processing_fast.c: 536): ,Received spike %x
7294,[DEBUG] (spike_processing_fast.c: 545): ,Received spike %x with payload %d
7295,[ERROR] (spike_processing_fast.c: 563): ,Could not initialise DMA buffers
7296,[DEBUG] (spike_processing_fast.c: 567): ,DMA buffer %u allocated at 0x%08x
7297,[ERROR] (dma_common.h: 55): ,DMA pending or in progress on write: 0x%08x
7298,[ERROR] (dma_common.h: 77): ,DMA pending or in progress on read: 0x%08x
7299,[ERROR] (dma_common.h: 97): ,Timeout on DMA loop: DMA stat = 0x%08x!
7300,[ERROR] (c_main.c: 138): ,failed to resume neuron.
7301,[DEBUG] (c_main.c: 155): ,Inputs
7302,[DEBUG] (c_main.c: 167): ,Timer tick %u \n
7303,[DEBUG] (c_main.c: 239): ,Initialise: started
7304,[DEBUG] (c_main.c: 281): ,setting timer tick callback for %d microseconds
7305,[DEBUG] (c_main.c: 284): ,Initialise: finished
7306,[ERROR] (synapse_dynamics_static_impl.c: 47): ,There should be no plastic synapses!
7307,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 62): ,\tPerforming deferred synapse update at time:%u
7308,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 65): ,\t\tbegin_time:%u, end_time:%u - prev_time:%u (valid %u), num_events:%u
7309,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 78): ,\t\tApplying post-synaptic event at delayed time:%u, pre:%u\n
7310,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 94): ,\t\tApplying pre-synaptic event at time:%u last post time:%u\n
7311,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 138): ,Adding post-synaptic event to trace at time:%u
7312,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 194): ,Adding pre-synaptic event to trace at time:%u
7313,[DEBUG] (synapse_dynamics_stdp_common.h: 160): ,Plastic region %u synapses\n
7314,[DEBUG] (synapse_dynamics_stdp_common.h: 176): ,%08x [%3d: (w: %5u (=
7315,[DEBUG] (synapse_dynamics_stdp_common.h: 183): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
7316,[DEBUG] (post_events_with_da.h: 82): ,      ##  printing entire post event history  ##
7317,[DEBUG] (post_events_with_da.h: 85): ,post event: %u, time: %u, trace: %u
7318,[ERROR] (post_events_with_da.h: 100): ,Unable to allocate global STDP structures - Out of DTCM: Try reducing the number of neurons per core to fix this problem 
7319,[INFO] (post_events_with_da.h: 249): ,     ##  printing post window  ##
7320,[INFO] (post_events_with_da.h: 259): ,post spike: %u, time: %u, trace: %u, dop_trace: %u
7321,[DEBUG] (post_events.h: 73): ,      ##  printing entire post event history  ##
7322,[DEBUG] (post_events.h: 76): ,post event: %u, time: %u, trace: %u
7323,[ERROR] (post_events.h: 91): ,Unable to allocate global STDP structures - Out of DTCM: Try reducing the number of neurons per core to fix this problem 
7324,[INFO] (post_events.h: 204): ,     ##  printing post window  ##
7325,[INFO] (post_events.h: 213): ,post spike: %u, time: %u, trace: %u
7326,[ERROR] (maths.h: 64): ,Not enough space to allocate LUT.  Try reducing the timestep, the number of neurons per core, or the tau value; size = %u
7327,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 137): ,\t\tbegin_time:%u, end_time:%u - prev_time:%u (valid %u), num_events:%u
7328,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 182): ,\tPerforming deferred synapse update at time:%u
7329,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 208): ,\t\tApplying post-synaptic event at delayed time:%u, pre:%u, prev_corr:%u
7330,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 249): ,\t\tApplying pre-synaptic event at time:%u last post time:%u, prev_corr=%u
7331,[INFO] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 295): ,Constant %k, min weight %k, max weight %k
7332,[ERROR] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 305): ,Could not initialise weight region data
7333,[INFO] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 310): ,Weight shift %u = %u
7334,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 333): ,Adding post-synaptic event to trace %u at time:%u
7335,[DEBUG] (synapse_dynamics_stdp_izhikevich_neuromodulation.c: 438): ,Adding pre-synaptic event to trace at time:%u
7336,[DEBUG] (weight_multiplicative_impl.c: 46): ,weight_initialise: starting
7337,[DEBUG] (weight_multiplicative_impl.c: 47): ,\tSTDP multiplicative weight dependence
7338,[ERROR] (weight_multiplicative_impl.c: 54): ,Could not initialise weight region data
7339,[ERROR] (weight_multiplicative_impl.c: 59): ,Could not initialise weight region data
7340,[DEBUG] (weight_multiplicative_impl.c: 77): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, Weight multiply right shift:%u
7341,[DEBUG] (weight_multiplicative_impl.c: 80): ,weight_initialise: completed successfully
7342,[DEBUG] (weight_additive_two_term_impl.c: 48): ,weight_initialise: starting
7343,[DEBUG] (weight_additive_two_term_impl.c: 49): ,\tSTDP additive two-term weight dependance
7344,[ERROR] (weight_additive_two_term_impl.c: 60): ,Could not initialise weight region data
7345,[ERROR] (weight_additive_two_term_impl.c: 66): ,Could not initialise weight region data
7346,[DEBUG] (weight_additive_two_term_impl.c: 85): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, A3+:%d, A3-:%d
7347,[DEBUG] (weight_additive_two_term_impl.c: 87): ,weight_initialise: completed successfully
7348,[DEBUG] (weight_additive_one_term_impl.c: 46): ,weight_initialise: starting
7349,[DEBUG] (weight_additive_one_term_impl.c: 47): ,\tSTDP additive one-term weight dependence
7350,[ERROR] (weight_additive_one_term_impl.c: 56): ,Could not initialise weight region data
7351,[ERROR] (weight_additive_one_term_impl.c: 62): ,Could not initialise weight region data
7352,[DEBUG] (weight_additive_one_term_impl.c: 77): ,\tSynapse type %u: Min weight:%k, Max weight:%k, A2+:%k, A2-:%k
7353,[DEBUG] (weight_additive_one_term_impl.c: 79): ,weight_initialise: completed successfully
7354,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 80): ,\t\tResetting post-window: random=%d, window_length=%u
7355,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 106): ,\t\tResetting pre-window: random=%d, window_length=%u
7356,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 130): ,\t\t\ttime_since_last_post:%u, post_window_length:%u
7357,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 139): ,\t\t\t\tDecrementing accumulator=%d
7358,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 142): ,\t\t\t\tApplying depression
7359,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 171): ,\t\t\ttime_since_last_pre:%u, pre_window_length:%u
7360,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 183): ,\t\t\t\tIncrementing accumulator=%d
7361,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 186): ,\t\t\t\tApplying potentiation
7362,[DEBUG] (timing_recurrent_common.h: 98): ,\tdelta_time=%u
7363,[DEBUG] (timing_recurrent_common.h: 113): ,\tdelta_time=%u
7364,[DEBUG] (timing_recurrent_common.h: 135): ,\tOpening pre-window
7365,[DEBUG] (timing_recurrent_common.h: 146): ,\tTime_since_last_pre_event=%u
7366,[DEBUG] (timing_recurrent_common.h: 150): ,\t\tClosing pre-window
7367,[DEBUG] (timing_recurrent_common.h: 154): ,\t\tRe-opening pre-window
7368,[DEBUG] (timing_recurrent_common.h: 165): ,\tTime_since_last_post_event=%u
7369,[DEBUG] (timing_recurrent_common.h: 178): ,\t\tDecrementing accumulator=%d
7370,[DEBUG] (timing_recurrent_common.h: 181): ,\t\tApplying depression
7371,[DEBUG] (timing_recurrent_common.h: 193): ,\t\tPost-window closed - Opening pre-window
7372,[DEBUG] (timing_recurrent_common.h: 200): ,\tInvalid state %u
7373,[DEBUG] (timing_recurrent_common.h: 223): ,\tOpening post-window
7374,[DEBUG] (timing_recurrent_common.h: 234): ,\tTime_since_last_post_event=%u
7375,[DEBUG] (timing_recurrent_common.h: 239): ,\t\tClosing post-window
7376,[DEBUG] (timing_recurrent_common.h: 243): ,\t\tRe-opening post-window
7377,[DEBUG] (timing_recurrent_common.h: 254): ,\tTime_since_last_pre_event=%u
7378,[DEBUG] (timing_recurrent_common.h: 258): ,\t\tIgnoring coinciding spikes
7379,[DEBUG] (timing_recurrent_common.h: 273): ,\t\tIncrementing accumulator=%d
7380,[DEBUG] (timing_recurrent_common.h: 276): ,\t\tApplying potentiation
7381,[DEBUG] (timing_recurrent_common.h: 288): ,\t\tPre-window closed - Opening post-window
7382,[DEBUG] (timing_recurrent_common.h: 295): ,\tInvalid state %u
7383,[INFO] (timing_pfister_triplet_impl.c: 39): ,timing_initialise: starting
7384,[INFO] (timing_pfister_triplet_impl.c: 40): ,\tSTDP triplet rule
7385,[INFO] (timing_pfister_triplet_impl.c: 50): ,timing_initialise: completed successfully
7386,[DEBUG] (timing_pair_impl.h: 102): ,\tdelta_time=%u, r1=%d\n
7387,[DEBUG] (timing_pair_impl.h: 131): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
7388,[DEBUG] (timing_pair_impl.h: 160): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
7389,[DEBUG] (timing_nearest_pair_impl.c: 35): ,timing_initialise: starting
7390,[DEBUG] (timing_nearest_pair_impl.c: 36): ,\tSTDP nearest-pair rule
7391,[DEBUG] (timing_nearest_pair_impl.c: 43): ,timing_initialise: completed successfully
7392,[INFO] (timing_recurrent_dual_fsm_impl.c: 48): ,timing_initialise: starting
7393,[INFO] (timing_recurrent_dual_fsm_impl.c: 49): ,\tRecurrent dual-FSM STDP rule
7394,[INFO] (timing_recurrent_dual_fsm_impl.c: 61): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7395,[INFO] (timing_recurrent_dual_fsm_impl.c: 69): ,timing_initialise: completed successfully
7396,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 70): ,\t\tRandom=%d, Exp dist=%u
7397,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 86): ,\t\tRandom=%d, Exp dist=%u
7398,[INFO] (timing_vogels_2011_impl.c: 41): ,timing_initialise: starting
7399,[INFO] (timing_vogels_2011_impl.c: 42): ,\tVogels 2011 timing rule
7400,[INFO] (timing_vogels_2011_impl.c: 52): ,timing_initialise: completed successfully
7401,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 49): ,timing_initialise: starting
7402,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 50): ,\tRecurrent pre-calculated stochastic STDP rule
7403,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 62): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7404,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 70): ,timing_initialise: completed successfully
7405,[DEBUG] (timing_nearest_pair_impl.h: 59): ,\tdelta_time=%u\n
7406,[DEBUG] (timing_nearest_pair_impl.h: 80): ,\tdelta_time=%u\n
7407,[DEBUG] (timing_nearest_pair_impl.h: 107): ,\t\t\ttime_since_last_post=%u, decayed_o1=%d\n
7408,[DEBUG] (timing_nearest_pair_impl.h: 138): ,\t\t\ttime_since_last_pret=%u, decayed_r1=%d\n
7409,[DEBUG] (timing_nearest_pair_impl.h: 140): ,\t\t\ttime_since_last_post=%u, decayed_r1=%d\n
7410,[DEBUG] (timing_nearest_pair_impl.h: 143): ,\t\t\tSetting trace to zero as not first pre-post pairing
7411,[DEBUG] (timing_pfister_triplet_impl.h: 143): ,\tdelta_time=%u, r1=%d, r2=%d\n
7412,[DEBUG] (timing_pfister_triplet_impl.h: 174): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d, r2=%d,decayed_o1_r2=%d\n
7413,[DEBUG] (timing_pfister_triplet_impl.h: 206): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d, o2=%d,decayed_r1_o2=%d\n
7414,[DEBUG] (timing_pair_impl.c: 35): ,timing_initialise: starting
7415,[DEBUG] (timing_pair_impl.c: 36): ,\tSTDP pair rule
7416,[DEBUG] (timing_pair_impl.c: 43): ,timing_initialise: completed successfully
7417,[DEBUG] (timing_vogels_2011_impl.h: 147): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
7418,[DEBUG] (timing_vogels_2011_impl.h: 174): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
7419,[DEBUG] (neuron_model_izh_impl.c: 33): ,V = %11.4k 
7420,[DEBUG] (neuron_model_izh_impl.c: 34): ,U = %11.4k 
7421,[DEBUG] (neuron_model_izh_impl.c: 38): ,A = %11.4k 
7422,[DEBUG] (neuron_model_izh_impl.c: 39): ,B = %11.4k 
7423,[DEBUG] (neuron_model_izh_impl.c: 40): ,C = %11.4k 
7424,[DEBUG] (neuron_model_izh_impl.c: 41): ,D = %11.4k 
7425,[DEBUG] (neuron_model_izh_impl.c: 43): ,I = %11.4k \n
7426,[DEBUG] (neuron_model_izh_impl.h: 66): , sv1 %9.4k  V %9.4k --- sv2 %9.4k  U %9.4k\n
7427,[DEBUG] (neuron_model_lif_impl.c: 30): ,V membrane    = %11.4k mv
7428,[DEBUG] (neuron_model_lif_impl.c: 34): ,V reset       = %11.4k mv
7429,[DEBUG] (neuron_model_lif_impl.c: 35): ,V rest        = %11.4k mv
7430,[DEBUG] (neuron_model_lif_impl.c: 37): ,I offset      = %11.4k nA
7431,[DEBUG] (neuron_model_lif_impl.c: 38): ,R membrane    = %11.4k Mohm
7432,[DEBUG] (neuron_model_lif_impl.c: 40): ,exp(-ms/(RC)) = %11.4k [.]
7433,[DEBUG] (neuron_model_lif_impl.c: 42): ,T refract     = %u timesteps
7434,[INFO] (population_table_binary_search_impl.c: 230): ,Master_population\n
7435,[INFO] (population_table_binary_search_impl.c: 233): ,key: 0x%08x, mask: 0x%08x
7436,[INFO] (population_table_binary_search_impl.c: 240): ,    core_mask: 0x%08x, core_shift: %u, n_neurons: %u, n_words: %u
7437,[INFO] (population_table_binary_search_impl.c: 245): ,    index %d: INVALID
7438,[INFO] (population_table_binary_search_impl.c: 248): ,    index %d: offset: %u, address: 0x%08x, row_length: %u
7439,[INFO] (population_table_binary_search_impl.c: 251): ,    index %d: offset: %u, address: 0x%08x, single
7440,[INFO] (population_table_binary_search_impl.c: 255): ,Population table has %u entries
7441,[INFO] (population_table_binary_search_impl.c: 277): ,Bit field(s) for key 0x%08x:
7442,[INFO] (population_table_binary_search_impl.c: 282): ,0x%08x
7443,[WARNING] (population_table_binary_search_impl.c: 308): ,Couldn't initialise basic bit field holder. Will end up doing possibly more DMA's during the execution than required. We required %d bytes where %d are available
7444,[DEBUG] (population_table_binary_search_impl.c: 321): ,Master pop key: 0x%08x, mask: 0x%08x
7445,[ERROR] (population_table_binary_search_impl.c: 328): ,Skipping bitfield %d for key 0x%08x
7446,[DEBUG] (population_table_binary_search_impl.c: 339): ,Starting with bit field %d with key 0x%08x
7447,[DEBUG] (population_table_binary_search_impl.c: 342): ,Using bit field %d with key 0x%08x, merged %d, redundant %d
7448,[DEBUG] (population_table_binary_search_impl.c: 350): ,Ended with bit field %d with key 0x%08x, n_words %d, useful %d
7449,[DEBUG] (population_table_binary_search_impl.c: 362): ,Could not initialise bit field for key %d, packets with that key will use a DMA to check if the packet targets anything within this core. Potentially slowing down the execution of neurons on this core.
7450,[DEBUG] (population_table_binary_search_impl.c: 415): ,Population_table_initialise: starting
7451,[DEBUG] (population_table_binary_search_impl.c: 419): ,Master pop table length is %d\n
7452,[DEBUG] (population_table_binary_search_impl.c: 421): ,Master pop table entry size is %d\n
7453,[DEBUG] (population_table_binary_search_impl.c: 424): ,Pop table size is %d\n
7454,[ERROR] (population_table_binary_search_impl.c: 430): ,Could not allocate master population table
7455,[ERROR] (population_table_binary_search_impl.c: 443): ,Could not allocate master population address list
7456,[DEBUG] (population_table_binary_search_impl.c: 449): ,Pop table size: %u (%u bytes)
7457,[DEBUG] (population_table_binary_search_impl.c: 451): ,Address list size: %u (%u bytes)
7458,[DEBUG] (population_table_binary_search_impl.c: 460): ,The stored synaptic matrix base address is located at: 0x%08x
7459,[DEBUG] (population_table_binary_search_impl.c: 462): ,The direct synaptic matrix base address is located at: 0x%08x
7460,[DEBUG] (population_table_binary_search_impl.c: 476): ,Searching for key %d
7461,[DEBUG] (population_table_binary_search_impl.c: 482): ,Ghost searches: %u\n
7462,[DEBUG] (population_table_binary_search_impl.c: 485): ,Spike %u (= %x): Population not found in master population table
7463,[DEBUG] (population_table_binary_search_impl.c: 488): ,position = %d
7464,[DEBUG] (population_table_binary_search_impl.c: 495): ,Spike %u (= %x): Population found in master populationtable but count is 0
7465,[DEBUG] (population_table_binary_search_impl.c: 515): ,Checking bit field
7466,[DEBUG] (population_table_binary_search_impl.c: 518): ,Can be checked, bitfield is allocated
7467,[DEBUG] (population_table_binary_search_impl.c: 523): ,Tested and was not set
7468,[DEBUG] (population_table_binary_search_impl.c: 528): ,Was set, carrying on
7469,[DEBUG] (population_table_binary_search_impl.c: 532): ,Bit field was not set up. either its due to a lack of DTCM, or because the bit field was merged into the routing table
7470,[DEBUG] (population_table_binary_search_impl.c: 536): ,spike = %08x, entry_index = %u, start = %u, count = %u
7471,[DEBUG] (population_table_binary_search_impl.c: 546): ,Found a entry which has a ghost entry for key %d
7472,[DEBUG] (population_table_binary_search_impl.c: 583): ,neuron_id = %u, block_address = 0x%.8x, row_length = %u, row_address = 0x%.8x, n_bytes = %u
7473,[DEBUG] (synapse_types_dual_excitatory_exponential_impl.h: 168): ,did not recognise synapse type %i
7474,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 189): ,exc_decay  = %11.4k\n
7475,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 190): ,exc_init   = %11.4k\n
7476,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 191): ,exc2_decay = %11.4k\n
7477,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 192): ,exc2_init  = %11.4k\n
7478,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 193): ,inh_decay  = %11.4k\n
7479,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 194): ,inh_init   = %11.4k\n
7480,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 196): ,gsyn_excitatory_initial_value = %11.4k\n
7481,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 198): ,gsyn_excitatory2_initial_value = %11.4k\n
7482,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 200): ,gsyn_inhibitory_initial_value = %11.4k\n
7483,[DEBUG] (synapse_types_delta_impl.h: 160): ,did not recognise synapse type %i
7484,[DEBUG] (synapse_types_semd_impl.h: 182): ,did not recognise synapse type %i
7485,[INFO] (synapse_types_semd_impl.h: 201): ,exc_decay  = %11.4k\n
7486,[INFO] (synapse_types_semd_impl.h: 202): ,exc_init   = %11.4k\n
7487,[INFO] (synapse_types_semd_impl.h: 203): ,exc2_decay = %11.4k\n
7488,[INFO] (synapse_types_semd_impl.h: 204): ,exc2_init  = %11.4k\n
7489,[INFO] (synapse_types_semd_impl.h: 205): ,inh_decay  = %11.4k\n
7490,[INFO] (synapse_types_semd_impl.h: 206): ,inh_init   = %11.4k\n
7491,[INFO] (synapse_types_semd_impl.h: 208): ,gsyn_excitatory_initial_value = %11.4k\n
7492,[INFO] (synapse_types_semd_impl.h: 210): ,gsyn_excitatory2_initial_value = %11.4k\n
7493,[INFO] (synapse_types_semd_impl.h: 212): ,gsyn_inhibitory_initial_value = %11.4k\n
7494,[INFO] (synapse_types_semd_impl.h: 213): ,multiplicator = %11.4k\n
7495,[INFO] (synapse_types_semd_impl.h: 214): ,exc2_old      = %11.4k\n
7496,[INFO] (synapse_types_semd_impl.h: 215): ,scaling_factor = %11.4k\n
7497,[DEBUG] (synapse_types_exponential_impl.h: 160): ,did not recognise synapse type %i
7498,[DEBUG] (synapse_types_exponential_impl.h: 173): ,%12.6k - %12.6k
7499,[DEBUG] (synapse_types_exponential_impl.h: 180): ,exc_decay = %R\n
7500,[DEBUG] (synapse_types_exponential_impl.h: 181): ,exc_init  = %R\n
7501,[DEBUG] (synapse_types_exponential_impl.h: 182): ,inh_decay = %R\n
7502,[DEBUG] (synapse_types_exponential_impl.h: 183): ,inh_init  = %R\n
7503,[DEBUG] (synapse_types_exponential_impl.h: 185): ,gsyn_excitatory_initial_value = %11.4k\n
7504,[DEBUG] (synapse_types_exponential_impl.h: 187): ,gsyn_inhibitory_initial_value = %11.4k\n
7505,[DEBUG] (synapse_types_alpha_impl.h: 99): ,lin: %12.6k, exp: %12.6k, comb: %12.6k
7506,[DEBUG] (synapse_types_alpha_impl.h: 179): ,did not recognise synapse type %i
7507,[DEBUG] (synapse_types_alpha_impl.h: 198): ,-------------------------------------\n
7508,[DEBUG] (synapse_types_alpha_impl.h: 200): ,exc_response  = %11.4k\n
7509,[DEBUG] (synapse_types_alpha_impl.h: 202): ,inh_response  = %11.4k\n
7510,[ERROR] (neuron_impl_standard.h: 95): ,Unable to allocate global neuron parameters- Out of DTCM
7511,[ERROR] (neuron_impl_standard.h: 104): ,Unable to allocate neuron array - Out of DTCM
7512,[ERROR] (neuron_impl_standard.h: 113): ,Unable to allocate input type array - Out of DTCM
7513,[ERROR] (neuron_impl_standard.h: 124): ,Unable to allocate additional input array - Out of DTCM
7514,[ERROR] (neuron_impl_standard.h: 134): ,Unable to allocate threshold type array - Out of DTCM
7515,[ERROR] (neuron_impl_standard.h: 145): ,Unable to allocate synapse parameters array - Out of DTCM
7516,[DEBUG] (neuron_impl_standard.h: 183): ,reading parameters, next is %u, n_neurons is %u 
7517,[DEBUG] (neuron_impl_standard.h: 188): ,Looping over %u steps each timestep
7518,[ERROR] (neuron_impl_standard.h: 190): ,bad number of steps per timestep: 0
7519,[DEBUG] (neuron_impl_standard.h: 195): ,writing neuron global parameters
7520,[DEBUG] (neuron_impl_standard.h: 202): ,reading neuron local parameters
7521,[DEBUG] (neuron_impl_standard.h: 209): ,reading input type parameters
7522,[DEBUG] (neuron_impl_standard.h: 216): ,reading threshold type parameters
7523,[DEBUG] (neuron_impl_standard.h: 223): ,reading synapse parameters
7524,[DEBUG] (neuron_impl_standard.h: 230): ,reading additional input type parameters
7525,[DEBUG] (neuron_impl_standard.h: 239): ,-------------------------------------\n
7526,[DEBUG] (neuron_impl_standard.h: 243): ,-------------------------------------\n
7527,[DEBUG] (neuron_impl_standard.h: 364): ,writing parameters
7528,[DEBUG] (neuron_impl_standard.h: 370): ,writing neuron global parameters
7529,[DEBUG] (neuron_impl_standard.h: 377): ,writing neuron local parameters
7530,[DEBUG] (neuron_impl_standard.h: 384): ,writing input type parameters
7531,[DEBUG] (neuron_impl_standard.h: 391): ,writing threshold type parameters
7532,[DEBUG] (neuron_impl_standard.h: 398): ,writing synapse parameters
7533,[DEBUG] (neuron_impl_standard.h: 405): ,writing additional input type parameters
7534,[DEBUG] (neuron_impl_standard.h: 425): ,-------------------------------------\n
7535,[DEBUG] (neuron_impl_standard.h: 432): ,%3u: %12.6k (= 
7536,[DEBUG] (neuron_impl_standard.h: 434): ,)\n
7537,[DEBUG] (neuron_impl_standard.h: 437): ,-------------------------------------\n
7538,[DEBUG] (neuron_impl_standard.h: 444): ,-------------------------------------\n
7539,[DEBUG] (neuron_impl_standard.h: 448): ,-------------------------------------\n
7540,[ERROR] (neuron_impl_external_devices.h: 149): ,Unknown enum value %u
7541,[ERROR] (neuron_impl_external_devices.h: 165): ,Unable to allocate global neuron parameters- Out of DTCM
7542,[ERROR] (neuron_impl_external_devices.h: 174): ,Unable to allocate neuron array - Out of DTCM
7543,[ERROR] (neuron_impl_external_devices.h: 183): ,Unable to allocate input type array - Out of DTCM
7544,[ERROR] (neuron_impl_external_devices.h: 194): ,Unable to allocate additional input array - Out of DTCM
7545,[ERROR] (neuron_impl_external_devices.h: 204): ,Unable to allocate threshold type array - Out of DTCM
7546,[ERROR] (neuron_impl_external_devices.h: 215): ,Unable to allocate synapse parameters array - Out of DTCM
7547,[DEBUG] (neuron_impl_external_devices.h: 253): ,reading parameters, next is %u, n_neurons is %u 
7548,[INFO] (neuron_impl_external_devices.h: 258): ,Looping over %u steps each timestep
7549,[ERROR] (neuron_impl_external_devices.h: 260): ,bad number of steps per timestep: 0
7550,[DEBUG] (neuron_impl_external_devices.h: 264): ,writing neuron global parameters
7551,[DEBUG] (neuron_impl_external_devices.h: 271): ,reading neuron local parameters
7552,[DEBUG] (neuron_impl_external_devices.h: 278): ,reading input type parameters
7553,[DEBUG] (neuron_impl_external_devices.h: 285): ,reading threshold type parameters
7554,[DEBUG] (neuron_impl_external_devices.h: 292): ,reading synapse parameters
7555,[DEBUG] (neuron_impl_external_devices.h: 299): ,reading additional input type parameters
7556,[DEBUG] (neuron_impl_external_devices.h: 308): ,-------------------------------------\n
7557,[DEBUG] (neuron_impl_external_devices.h: 312): ,-------------------------------------\n
7558,[DEBUG] (neuron_impl_external_devices.h: 432): ,Sending key=0x%08x payload=0x%08x
7559,[DEBUG] (neuron_impl_external_devices.h: 438): ,Sending key=0x%08x
7560,[DEBUG] (neuron_impl_external_devices.h: 468): ,writing parameters
7561,[DEBUG] (neuron_impl_external_devices.h: 474): ,writing neuron global parameters
7562,[DEBUG] (neuron_impl_external_devices.h: 481): ,writing neuron local parameters
7563,[DEBUG] (neuron_impl_external_devices.h: 488): ,writing input type parameters
7564,[DEBUG] (neuron_impl_external_devices.h: 495): ,writing threshold type parameters
7565,[DEBUG] (neuron_impl_external_devices.h: 502): ,writing synapse parameters
7566,[DEBUG] (neuron_impl_external_devices.h: 509): ,writing additional input type parameters
7567,[DEBUG] (neuron_impl_external_devices.h: 529): ,-------------------------------------\n
7568,[DEBUG] (neuron_impl_external_devices.h: 536): ,%3u: %12.6k (= 
7569,[DEBUG] (neuron_impl_external_devices.h: 538): ,)\n
7570,[DEBUG] (neuron_impl_external_devices.h: 541): ,-------------------------------------\n
7571,[DEBUG] (neuron_impl_external_devices.h: 548): ,-------------------------------------\n
7572,[DEBUG] (neuron_impl_external_devices.h: 552): ,-------------------------------------\n
7573,[DEBUG] (sp_structs.h: 251): ,Topographic Map Impl, s_max=%u
7574,[DEBUG] (sp_structs.h: 254): , no pre pops = %d
7575,[ERROR] (sp_structs.h: 258): ,Could not initialise pre population info
7576,[ERROR] (sp_structs.h: 267): ,Could not initialise pre population info %d
7577,[DEBUG] (sp_structs.h: 278): ,no_pre = %u, sp_control %u, delay lo %u, delay hi %u, weight %d
7578,[DEBUG] (sp_structs.h: 281): ,connection_type = %d, total_no_atoms=%d
7579,[DEBUG] (sp_structs.h: 293): ,index %d, pop index %d, sub pop index %d, neuron_index %d
7580,[DEBUG] (topographic_map_impl.c: 111): ,index %d, pop index %d, sub pop index %d, neuron_index %d
7581,[ERROR] (topographic_map_impl.c: 121): ,Could not add state (0x%08x) to queued states
7582,[ERROR] (topographic_map_impl.c: 131): ,Could not read a state!
7583,[ERROR] (topographic_map_impl.c: 140): ,Could not add state (0x%08x) to free states
7584,[ERROR] (topographic_map_impl.c: 149): ,Ran out of states!
7585,[DEBUG] (topographic_map_impl.c: 161): ,SR init.
7586,[DEBUG] (topographic_map_impl.c: 172): ,Rewiring period %u, fast=%u, n_states=%u
7587,[ERROR] (topographic_map_impl.c: 176): ,Could not allocate current state queue
7588,[ERROR] (topographic_map_impl.c: 182): ,Could not allocate free state queue
7589,[ERROR] (topographic_map_impl.c: 186): ,Could not allocate states
7590,[ERROR] (topographic_map_impl.c: 198): ,Could not initialise formation parameters
7591,[ERROR] (topographic_map_impl.c: 208): ,Could not initialise elimination parameters
7592,[DEBUG] (topographic_map_impl.c: 218): ,The rewiring_recording_index is %u
7593,[ERROR] (topographic_map_impl.c: 263): ,FAIL@key %d
7594,[ERROR] (topographic_map_impl.c: 270): ,FAIL@key %d, index %d (failed at %d)
7595,[DEBUG] (topographic_map_impl.c: 311): ,Post neuron %u not in row
7596,[DEBUG] (topographic_map_impl.c: 338): ,row is full
7597,[DEBUG] (topographic_map_impl.c: 386): ,Post neuron %u already in row
7598,[DEBUG] (last_neuron_selection_impl.c: 31): ,Last neuron selection, buffer size = %u
7599,[ERROR] (last_neuron_selection_impl.c: 36): ,Out of memory when creating last spikes buffer
7600,[ERROR] (formation_distance_dependent_impl.c: 31): ,Out of memory when allocating parameters
7601,[DEBUG] (formation_distance_dependent_impl.c: 37): ,Formation distance dependent %u bytes, grid=(%u, %u), %u ff probs, %u lat probs
7602,[ERROR] (elimination_random_by_weight_impl.c: 26): ,Out of memory when allocating parameters
7603,[DEBUG] (elimination_random_by_weight_impl.c: 33): ,Elimination random by weight prob_dep=%u prob_pot=%u thresh=%u
