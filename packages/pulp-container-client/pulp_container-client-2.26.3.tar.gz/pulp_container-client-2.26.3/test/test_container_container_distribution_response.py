# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_container.models.container_container_distribution_response import ContainerContainerDistributionResponse

class TestContainerContainerDistributionResponse(unittest.TestCase):
    """ContainerContainerDistributionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContainerContainerDistributionResponse:
        """Test ContainerContainerDistributionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContainerContainerDistributionResponse`
        """
        model = ContainerContainerDistributionResponse()
        if include_optional:
            return ContainerContainerDistributionResponse(
                pulp_last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pulp_href = '',
                no_content_change_since = '',
                repository = '',
                name = '',
                hidden = True,
                pulp_labels = {
                    'key' : ''
                    },
                pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                base_path = '',
                prn = '',
                content_guard = '',
                repository_version = '',
                registry_path = '',
                remote = '',
                namespace = '',
                private = True,
                description = ''
            )
        else:
            return ContainerContainerDistributionResponse(
                name = '',
                base_path = '',
        )
        """

    def testContainerContainerDistributionResponse(self):
        """Test ContainerContainerDistributionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
