[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "midpoint-cli"
version = "1.5.0.dev1"
description = "A command line client to Midpoint Identity Management system."
readme = "README.md"

license = "MIT"
authors = ["Yannick Kirschhoffer <alcibiade@alcibiade.org>"]
maintainers = ["Yannick Kirschhoffer <alcibiade@alcibiade.org>"]
repository = "https://gitlab.com/alcibiade/midpoint-cli"

packages = [
    { include = "midpoint_cli", from = "src" }
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14"
]

[tool.poetry.scripts]
midpoint-cli = 'midpoint_cli:main'

[tool.poetry.dependencies]
python = "^3.9.0"
unidecode = "^1.3"
requests = "^2.31"
urllib3 = "^2.0"
rich = "^13.0"
prompt-toolkit = "^3.0"
pygments = "^2.0"

[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry.group.dev.dependencies]
pytest-cov = "*"
ruff = "*"
mypy = "*"

[tool.ruff]
target-version = "py39"
line-length = 120
exclude = [
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "unidecode.*",
    "requests.*",
    "urllib3.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "coverage_html_report"
