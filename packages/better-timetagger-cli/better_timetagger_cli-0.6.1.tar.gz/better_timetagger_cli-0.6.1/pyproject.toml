[project]
name = "better-timetagger-cli"
version = "0.6.1"
description = "A command line tool for TimeTagger. This is a more feature-rich and ergonomic fork of the original timetagger-cli (by Almar Klein), providing better user experience and additional features."
authors = [
    { name = "Paul Bütof", email = "paul@passionate-bytes.com" },
]
maintainers = [{ name = "Paul Bütof", email = "paul@passionate-bytes.com" }]
license-files = ["LICENSE"]
readme = "README.md"
keywords = [
    "timetagger",
    "cli",
    "command-line",
    "time-tracking",
    "productivity",
    "time",
    "tracking",
    "self-hosting",
    "self-hosted",
]
requires-python = ">=3.10"
dependencies = [
    "click>=8.2.0",
    "parsedatetime>=2.6",
    "platformdirs>=4.3.8",
    "requests>=2.32.3",
    "rich>=14.0.0",
    "tomlkit>=0.13.2",
]

[project.urls]
Documentation = "https://better-timetagger-cli.readthedocs.io"
Repository = "https://github.com/PassionateBytes/better-timetagger-cli"
Issues = "https://github.com/PassionateBytes/better-timetagger-cli/issues"

[project.scripts]
timetagger = "better_timetagger_cli.cli:cli"
t = "better_timetagger_cli.cli:cli"

[dependency-groups]
dev = [
    "bump-my-version>=1.1.4",
    "mypy[reports]>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-reporter>=0.5.3",
    "pytest-reporter-html1>=0.9.3",
    "ruff>=0.11.10",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-click>=6.0.0",
    "sphinx-pyproject>=0.3.0",
    "sphinx-rtd-theme>=3.0.0",
    "sphinx-toolbox>=4.0.0",
    "sphinxcontrib-asciinema>=0.4.2",
    "types-requests>=2.32.0.20250515",
    "types-toml>=0.10.8.20240310",
]

# ===[ Build System ]===
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/better_timetagger_cli"]

# ===[ Ruff Config ]===
[tool.ruff]
line-length = 160

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "Q",  # quotes
    "B",  # bugbear
    "N",  # pep8-naming
]
ignore = ["E203", "E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# ===[ PyTest Config ]===
[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = [
    "--cov=better_timetagger_cli",
    "--cov-report=term-missing",
]

# ===[ Coverage Config ]===
[tool.coverage.run]
source = ["src/better_timetagger_cli"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
] 

# ===[ Bump My Version Config ]===
[tool.bumpversion]
current_version = "0.6.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []
