
[project]
name = "evalassist"
dynamic = []
description = "EvalAssist is an open-source project that simplifies using large language models as evaluators (LLM-as-a-Judge) of the output of other large language models by supporting users in iteratively refining evaluation criteria in a web-based user experience."
license = "Apache-2.0" # set your license here
requires-python = ">=3.10,<3.14"
authors = [
    { name = "Martín Santillán Cooper", email = "martinsantillancooper@gmail.com" },
]
keywords = ["LLM", "evaluation", "LLM-as-a-Judge", "AI-evaluation"]
classifiers = [
    # Project maturity
    "Development Status :: 4 - Beta",

    # Intended audience
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",

    # License
    "License :: OSI Approved :: Apache Software License",

    # Supported Python versions
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",

    # Supported operating systems
    "Operating System :: OS Independent",

    # Project topics
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",

    # Frameworks and tools
    "Framework :: FastAPI",
    "Framework :: Jupyter",
]

dependencies = ["pydantic", "langchain>=0.3.8", "unitxt>=1.26.6"]
version = "0.3.2"

[tool.poetry]
packages = [{ include = "evalassist", from = "src" }]
include = [
    { path = "evalassist/static/**/*", format = "sdist" },
    { path = "evalassist/static/**/*", format = "wheel" },
    { path = "evalassist/alembic.ini", format = "sdist" },
    { path = "evalassist/alembic.ini", format = "wheel" },
]


[project.optional-dependencies]
dev = [
    "pre_commit",
    "bandit[standard,toml]",
    "flake8-pytest-style ",
    "flake8 ",
    "GitPython",
    "pytest",
    "httpx",
    "tox",
    "pytest-cov",
]
webapp = [
    "litellm",
    "openai",
    "ollama",
    "ibm_watsonx_ai",
    "fastapi",
    "uvicorn",
    "nest_asyncio",
    "nbformat",
    "tenacity",
    "diskcache",
    "pandas",
    "nbconvert",
    "boto3",
    "click",
    "setuptools",
    "sqlmodel",
    "alembic",
]
benchmarks = ["scikit-learn"]
postgresql = ["psycopg2-binary"]
local-inference = ["torch", "accelerate", "transformers"]
prometheus = ["vllm", "prometheus-eval"]

[tool.pytest.ini_options]
addopts = "--cov=evalassist"

[project.scripts]
eval-assist = "evalassist.cli:main"

[project.urls]
homepage = "https://ibm.github.io/eval-assist/"
repository = "https://github.com/IBM/eval-assist"
documentation = "https://github.com/IBM/eval-assist/wiki"
"Bug Tracker" = "https://github.com/IBM/eval-assist/issues"


[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }
poetry-plugin-export = ">=1.8"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
metadata = false

[tool.bandit]
exclude_dirs = [".venv", "venv", ".poetry", "dist", "tests"]
