
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_OPleftAND_OPleftEQUAL_OPleftREL_OPleftPLUS_OPMINUS_OPleftMULT_OPDIV_OPMOD_OPrightUMINUS_OPleftUNION_OPleftINTERSECT_OPABBREV_AXIS_AT ABBREV_PATH_SEP ABBREV_STEP_PARENT ABBREV_STEP_SELF AND_OP AXISNAME AXIS_SEP CLOSE_BRACKET CLOSE_PAREN COLON COMMA DIV_OP DOLLAR EQUAL_OP FLOAT FUNCNAME INTEGER INTERSECT_OP INTERSECT_OP LITERAL MINUS_OP MOD_OP MULT_OP NCNAME NODETYPE OPEN_BRACKET OPEN_PAREN OR_OP PATH_SEP PIPELINE_OP PLUS_OP REL_OP STAR_OP UNION_OP\nExpr : Expr OR_OP Expr\n     | Expr AND_OP Expr\n     | Expr EQUAL_OP Expr\n     | Expr REL_OP Expr\n     | Expr PLUS_OP Expr\n     | Expr MINUS_OP Expr\n     | Expr MULT_OP Expr\n     | Expr DIV_OP Expr\n     | Expr MOD_OP Expr\n     | Expr UNION_OP Expr\n     | Expr INTERSECT_OP Expr\n\nExpr : MINUS_OP Expr %prec UMINUS_OP\n\nExpr : Expr PIPELINE_OP Expr\n\nExpr : FilterExpr PATH_SEP RelativeLocationPath\n     | FilterExpr ABBREV_PATH_SEP RelativeLocationPath\n\nExpr : RelativeLocationPath\n     | AbsoluteLocationPath\n     | AbbreviatedAbsoluteLocationPath\n     | FilterExpr\n\nAbsoluteLocationPath : PATH_SEP\n\nAbsoluteLocationPath : PATH_SEP RelativeLocationPath\n\nAbbreviatedAbsoluteLocationPath : ABBREV_PATH_SEP RelativeLocationPath\n\nRelativeLocationPath : Step\n\nRelativeLocationPath : RelativeLocationPath PATH_SEP Step\n                     | RelativeLocationPath ABBREV_PATH_SEP Step\n\nStep : NodeTest\n\nStep : NodeTest PredicateList\n\nStep : AxisSpecifier NodeTest\n\nStep : AxisSpecifier NodeTest PredicateList\n\nStep : ABBREV_STEP_SELF\n     | ABBREV_STEP_PARENT\n\nAxisSpecifier : AXISNAME AXIS_SEP\n\nAxisSpecifier : ABBREV_AXIS_AT\n\nNodeTest : NameTest\n\nNodeTest : NODETYPE OPEN_PAREN CLOSE_PAREN\n\nNodeTest : NODETYPE OPEN_PAREN LITERAL CLOSE_PAREN\n\nNameTest : STAR_OP\n\nNameTest : NCNAME COLON STAR_OP\n\nNameTest : QName\n\nQName : NCNAME COLON NCNAME\n\nQName : NCNAME\n\nFuncQName : NCNAME COLON FUNCNAME\n\nFuncQName : FUNCNAME\n\nFilterExpr : VariableReference\n           | LITERAL\n           | Number\n           | FunctionCall\n\nFilterExpr : OPEN_PAREN Expr CLOSE_PAREN\n\nFilterExpr : FilterExpr Predicate\n\nPredicateList : Predicate\n\nPredicateList : PredicateList Predicate\n\nPredicate : OPEN_BRACKET Expr CLOSE_BRACKET\n\nVariableReference : DOLLAR QName\n\nNumber : FLOAT\n       | INTEGER\n\nFunctionCall : FuncQName FormalArguments\n\nFormalArguments : OPEN_PAREN CLOSE_PAREN\n\nFormalArguments : OPEN_PAREN ArgumentList CLOSE_PAREN\n\nArgumentList : Expr\n\nArgumentList : ArgumentList COMMA Expr\n'
    
_lr_action_items = {'MINUS_OP':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,96,97,98,],[2,36,2,-19,-20,-16,-17,-18,-44,-45,-46,-47,2,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,2,2,2,2,2,2,2,2,2,2,2,2,-12,-49,2,-21,-41,-22,36,-53,-41,-56,2,-27,-50,-28,36,36,36,36,-5,-6,-7,-8,-9,-10,-11,36,-14,-15,36,-24,-25,-48,-57,36,-51,-29,-40,-38,-35,-52,-58,2,-36,36,]),'LITERAL':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,62,96,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,93,10,]),'OPEN_PAREN':([0,2,13,19,25,27,31,32,33,34,35,36,37,38,39,40,41,42,47,57,90,96,],[13,13,13,57,-43,62,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-42,13,]),'PATH_SEP':([0,2,3,5,9,10,11,12,13,14,16,17,18,20,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,52,54,55,56,57,58,59,60,76,77,80,81,82,84,87,88,89,91,92,94,95,96,97,],[4,4,44,50,-44,-45,-46,-47,4,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,4,4,4,4,4,4,4,4,4,4,4,4,-49,4,50,-41,50,-53,-41,-56,4,-27,-50,-28,50,50,-24,-25,-48,-57,-51,-29,-40,-38,-35,-52,-58,4,-36,]),'ABBREV_PATH_SEP':([0,2,3,5,9,10,11,12,13,14,16,17,18,20,22,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,52,54,55,56,57,58,59,60,76,77,80,81,82,84,87,88,89,91,92,94,95,96,97,],[6,6,45,51,-44,-45,-46,-47,6,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,6,6,6,6,6,6,6,6,6,6,6,6,-49,6,51,-41,51,-53,-41,-56,6,-27,-50,-28,51,51,-24,-25,-48,-57,-51,-29,-40,-38,-35,-52,-58,6,-36,]),'DOLLAR':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FLOAT':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'INTEGER':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ABBREV_STEP_SELF':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ABBREV_STEP_PARENT':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NCNAME':([0,2,4,6,13,15,21,29,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,61,63,79,83,96,],[24,24,49,49,24,55,49,-33,24,24,24,24,24,24,24,24,24,24,24,24,49,49,24,49,49,24,89,-32,89,89,24,]),'FUNCNAME':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,61,96,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,90,25,]),'NODETYPE':([0,2,4,6,13,21,29,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,63,96,],[27,27,27,27,27,27,-33,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-32,27,]),'AXISNAME':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ABBREV_AXIS_AT':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'STAR_OP':([0,2,4,6,13,21,29,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,61,63,79,96,],[30,30,30,30,30,30,-33,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,91,-32,91,30,]),'$end':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,84,87,88,89,91,92,94,95,97,],[0,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,-53,-41,-56,-27,-50,-28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-15,-24,-25,-48,-57,-51,-29,-40,-38,-35,-52,-58,-36,]),'OR_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[31,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,31,-53,-41,-56,-27,-50,-28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,31,-14,-15,31,-24,-25,-48,-57,31,-51,-29,-40,-38,-35,-52,-58,-36,31,]),'AND_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[32,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,32,-53,-41,-56,-27,-50,-28,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,32,-14,-15,32,-24,-25,-48,-57,32,-51,-29,-40,-38,-35,-52,-58,-36,32,]),'EQUAL_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[33,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,33,-53,-41,-56,-27,-50,-28,33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,33,-14,-15,33,-24,-25,-48,-57,33,-51,-29,-40,-38,-35,-52,-58,-36,33,]),'REL_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[34,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,34,-53,-41,-56,-27,-50,-28,34,34,34,-4,-5,-6,-7,-8,-9,-10,-11,34,-14,-15,34,-24,-25,-48,-57,34,-51,-29,-40,-38,-35,-52,-58,-36,34,]),'PLUS_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[35,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,35,-53,-41,-56,-27,-50,-28,35,35,35,35,-5,-6,-7,-8,-9,-10,-11,35,-14,-15,35,-24,-25,-48,-57,35,-51,-29,-40,-38,-35,-52,-58,-36,35,]),'MULT_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[37,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,37,-53,-41,-56,-27,-50,-28,37,37,37,37,37,37,-7,-8,-9,-10,-11,37,-14,-15,37,-24,-25,-48,-57,37,-51,-29,-40,-38,-35,-52,-58,-36,37,]),'DIV_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[38,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,38,-53,-41,-56,-27,-50,-28,38,38,38,38,38,38,-7,-8,-9,-10,-11,38,-14,-15,38,-24,-25,-48,-57,38,-51,-29,-40,-38,-35,-52,-58,-36,38,]),'MOD_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[39,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,39,-53,-41,-56,-27,-50,-28,39,39,39,39,39,39,-7,-8,-9,-10,-11,39,-14,-15,39,-24,-25,-48,-57,39,-51,-29,-40,-38,-35,-52,-58,-36,39,]),'UNION_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[40,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,40,-49,-21,-41,-22,40,-53,-41,-56,-27,-50,-28,40,40,40,40,40,40,40,40,40,-10,-11,40,-14,-15,40,-24,-25,-48,-57,40,-51,-29,-40,-38,-35,-52,-58,-36,40,]),'INTERSECT_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[41,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,41,-49,-21,-41,-22,41,-53,-41,-56,-27,-50,-28,41,41,41,41,41,41,41,41,41,41,-11,41,-14,-15,41,-24,-25,-48,-57,41,-51,-29,-40,-38,-35,-52,-58,-36,41,]),'PIPELINE_OP':([1,3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,86,87,88,89,91,92,94,95,97,98,],[42,-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,42,-53,-41,-56,-27,-50,-28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,42,-14,-15,42,-24,-25,-48,-57,42,-51,-29,-40,-38,-35,-52,-58,-36,42,]),'CLOSE_PAREN':([3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,84,85,86,87,88,89,91,92,93,94,95,97,98,],[-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,82,-53,-41,-56,84,-27,-50,-28,92,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-15,-24,-25,-48,-57,95,-59,-51,-29,-40,-38,-35,97,-52,-58,-36,-60,]),'CLOSE_BRACKET':([3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,87,88,89,91,92,94,95,97,],[-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,-53,-41,-56,-27,-50,-28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-15,94,-24,-25,-48,-57,-51,-29,-40,-38,-35,-52,-58,-36,]),'COMMA':([3,4,5,7,8,9,10,11,12,14,16,17,18,20,22,23,24,26,30,43,46,48,49,52,54,55,56,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,84,85,86,87,88,89,91,92,94,95,97,98,],[-19,-20,-16,-17,-18,-44,-45,-46,-47,-23,-39,-54,-55,-26,-30,-31,-41,-34,-37,-12,-49,-21,-41,-22,-53,-41,-56,-27,-50,-28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-14,-15,-24,-25,-48,-57,96,-59,-51,-29,-40,-38,-35,-52,-58,-36,-60,]),'OPEN_BRACKET':([3,9,10,11,12,16,17,18,20,24,26,30,46,49,54,55,56,58,59,60,82,84,87,88,89,91,92,94,95,97,],[47,-44,-45,-46,-47,-39,-54,-55,47,-41,-34,-37,-49,-41,-53,-41,-56,47,-50,47,-48,-57,-51,47,-40,-38,-35,-52,-58,-36,]),'COLON':([24,49,55,],[61,79,83,]),'AXIS_SEP':([28,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Expr':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[1,43,53,64,65,66,67,68,69,70,71,72,73,74,75,78,86,98,]),'FilterExpr':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'RelativeLocationPath':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,57,96,],[5,5,48,52,5,5,5,5,5,5,5,5,5,5,5,5,5,76,77,5,5,5,]),'AbsoluteLocationPath':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AbbreviatedAbsoluteLocationPath':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'VariableReference':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Number':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FunctionCall':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Step':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,80,81,14,14,]),'QName':([0,2,4,6,13,15,21,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[16,16,16,16,16,54,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FuncQName':([0,2,13,31,32,33,34,35,36,37,38,39,40,41,42,47,57,96,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NodeTest':([0,2,4,6,13,21,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[20,20,20,20,20,60,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'AxisSpecifier':([0,2,4,6,13,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'NameTest':([0,2,4,6,13,21,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,50,51,57,96,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Predicate':([3,20,58,60,88,],[46,59,87,59,87,]),'FormalArguments':([19,],[56,]),'PredicateList':([20,60,],[58,88,]),'ArgumentList':([57,],[85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Expr","S'",1,None,None,None),
  ('Expr -> Expr OR_OP Expr','Expr',3,'p_expr_boolean','parserules.py',31),
  ('Expr -> Expr AND_OP Expr','Expr',3,'p_expr_boolean','parserules.py',32),
  ('Expr -> Expr EQUAL_OP Expr','Expr',3,'p_expr_boolean','parserules.py',33),
  ('Expr -> Expr REL_OP Expr','Expr',3,'p_expr_boolean','parserules.py',34),
  ('Expr -> Expr PLUS_OP Expr','Expr',3,'p_expr_boolean','parserules.py',35),
  ('Expr -> Expr MINUS_OP Expr','Expr',3,'p_expr_boolean','parserules.py',36),
  ('Expr -> Expr MULT_OP Expr','Expr',3,'p_expr_boolean','parserules.py',37),
  ('Expr -> Expr DIV_OP Expr','Expr',3,'p_expr_boolean','parserules.py',38),
  ('Expr -> Expr MOD_OP Expr','Expr',3,'p_expr_boolean','parserules.py',39),
  ('Expr -> Expr UNION_OP Expr','Expr',3,'p_expr_boolean','parserules.py',40),
  ('Expr -> Expr INTERSECT_OP Expr','Expr',3,'p_expr_boolean','parserules.py',41),
  ('Expr -> MINUS_OP Expr','Expr',2,'p_expr_unary','parserules.py',48),
  ('Expr -> Expr PIPELINE_OP Expr','Expr',3,'p_expr_pipeline','parserules.py',55),
  ('Expr -> FilterExpr PATH_SEP RelativeLocationPath','Expr',3,'p_path_expr_binary','parserules.py',67),
  ('Expr -> FilterExpr ABBREV_PATH_SEP RelativeLocationPath','Expr',3,'p_path_expr_binary','parserules.py',68),
  ('Expr -> RelativeLocationPath','Expr',1,'p_path_expr_unary','parserules.py',75),
  ('Expr -> AbsoluteLocationPath','Expr',1,'p_path_expr_unary','parserules.py',76),
  ('Expr -> AbbreviatedAbsoluteLocationPath','Expr',1,'p_path_expr_unary','parserules.py',77),
  ('Expr -> FilterExpr','Expr',1,'p_path_expr_unary','parserules.py',78),
  ('AbsoluteLocationPath -> PATH_SEP','AbsoluteLocationPath',1,'p_absolute_location_path_rootonly','parserules.py',90),
  ('AbsoluteLocationPath -> PATH_SEP RelativeLocationPath','AbsoluteLocationPath',2,'p_absolute_location_path_subpath','parserules.py',97),
  ('AbbreviatedAbsoluteLocationPath -> ABBREV_PATH_SEP RelativeLocationPath','AbbreviatedAbsoluteLocationPath',2,'p_abbreviated_absolute_location_path','parserules.py',104),
  ('RelativeLocationPath -> Step','RelativeLocationPath',1,'p_relative_location_path_simple','parserules.py',111),
  ('RelativeLocationPath -> RelativeLocationPath PATH_SEP Step','RelativeLocationPath',3,'p_relative_location_path_binary','parserules.py',118),
  ('RelativeLocationPath -> RelativeLocationPath ABBREV_PATH_SEP Step','RelativeLocationPath',3,'p_relative_location_path_binary','parserules.py',119),
  ('Step -> NodeTest','Step',1,'p_step_nodetest','parserules.py',131),
  ('Step -> NodeTest PredicateList','Step',2,'p_step_nodetest_predicates','parserules.py',138),
  ('Step -> AxisSpecifier NodeTest','Step',2,'p_step_axis_nodetest','parserules.py',145),
  ('Step -> AxisSpecifier NodeTest PredicateList','Step',3,'p_step_axis_nodetest_predicates','parserules.py',152),
  ('Step -> ABBREV_STEP_SELF','Step',1,'p_step_abbrev','parserules.py',159),
  ('Step -> ABBREV_STEP_PARENT','Step',1,'p_step_abbrev','parserules.py',160),
  ('AxisSpecifier -> AXISNAME AXIS_SEP','AxisSpecifier',2,'p_axis_specifier_full','parserules.py',172),
  ('AxisSpecifier -> ABBREV_AXIS_AT','AxisSpecifier',1,'p_axis_specifier_abbrev','parserules.py',179),
  ('NodeTest -> NameTest','NodeTest',1,'p_node_test_name_test','parserules.py',191),
  ('NodeTest -> NODETYPE OPEN_PAREN CLOSE_PAREN','NodeTest',3,'p_node_test_type_simple','parserules.py',198),
  ('NodeTest -> NODETYPE OPEN_PAREN LITERAL CLOSE_PAREN','NodeTest',4,'p_node_test_type_literal','parserules.py',208),
  ('NameTest -> STAR_OP','NameTest',1,'p_name_test_star','parserules.py',223),
  ('NameTest -> NCNAME COLON STAR_OP','NameTest',3,'p_name_test_prefix_star','parserules.py',230),
  ('NameTest -> QName','NameTest',1,'p_name_test_qname','parserules.py',237),
  ('QName -> NCNAME COLON NCNAME','QName',3,'p_qname_prefixed','parserules.py',250),
  ('QName -> NCNAME','QName',1,'p_qname_unprefixed','parserules.py',257),
  ('FuncQName -> NCNAME COLON FUNCNAME','FuncQName',3,'p_funcqname_prefixed','parserules.py',264),
  ('FuncQName -> FUNCNAME','FuncQName',1,'p_funcqname_unprefixed','parserules.py',271),
  ('FilterExpr -> VariableReference','FilterExpr',1,'p_filter_expr_simple','parserules.py',283),
  ('FilterExpr -> LITERAL','FilterExpr',1,'p_filter_expr_simple','parserules.py',284),
  ('FilterExpr -> Number','FilterExpr',1,'p_filter_expr_simple','parserules.py',285),
  ('FilterExpr -> FunctionCall','FilterExpr',1,'p_filter_expr_simple','parserules.py',286),
  ('FilterExpr -> OPEN_PAREN Expr CLOSE_PAREN','FilterExpr',3,'p_filter_expr_grouped','parserules.py',295),
  ('FilterExpr -> FilterExpr Predicate','FilterExpr',2,'p_filter_expr_predicate','parserules.py',302),
  ('PredicateList -> Predicate','PredicateList',1,'p_predicate_list_single','parserules.py',317),
  ('PredicateList -> PredicateList Predicate','PredicateList',2,'p_predicate_list_recursive','parserules.py',324),
  ('Predicate -> OPEN_BRACKET Expr CLOSE_BRACKET','Predicate',3,'p_predicate','parserules.py',332),
  ('VariableReference -> DOLLAR QName','VariableReference',2,'p_variable_reference','parserules.py',344),
  ('Number -> FLOAT','Number',1,'p_number','parserules.py',356),
  ('Number -> INTEGER','Number',1,'p_number','parserules.py',357),
  ('FunctionCall -> FuncQName FormalArguments','FunctionCall',2,'p_function_call','parserules.py',369),
  ('FormalArguments -> OPEN_PAREN CLOSE_PAREN','FormalArguments',2,'p_formal_arguments_empty','parserules.py',379),
  ('FormalArguments -> OPEN_PAREN ArgumentList CLOSE_PAREN','FormalArguments',3,'p_formal_arguments_list','parserules.py',386),
  ('ArgumentList -> Expr','ArgumentList',1,'p_argument_list_single','parserules.py',393),
  ('ArgumentList -> ArgumentList COMMA Expr','ArgumentList',3,'p_argument_list_recursive','parserules.py',400),
]
