Metadata-Version: 2.4
Name: cosmo-geff
Version: 0.1.1
Summary: The GEFF allows simulating gauge-field production during inflation using the gradient expansion formalism.
Author-email: Richard von Eckardstein <richard.voneckardstein@uni-muenster.de>
License: 
        
        Copyright (c) 2025 Richard von Eckardstein
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://richard-von-eckardstein.github.io/GEFF/geff.html
Project-URL: Repository, https://github.com/richard-von-eckardstein/GEFF
Project-URL: Changelog, https://github.com/richard-von-eckardstein/GEFF/blob/main/CHANGELOG.md
Keywords: geff,inflation,cosmology
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: scipy>=1.15.0
Requires-Dist: numpy>=2.2.6
Requires-Dist: pandas>=2.3.0
Requires-Dist: tabulate
Requires-Dist: mpmath>=1.3
Requires-Dist: natpy
Dynamic: license-file

# The gradient expansion formalism factory (GEFF)

This python package is designed to handle gauge-field production during cosmic inflation
using the gradient expansion formalism (GEF).

With this package, the user has access to built-in and ready-to-use models to determine the dynamical evolution during axion inflation. Furthermore, the GEFF package allows you to create your own versions
of inflationary models featuring gauge-field production, which can be solved using the GEF technique.

For more information on the GEFF, please see our [documentation](https://richard-von-eckardstein.github.io/GEFF/geff.html), and our [arXiv manual](https://arxiv.org/abs/2510.12644)

## Installation

To install this package use

```bash
pip install cosmo-geff
```

or use the `geff.yml` file to create a conda environment,

```bash
conda env create -f geff.yml
```

## Attribution

If you use this software in your work, please cite:

```
von Eckardstein, R. (2025). GEFF: The Gradient Expansion Formalism Factory. Zenodo. https://doi.org/10.5281/zenodo.17356579

@misc{von_eckardstein_2025_17356579,
  author       = {von Eckardstein, Richard},
  title        = {GEFF: The Gradient Expansion Formalism Factory},
  month        = oct,
  year         = 2025,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.17356579},
  url          = {https://doi.org/10.5281/zenodo.17356579},
}

von Eckardstein, R. (2025). GEFF: The Gradient Expansion Formalism Factory - A tool for inﬂationary gauge-ﬁeld production. arXiv. https://arxiv.org/abs/2510.12644

@misc{vonEckardstein:2025jug,
    author        = {von Eckardstein, Richard},
    title         = {GEFF: The Gradient Expansion Formalism Factory - A tool for inflationary gauge-field production},
    eprint        = {2510.12644},
    archivePrefix = {arXiv},
    primaryClass  = {astro-ph.CO},
    reportNumber  = {MS-TP-25-37},
    month         = oct,
    year          = 2025
}
```

