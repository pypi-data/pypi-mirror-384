# DO NOT MODIFY -- This file is generated by type_spec
# ruff: noqa: E402 Q003
# fmt: off
# isort: skip_file
from __future__ import annotations
import typing  # noqa: F401
import datetime  # noqa: F401
from decimal import Decimal  # noqa: F401
import dataclasses
from pkgs.serialization import serial_class
from pkgs.serialization import serial_alias_annotation
from ... import base_t
from ... import identifier_t
from ... import permissions_t
from ... import post_base_t

__all__: list[str] = [
    "Arguments",
    "Data",
    "ENDPOINT_METHOD",
    "ENDPOINT_PATH",
    "PermissionsScope",
    "PermissionsScopeAllMaterialFamilies",
    "PermissionsScopeMaterialFamily",
    "PermissionsScopeProject",
    "PermissionsScopeRecipe",
]

ENDPOINT_METHOD = "POST"
ENDPOINT_PATH = "api/external/permissions/external_set_core_permissions"


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.PermissionsScopeProject",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class PermissionsScopeProject:
    type: typing.Literal["project"] = "project"
    project_key: identifier_t.IdentifierKey


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.PermissionsScopeRecipe",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class PermissionsScopeRecipe:
    type: typing.Literal["recipe"] = "recipe"
    recipe_key: identifier_t.IdentifierKey


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.PermissionsScopeMaterialFamily",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class PermissionsScopeMaterialFamily:
    type: typing.Literal["material_family"] = "material_family"
    material_family_key: identifier_t.IdentifierKey


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.PermissionsScopeAllMaterialFamilies",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class PermissionsScopeAllMaterialFamilies:
    type: typing.Literal["all_material_families"] = "all_material_families"


# DO NOT MODIFY -- This file is generated by type_spec
PermissionsScope = typing.Annotated[
    PermissionsScopeProject | PermissionsScopeRecipe | PermissionsScopeMaterialFamily | PermissionsScopeAllMaterialFamilies,
    serial_alias_annotation(
    named_type_path="sdk.api.permissions.set_core_permissions.PermissionsScope",
    ),
]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.Arguments",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Arguments:
    scope: PermissionsScope
    permissions_types: list[permissions_t.CorePermissionType]
    update_type: post_base_t.UpdateType
    user_group_ids: list[int] | None = None
    user_ids: list[int] | None = None


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.permissions.set_core_permissions.Data",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Data:
    pass
# DO NOT MODIFY -- This file is generated by type_spec
