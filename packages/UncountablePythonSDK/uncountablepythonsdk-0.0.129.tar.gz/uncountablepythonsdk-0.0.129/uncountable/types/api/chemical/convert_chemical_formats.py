# DO NOT MODIFY -- This file is generated by type_spec
# ruff: noqa: E402 Q003
# fmt: off
# isort: skip_file
from __future__ import annotations
import typing  # noqa: F401
import datetime  # noqa: F401
from decimal import Decimal  # noqa: F401
import dataclasses
from pkgs.serialization import serial_class
from pkgs.serialization import serial_alias_annotation
from ... import base_t

__all__: list[str] = [
    "Arguments",
    "ChemicalStructureFile",
    "Data",
    "ENDPOINT_METHOD",
    "ENDPOINT_PATH",
    "UncountableChemicalStructure",
]

ENDPOINT_METHOD = "POST"
ENDPOINT_PATH = "api/external/chemical/convert_chemical_formats"


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.chemical.convert_chemical_formats.ChemicalStructureFile",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class ChemicalStructureFile:
    struct_file: str


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.chemical.convert_chemical_formats.Arguments",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Arguments:
    source_chemical_structures: list[ChemicalStructureFile]


# DO NOT MODIFY -- This file is generated by type_spec
UncountableChemicalStructure = typing.Annotated[
    dict[str, base_t.JsonValue],
    serial_alias_annotation(
    named_type_path="sdk.api.chemical.convert_chemical_formats.UncountableChemicalStructure",
    ),
]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.chemical.convert_chemical_formats.Data",
    unconverted_values={"chemical_structures"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Data:
    chemical_structures: list[UncountableChemicalStructure]
# DO NOT MODIFY -- This file is generated by type_spec
