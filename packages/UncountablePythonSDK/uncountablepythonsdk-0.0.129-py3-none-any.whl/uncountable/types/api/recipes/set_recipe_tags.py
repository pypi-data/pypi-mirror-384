# DO NOT MODIFY -- This file is generated by type_spec
# ruff: noqa: E402 Q003
# fmt: off
# isort: skip_file
from __future__ import annotations
import typing  # noqa: F401
import datetime  # noqa: F401
from decimal import Decimal  # noqa: F401
from enum import StrEnum
import dataclasses
from pkgs.serialization import serial_class
from pkgs.serialization import serial_alias_annotation
from ... import base_t
from ... import identifier_t

__all__: list[str] = [
    "Arguments",
    "Data",
    "ENDPOINT_METHOD",
    "ENDPOINT_PATH",
    "RecipeTagAppend",
    "RecipeTagOverride",
    "RecipeTagRemove",
    "RecipeTagUpdate",
    "RecipeTagUpdateBase",
    "RecipeTagUpdateType",
]

ENDPOINT_METHOD = "POST"
ENDPOINT_PATH = "api/external/recipes/set_recipe_tags"


# DO NOT MODIFY -- This file is generated by type_spec
class RecipeTagUpdateType(StrEnum):
    APPEND = "append"
    OVERRIDE = "override"
    REMOVE = "remove"


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.RecipeTagUpdateBase",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class RecipeTagUpdateBase:
    type: RecipeTagUpdateType


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.RecipeTagAppend",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class RecipeTagAppend(RecipeTagUpdateBase):
    type: typing.Literal[RecipeTagUpdateType.APPEND] = RecipeTagUpdateType.APPEND
    recipe_tag_ids: list[base_t.ObjectId]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.RecipeTagRemove",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class RecipeTagRemove(RecipeTagUpdateBase):
    type: typing.Literal[RecipeTagUpdateType.REMOVE] = RecipeTagUpdateType.REMOVE
    recipe_tag_ids: list[base_t.ObjectId]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.RecipeTagOverride",
    parse_require={"type"},
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class RecipeTagOverride(RecipeTagUpdateBase):
    type: typing.Literal[RecipeTagUpdateType.OVERRIDE] = RecipeTagUpdateType.OVERRIDE
    recipe_tag_ids: list[base_t.ObjectId]


# DO NOT MODIFY -- This file is generated by type_spec
RecipeTagUpdate = typing.Annotated[
    RecipeTagAppend | RecipeTagRemove | RecipeTagOverride,
    serial_alias_annotation(
    named_type_path="sdk.api.recipes.set_recipe_tags.RecipeTagUpdate",
    ),
]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.Arguments",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Arguments:
    recipe_key: identifier_t.IdentifierKey
    recipe_tag_update: RecipeTagUpdate


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.recipes.set_recipe_tags.Data",
)
@dataclasses.dataclass(slots=base_t.ENABLE_SLOTS, kw_only=True)  # type: ignore[literal-required]
class Data:
    pass
# DO NOT MODIFY -- This file is generated by type_spec
