[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kuzu-memory"
version = "1.3.3"
description = "Lightweight, embedded graph-based memory system for AI applications"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "KuzuMemory Team", email = "team@kuzu-memory.dev"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "memory", "graph", "database", "kuzu", "chatbot", "llm"]
requires-python = ">=3.11"

dependencies = [
    "kuzu>=0.4.0",           # Graph database
    "pydantic>=2.0",         # Data validation
    "click>=8.1.0",          # CLI
    "pyyaml>=6.0",          # Configuration
    "python-dateutil>=2.8",  # Date handling
    "typing-extensions>=4.5", # Python 3.11+ compatibility
    "rich>=13.0.0",         # Rich CLI formatting
    "psutil>=5.9.0",        # System and process utilities for health monitoring
    "gitpython>=3.1.0"      # Git repository integration
]

[project.optional-dependencies]
nlp = [
    "nltk>=3.8",             # Natural Language Toolkit (includes VADER sentiment)
    "scikit-learn>=1.3",     # Machine learning for classification
    "numpy>=1.24",           # Numerical computing for batch processing
]
ner = [
    "spacy>=3.5",           # Optional NER
    "en-core-web-sm"        # Small English model
]
dev = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.23.0",  # Async test support
    "pytest-timeout>=2.2.0",   # Test timeout management
    "pytest-mock>=3.10",
    "black>=23.0",
    "isort>=5.12",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "pytest-xdist>=3.0",  # Parallel test execution
    "towncrier>=23.11.0",  # Changelog fragment management
]
test = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-timeout>=2.2.0",
    "pytest-mock>=3.10"
]

[project.urls]
Homepage = "https://github.com/kuzu-memory/kuzu-memory"
Documentation = "https://kuzu-memory.readthedocs.io"
Repository = "https://github.com/kuzu-memory/kuzu-memory"
Issues = "https://github.com/kuzu-memory/kuzu-memory/issues"

[project.scripts]
kuzu-memory = "kuzu_memory.cli.commands:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kuzu_memory"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=kuzu_memory",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
    "performance: marks tests as performance tests",
    "compliance: marks tests as compliance tests",
]

[tool.coverage.run]
source = ["src/kuzu_memory"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # exception chaining - requires extensive refactoring
    "C901",  # too complex
    "RUF006", # store task reference - fire-and-forget tasks are intentional
    "RUF012", # mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501", "F401", "F811"]
"src/kuzu_memory/__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert statements and shell injection (handled carefully)

[tool.bandit.assert_used]
skips = ["*_test.py", "*test*.py"]

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
template = "changelog.d/template.md"
title_format = "## [{version}] - {project_date}"
issue_format = "[#{issue}](https://github.com/bobmatnyc/kuzu-memory/issues/{issue})"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "feature"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "enhancement"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecation"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "performance"
name = "Performance"
showcontent = true

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = false
