[project]
name = "elims"
version = "0.0.1"
description = "Electronic Laboratory Information Management System"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13"
authors = [
    {name = "Fabien Meyer", email = "fabien.meyer@outlook.com"},
]
keywords = ["laboratory", "information", "management", "system", "lims"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "pydantic-settings>=2.11.0",
    "sqlmodel>=0.0.27",

]

[tool.uv]
dev-dependencies = [
    "mdformat>=0.7.22",
    "mdformat-frontmatter>=2.0.8",
    "mdformat-gfm>=0.4.1",
    "mdformat-tables>=1.0.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocstrings[python]>=0.30.1",
    "mkdocs-glightbox>=0.5.1",
    "mkdocs-mermaid2-plugin>=1.2.2",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-plotly-plugin>=0.1.3",
    "mike>=2.1.3",
    "mypy>=1.18.2",
    "ruff>=0.13.3",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-html>=4.1.1",
    "pytest-profiling>=1.8.1",
    "pytest-xdist>=3.8.0",
    "twine>=6.2.0",
    "vale>=3.12.0.2",
]

[build-system]
requires = ["uv_build>=0.9.3,<0.10.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "elims"
module-root = ""

[tool.mypy]
strict = true
pretty = true

[tool.ruff]
line-length = 120
include = [
    "elims/**/*.py",
    "tests/**/*.py",
]
fix = true
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Allow trailing commas in multi-line constructs
    "D203",   # 1 blank line required before class docstring (conflicts with D211)
    "D213",   # Multi-line docstring summary should start at the second line (conflicts with D212)
    "S101",   # Use of assert detected. Need to allow assert statements in tests
]

[tool.mdformat]
wrap = 80
end_of_line = "lf"
extensions = [
    "gfm",        # GitHub Flavored Markdown
    "frontmatter", # YAML front matter
    "tables",     # Table formatting
]
