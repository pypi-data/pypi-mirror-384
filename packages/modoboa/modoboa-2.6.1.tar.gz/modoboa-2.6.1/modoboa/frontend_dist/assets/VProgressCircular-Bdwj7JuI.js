import{aZ as x,a_ as g,a$ as h,b0 as E,aM as B,b1 as M,h as z,a6 as U,b2 as F,aw as A,z as D,J as w,b3 as G,b4 as J,a2 as v,I as W,al as Z,a7 as n,az as j,aa as q,a as H,a1 as y,y as k,am as K,e as c}from"./index-D9OmnhdE.js";import{d as L,u as Q,c as X,b as Y}from"./tag-jImTUiWx.js";function N(e){return x(()=>{const s=g(e),a=[],t={};if(s.background)if(h(s.background)){if(t.backgroundColor=s.background,!s.text&&E(s.background)){const r=B(s.background);if(r.a==null||r.a===1){const o=M(r);t.color=o,t.caretColor=o}}}else a.push(`bg-${s.background}`);return s.text&&(h(s.text)?(t.color=s.text,t.caretColor=s.text):a.push(`text-${s.text}`)),{colorClasses:a,colorStyles:t}})}function S(e){const{colorClasses:s,colorStyles:a}=N(()=>({text:g(e)}));return{textColorClasses:s,textColorStyles:a}}function ne(e){const{colorClasses:s,colorStyles:a}=N(()=>({background:g(e)}));return{backgroundColorClasses:s,backgroundColorStyles:a}}function ee(e,s){const a=z(),t=U(!1);if(F){const r=new IntersectionObserver(o=>{t.value=!!o.find(l=>l.isIntersecting)},s);A(()=>{r.disconnect()}),D(a,(o,l)=>{l&&(r.unobserve(l),t.value=!1),o&&r.observe(o)},{flush:"post"})}return{intersectionRef:a,isIntersecting:t}}const se=["x-small","small","default","large","x-large"],ae=w({size:{type:[String,Number],default:"default"}},"size");function te(e){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:G();return x(()=>{const a=e.size;let t,r;return J(se,a)?t=`${s}--size-${a}`:a&&(r={width:v(a),height:v(a)}),{sizeClasses:t,sizeStyles:r}})}const re=w({bgColor:String,color:String,indeterminate:[Boolean,String],modelValue:{type:[Number,String],default:0},rotate:{type:[Number,String],default:0},width:{type:[Number,String],default:4},...Y(),...ae(),...X({tag:"div"}),...K()},"VProgressCircular"),ce=W()({name:"VProgressCircular",props:re(),setup(e,s){let{slots:a}=s;const t=20,r=2*Math.PI*t,o=z(),{themeClasses:l}=Z(e),{sizeClasses:p,sizeStyles:f}=te(e),{textColorClasses:I,textColorStyles:P}=S(()=>e.color),{textColorClasses:R,textColorStyles:_}=S(()=>e.bgColor),{intersectionRef:T,isIntersecting:V}=ee(),{resizeRef:$,contentRect:m}=L(),u=n(()=>j(parseFloat(e.modelValue),0,100)),i=n(()=>Number(e.width)),C=n(()=>f.value?Number(e.size):m.value?m.value.width:Math.max(i.value,32)),d=n(()=>t/(1-i.value/C.value)*2),b=n(()=>i.value/C.value*d.value),O=n(()=>v((100-u.value)/100*r));return q(()=>{T.value=o.value,$.value=o.value}),Q(()=>H(e.tag,{ref:o,class:k(["v-progress-circular",{"v-progress-circular--indeterminate":!!e.indeterminate,"v-progress-circular--visible":V.value,"v-progress-circular--disable-shrink":e.indeterminate==="disable-shrink"},l.value,p.value,I.value,e.class]),style:y([f.value,P.value,e.style]),role:"progressbar","aria-valuemin":"0","aria-valuemax":"100","aria-valuenow":e.indeterminate?void 0:u.value},{default:()=>[c("svg",{style:{transform:`rotate(calc(-90deg + ${Number(e.rotate)}deg))`},xmlns:"http://www.w3.org/2000/svg",viewBox:`0 0 ${d.value} ${d.value}`},[c("circle",{class:k(["v-progress-circular__underlay",R.value]),style:y(_.value),fill:"transparent",cx:"50%",cy:"50%",r:t,"stroke-width":b.value,"stroke-dasharray":r,"stroke-dashoffset":0},null),c("circle",{class:"v-progress-circular__overlay",fill:"transparent",cx:"50%",cy:"50%",r:t,"stroke-width":b.value,"stroke-dasharray":r,"stroke-dashoffset":O.value},null)]),a.default&&c("div",{class:"v-progress-circular__content"},[a.default({value:u.value})])]})),{}}});export{ce as V,S as a,N as b,te as c,ee as d,ae as m,ne as u};
