# Generated by Django 5.2.3 on 2025-06-18 13:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cookie', models.TextField(help_text="Un cookie sans durée d'expiration est placé dans chaque nouvelle session, il possède une valeur aléatoire qui permet de tracer le navigateur du visiteur entre plusieurs visites.")),
                ('name', models.TextField(choices=[('download', 'Download')])),
                ('data', models.JSONField(blank=True, null=True)),
                ('url', models.TextField(help_text='URL brut de la page')),
                ('view', models.TextField(help_text='Nom de la vue dans Django')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cookie', models.TextField(help_text="Un cookie sans durée d'expiration est placé dans chaque nouvelle session, il possède une valeur aléatoire qui permet de tracer le navigateur du visiteur entre plusieurs visites.")),
                ('territory_id', models.TextField(blank=True, help_text='ID du territoire principal sélectionné.', null=True)),
                ('territory_mesh', models.TextField(blank=True, choices=[('fr', 'National'), ('reg', 'Region'), ('dep', 'Department'), ('epci', 'Epci'), ('com', 'Town')], help_text='Maille du territoire principal sélectionné.', null=True)),
                ('submesh', models.TextField(blank=True, choices=[('fr', 'National'), ('reg', 'Region'), ('dep', 'Department'), ('epci', 'Epci'), ('com', 'Town')], help_text="Maille d'analyse sélectionnée.", null=True)),
                ('cmp_territory_id', models.TextField(blank=True, help_text="ID du territoire de comparaison, null s'il ne s'agit pas de la page comparaison.", null=True)),
                ('cmp_territory_mesh', models.TextField(blank=True, choices=[('fr', 'National'), ('reg', 'Region'), ('dep', 'Department'), ('epci', 'Epci'), ('com', 'Town')], help_text="Maille du territoire de comparaison, null s'il ne s'agit pas de la page comparaison.", null=True)),
                ('indicator', models.IntegerField(blank=True, help_text="ID de l'indicateur de la page détails, null s'il ne s'agit pas de la page détails, utile pour faire des jointures.", null=True)),
                ('indicator_name', models.TextField(blank=True, help_text="Nom de l'indicateur de la page détails, null s'il ne s'agit pas de la page détails, utile pour une analyse rapide.", null=True)),
                ('theme', models.IntegerField(blank=True, help_text='ID du thème de la page, utile pour faire des jointures.', null=True)),
                ('theme_name', models.TextField(blank=True, help_text='Nom du thème de la page, utile pour une analyse rapide.', null=True)),
                ('url', models.TextField(help_text='URL brut de la page')),
                ('view', models.TextField(help_text='Nom de la vue dans Django')),
            ],
        ),
    ]
