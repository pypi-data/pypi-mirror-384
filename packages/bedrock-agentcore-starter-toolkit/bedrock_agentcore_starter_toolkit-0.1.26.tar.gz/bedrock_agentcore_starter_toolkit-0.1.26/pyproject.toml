[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bedrock-agentcore-starter-toolkit"
version = "0.1.26"
description = "A starter toolkit for using Bedrock AgentCore"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    { name = "AWS", email = "opensource@amazon.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "boto3>=1.40.51",
    "botocore>=1.40.51",
    "bedrock-agentcore>=1.0.3",
    "docstring_parser>=0.15,<1.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "prompt-toolkit>=3.0.51",
    "pydantic>=2.0.0,<2.41.3",
    "urllib3>=1.26.0",
    "pyyaml>=6.0.2",
    "requests>=2.25.0",
    "rich>=13.0.0",
    "toml>=0.10.2",
    "typer>=0.16.0",
    "typing-extensions>=4.13.2,<5.0.0",
    "uvicorn>=0.34.2",
    "autopep8>=2.3.2",
    "prance>=25.4.8.0",
    "ruamel-yaml>=0.18.14",
    "questionary>=2.1.0",
    "openapi-spec-validator>=0.7.2",
    "py-openapi-schema-to-json-schema>=0.0.3",
    "starlette>=0.46.2",
]

[project.scripts]
agentcore = "bedrock_agentcore_starter_toolkit.cli.cli:main"

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/aws/bedrock-agentcore-starter-toolkit"
"Bug Tracker" = "https://github.com/aws/bedrock-agentcore-starter-toolkit/issues"
Documentation = "https://github.com/aws/bedrock-agentcore-starter-toolkit"

[tool.hatch.build.targets.wheel]
packages = ["src/bedrock_agentcore_starter_toolkit"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
follow_untyped_imports = true
ignore_missing_imports = false

[tool.ruff]
line-length = 120
include = ["examples/**/*.py", "src/**/*.py", "tests/**/*.py", "tests-integ/**/*.py"]

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "D", # pydocstyle
  "E", # pycodestyle
  "F", # pyflakes
  "G", # logging format
  "I", # isort
  "LOG", # logging
]

[tool.ruff.lint.per-file-ignores]
"!src/**/*.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true
source = ["src"]
context = "thread"
parallel = true
concurrency = ["thread", "multiprocessing"]
omit = [
    "src/bedrock_agentcore_starter_toolkit/cli/import_agent/*", # CLI requires user input to test
    "src/bedrock_agentcore_starter_toolkit/services/import_agent/utils.py", # Utils are not tested directly
    "src/bedrock_agentcore_starter_toolkit/operations/runtime/exceptions.py", # Simple exception classes
]

[tool.coverage.report]
show_missing = true
fail_under = 90
skip_covered = false
skip_empty = false

[tool.coverage.html]
directory = "build/coverage/html"

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
bump_message = "chore(release): bump version $current_version -> $new_version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]

[dependency-groups]
dev = [
    "moto>=5.1.6",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.12.0",
    "strands-agents>=0.1.8",
    "wheel>=0.45.1",
    "mike~=2.1.3",
    "mkdocs~=1.6.1",
    "mkdocs-macros-plugin~=1.3.7",
    "mkdocs-material~=9.6.12",
    "mkdocs-llmstxt~=0.1.0",
    "mkdocstrings-python>=1.16.10,<1.19.0",
]
