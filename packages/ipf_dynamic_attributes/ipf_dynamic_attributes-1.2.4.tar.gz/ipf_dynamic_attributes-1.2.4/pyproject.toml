[tool.poetry]
name = "ipf_dynamic_attributes"
version = "1.2.4"
description = "Automation to Create Dynamic Attributes in IP Fabric"
authors = [
    "Solution Architecture <solution.architecture@ipfabric.io>"
]
license = "MIT"
readme = "README.md"
keywords = ["ipfabric", "ip-fabric", "community-fabric"]
documentation = "https://docs.ipfabric.io/main/integrations/dynamic-attributes/"
repository = "https://gitlab.com/ip-fabric/integrations/ipf-dynamic-attributes"

[tool.poetry.urls]
"IP Fabric" = "https://ipfabric.io/"
"Changelog" = "https://gitlab.com/ip-fabric/integrations/ipf-dynamic-attributes/-/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.9"
ipfabric = "^7.2.0"
pyyaml = "^6.0.2"
pandas = "^2.2.3"
tomli = { version = "^2.0.0", python = "<3.11" }
xlsxwriter = { version = "^3.2.3", optional = true }

[tool.poetry.scripts]
ipf_dynamic_attributes = 'ipf_dynamic_attributes.entry:main'

[tool.poetry.extras]
excel = ["xlsxwriter"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.12.0"
flake8 = "^7.0"
black = "^25.1.0"
flake8-pyproject = "^1.2.3"
# pandas-stubs = "^2.3.0"  # Requires Py3.10

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | examples
    | internal_tools
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.flake8]
exlcude = [
    '.git',
    '.venv',
    'dist',
    'examples',
    'docs',
    'tests',
    'internal_tools'
]
max-complexity = 10
max-line-length = 127
count = true
statistics = true

[tool.pytest.ini_options]
addopts = "--cov=ipf_dynamic_attributes --cov-report term --cov-report xml:coverage.xml"
testpaths = ["tests"]
required_plugins = ["pytest-mock"]
