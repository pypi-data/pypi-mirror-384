name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        django-version: ['4.2', '5.0', '5.1']
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: '3.8'
            django-version: '5.0'
          - python-version: '3.8'
            django-version: '5.1'
          - python-version: '3.9'
            django-version: '5.0'
          - python-version: '3.9'
            django-version: '5.1'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.django-version }}-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.django-version }}-
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Django~=${{ matrix.django-version }}
          pip install -e .
          pip install pytest pytest-django pytest-cov responses

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=label_studio_sso --cov-report=xml --cov-report=term-missing -v

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10' && matrix.django-version == '5.1'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 label_studio_sso --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. GitHub editor is 127 chars wide
          flake8 label_studio_sso --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          black --check label_studio_sso tests

      - name: Check import ordering with isort
        run: |
          isort --check-only label_studio_sso tests
