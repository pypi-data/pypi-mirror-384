version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  gateway:
    build: .
    command: python -m gateway.main
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/microservices
      SERVICE_NAME: gateway
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

  user-service:
    build: .
    command: python -m services.user.main
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/microservices
      SERVICE_NAME: user-service
      SERVICE_PORT: 8001
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

  order-service:
    build: .
    command: python -m services.order.main
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/microservices
      SERVICE_NAME: order-service
      SERVICE_PORT: 8002
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

  inventory-service:
    build: .
    command: python -m services.inventory.main
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/microservices
      SERVICE_NAME: inventory-service
      SERVICE_PORT: 8003
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

  notification-service:
    build: .
    command: python -m services.notification.main
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres/microservices
      SERVICE_NAME: notification-service
      SERVICE_PORT: 8004
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app

volumes:
  postgres_data:
