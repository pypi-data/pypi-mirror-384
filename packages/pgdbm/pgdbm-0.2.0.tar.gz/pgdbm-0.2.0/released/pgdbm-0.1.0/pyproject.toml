[project]
name = "pgdbm"
version = "0.1.0"
description = "Production-ready async PostgreSQL utilities with connection pooling, migrations, and testing support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "Juan Reyero", email = "juan@juanreyero.com" }
]
maintainers = [
    { name = "Juan Reyero", email = "juan@juanreyero.com" }
]
keywords = ["async", "postgresql", "asyncpg", "database", "asyncio", "testing", "migrations"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: AsyncIO",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
requires-python = ">=3.9"
dependencies = [
    "asyncpg>=0.28.0",
    "pydantic>=2.0.0",
]

[project.urls]
Homepage = "https://juanreyero.com/open/pgdbm"
Documentation = "https://github.com/juanre/pgdbm"
Repository = "https://github.com/juanre/pgdbm"
Issues = "https://github.com/juanre/pgdbm/issues"
Changelog = "https://github.com/juanre/pgdbm/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "asyncpg-stubs>=0.28.0",
    "black>=24.0.0",
    "email-validator>=2.2.0",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "passlib[bcrypt]>=1.7.4",
    "pre-commit>=4.2.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "python-jose[cryptography]>=3.5.0",
    "python-multipart>=0.0.20",
    "ruff>=0.1.0",
    "uvicorn>=0.35.0",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["pgdbm", "app", "services", "shared"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
namespace_packages = true
show_error_codes = true
show_error_context = true
pretty = true
explicit_package_bases = true

# Exclude examples from main mypy run
exclude = [
    "examples/",
]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["pgdbm", "app", "services", "shared"]

[tool.coverage.run]
branch = true
source = ["src/pgdbm"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "-v",
  "--tb=short",
  "--strict-markers",
  "--color=yes",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as requiring database connection",
  "unit: marks tests as unit tests (no external dependencies)",
]
