.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH VIRT-FW-VARS "1" "October 2025" "virt-fw-vars 25.10" "User Commands"
.SH NAME
virt-fw-vars \- manual page for virt-fw-vars 25.10
.SH DESCRIPTION

The virt-fw-vars utility can print and modify UEFI variable stores.
Supported formats are standard edk2 (as used by ovmf and armvirt) and
aws.
.PP
usage: virt\-fw\-vars [\-h] [\-l LEVEL] [\-i FILE] [\-\-inplace FILE]
.TP
[\-\-extract\-certs] [\-d VAR] [\-\-set\-true VAR]
[\-\-set\-false VAR] [\-\-set\-json FILE] [\-\-set\-boot\-uri LINK]
[\-\-append\-boot\-filepath FILE] [\-\-set\-shim\-debug]
[\-\-set\-shim\-verbose] [\-\-set\-fallback\-verbose]
[\-\-set\-fallback\-no\-reboot] [\-\-set\-sbat\-level FILE]
[\-\-set\-pk GUID FILE] [\-\-add\-kek GUID FILE]
[\-\-add\-db GUID FILE] [\-\-add\-db\-hash GUID HASH]
[\-\-set\-dbx FILE] [\-\-add\-dbx FILE]
[\-\-add\-dbx\-cert GUID FILE] [\-\-add\-dbx\-hash GUID HASH]
[\-\-add\-mok GUID FILE] [\-\-add\-mok\-hash GUID HASH]
[\-\-enroll\-redhat] [\-\-enroll\-cert CERT]
[\-\-enroll\-generate CN] [\-\-enroll\-mgmt] [\-\-no\-microsoft]
[\-\-microsoft\-db {none,win11,win23,win+rom23,uefi11,uefi23,uefi+rom23,all}]
[\-\-microsoft\-kek {none,2011,2023,all}]
[\-\-distro\-keys DISTRO] [\-\-distro\-list] [\-\-sb] [\-p] [\-v]
[\-\-hashes] [\-x] [\-o FILE] [\-\-output\-aws FILE]
[\-\-output\-json FILE] [\-\-output\-auth DIR]
.PP
Print and modify EFI variable stores.
.SS "options:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-l\fR, \fB\-\-loglevel\fR LEVEL
set loglevel to LEVEL
.TP
\fB\-i\fR, \fB\-\-input\fR FILE
read edk2 or aws vars from FILE
.TP
\fB\-\-inplace\fR, \fB\-\-in\-place\fR FILE
modify FILE in place
.TP
\fB\-\-extract\-certs\fR
extract all certificates
.SS "Variable options:"
.TP
\fB\-d\fR, \fB\-\-delete\fR VAR
delete variable VAR, can be specified multiple times
.TP
\fB\-\-set\-true\fR VAR
set variable VAR to true, can be specified multiple
times
.TP
\fB\-\-set\-false\fR VAR
set variable VAR to false, can be specified multiple
times
.TP
\fB\-\-set\-json\fR FILE
set variables from json dump FILE
.SS "Boot configuration:"
.TP
\fB\-\-set\-boot\-uri\fR LINK
set network boot uri to LINK (once, using BootNext)
.TP
\fB\-\-append\-boot\-filepath\fR FILE
append boot entry for FILE (permanent, using
BootOrder)
.SS "shim.efi configuration:"
.TP
\fB\-\-set\-shim\-debug\fR
enable shim.efi debugging (pause for debugger attach)
.TP
\fB\-\-set\-shim\-verbose\fR
enable shim.efi verbose messages
.TP
\fB\-\-set\-fallback\-verbose\fR
enable fallback.efi verbose messages
.TP
\fB\-\-set\-fallback\-no\-reboot\fR
disable rebooting for fallback.efi
.TP
\fB\-\-set\-sbat\-level\fR FILE
set SbatLevel variable
.SS "Secure boot setup options:"
.TP
\fB\-\-set\-pk\fR, \fB\-\-set\-pk\-cert\fR GUID FILE
set PK to x509 cert, loaded in pem or der format from
FILE and with owner GUID
.TP
\fB\-\-add\-kek\fR, \fB\-\-add\-kek\-cert\fR GUID FILE
add x509 cert to KEK, loaded in pem or der format from
FILE and with owner GUID, can be specified multiple
times
.TP
\fB\-\-add\-db\fR, \fB\-\-add\-db\-cert\fR GUID FILE
add x509 cert to db, loaded in pem or der format from
FILE and with owner GUID, can be specified multiple
times
.TP
\fB\-\-add\-db\-hash\fR GUID HASH
add sha256 HASH to db, with owner GUID, can be
specified multiple times
.TP
\fB\-\-set\-dbx\fR FILE
initialize dbx with update from FILE
.TP
\fB\-\-add\-dbx\fR FILE
append dbx update from FILE
.TP
\fB\-\-add\-dbx\-cert\fR GUID FILE
add x509 cert to dbx, loaded in pem or der format from
FILE and with owner GUID, can be specified multiple
times
.TP
\fB\-\-add\-dbx\-hash\fR GUID HASH
add sha256 HASH to dbx, with owner GUID, can be
specified multiple times
.TP
\fB\-\-add\-mok\fR, \fB\-\-add\-mok\-cert\fR GUID FILE
add x509 cert to MokList, loaded in pem or der format
from FILE and with owner GUID, can be specified
multiple times
.TP
\fB\-\-add\-mok\-hash\fR GUID HASH
add sha256 HASH to MokList, with owner GUID, can be
specified multiple times
.SS "Secure boot convinience shortcuts:"
.TP
\fB\-\-enroll\-redhat\fR
enroll default certificates for redhat platform
.TP
\fB\-\-enroll\-cert\fR CERT
enroll using specified certificate
.TP
\fB\-\-enroll\-generate\fR CN
enroll using generated cert with given common name
.TP
\fB\-\-enroll\-mgmt\fR
enroll using external management guid
.TP
\fB\-\-no\-microsoft\fR
same as "\-\-microsoft\-db none"
.TP
\fB\-\-microsoft\-db\fR, \fB\-\-profile\fR {none,win11,win23,win+rom23,uefi11,uefi23,uefi+rom23,all}
choose microsoft db keys to enroll
.TP
\fB\-\-microsoft\-kek\fR {none,2011,2023,all}
choose microsoft KEK keys to enroll
.TP
\fB\-\-distro\-keys\fR DISTRO
add ca keys for DISTRO
.TP
\fB\-\-distro\-list\fR
list known distros
.TP
\fB\-\-sb\fR, \fB\-\-secure\-boot\fR
enable secure boot mode
.SS "Print options:"
.TP
\fB\-p\fR, \fB\-\-print\fR
print varstore
.TP
\fB\-v\fR, \fB\-\-verbose\fR
print varstore verbosely
.TP
\fB\-\-hashes\fR
print signature db sha256 hashes
.TP
\fB\-x\fR, \fB\-\-hexdump\fR
print variable hexdumps
.SS "Output options:"
.TP
\fB\-o\fR, \fB\-\-output\fR FILE
write edk2 or aws vars to FILE, using the same format
the \fB\-\-input\fR FILE has.
.TP
\fB\-\-output\-aws\fR FILE
write aws vars to FILE
.TP
\fB\-\-output\-json\fR FILE
write json dump to FILE
.TP
\fB\-\-output\-auth\fR DIR
write *.auth files to DIR
.SH EXAMPLES

.TP
Print variable store.
virt-fw-vars --input ${guest}_VARS.fd \\
             --print --verbose

.TP
Enroll default (microsoft) secure boot certificates
virt-fw-vars --input OVMF_VARS.fd \\
             --output OVMF_VARS.secboot.fd \\
             --enroll-redhat \\
             --secure-boot
.SH AUTHOR

Gerd Hoffmann <kraxel@redhat.com>
