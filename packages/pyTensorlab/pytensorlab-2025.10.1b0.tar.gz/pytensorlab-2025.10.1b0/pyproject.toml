[project]
name = "pyTensorlab"
version = "2025.10.1beta"
description = "A Python package for tensor computations."
authors = [
    {name="Nico Vervliet", email="Nico.Vervliet@kuleuven.be"},
    {name="Stijn Hendrickx"},
    {name="RaphaÃ«l Widdershoven", email="Raphael.Widdershoven@kuleuven.be"},
    {name="Nithin Govindarajan", email="Nithin.Govindarajan@kuleuven.be"},
    {name="Shakir Sofi", email="shakirshowkat.sofi@kuleuven.be"},        
    {name="Lieven De Lathauwer", email="Lieven.DeLathauwer@kuleuven.be"},    
]
maintainers = [
    {name="Nico Vervliet", email="Nico.Vervliet@kuleuven.be"},
]
readme = "README.md"
requires-python = ">=3.10"
keywords = [
	 "tensor",
	 "array",
	 "tensor decomposition",
	 "visualization",
	 "complex optimization"
]
dynamic = [ "classifiers" ]
dependencies = [
	"numpy>=2.0",
	"scipy>=1.13",
	"vedo>=2023.4.5",
	"multipledispatch>=0.6",
	"pymanopt>=2.0.1",
	"typing-extensions>=4.3.0",
	"numba>=0.57.0",
]

[tool.poetry]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Typing :: Typed",
]

[project.urls]
homepage = "https://www.pytensorlab.net/"
repository = "https://gitlab.esat.kuleuven.be/tensorgroup-public/pytensorlab-public"
documentation = "https://www.pytensorlab.net/docs/"
"Bug Tracker" = "https://gitlab.esat.kuleuven.be/tensorgroup-public/pytensorlab-public/-/issues"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
pytest-black = ">=0.3.12"
black = ">=22.6.0"
coverage = {extras = ["toml"], version = ">=6.4.4"}
pytest-cov = ">=3.0.0"
python-lsp-server = {extras = ["pylint", "rope", "pydocstyle", "flake8"], version = ">=1.5.0"}
mypy = ">=1.1.1"
python-lsp-black = ">=1.2.1"
pylsp-mypy = ">=0.6.2"
numpydoc = ">=1.4.0"
sphinx-autodoc-typehints = ">=1.19.2"
pydata-sphinx-theme = ">=0.13.0"
autograd = "^1.4"
debugpy = ">=1.6.4"
pyright = ">=1.1.332"
importlib-metadata = "^5.1.0"
pytest-mypy = ">=0.10.2"
matplotlib = "^3.7.1"
setuptools = ">=65.6.3"
flake8-black = ">=0.3.6"
virtualenv = ">=20.21.0"
codespell = ">=2.2.4"
tomli = ">=2.0.1"
ruff = ">=0.0.267"
ruff-lsp = ">=0.0.29"
sphinx-math-dollar = "^1.2.1"
sphinxcontrib-bibtex = "^2.6.2"
sphinx-copybutton = "^0.5.2"
ipykernel = "^6.29.5"
basedpyright = "^1.31.2"
sphobjinv = "^2.3.1.3"
notebook = "^7.4.7"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.coverage.run]
source = ["pytensorlab"]
omit = [".*",
     "*/site-packages/*",
     "pytensorlab/visualization/slice3.py",
     "pytensorlab/visualization/voxel3.py",
     "pytensorlab/_external/_.*.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 90
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't include ellipsis:
    "^\\s*\\.\\.\\.\\s*#?.*$",
]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
implicit_reexport = false

[[tool.mypy.overrides]]
module = ["scipy.*", "scipy.linalg.*", "pytest.*", "vedo.*"]
ignore_missing_imports = true


[tool.pylsp-mypy]
enabled = true
live_mode = false
strict = true
# dmypy = false


[tool.pyright]
include = ["pytensorlab"]
exclude = ["**/node_modules", "**/__pycache__", ".git", ".asv"]
reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = "warning"
stubPath = "pytensorlab/stubs"

[tool.pylint.format]
max-line-length = 88

[tool.pydocstyle]
convention = "numpy"
ignore = "D105"

[tool.ruff]
lint.select = ["E", "F", "D"]
line-length = 88
lint.ignore = [
  "D102", "D104", "D105",
  "B905", # no strict=False
  "B904", # raise ... from ... warning (temp disable)
  "B028", # stacklevel for warning (temp disable)
]
lint.extend-select = [
  "UP",  # pyupgrade
  "NPY", # NumPy specific rules
  "I", # isort
  "T20", # flake-8 print
  "B", # flake8 bugbear
]
target-version = "py310"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"pytensorlab/visualization/plot_*.py" = ["E402"]
"pytensorlab/visualization/configure_matplotlib.py" = ["T201"]

[tool.codespell]
skip = '*.po,*.ts,./tests'
count = ''
quiet-level = 3
ignore-words = "codespell_ignore.txt"

[tool.pytest.ini_options]
# addopts = [
#     "--import-mode=importlib",
# ]
pythonpath = [".", "pytensorlab",]
testpaths = ["tests",]

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"

