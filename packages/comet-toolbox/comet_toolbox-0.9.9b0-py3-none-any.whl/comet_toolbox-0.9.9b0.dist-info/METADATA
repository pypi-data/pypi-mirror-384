Metadata-Version: 2.4
Name: comet-toolbox
Version: 0.9.9b0
Summary: Dynamic functional connectivity toolbox for multiverse analysis
Project-URL: Homepage, https://github.com/mibur1/comet
Project-URL: Issues, https://github.com/mibur1/comet/issues
Author-email: Micha Burkhardt <micha.burkhardt@uol.de>
License-Expression: MIT
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: <3.12,>=3.11
Requires-Dist: bctpy>=0.6.1
Requires-Dist: hmmlearn>=0.3.3
Requires-Dist: importlib-resources>=6.4.0
Requires-Dist: ipykernel>=6.29.3
Requires-Dist: ipywidgets>=8.1.5
Requires-Dist: jinja2>=3.1.2
Requires-Dist: joblib>=1.3.2
Requires-Dist: ksvd>=0.0.3
Requires-Dist: mat73>=0.65
Requires-Dist: matplotlib>=3.8.2
Requires-Dist: networkx>=3.2.1
Requires-Dist: nibabel>=5.2.0
Requires-Dist: nilearn>=0.10.2
Requires-Dist: notebook>=7.0.6
Requires-Dist: numba>=0.58.1
Requires-Dist: numpy>=1.26.2
Requires-Dist: pandas>=2.1.3
Requires-Dist: pybids>=0.16.4
Requires-Dist: pycwt>=0.4.0b0
Requires-Dist: pydfc>=1.0.4
Requires-Dist: pyqt6-tools>=6.4.2
Requires-Dist: pytest>=8.2.2
Requires-Dist: qdarkstyle>=3.2.3
Requires-Dist: scikit-learn>=1.3.2
Requires-Dist: scipy>=1.11.4
Requires-Dist: seaborn>=0.13.0
Requires-Dist: statsmodels>=0.14.0
Requires-Dist: tqdm-joblib>=0.0.3
Requires-Dist: tqdm>=4.66.1
Provides-Extra: doc
Requires-Dist: nbsphinx>=0.9.4; extra == 'doc'
Requires-Dist: sphinx-autodoc-typehints>=1.14.0; extra == 'doc'
Requires-Dist: sphinx-rtd-theme>=1.0.0; extra == 'doc'
Requires-Dist: sphinx>=5.3.0; extra == 'doc'
Description-Content-Type: text/markdown

<div style="padding-top:1em; padding-bottom: 0.5em;">
<img src="src/comet/data/img/logo.svg" width =130 align="right" />
</div>

# Comet - A toolbox for dynamic functional connectivity and multiverse analysis

[![DOI](https://img.shields.io/badge/DOI-10.1101%2F2024.01.21.576546-blue?logo=arxiv)](https://doi.org/10.1101/2024.01.21.576546) [![PyPI](https://img.shields.io/badge/PyPI-comet--toolbox-orange?logo=PyPI)](https://pypi.org/project/comet-toolbox/)
[![Codacy Badge](https://app.codacy.com/project/badge/Grade/2e766745c5c04d4786ea28f7135c193e)](https://app.codacy.com/gh/mibur1/comet/dashboard?utm_source=gh&utm_medium=referral&utm_content=&utm_campaign=Badge_grade) [![Documentation Status](https://readthedocs.org/projects/comet-toolbox/badge/?version=latest)](https://comet-toolbox.readthedocs.io/en/latest/) [![Coverage Status](https://coveralls.io/repos/github/mibur1/dfc-multiverse/badge.svg?branch=main)](https://coveralls.io/github/mibur1/dfc-multiverse?branch=main)


## About the toolbox

Please refer to the **[documentation](https://comet-toolbox.readthedocs.io/en/latest/)** for detailed information about the toolbox and the current features. The following README will only provide a very brief overview.

Please also note that the package is under active development. If you have any questions, suggestions, or want to contribute, please don't hesitate to reach out on GitHub or via the email address in the [`pyproject.toml`](https://github.com/mibur1/dfc-multiverse/blob/main/pyproject.toml) file. Some features are also not yet tested, so there will be bugs (the question is just how many).


### Installation and usage

As Comet contains a fair amount of dependencies, it should be installed in a dedicated Python environment (e.g. [micromamba](https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html) or another environment manager of your choice) to avoid version conflicts.

```
micromamba create -n comet python==3.11
micromamba activate comet
pip install comet-toolbox
```

Usage of the toolbox is then possible through either the GUI:

```
comet-gui
```

or through the scripting API:

```{code}python
from comet import connectivity, graph, multiverse
```

A comprehensive set of usage examples are provided in the **[documentation](https://github.com/mibur1/dfc-multiverse/tree/main/tutorials)**.

### Code structure

```{code}   
/
├─ src/comet/         ← Parent directory
│  ├─ connectivity.py ← Functional connectivity module
│  ├─ graph.py        ← Graph analysis module
│  ├─ multiverse.py   ← Multiverse analysis module
│  ├─ gui.py          ← Graphical user interface
│  ├─ utils.py        ← Miscellaneous helper functions
│  ├─ cifti.py        ← CIFTI related functions
│  └─ bids.py         ← BIDS related functions (placeholder)
├─ docs/              ← Documentation
├─ tutorials/         ← Example jupyter notebooks
├─ tests/             ← Unit tests
├─ pyproject.toml     ← Packaging & dependencies
└─ README.md          ← Project overview
```