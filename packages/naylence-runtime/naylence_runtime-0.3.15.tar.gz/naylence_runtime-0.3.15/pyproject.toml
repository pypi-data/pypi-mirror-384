[project]
name = "naylence-runtime"
version = "0.3.15"
description = "Naylence Runtime"
authors = [
    {name = "naylencedev@gmail.com"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.12"

keywords = ["messaging", "ai", "agents", "platform", "naylence"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

[project.urls]
Homepage = "https://github.com/naylence/naylence-runtime-python"
Repository = "https://github.com/naylence/naylence-runtime-python"
"Bug Tracker" = "https://github.com/naylence/naylence-runtime-python/issues"
Documentation = "https://github.com/naylence/naylence-runtime-python#readme"

[tool.poetry]
packages = [
  { include = "naylence", from = "src"},
]

[tool.poetry.dependencies]
pyyaml = "^6.0.2"
websockets = "^15.0.1"
aiohttp = "^3.11.18"
httpx = "^0.28.1"
structlog = "^25.3.0"
cryptography = "^45.0.6"
pyjwt = "^2.10.1"
naylence-core = "^0.3.0"
fastapi = "^0.116.1"
uvicorn = "^0.35.0"
python-multipart = "^0.0.20"


[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
pyright = "^1.1.401"
ruff = "^0.11.10"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
hypothesis = "^6.131.30"
coverage = "^7.9.2"
pytest-cov = "^6.2.1"
twine = "^6.1.0"
pytest-docker = "^3.2.0"
docker = "^7.1.0"
requests = "^2.32.0"

[tool.poetry.group.mcp.dependencies]
mcp = "^1.9.1"

# Package sources: allow fallback to TestPyPI for packages that
# don't exist on PyPI yet (e.g., naylence-factory while in early testing).

[tool.poetry.group.observability.dependencies]
opentelemetry-sdk = "^1.36.0"
opentelemetry-exporter-otlp = "^1.36.0"

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple"
priority = "supplemental"

[tool.pyright]
include = ["src/naylence"]
venvPath = "."
venv = ".venv"
standard = ["src/naylence/**/*.py"]

[tool.black]
line-length = 108

[tool.ruff.lint]
select = ["C4", "E", "F", "I", "PERF", "UP"]
ignore = ["PERF203", "UP006", "UP007", "UP035"]

[tool.ruff.lint.per-file-ignores]
"src/naylence/fame/service/__init__.py" = ["F401"]

[tool.ruff]
line-length = 108
target-version = "py310"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ".:tests"
pythonpath = "."
filterwarnings = [
    "ignore::DeprecationWarning:websockets.exceptions",
    "ignore::DeprecationWarning:websockets.legacy",
    "ignore::DeprecationWarning:uvicorn.protocols.websockets.websockets_impl",
    "ignore::pytest.PytestConfigWarning",
    "ignore:coroutine.*was never awaited:RuntimeWarning"
]
addopts = [
    "--cov=src/naylence",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-report=term-missing",
    "--cov-branch",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src/naylence"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*",
    "*/venv/*",
    "*/.venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.",
    "pass",
    "TYPE_CHECKING",
]
show_missing = true
precision = 2
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.entry-points."naylence.FameFabricFactory"]
InProcessFameFabric = "naylence.fame.fabric.in_process_fame_fabric_factory:InProcessFameFabricFactory"

[project.entry-points."naylence.NodeLikeFactory"]
Node = "naylence.fame.node.node_factory:NodeFactory"
Sentinel = "naylence.fame.sentinel.sentinel_factory:SentinelFactory"

[project.entry-points."naylence.FameServiceFactory"]
InMemorySinkService = "naylence.fame.service.in_memory_sink_service:InMemorySinkServiceFactory"
DefaultMCPHostService = "naylence.fame.mcp.default_mcp_host_service_factory:DefaultMCPHostServiceFactory"

[project.entry-points."naylence.ConnectorFactory"]
WebSocketConnector = "naylence.fame.connector.websocket_connector_factory:WebSocketConnectorFactory"
HttpStatelessConnector = "naylence.fame.connector.http_stateless_connector_factory:HttpStatelessConnectorFactory"

[project.entry-points."naylence.TransportListenerFactory"]
HttpListener = "naylence.fame.connector.http_listener_factory:HttpListenerFactory"
WebSocketListener = "naylence.fame.connector.websocket_listener_factory:WebSocketListenerFactory"

[project.entry-points."naylence.HttpServerFactory"]
DefaultHttpServer = "naylence.fame.connector.default_http_server_factory:DefaultHttpServerFactory"

[project.entry-points."naylence.TransportProvisionerFactory"]
WebSocketTransportProvisioner = "naylence.fame.transport.websocket_transport_provisioner:WebSocketTransportProvisionerFactory"

[project.entry-points."naylence.AdmissionClientFactory"]
WelcomeServiceClient = "naylence.fame.node.admission.welcome_service_client_factory:WelcomeServiceClientFactory"
DirectAdmissionClient = "naylence.fame.node.admission.direct_admission_client_factory:DirectAdmissionClientFactory"
NoopAdmissionClient = "naylence.fame.node.admission.noop_admission_client_factory:NoopAdmissionClientFactory"
AdmissionProfile = "naylence.fame.node.admission.admission_profile_factory:AdmissionProfileFactory"

[project.entry-points."naylence.NodePlacementStrategyFactory"]
StaticNodePlacementStrategy = "naylence.fame.placement.static_node_placement_strategy_factory:StaticNodePlacementStrategyFactory"

[project.entry-points."naylence.LoadBalancingStrategyFactory"]
RandomLoadBalancingStrategy = "naylence.fame.sentinel.load_balancing.random_load_balancing_strategy_factory:RandomLoadBalancingStrategyFactory"
RoundRobinLoadBalancingStrategy = "naylence.fame.sentinel.load_balancing.round_robin_load_balancing_strategy_factory:RoundRobinLoadBalancingStrategyFactory"
HRWLoadBalancingStrategy = "naylence.fame.sentinel.load_balancing.hrw_load_balancing_strategy_factory:HRWLoadBalancingStrategyFactory"
StickyLoadBalancingStrategy = "naylence.fame.sentinel.load_balancing.sticky_load_balancing_strategy_factory:StickyLoadBalancingStrategyFactory"
CompositeLoadBalancingStrategy = "naylence.fame.sentinel.load_balancing.composite_load_balancing_strategy_factory:CompositeLoadBalancingStrategyFactory"
LoadBalancingProfile = "naylence.fame.sentinel.load_balancing.load_balancing_profile_factory:LoadBalancingProfileFactory"

[project.entry-points."naylence.WelcomeServiceFactory"]
DefaultWelcomeService = "naylence.fame.welcome.default_welcome_service_factory:DefaultWelcomeServiceFactory"

[project.entry-points."naylence.TokenIssuerFactory"]
NoopTokenIssuer = "naylence.fame.security.auth.noop_token_issuer_factory:NoopTokenIssuerFactory"
JWTTokenIssuer = "naylence.fame.security.auth.jwt_token_issuer_factory:JWTTokenIssuerFactory"

[project.entry-points."naylence.TokenVerifierFactory"]
NoopTokenVerifier = "naylence.fame.security.auth.noop_token_verifier_factory:NoopTokenVerifierFactory"
JWTTokenVerifier = "naylence.fame.security.auth.jwt_token_verifier_factory:JWTTokenVerifierFactory"
JWKSJWTTokenVerifier = "naylence.fame.security.auth.jwks_jwt_token_verifier_factory:JWKSTokenVerifierFactory"
SharedSecretTokenVerifier = "naylence.fame.security.auth.shared_secret_token_verifier_factory:SharedSecretTokenVerifierFactory"

[project.entry-points."naylence.RoutingPolicyFactory"]
HybridPathRoutingPolicy = "naylence.fame.sentinel.hybrid_path_routing_policy_factory:HybridPathRoutingPolicyFactory"
CapabilityAwareRoutingPolicy = "naylence.fame.sentinel.capability_aware_routing_policy_factory:CapabilityAwareRoutingPolicyFactory"
CompositeRoutingPolicy = "naylence.fame.sentinel.composite_routing_policy_factory:CompositeRoutingPolicyFactory"

[project.entry-points."naylence.EnvelopeVerifierFactory"]
EdDSAEnvelopeVerifier = "naylence.fame.security.signing.eddsa_envelope_verifier_factory:EdDSAEnvelopeVerifierFactory"

[project.entry-points."naylence.EnvelopeSignerFactory"]
EdDSAEnvelopeSigner = "naylence.fame.security.signing.eddsa_envelope_signer_factory:EdDSAEnvelopeSignerFactory"

[project.entry-points."naylence.KeyManagerFactory"]
DefaultKeyManager = "naylence.fame.security.keys.default_key_manager_factory:DefaultKeyManagerFactory"

[project.entry-points."naylence.KeyStoreFactory"]
InMemoryKeyStore = "naylence.fame.security.keys.in_memory_key_store_factory:InMemoryKeyStoreFactory"
StorageBackedKeyStore = "naylence.fame.security.keys.storage_backed_keystore_factory:StorageBackedKeyStoreFactory"

[project.entry-points."naylence.SecurityPolicyFactory"]
DefaultSecurityPolicy = "naylence.fame.security.policy.default_security_policy_factory:DefaultSecurityPolicyFactory"
NoSecurityPolicy = "naylence.fame.security.policy.no_security_policy_factory:NoSecurityPolicyFactory"

[project.entry-points."naylence.CredentialProviderFactory"]
NoneCredentialProvider = "naylence.fame.security.credential.credential_provider_factory:NoneCredentialProviderFactory"
StaticCredentialProvider = "naylence.fame.security.credential.credential_provider_factory:StaticCredentialProviderFactory"
EnvCredentialProvider = "naylence.fame.security.credential.credential_provider_factory:EnvCredentialProviderFactory"
PromptCredentialProvider = "naylence.fame.security.credential.credential_provider_factory:PromptCredentialProviderFactory"

[project.entry-points."naylence.TokenProviderFactory"]
NoneTokenProvider = "naylence.fame.security.auth.none_token_provider_factory:NoneTokenProviderFactory"
SharedSecretTokenProvider = "naylence.fame.security.auth.shared_secret_token_provider_factory:SharedSecretTokenProviderFactory"
OAuth2ClientCredentialsTokenProvider = "naylence.fame.security.auth.oauth2_client_credentials_token_provider_factory:OAuth2ClientCredentialsTokenProviderFactory"
StaticTokenProvider = "naylence.fame.security.auth.static_token_provider_factory:StaticTokenProviderFactory"

[project.entry-points."naylence.AuthInjectionStrategyFactory"]
NoAuth = "naylence.fame.security.auth.no_auth_injection_strategy_factory:NoAuthInjectionStrategyFactory"
BearerTokenHeaderAuth = "naylence.fame.security.auth.bearer_token_header_auth_injection_strategy_factory:BearerTokenHeaderAuthInjectionStrategyFactory"
WebSocketSubprotocolAuth = "naylence.fame.security.auth.websocket_subprotocol_auth_injection_strategy_factory:WebSocketSubprotocolAuthInjectionStrategyFactory"
QueryParamAuth = "naylence.fame.security.auth.query_param_auth_injection_strategy_factory:QueryParamAuthInjectionStrategyFactory"

[project.entry-points."naylence.AuthorizerFactory"]
DefaultAuthorizer = "naylence.fame.security.auth.default_authorizer_factory:DefaultAuthorizerFactory"
NoopAuthorizer = "naylence.fame.security.auth.noop_authorizer_factory:NoopAuthorizerFactory"
SharedSecretAuthorizer = "naylence.fame.security.auth.shared_secret_authorizer_factory:SharedSecretAuthorizerFactory"
OAuth2Authorizer = "naylence.fame.security.auth.oauth2_authorizer_factory:OAuth2AuthorizerFactory"

[project.entry-points."naylence.SecurityManagerFactory"]
DefaultSecurityManager = "naylence.fame.security.default_security_manager_factory:DefaultSecurityManagerFactory"
SecurityProfile = "naylence.fame.security.node_security_profile_factory:SecurityProfileFactory"
NoSecurityManager = "naylence.fame.security.no_security_manager_factory:NoSecurityManagerFactory"

[project.entry-points."naylence.StorageProviderFactory"]
InMemoryStorageProvider = "naylence.fame.storage.in_memory_storage_provider_factory:InMemoryStorageProviderFactory"
SQLiteStorageProvider = "naylence.fame.storage.sqlite_storage_provider_factory:SQLiteStorageProviderFactory"
StorageProfile = "naylence.fame.storage.storage_profile_factory:StorageProfileFactory"

[project.entry-points."naylence.LoadBalancerStickinessManagerFactory"]
SimpleLoadBalancerStickinessManager = "naylence.fame.stickiness.simple_load_balancer_stickiness_manager_factory:SimpleLoadBalancerStickinessManagerFactory"

[project.entry-points."naylence.DeliveryTrackerFactory"]
DefaultDeliveryTracker = "naylence.fame.delivery.default_delivery_tracker_factory:DefaultDeliveryTrackerFactory"

[project.entry-points."naylence.AttachmentKeyValidatorFactory"]
NoopKeyValidator = "naylence.fame.security.keys.noop_key_validator_factory:NoopKeyValidatorFactory"

[project.entry-points."naylence.TraceEmitterFactory"]
NoopTraceEmitter = "naylence.fame.telemetry.noop_trace_emitter_factory:NoopTraceEmitterFactory"
OpenTelemetryTraceEmitter = "naylence.fame.telemetry.open_telemetry_trace_emitter_factory:OpenTelemetryTraceEmitterFactory"
TraceEmitterProfile = "naylence.fame.telemetry.trace_emitter_profile_factory:TraceEmitterProfileFactory"

[project.entry-points."naylence.DeliveryPolicyFactory"]
AtLeastOnceDeliveryPolicy = "naylence.fame.delivery.at_least_once_delivery_policy_factory:AtLeastOnceDeliveryPolicyFactory"
AtMostOnceDeliveryPolicy = "naylence.fame.delivery.at_most_once_delivery_policy_factory:AtMostOnceDeliveryPolicyFactory"
DeliveryProfile = "naylence.fame.delivery.delivery_profile_factory:DeliveryProfileFactory"