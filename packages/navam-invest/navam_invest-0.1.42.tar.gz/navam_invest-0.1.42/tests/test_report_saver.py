"""Tests for report saving utilities."""

import os
import tempfile
from pathlib import Path

from navam_invest.utils import save_agent_report, save_investment_report


def test_save_agent_report_basic():
    """Test basic agent report saving."""
    with tempfile.TemporaryDirectory() as tmpdir:
        content = "# Test Report\n\nThis is a test report with some content."
        report_type = "test"

        filepath = save_agent_report(
            content=content,
            report_type=report_type,
            working_dir=tmpdir,
        )

        # Check file was created
        assert os.path.exists(filepath)
        assert "test_" in filepath
        assert filepath.endswith(".md")

        # Check content
        with open(filepath, "r") as f:
            saved_content = f.read()

        assert "Test Report" in saved_content
        assert "test report with some content" in saved_content
        assert "*Report generated by Navam Invest*" in saved_content


def test_save_agent_report_with_context():
    """Test agent report saving with context."""
    with tempfile.TemporaryDirectory() as tmpdir:
        content = "Analysis of AAPL stock shows positive trends."
        report_type = "equity_research"
        context = {"symbol": "AAPL", "query": "Analyze AAPL"}

        filepath = save_agent_report(
            content=content,
            report_type=report_type,
            context=context,
            working_dir=tmpdir,
        )

        # Check filename includes context
        assert "aapl" in filepath.lower()
        assert "equity_research" in filepath

        # Check content includes metadata
        with open(filepath, "r") as f:
            saved_content = f.read()

        assert "AAPL" in saved_content
        assert "Analyze AAPL" in saved_content


def test_save_investment_report():
    """Test investment analysis report saving."""
    with tempfile.TemporaryDirectory() as tmpdir:
        symbol = "TSLA"
        final_recommendation = "BUY with high confidence based on analysis."
        quill_analysis = "Strong fundamentals with P/E ratio of 20."
        macro_context = "Current macro environment supports tech growth."

        filepath = save_investment_report(
            symbol=symbol,
            final_recommendation=final_recommendation,
            quill_analysis=quill_analysis,
            macro_context=macro_context,
            working_dir=tmpdir,
        )

        # Check file was created
        assert os.path.exists(filepath)
        assert "TSLA_analysis" in filepath
        assert filepath.endswith(".md")

        # Check all sections are in content
        with open(filepath, "r") as f:
            saved_content = f.read()

        assert "Investment Analysis Report: TSLA" in saved_content
        assert "Fundamental Analysis (Quill)" in saved_content
        assert "Strong fundamentals" in saved_content
        assert "Macro Validation (Macro Lens)" in saved_content
        assert "Current macro environment" in saved_content
        assert "Final Recommendation" in saved_content
        assert "BUY with high confidence" in saved_content
        assert "*Report generated by Navam Invest*" in saved_content


def test_reports_directory_creation():
    """Test that reports directory is created automatically."""
    with tempfile.TemporaryDirectory() as tmpdir:
        # Verify reports dir doesn't exist yet
        reports_dir = Path(tmpdir) / "reports"
        assert not reports_dir.exists()

        # Save a report
        save_agent_report(
            content="Test content",
            report_type="test",
            working_dir=tmpdir,
        )

        # Check reports directory was created
        assert reports_dir.exists()
        assert reports_dir.is_dir()


def test_save_investment_report_minimal():
    """Test investment report with only final recommendation."""
    with tempfile.TemporaryDirectory() as tmpdir:
        symbol = "MSFT"
        final_recommendation = "HOLD - Wait for better entry point."

        filepath = save_investment_report(
            symbol=symbol,
            final_recommendation=final_recommendation,
            working_dir=tmpdir,
        )

        # Check file was created
        assert os.path.exists(filepath)

        # Check content
        with open(filepath, "r") as f:
            saved_content = f.read()

        assert "Investment Analysis Report: MSFT" in saved_content
        assert "Final Recommendation" in saved_content
        assert "HOLD - Wait for better entry point" in saved_content
        # Should not have analysis sections since they weren't provided
        assert saved_content.count("---") >= 2  # At least header and footer separators
