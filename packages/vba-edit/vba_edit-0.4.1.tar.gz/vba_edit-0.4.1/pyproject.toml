[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vba_edit"
version = "0.4.1"
description = "Enable seamless MS Office VBA code editing in preferred editor or IDE (facilitating the use of coding assistants and version control workflows)"
authors = [{ name = "Markus Killer", email = "m.killer@langui.ch" }]
readme = "README.md"
requires-python = ">=3.9" # Minimum Python version
license = "BSD-3-Clause"
license-files = ["LICENSE", "LICENSES/*.txt", "AUTHORS.md", "SECURITY.md"]
keywords = ["vba", "excel", "word", "office", "automation", "macro", "PyPI"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Office/Business :: Office Suites",
]
dependencies = [
    "chardet",
    "pywin32 >= 224;platform_system=='Windows'",
    "watchfiles>=1.1.1",                         # replaced watchgod; 1.1.1+ required for Python 3.14
    "tomli>=2.0.0; python_version < '3.11'",
    "rich>=13.0.0",                              # Modern terminal output with colors
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "pytest",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.0.0",
    "twine",
    "wheel",
    "pyinstaller",
]
all = ["xlwings>=0.28.0"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[project.scripts]
word-vba = "vba_edit.word_vba:main"
excel-vba = "vba_edit.excel_vba:main"
access-vba = "vba_edit.access_vba:main"
powerpoint-vba = "vba_edit.powerpoint_vba:main"


[project.urls]
Homepage = "https://langui.ch/current-projects/vba-edit/"
Documentation = "https://github.com/markuskiller/vba-edit/blob/main/README.md"
Source = "https://github.com/markuskiller/vba-edit"
Changelog = "https://github.com/markuskiller/vba-edit/blob/main/CHANGELOG.md"

[tool.black]
line-length = 120
target-version = ['py313'] # Target Python version

[tool.ruff]
line-length = 120
target-version = 'py313'
fix = true
show-fixes = true
respect-gitignore = true
src = ["src", "vba_edit", "tests"]

[tool.ruff.lint]
ignore = [] # Remove F401

[tool.ruff.lint.per-file-ignores]
"tests/**/conftest.py" = ["F401", "E402"]
"tests/**/helpers.py" = ["F401"]
"tests/**/test_*.py" = [
    "F401",
    "F811",
] # Allow fixture imports in all test files

[tool.isort]
profile = "black"
line_length = 120
src_paths = ["src", "vba_edit", "tests"]


# MyPy Type Checker Configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "win32com.*",
    "pythoncom.*",
    "pywintypes.*",
    "watchfiles.*", # replaced watchgod
]
ignore_missing_imports = true

# Pytest Configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
timeout = 30 # 30 seconds - increased for GitHub Actions reliability (was 5)
timeout_method = "thread"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore:.*Could not close.*:Warning", # does not suppress the warning (kept for reference)
    "ignore:.*Could not quit.*:Warning",  # does not suppress the warning (kept for reference)
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "timeout: override default timeout for specific tests",
]

# Coverage Configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 Configuration (in pyproject.toml format for compatibility)
[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".env",
]
