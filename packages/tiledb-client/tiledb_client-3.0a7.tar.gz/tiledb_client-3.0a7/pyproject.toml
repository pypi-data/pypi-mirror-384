[project]
name = "tiledb-client"
description = "TileDB Python client"
readme = "./README.md"
dynamic = ["version"]
requires-python = ">=3.9"

dependencies = [
    "attrs>=21.4.0",
    "certifi",
    "importlib-metadata",
    "jsonschema",
    "packaging",
    "pandas>=1.2.4",
    "pyarrow>=3.0.0",
    "python-dateutil",
    "six>=1.10",
    # Not directly used on the client, but some server-side environments have
    # tblib transitively enabled, so this is needed for unpickling.
    "tblib>=1.7",
    "tiledb>=0.34.1",
    # This is a special version of tiledb-cloud that has no use other
    # than blocking other versions of tiledb-cloud from being
    # installed in the same environment as tiledb-client.
    "tiledb-cloud==0.0.1",
    "typing-extensions",
    "urllib3>=1.26",
]

[project.optional-dependencies]
viz-tiledb = ["networkx>=2", "pydot<3", "tiledb-plot-widget>=0.1.7"]
viz-plotly = ["networkx>=2", "plotly>=4", "pydot<3"]
all = ["networkx>=2", "plotly>=4", "pydot<3", "tiledb-plot-widget>=0.1.7"]
life-sciences = ["tiledbsoma>=1.17.1"]
docs = ["quartodoc"]
dev = ["black", "pytest", "ruff"]
tests = [
    "boto3",
    "cloudpickle",
    "pytest-cov",
    "pytest-explicit",
    "pytest-split",
    "xarray",
]

[project.urls]
homepage = "https://tiledb.com"
repository = "https://github.com/TileDB-Inc/TileDB-Client-Py"

[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm>=6"]

[tool.pytest.ini_options]
explicit-only = ["bigfiles", "geospatial", "remote", "server", "soma", "sql", "vcf"]
markers = [
    "argo: tests requiring argo workflow infra (DAG batch mode)",
    "bigfiles: tests that create and upload really big files",
    "geospatial: tests that require the geospatial libraries",
    "remote: tests requiring remote execution infra",
    "server: tests that require Carrara server",
    "slow: tests that run in > 1 second",
    "smoke: one of a few select 'Smoke' tests",
    "soma: tests of SOMA data ingestion",
    "sql: tests of serverless SQL",
    "udf: tests that require a server UDF container",
    "vcf: VCF tests that run on TileDB Cloud",
]
norecursedirs = ["tiledb/cloud", "tiledb/client"]

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/tiledb/client/version.py"

[tool.ruff.lint]
extend-select = ["I"]
exclude = ["src/tiledb/client/_vendor"]

[tool.ruff.lint.isort]
known-first-party = ["tiledb"]
force-single-line = true
single-line-exclusions = ["typing", "typing_extensions"]

[tool.ruff.lint.per-file-ignores]
# Generated files have long line lengths.
"src/tiledb/client/_common/api_v2/*" = ["E501"]
"src/tiledb/client/_common/api_v4/*" = ["E501"]
"src/tiledb/client/rest_api/*" = ["E501", "E721", "F821"]
"src/tiledb/client/_common/*" = ["E721", "F821"]
"src/tiledb/client/_vendor/cloudpickle/*" = ["E721", "E731", "F811", "F821", "F841"]
"src/tiledb/client/array.py" = ["E721"]
"src/tiledb/client/dag/dag.py" = ["E721"]
"src/tiledb/client/udf.py" = ["E721"]
"src/tiledb/client/vcf/ingestion.py" = ["E721"]
"tests/test_dag.py" = ["E721"]

# Certain tests have long JSON strings and deep structures.
"tests/taskgraphs/test_builder.py" = ["E501"]
"tests/test_geospatial.py" = ["E501"]

[tool.black]
force-exclude = 'src\/tiledb\/client\/_vendor\/.*'
