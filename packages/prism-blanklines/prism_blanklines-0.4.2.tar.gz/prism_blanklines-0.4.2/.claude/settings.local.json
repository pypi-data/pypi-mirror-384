{
  "permissions": {
    "allow": [
      "Bash(python3:*)",
      "Bash(ruff check:*)",
      "Bash(python -m pytest tests/test_analyzer.py::TestFileAnalyzer::testGetIndentLevel -v)",
      "Bash(python -m pytest tests/test_integration.py::TestIntegration::testBasicBlankLineRules -v)",
      "Bash(python -m pytest tests/test_integration.py::TestIntegration::testSecondaryClauseRules -v)",
      "Bash(python -m pytest tests/test_integration.py::TestIntegration::testCommentBreakRules -v)",
      "Bash(python -m pytest tests/test_integration.py::TestIntegration::testMultilineStatements -v)",
      "Bash(python:*)",
      "Bash(PYTHONPATH=src python debug_analyzer.py)",
      "Bash(PYTHONPATH=src python -m pytest test/)",
      "Bash(PYTHONPATH=src python test_classifier_fix.py)",
      "Bash(PYTHONPATH=src python -m pytest test/testanalyzer.py -v)",
      "Bash(PYTHONPATH=src python src/prism.py src/prism/classifier.py --check)",
      "Bash(PYTHONPATH=src python debug_classifier_issue.py)",
      "Bash(ruff format:*)",
      "Bash(PYTHONPATH=src python -m pytest test/testintegration.py -v)",
      "Bash(PYTHONPATH=src python -m pytest test/testconfig.py -v)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py -v)",
      "Bash(PYTHONPATH=src pytest test/testrules.py -v)",
      "Bash(PYTHONPATH=src pytest test/testrules.py::TestBlankLineRuleEngine::testCommentBreakRule -vv)",
      "Bash(PYTHONPATH=src python debug_rules.py)",
      "Bash(PYTHONPATH=src python debug_comment_issue.py)",
      "Bash(PYTHONPATH=src python debug_indentation.py)",
      "Bash(PYTHONPATH=src python debug_nested_fix.py)",
      "Bash(PYTHONPATH=src pytest test/testrules.py::TestBlankLineRuleEngine::testCommentBreakRule -v)",
      "Bash(PYTHONPATH=src python debug_with_prints.py)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testZeroBlankLinesConfiguration -v)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testConsecutiveControlConfiguration -v)",
      "Bash(PYTHONPATH=src python debug_consecutive_def.py)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testConsecutiveDefinitionConfiguration -v)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testComplexConfigurationScenario -v -s)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testComplexConfigurationScenario -vv)",
      "Bash(PYTHONPATH=src python debug_config_transitions.py)",
      "Bash(PYTHONPATH=src python debug_statement_10_rules.py)",
      "Bash(PYTHONPATH=src python debug_complex_config.py)",
      "Bash(PYTHONPATH=src pytest test/testconfigintegration.py::TestConfigurationIntegration::testComplexConfigurationScenario -v)",
      "Bash(PYTHONPATH=src python debug_parser.py)",
      "Bash(PYTHONPATH=src python debug_docstring_parsing.py)",
      "Bash(PYTHONPATH=src python test_docstring_issue.py)",
      "Bash(PYTHONPATH=src python test_single_quote_docstring.py)",
      "Bash(PYTHONPATH=src pytest test/testanalyzer.py -v)",
      "Bash(PYTHONPATH=src python test_docstring_body_issue.py)",
      "Bash(PYTHONPATH=src python debug_docstring_body.py)",
      "Bash(PYTHONPATH=src python debug_string_assignment.py)",
      "Bash(PYTHONPATH=src python debug_string_assignment_rules.py)",
      "Bash(PYTHONPATH=src python debug_function_body_detection.py)",
      "Bash(PYTHONPATH=src python test_various_docstrings.py)",
      "Bash(PYTHONPATH=src pytest test/testdocstrings.py::TestDocstringPreservation::testDocstringFollowedByCodeInFunctionBody -v)",
      "Bash(PYTHONPATH=src pytest test/testdocstrings.py::TestDocstringPreservation::testRegularStatementsInFunctionBody -v)",
      "Bash(PYTHONPATH=src pytest test/testdocstrings.py -v)",
      "Bash(PYTHONPATH=src pytest test/testintegration.py test/testrules.py test/testdocstrings.py -v)",
      "Bash(PYTHONPATH=src python debug_class_method.py)",
      "Bash(PYTHONPATH=src python debug_method_transition.py)",
      "Bash(PYTHONPATH=src python test_class_method_issue.py)",
      "Bash(PYTHONPATH=src pytest test/testclassmethods.py -v)",
      "Bash(PYTHONPATH=src pytest test/testrules.py test/testintegration.py test/testdocstrings.py test/testclassmethods.py -v)",
      "Bash(PYTHONPATH=src python -m pytest test/testclassmethods.py -v)",
      "Bash(export PYTHONPATH=src)",
      "Bash(pytest:*)",
      "Bash(PYTHONPATH=src pytest:*)"
    ],
    "deny": [],
    "ask": []
  }
}
