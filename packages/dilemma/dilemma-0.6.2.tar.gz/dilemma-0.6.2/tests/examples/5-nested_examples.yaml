# Examples with nested data structures and complex boolean logic

- name: user_eligibility_check
  category: nested_objects
  description: "Check if user is eligible for premium features"
  expression: "user.account.is_active and (user.subscription.level == 'premium' or user.account.credits > 100)"
  expected: true
  context:
    user:
      account:
        is_active: true
        credits: 150
        created_at: "__LAST_WEEK__"
      subscription:
        level: "basic"
        renewal_date: "__NEXT_MONTH__"

- name: project_status_evaluation
  category: nested_objects
  description: "Evaluate complex project status conditions"
  expression: |
    project.status == 'in_progress'
    and (
      project.metrics.completion > 50
      or (project.team.size >= 3 and project.priority == 'high')
    )
  expected: true
  context:
    project:
      status: "in_progress"
      start_date: "__LAST_WEEK__"
      deadline: "__NEXT_MONTH__"
      metrics:
        completion: 45
        quality: 98
      team:
        size: 5
        lead: "Alice"
      priority: "high"

- name: order_shipping_eligibility
  category: mixed_date_logic
  description: "Check if order is eligible for express shipping"
  expression: |
    order.status == 'confirmed'
    and order.created_at upcoming within 24 hours
    and (
      order.items.count < 5
      or (order.customer.tier == 'gold' and order.total_value > 100)
    )
  expected: true
  context:
    order:
      status: "confirmed"
      created_at: "__HOUR_AGO__"
      items:
        count: 7
        categories: [ "electronics", "books" ]
      customer:
        tier: "gold"
        since: "__LAST_WEEK__"
      total_value: 250

- name: complex_date_conditions
  category: mixed_date_logic
  description: "Multiple date conditions with nested properties"
  expression: |
    (user.last_login upcoming within 7 days or user.auto_login)
    and (
      user.account.trial_ends is $future
      or
      user.account.subscription.status == 'active'
    )
  expected: true
  context:
    user:
      last_login: "__LAST_WEEK__"
      auto_login: true
      registration_date: "2023-01-15"
      account:
        trial_ends: "__YESTERDAY__"
        subscription:
          status: "active"
          plan: "premium"
          next_payment: "__NEXT_MONTH__"

- name: notification_eligibility
  category: complex_precedence
  description: "Test operator precedence with mixed conditions"
  expression: |
    user.settings.notifications.enabled
    and (user.last_seen older than 1 day or user.preferences.urgent_only)
    and ('admin' in user.roles or user.tasks.pending > 0)
  expected: true
  context:
    user:
      settings:
        notifications:
          enabled: true
          channels: [ "email", "push" ]
        theme: "dark"
      last_seen: "__LAST_WEEK__"
      preferences:
        urgent_only: false
        language: "en"
      roles: "user, admin"
      tasks:
        pending: 3
        completed: 27

- name: rushing_for_last_orders
  category: critical_path
  description: "Is it too late to reach the bar before last orders?"
  expression: bar's closing_time upcoming within (bar.distance / bike.speed)  hours
  expected: false
  context:
    bar:
      closing_time: "__HOUR_FROM_NOW__"
      distance: 10
      units: "miles"
    bike:
      speed: 20
      units: "mph"
