- name: count_matching_list_members
  category: function_operations
  description: "Count members in a list that match a condition"
  expression: "count_of(roles, `'write' in permissions`) == 3"
  expected: true
  context:
      roles: 
        - name: "user"
          permissions: ["read", "write"] 
        - name: "admin"
          permissions: ["read", "write", "delete"]
        - name: "manager"
          permissions: ["read", "write", "approve"]
        - name: "guest"
          permissions: ["read"]

- name: count_all_list_members
  category: function_operations
  description: "Count all members in a list (no condition)"
  expression: "count_of(roles) == 4"
  expected: true
  context:
      roles: 
        - name: "user"
          permissions: ["read", "write"] 
        - name: "admin"
          permissions: ["read", "write", "delete"]
        - name: "manager"
          permissions: ["read", "write", "approve"]
        - name: "guest"
          permissions: ["read"]

- name: count_matching_numeric_condition
  category: function_operations
  description: "Count items that match a numeric condition"
  expression: "count_of(scores, `score > 80`) == 2"
  expected: true
  context:
      scores:
        - name: "Alice"
          score: 95
        - name: "Bob"
          score: 72
        - name: "Charlie"
          score: 88
        - name: "David"
          score: 65

- name: any_of_with_condition
  category: function_operations
  description: "Check if any item matches a condition"
  expression: "any_of(users, `age >= 18`)"
  expected: true
  context:
      users:
        - name: "Alice"
          age: 25
        - name: "Bob"
          age: 16
        - name: "Charlie"
          age: 30

- name: any_of_without_condition
  category: function_operations
  description: "Check if any item is truthy"
  expression: "any_of(flags)"
  expected: true
  context:
      flags: [false, true, false]

- name: any_of_false_case
  category: function_operations
  description: "Check if any item matches condition (false case)"
  expression: "any_of(users, `age > 100`)"
  expected: false
  context:
      users:
        - name: "Alice"
          age: 25
        - name: "Bob"
          age: 16

- name: all_of_with_condition_true
  category: function_operations
  description: "Check if all items match a condition (true case)"
  expression: "all_of(products, `price > 0`)"
  expected: true
  context:
      products:
        - name: "Widget A"
          price: 10.50
        - name: "Widget B"
          price: 25.00
        - name: "Widget C"
          price: 5.99

- name: all_of_with_condition_false
  category: function_operations
  description: "Check if all items match a condition (false case)"
  expression: "all_of(products, `price > 20`)"
  expected: false
  context:
      products:
        - name: "Widget A"
          price: 10.50
        - name: "Widget B"
          price: 25.00
        - name: "Widget C"
          price: 5.99

- name: all_of_without_condition
  category: function_operations
  description: "Check if all items are truthy"
  expression: "all_of(flags)"
  expected: false
  context:
      flags: [true, false, true]

- name: none_of_with_condition_true
  category: function_operations
  description: "Check if no items match a condition (true case)"
  expression: "none_of(users, `age > 100`)"
  expected: true
  context:
      users:
        - name: "Alice"
          age: 25
        - name: "Bob"
          age: 16

- name: none_of_with_condition_false
  category: function_operations
  description: "Check if no items match a condition (false case)"
  expression: "none_of(users, `age >= 18`)"
  expected: false
  context:
      users:
        - name: "Alice"
          age: 25
        - name: "Bob"
          age: 16

- name: none_of_without_condition
  category: function_operations
  description: "Check if no items are truthy"
  expression: "none_of(flags)"
  expected: true
  context:
      flags: [false, false, false]

- name: function_with_string_condition
  category: function_operations
  description: "Count items matching a string condition"
  expression: "count_of(employees, `department == 'Engineering'`) == 2"
  expected: true
  context:
      employees:
        - name: "Alice"
          department: "Engineering"
        - name: "Bob"
          department: "Marketing"
        - name: "Charlie"
          department: "Engineering"
        - name: "David"
          department: "Sales"

- name: function_with_contains_condition
  category: function_operations
  description: "Check if any employee has 'manager' in their title"
  expression: "any_of(employees, `'Manager' in title`)"
  expected: true
  context:
      employees:
        - name: "Alice"
          title: "Senior Engineer"
        - name: "Bob"
          title: "Project Manager"
        - name: "Charlie"
          title: "Developer"

- name: empty_list_functions
  category: function_operations
  description: "Test functions with empty list"
  expression: "count_of(empty_list) == 0 and any_of(empty_list) == false and all_of(empty_list) == true and none_of(empty_list) == true"
  expected: true
  context:
      empty_list: []
    