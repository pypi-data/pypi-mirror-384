"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AdminMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEVICEADMINMESSAGE_FIELD_NUMBER: builtins.int
    @property
    def deviceAdminMessage(self) -> global___DeviceAdminMessage: ...
    def __init__(
        self,
        *,
        deviceAdminMessage: global___DeviceAdminMessage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["adminMessageSubtype", b"adminMessageSubtype", "deviceAdminMessage", b"deviceAdminMessage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["adminMessageSubtype", b"adminMessageSubtype", "deviceAdminMessage", b"deviceAdminMessage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["adminMessageSubtype", b"adminMessageSubtype"]) -> typing.Literal["deviceAdminMessage"] | None: ...

global___AdminMessage = AdminMessage

@typing.final
class DeviceAdminMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DeviceAdminMessage._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DEVICE_ADMIN_MESSAGE_TYPE_NONE: DeviceAdminMessage._Type.ValueType  # 0
        DEVICE_ADMIN_MESSAGE_TYPE_LOCAL_USER_CHANGED_IDENTITY_KEY_NAMED_DEVICE: DeviceAdminMessage._Type.ValueType  # 1
        DEVICE_ADMIN_MESSAGE_TYPE_SECURITY_ALERT_PARTICIPANT_KEY_CHANGE: DeviceAdminMessage._Type.ValueType  # 2
        DEVICE_ADMIN_MESSAGE_TYPE_SECURITY_ALERT_PARTICIPANT_NEW_LOGIN: DeviceAdminMessage._Type.ValueType  # 3

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    DEVICE_ADMIN_MESSAGE_TYPE_NONE: DeviceAdminMessage.Type.ValueType  # 0
    DEVICE_ADMIN_MESSAGE_TYPE_LOCAL_USER_CHANGED_IDENTITY_KEY_NAMED_DEVICE: DeviceAdminMessage.Type.ValueType  # 1
    DEVICE_ADMIN_MESSAGE_TYPE_SECURITY_ALERT_PARTICIPANT_KEY_CHANGE: DeviceAdminMessage.Type.ValueType  # 2
    DEVICE_ADMIN_MESSAGE_TYPE_SECURITY_ALERT_PARTICIPANT_NEW_LOGIN: DeviceAdminMessage.Type.ValueType  # 3

    DEVICEADMINMESSAGETYPE_FIELD_NUMBER: builtins.int
    DEVICENAME_FIELD_NUMBER: builtins.int
    deviceAdminMessageType: global___DeviceAdminMessage.Type.ValueType
    deviceName: builtins.str
    def __init__(
        self,
        *,
        deviceAdminMessageType: global___DeviceAdminMessage.Type.ValueType | None = ...,
        deviceName: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["deviceAdminMessageType", b"deviceAdminMessageType", "deviceName", b"deviceName"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["deviceAdminMessageType", b"deviceAdminMessageType", "deviceName", b"deviceName"]) -> None: ...

global___DeviceAdminMessage = DeviceAdminMessage
