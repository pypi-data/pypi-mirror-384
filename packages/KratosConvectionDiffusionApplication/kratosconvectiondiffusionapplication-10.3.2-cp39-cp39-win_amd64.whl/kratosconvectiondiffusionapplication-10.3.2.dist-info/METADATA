Metadata-Version: 2.4
Name: KratosConvectionDiffusionApplication
Version: 10.3.2
Summary: KRATOS Multiphysics ("Kratos") is a framework for building parallel, multi-disciplinary simulation software, aiming at modularity, extensibility, and high performance. Kratos is written in C++, and counts with an extensive Python interface.
Home-page: https://github.com/KratosMultiphysics/
Author: Kratos Team
Author-email: kratos@listas.cimne.upc.edu
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Natural Language :: English
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Developers
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: BSD License
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: KratosMultiphysics==10.3.2
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


## Convection Diffusion Application

A set of elements, conditions, strategies and solvers necessary for the solution of convection-diffusion problems.

<p align="center">
  <img src="https://raw.githubusercontent.com/KratosMultiphysics/Documentation/master/Readme_files/ConvectionDiffusionApplication.png" alt="Solution" style="width: 600px;"/>
</p>

The application includes tests to check the proper functioning of the application

### Features:

- A set of *Neumann* conditions:
     * Flux conditions
     * Thermal conditions

- Elements:
    * Laplacian element (both 2D/3D)
    * Eulerian convection-diffusion (both 2D/3D)
    * Convection-diffusion (both 2D/3D)
    * Convection-diffusion with change of phase (2D)
    * Explicit eulerian convection-diffusion (both 2D/3D)

- Strategies:
	* Non-linear/linear convection-diffusion strategy
	* Eulerian convection-diffusion strategy
	* Semi-Eulerian convection-diffusion strategy

- Utilities and others:
	* BFECC convection utility
	* BFECC elemental limiter convection utility
	* Convection particle
	* Face-heat utilities
	* Move particle utility
	* Pure convection tools
	* Pure convection (Crank-Nicolson) tools
