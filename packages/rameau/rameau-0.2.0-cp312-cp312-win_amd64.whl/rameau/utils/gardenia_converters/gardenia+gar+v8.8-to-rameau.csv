line	v8.8	rameau	sep	index	eval	Comment
1	test	name	=	0	str(x)	
2	 #<V8.8># --- Fin du texte libre --- ; Ne pas modifier/retirer cette ligne
3	 *** Pr�-Options G�n�rales           ***
4	          =Profil d'utilisation : 0=simple ; A=Avanc� (Neige, Pompage, Pr�vi etc.)					"NA (always ""Avanc�"")"
5	          =Mode d'ex�cution (C = Contr�le sur �cran ; D�f=Rapide ; D=Direct ; M=Muet)					"NA (always ""Direct"")"
6	          =Op�ration : D�f=Calcul ; A=Actualisation seule du fichier des param�tres					"NA (always ""Calcul"")"
7	 *** Options G�n�rales               ***
8	          =Nombre de Sites (Bassins) � mod�liser successivement					NS?
9	          =Type de donn�e pour Pr�vision (0=D�bits de Rivi�re , 1=Niveaux de Nappe)					?
10	          =Observations de D�bits de Rivi�re : Importance (entier : 0 � 10 ;  0=Non)	watershed.all.river.weight	=	0	float(x)	
11	          =Observations de Niveaux de Nappe  : Importance (entier : 0 � 10 ;  0=Non)	watershed.all.groundwater.weight	=	0	float(x)	
12	          =Calcul des D�bits de Rivi�re : (0=Non  ;  1=Oui)					NA?
13	          =Calcul des Niveaux de Nappe  : (0=Non  ;  1=Oui)					NA?
14	          =Sauvegarde de la Recharge et de la Pluie Efficace (0=Non  ;  1=Oui)					?
15	          =Sauvegarde des D�bit/Niveaux simul�s : (0=Non  ;  1=Oui)					NA?
16	          =Sauvegarde des termes du Bilan : (0=Non ; 1=Annuel ; 2=Mensuel ; 3=Tous les pas de temps)	outputs.budget	=	0	bool(int(x))
17	          =All�gement du Listing (0=Complet ; 1=All�g� ; 2=Supprim�)					NA?
18	          =Sch�ma de calcul (0=Gard�nia ; 5=Ruissell,Drainage ; etc.)					"NA (always ""Gard�nia"")"
19	          =Dessin de la s�rie simul�e (0=non ; 1=Oui ; 2=Oui avec d�composition)					"NA (not supported; always ""Non"")"
20	          =Transformation du d�bit pour calibration (0=Non ; 99= Racine_D�bit; 97= Logar_D�bits ; etc.)	optimization.transformation	=	0	'no' if x == '0' else 'log' if x == '97' else 'square root' if x == '99' else ValueError(x)
21	          =Poids (%) de minimisation du biais de simulation des D�bits Rivi�re (0 = Non ; 100 = 100 %)					NS?
22	          =Pompage influen�ant les D�bits de Rivi�re (0=Non ; 1=Oui ; 2=Oui en rivi�re)	,	=	0,0	"ValueError(x) if x not in ['0', '1', '2'] else None#exec(""rpump = True if x in ['1', '2'] else False"")"	to control if line #169 value used; else watershed.all.pumping.river.coefficient.value set to 0
23	          =Pompage influen�ant les Niveaux de Nappe (0=Non ; 1=Oui)		=	0	"exec(""gwpump = bool(int(x))"")"	to control if line #172 value used; else watershed.all.pumping.groundwater.coefficient.value set to 0
24	          =Calcul avec Pr�vision (0=Non ; 1=Oui ; -1=Pr�paration uniquement) [3, 4 = Particulier]	forecast.forecast,	=	0,0	"bool(int(x))#exec(""frc = bool(int(x))"")"	
25	          =M�thode de Pr�vision (0=Ajustement R�servoirs ; 1=D�calage avec 1/2 vie)	forecast.correction	=	0	'no' if not frc else 'halflife' if x == '1' else NotImplementedError(x) if x == '0' else ValueError(x)	
26	          =Sch�ma d'�changes souterr. avec ext�rieur (0=% D�bit Souterr. (++) ; 1=Facteur Niv_Souterr.)					NS?
27	          =Bilan journalier m�me si pluie D�cadaire ou Mensuelle (0=Non ; 1=Oui)					NS?
28	          =Prise en compte de la Neige (0=Non  ;  1=Oui)					?
29	          =Pr�cipitations neigeuses dans un fichier propre (0 = avec pluies ; 1 = fichier s�par�)					?
30	          =Donn�es par ann�es hydrologiques [d�but 1 ao�t] (0=ann�es Civiles ; 1=ann�es Hydrologiques)		=	0	"exec(""hydro = bool(int(x))"")"	
31	          =Perte de D�bit : 0=Non ; 1=Perd le Debit Souterrain le plus Lent ; -1=Perd le Ruissellement					?
32	          =Analyse de Sensibilit� (0=Non  ;  1=Oui uniquement analyse de Sensibilit�)					NS?
33	          =Sauvegarde de la 'R�ponse impulsionnelle' et de la 'R�ponse Cumul�e' (1=Oui)					NS?
34	          =Donn�es de tous les sites dans diff�rentes colonnes d'un m�me fichier (D�f=0)					NA? (by default it detects if 2D data or list of files?)
35	          =Num�ro de la 'colonne' des Pluies       : D�f=0 <=> 1�re colonne de donn�es					NS?
36	          =Num�ro de la 'colonne' des ETP          : D�f=0=Identique � la pluie					NS?
37	          =Num�ro de la 'colonne' des D�bits       : D�f=0=Identique � la pluie					NS?
38	          =Num�ro de la 'colonne' des Niveaux      : D�f=0=Identique � la pluie					NS?
39	          =Num�ro de la 'colonne' des Temp�ratures : D�f=0=Identique � la pluie					NS?
40	          =Num�ro de la 'colonne' de la Neige      : D�f=0=Identique � la pluie					NS?
41	          =Num�ro de la 'colonne' des Pompages     : D�f=0=Identique � la pluie					NS?
42	          =Num�ro de la 'colonne' des Pluies pour Pr�vision  : D�f=0=Identique � la pluie					NS?
43	          =Num�ro de la 'colonne' des Temp�r. pour Pr�vision : D�f=0=Identique � la pluie					NS?
44	          =Num�ro de la 'colonne' des ETP pour Pr�vision     : D�f=0=Identique � la pluie					NS?
45	          =Num�ro de la 'colonne' de la Neige pour Pr�vision : D�f=0=Identique � la pluie					NS?
46	          =M�t�o (Pluie, ETP, ...) pond�r�e � chaque pas [1=Fich. annuels SAFRAN , 2=Fichier unique]	input_format.meteo_files	=	0	True if x == '1' else False if x in ['2', '0'] else ValueError(x)	
47	          =Sauvegarde de la m�t�o pond�r�e => Fichier (futurs runs + rapides et portables) [1=Oui]					NS?
48	          =Couplage avec le coupleur OpenPalm (0=Non ; 1=Couplage M�t�o)					NS?
49	 *** Pas de temps du Fichier Pluie, Neige, Pompage    ***
50	          = Pas de temps :  0=Journalier 1=Pentadaire 2=D�cadaire 3=Mensuel 4=Autre 5=5_Jours 7=7_Jours					NS?
51	          = Format : 0=Gard�nia_Sequentiel  1=Gard�nia_Annuaire  2=Libre  3=Excel					NS?
52	 *** Pas de temps du Fichier Temp�rature              ***
53	          = Pas de temps :  0=Journalier 1=Pentadaire 2=D�cadaire 3=Mensuel 4=Autre 5=5_Jours 7=7_Jours		=	0	"exec(""dt = int(x)"")"	NS?
54	          = Format : 0=Gard�nia_Sequentiel  1=Gard�nia_Annuaire  2=Libre  3=Excel					NS?
55	 *** Pas de temps du Fichier ETP                      ***
56	          = Pas de temps :  0=Journalier 1=Pentadaire 2=D�cadaire 3=Mensuel 4=Autre 5=5_Jours 7=7_Jours					NS?
57	          = Format : 0=Gard�nia_Sequentiel  1=Gard�nia_Annuaire  2=Libre  3=Excel					NS?
58	 *** Pas de temps du Fichier D�bits, Niveaux Observ�s ***
59	         = Pas de temps :  0=Journalier 1=Pentadaire 2=D�cadaire 3=Mensuel 4=Autre 5=5_Jours 7=7_Jours					NS?
60	         = Format : 0=Gard�nia_Sequentiel  1=Gard�nia_Annuaire  2=Libre  3=Excel					NS?
61	 *** Dur�e du pas de temps s'il est non-standard ***
62	         =Unit� de dur�e des Pas si non-standard (sec,min,heu,jou,moi,ann)	,	=	0,0	"ValueError(x) if x not in ['Standard', 'sec', 'min', 'heu', 'jou', 'moi', 'ann'] else None#exec(""unit = x"")"	to use with lines #83+#92-95 if not 'Standard' to get input_format.starting_date
63	         =Dur�e du pas de temps (dans l'unit�)		=	0	"exec(""step = float(x)"")"	to use with line #62 to get input_format.time_step
64	 *** >>>>>>>>>>>>>> Fin des donn�es communes ] >>>>>
65	 *** <<<<<<<<<<<< D�but des donn�es du bassin [ <<<<<
66
67	         =Valeur Maximale du D�bit de Rivi�re Observ� prise en compte (0 = toutes)					NS?
68	         =Valeur Minimale du D�bit de Rivi�re Observ� prise en compte (0 = toutes)					NS?
69	         =Valeur Maximale du Niveau de Nappe Observ� prise en compte (0 = toutes)					NS?
70	         =Valeur Minimale du Niveau de Nappe Observ� prise en compte (0 = toutes)					NS?
71	         =Coefficient de r�ajustement pour la pr�vision [0 � 1]					NS?
72	         =�cart-type de l'alimentation du R�servoir interm�diaire  (pour la pr�vision)					NS?
73	         =�cart-type de l'alimentation du R�servoir Souterrain n�1 (pour la pr�vision)					NS?
74	         =�cart-type de l'alimentation du R�servoir Souterrain n�2 (pour la pr�vision)					NS?
75	         =D�bit Rivi�re r�serv� (valeur simul�e minimale possible) (D�f=0)					NS?
76	         =�cart-type des observations de niveau de nappe (pour la pr�vision)					NS?
77	         =Temps de 1/2 vie de l'�cart de pr�vision de D�bit  de rivi�re (pas de temps)	watershed.all.forecast.river.halflife	=	0	float(x) if frc else None
78	         =Temps de 1/2 vie de l'�cart de pr�vision de Niveau de Nappe   (pas de temps)	watershed.all.forecast.groundwater.halflife	=	0	float(x) if frc else None
79	 *** Options du Bassin               ***
80	         =Nombre d'Ann�es des s�ries de donn�es (Pluie, ETP, Observations) [0 => Toutes]		=	0	"exec(""nyear = int(x)"")"	to use with lines #81+#91 to get optimization.ending_date
81	         =Nombre d'Ann�es d�marrage (-n pour g�n�rer n ann�e moy fictives de d�marrage)		=	0	"exec(""start = int(x)"")"	to use with line #83 to get optimization.starting_date, simulation_settings.starting_date, spinup_settings.ending_date
82	         =Nombre de cycles de d�marrage (d�f. = 1)	spinup.cycles	=	0	1 if x in ['0', ''] else int(x)	
83	         =Date de la premi�re ann�e des donn�es (par ex. 2017)		=	0	"exec(""fyear = int(x)"")"	to use with line #62 to get input_format.starting_date; to use with line #81 to get optimization.starting_date, simulation_settings.starting_date, spinup_settings.ending_date
84	         =D�calage dans la s�rie des Pluies [+5 => Retarde de 5 pas ; -4 Avance de 4 pas]					NS?
85	         =D�calage de la s�rie des D�bits/Niveaux observ�s [ex: -2 => Avance de 2 pas]					NS?
86	         =�tat initial : 0=Pluie Effic. moyenne ; -1=R�servoirs vides ; -2=RuMax vide aussi					?
87	         =Nombre maxi. d'it�rations pour la calibration (0 = aucune it�ration, pas de calibrat.)	optimization.maxit	=	0	int(x)
88	         =Dur�e des pluies en moyenne par pas (%) (utilisations avanc�es)[d�faut = 100 %]					NS?
89	         =Nombre de r�servoirs souterrains (1 ou 2 ou -1=Double + seuil)      [d�f = 1]		=	0	"exec(""nres = int(x)"")"	to use with lines #120+#122 to control if value/opti should be considered for watershed.all.groundwater.1.halflife_drainage, watershed.all.groundwater.2.halflife_baseflow
90	         =Num�ro du r�servoir souterr. <=> Niveau nappe (si 2 r�serv. souterr.) [d�f = 1]	watershed.all.groundwater.observed_reservoir	=	0	1 if x in ['0', ''] else int(x)
91	         =Nombre d'ann�es finales � ignorer pour la calibration (d�f = 0) [< 0 => n� last ann]		=	0	"exec(""final = int(x)"")"	to use with lines #80-81 to get optimization.ending_date
92	         =Num�ro du Jour initial [D�f=1] (si dur�e non-standard) ; ex. 31 pour 31 D�c.		=	0	"exec(""day = int(x)"")"	to use with line #62 if not 'Standard' to get intput_format.starting_date
93	         =Num�ro du Mois initial [D�f=1] (si dur�e non-standard) ; ex. 12 pour 31 D�c.		=	0	"exec(""month = int(x)"")"	to use with line #62 if not 'Standard' to get intput_format.starting_date
94	         =Heure initiale [D�f=0] (si dur�e non-standard) ; par ex. 15 pour 15h30		=	0	"exec(""hour = int(x)"")"	to use with line #62 if not 'Standard' to get intput_format.starting_date
95	         =Minute initiale [D�f=0] (si dur�e non-standard) ; Par ex. 30 pour 15h30		=	0	"exec(""minute = int(x)"")"	to use with line #62 if not 'Standard' to get intput_format.starting_date
96	         =Perte du d�bit de Ruissellement par D�bordement au-dessus du Seuil [0=Non ; 1=Perte ; 2 => R�s Sout]	watershed.all.transfer.overflow.loss	=	0	'no' if x == '0' else 'loss' if x == '1' else 'groundwater' if x == '2' else ValueError(x)	
97	         =D�croissance de l'�vapotranspiration si saturation du r�servoir sol < 50% (0=Non ; 1=Oui)	watershed.all.progressive.pet_decrease	=	0	bool(int(x))
98	         =Sch�ma � taux de ruissellement constant (pour comparaison ; d�conseill�) (0=Non ; 1=Oui)					NS?
99	         =M�thode de calcul du coeff. d'Emmagasinement [0 = Corr�lation ; 1 = Optimis entre bornes]	watershed.all.groundwater.storage.regression	=	0	True if x == '0' else False
100	 *** Param�tres de Pr�vision         ***
101	         =Nombre d'Ann�es de donn�es du fichier de pluies etc. pour la Pr�vision		=	0	"exec(""frc_nyear = int(x)"")"	to use to get forecast.emission_date
102	         =Jour d'�mission de la pr�vision (1-31) si pas de temps journalier (sinon : 0)		=	0	"exec(""frc_issueday = int(x)"")"	to use to get forecast.emission_date
103	         =Num�ro du Mois [si journalier ou mensuel] (ou n� du pas) d'�mission de la pr�vision)		=	0	"exec(""frc_issuemonth = int(x)"")"	to use to get forecast.emission_date
104	         =Port�e de la Pr�vision (Nombre de pas de temps de la pr�vision)		=	0	"exec(""frc_scope = int(x) if x not in ['0', ''] else None"")"	to use to get forecast.scope
105	         =Date de la Premi�re Ann�e des fichiers m�t�o de pr�vision [si journalier] (d�f = 0)		=	0	"exec(""frc_fyear = int(x)"")"	to use to get forecast.emission_date
106	 *** Position des Donn�es du bassin  ***
107	         =N� de la 'colonne' des donn�es : (-1 => N� d'ordre du bassin) D�f=0 <=> Col. n�1					NA? (assume same order as watersheds in data columns if in eros mode?)
108	 *** Param�tres Hydroclimatiques            ***
109	         =Pluie Eff. annuelle pour initialis. (0=�quil.) (mm/an)					NS?
110	         =D�bit ext�rieur �ventuel                        (m3/s) Opti=	watershed.all.river.exchange_riverflow.value,watershed.all.river.exchange_riverflow.opti	=	0,-1	float(x)#bool(int(x))	
111	         =Superficie du bassin versant                     (km2) Opti=	watershed.all.river.area.value,watershed.all.river.area.opti	=	0,-1	float(x)#bool(int(x))	
112	         =Niveau de base local de la nappe               (m NGF) Opti=	watershed.all.groundwater.base_level.value,watershed.all.groundwater.base_level.opti	=	0,-1	float(x)#bool(int(x))	
113	         =Correction globale des Pluies                      (%) Opti=	watershed.all.correction.rainfall.value,watershed.all.correction.rainfall.opti	=	0,-1	float(x)#bool(int(x))	
114	         =Correction globale de l'ETP                        (%) Opti=	watershed.all.correction.pet.value,watershed.all.correction.pet.opti	=	0,-1	float(x)#bool(int(x))	
115	         =Capacit� du r�servoir sol 'r�serve utile'         (mm) Opti=	watershed.all.thornthwaite.capacity.value,watershed.all.thornthwaite.capacity.opti	=	0,-1	float(x)#bool(int(x))	
116	         =Capacit� du r�servoir sol progressif              (mm) Opti=	watershed.all.progressive.capacity.value,watershed.all.progressive.capacity.opti	=	0,-1	float(x)#bool(int(x))	
117	         =Hauteur de r�partition Ruissellement-Percolation  (mm) Opti=	watershed.all.transfer.runsee.value,watershed.all.transfer.runsee.opti	=	0,-1	float(x)#bool(int(x))	
118	         =Temps de 1/2 percolation vers la nappe          (mois) Opti=	watershed.all.transfer.halflife.value,watershed.all.transfer.halflife.opti	=	0,-1	float(x)#bool(int(x))	
119	         =Temps de 1/2 tarissement du d�bit souterr. n�1  (mois) Opti=	,	=	0,-1	"exec(""baseflow_1_val = float(x)"")#exec(""baseflow_1_opt = bool(int(x))"")"
120	         =Temps de 1/2 transfert vers la nappe profonde   (mois) Opti=	watershed.all.groundwater.1.halflife_drainage.value,watershed.all.groundwater.1.halflife_drainage.opti	=	0,-1	float(x) if nres == 2 else 0#bool(int(x)) if nres == 2 else False	
121	         =Seuil d'�coulement souterrain n�1 (r�s. double)   (mm) Opti=	watershed.all.groundwater.1.overflow.threshold.value,watershed.all.groundwater.1.overflow.threshold.opti	=	0,-1	"float(x) if nres == -1 else 0.0#bool(int(x)) if nres == -1 else RuntimeError(""overflow threshold cannot be optimised because no double outflow reservoir"") if bool(int(x)) else False"
122	         =Temps de 1/2 tarissement du d�bit souterr. n�2  (mois) Opti=	,	=	0,-1	"exec(""baseflow_2_val = float(x)"")#exec(""baseflow_2_opt = bool(int(x))"")"
123	         =Temps de r�action ('retard') du d�bit   (pas de temps) Opti=	watershed.all.river.concentration_time.value,watershed.all.river.concentration_time.opti	=	0,-1	float(x)#bool(int(x))
124	         =Facteur d'�change souterrain externe               (%) Opti=	watershed.all.groundwater.1.exchanges.value,watershed.all.groundwater.1.exchanges.opti	=	0,-1	float(x)#bool(int(x))	
125	         =D�ficit initial du r�servoir sol 'r�serve utile'  (mm) Opti=					?
126	         =D�ficit initial du r�servoir sol progressif       (mm) Opti=					?
127	         =Seuil de ruissellement par d�bordement            (mm) Opti=	watershed.all.transfer.overflow.threshold.value,watershed.all.transfer.overflow.threshold.opti	=	0,-1	float(x)#bool(int(x))	
128	         =Temps de 1/2 ruissell. par d�bordement  (Pas de temps) Opti=	watershed.all.transfer.overflow.halflife.value,watershed.all.transfer.overflow.halflife.opti	=	0,-1	float(x)#bool(int(x))	
129	         =Temps de 1/2 d�croiss. maximal du ruissellement (mois) Opti=					NS?
130	         =Facteur de correction de la superficie du bassin   (-) Opti=	watershed.all.correction.area.value,watershed.all.correction.area.opti	=	0,-1	float(x)#bool(int(x))	
131	         =Coefficient d'emmagasinement de la nappe           (%) Opti=	watershed.all.groundwater.storage.coefficient.value,watershed.all.groundwater.storage.coefficient.opti	=	0,-1	float(x)#bool(int(x))	
132	 *** Bornes des param�tres Hydroclimatiques ***
133	         =Min : Correction globale des Pluies                      (%) Max =	watershed.all.correction.rainfall.lower,watershed.all.correction.rainfall.upper	=	0,-1	float(x)#float(x)	
134	         =Min : Correction globale de l'ETP                        (%) Max =	watershed.all.correction.pet.lower,watershed.all.correction.pet.upper	=	0,-1	float(x)#float(x)	
135	         =Min : Capacit� du r�servoir sol 'r�serve utile'         (mm) Max =	watershed.all.thornthwaite.capacity.lower,watershed.all.thornthwaite.capacity.upper	=	0,-1	float(x)#float(x)	
136	         =Min : Capacit� du r�servoir sol progressif              (mm) Max =	watershed.all.progressive.capacity.lower,watershed.all.progressive.capacity.upper	=	0,-1	float(x)#float(x)	
137	         =Min : Hauteur de r�partition Ruissellement-Percolation  (mm) Max =	watershed.all.transfer.runsee.lower,watershed.all.transfer.runsee.upper	=	0,-1	float(x)#float(x)	
138	         =Min : Temps de 1/2 percolation vers la nappe          (mois) Max =	watershed.all.transfer.halflife.lower,watershed.all.transfer.halflife.upper	=	0,-1	float(x)#float(x)	
139	         =Min : Temps de 1/2 tarissement du d�bit souterr. n�1  (mois) Max =	,	=	0,-1	"exec(""baseflow_1_low = float(x)"")#exec(""baseflow_1_upp = float(x)"")"
140	         =Min : Temps de 1/2 transfert vers la nappe profonde   (mois) Max =	watershed.all.groundwater.1.halflife_drainage.lower,watershed.all.groundwater.1.halflife_drainage.upper	=	0,-1	float(x)#float(x)	
141	         =Min : Seuil d'�coulement souterrain n�1 (r�s. double)   (mm) Max =	watershed.all.groundwater.1.overflow.threshold.lower,watershed.all.groundwater.1.overflow.threshold.upper	=	0,-1	float(x)#float(x)	
142	         =Min : Temps de 1/2 tarissement du d�bit souterr. n�2  (mois) Max =	,	=	0,-1	"exec(""baseflow_2_low = float(x)"")#exec(""baseflow_2_upp = float(x)"")"
143	         =Min : Temps de r�action ('retard') du d�bit   (pas de temps) Max =	watershed.all.river.concentration_time.lower,watershed.all.river.concentration_time.upper	=	0,-1	float(x)#float(x)
144	         =Min : Facteur d'�change souterrain externe               (%) Max =	watershed.all.groundwater.1.exchanges.lower,watershed.all.groundwater.1.exchanges.upper	=	0,-1	float(x)#float(x)	
145	         =Min : D�ficit initial du r�servoir sol 'r�serve utile'  (mm) Max =					NS?
146	         =Min : D�ficit initial du r�servoir sol progressif       (mm) Max =					NS?
147	         =Min : Seuil de ruissellement par d�bordement            (mm) Max =	watershed.all.transfer.overflow.threshold.lower,watershed.all.transfer.overflow.threshold.upper	=	0,-1	float(x)#float(x)	
148	         =Min : Temps de 1/2 ruissell. par d�bordement  (Pas de temps) Max =	watershed.all.transfer.overflow.halflife.lower,watershed.all.transfer.overflow.halflife.upper	=	0,-1	float(x)#float(x)	
149	         =Min : Temps de 1/2 d�croiss. maximal du ruissellement (mois) Max =					NS?
150	         =Min : Facteur de correction de la superficie du bassin   (-) Max =	watershed.all.correction.area.lower,watershed.all.correction.area.upper	=	0,-1	float(x)#float(x)	
151	         =Min : Coefficient d'emmagasinement de la nappe           (%) Max =	watershed.all.groundwater.storage.coefficient.lower,watershed.all.groundwater.storage.coefficient.upper	=	0,-1	float(x)#float(x)	
152	 *** Param�tres de Fonte de Neige           ***
153	         =Correction globale de la temp�rature              (�C) Opti=	watershed.all.snow.correction.temperature.value,watershed.all.snow.correction.temperature.opti	=	0,-1	float(x)#bool(int(x))	
154	         =Taux de r�tention de la neige                      (%) Opti=	watershed.all.snow.retention.value,watershed.all.snow.retention.opti	=	0,-1	float(x)#bool(int(x))	
155	         =Facteur d'�vaporation de la neige                  (%) Opti=	watershed.all.snow.correction.pet.value,watershed.all.snow.correction.pet.opti	=	0,-1	float(x)#bool(int(x))	
156	         =Correction de fonte de la neige par la pluie       (%) Opti=	watershed.all.snow.correction.rainfall.value,watershed.all.snow.correction.rainfall.opti	=	0,-1	float(x)#bool(int(x))	
157	         =Temp�rature seuil de fonte naturelle de la neige  (�C) Opti=	watershed.all.snow.degree_day.temperature.value,watershed.all.snow.degree_day.temperature.opti	=	0,-1	float(x)#bool(int(x))	
158	         =Constante de fonte par la temp�rature     (mm/�C/jour) Opti=	watershed.all.snow.degree_day.coefficient.value,watershed.all.snow.degree_day.coefficient.opti	=	0,-1	float(x)#bool(int(x))	
159	         =Fonte de la neige au contact du sol     (1/10 mm/jour) Opti=	watershed.all.snow.melting.value,watershed.all.snow.melting.opti	=	0,-1	float(x)#bool(int(x))	
160	 *** Bornes des param�tres Neige            ***
161	         =Min : Correction globale de la temp�rature              (�C) Max =	watershed.all.snow.correction.temperature.lower,watershed.all.snow.correction.temperature.upper	=	0,-1	float(x)#float(x)	
162	         =Min : Taux de r�tention de la neige                      (%) Max =	watershed.all.snow.retention.lower,watershed.all.snow.retention.upper	=	0,-1	float(x)#float(x)	
163	         =Min : Facteur d'�vaporation de la neige                  (%) Max =	watershed.all.snow.correction.pet.lower,watershed.all.snow.correction.pet.upper	=	0,-1	float(x)#float(x)	
164	         =Min : Correction de fonte de la neige par la pluie       (%) Max =	watershed.all.snow.correction.rainfall.lower,watershed.all.snow.correction.rainfall.upper	=	0,-1	float(x)#float(x)	
165	         =Min : Temp�rature seuil de fonte naturelle de la neige  (�C) Max =	watershed.all.snow.degree_day.temperature.lower,watershed.all.snow.degree_day.temperature.upper	=	0,-1	float(x)#float(x)	
166	         =Min : Constante de fonte par la temp�rature     (mm/�C/jour) Max = 	watershed.all.snow.degree_day.coefficient.lower,watershed.all.snow.degree_day.coefficient.upper	=	0,-1	float(x)#float(x)	
167	         =Min : Fonte de la neige au contact du sol     (1/10 mm/jour) Max = 	watershed.all.snow.melting.lower,watershed.all.snow.melting.upper	=	0,-1	float(x)#float(x)	
168	 *** Param�tres de Pompage           ***
169	         =Coefficient d'influence du pompage => D�bit Rivi�re (-) Opti=	watershed.all.pumping.river.coefficient.value,watershed.all.pumping.river.coefficient.opti	=	0,-1	float(x) if rpump else 0#bool(int(x)) if rpump else False
170	         =Temps de 1/2 mont�e du pompage infl. => Rivi�re  (mois) Opti=	watershed.all.pumping.river.halflife_rise.value,watershed.all.pumping.river.halflife_rise.opti	=	0,-1	float(x)#bool(int(x))	
171	         =Temps de 1/2 stabilisation du pompage => Rivi�re (mois) Opti=	watershed.all.pumping.river.halflife_fall.value,watershed.all.pumping.river.halflife_fall.opti	=	0,-1	float(x)#bool(int(x))	
172	         =Coefficient d'influence du pompage => Niveau Nappe  (-) Opti=	watershed.all.pumping.groundwater.coefficient.value,watershed.all.pumping.groundwater.coefficient.opti	=	0,-1	float(x) if gwpump else 0#bool(int(x)) if gwpump else False
173	         =Temps de 1/2 mont�e du pompage infl. => Nappe    (mois) Opti=	watershed.all.pumping.groundwater.halflife_rise.value,watershed.all.pumping.groundwater.halflife_rise.opti	=	0,-1	float(x)#bool(int(x))	
174	         =Temps de 1/2 stabilisation du pompage => Nappe   (mois) Opti=	watershed.all.pumping.groundwater.halflife_fall.value,watershed.all.pumping.groundwater.halflife_fall.opti	=	0,-1	float(x)#bool(int(x))	
175	 *** Bornes des param�tres Pompage   ***
176	         =Min : Temps de 1/2 mont�e du pompage infl. => Rivi�re  (mois) Max = 	watershed.all.pumping.river.halflife_rise.lower,watershed.all.pumping.river.halflife_rise.upper	=	0,-1	float(x)#float(x)	
177	         =Min : Temps de 1/2 stabilisation du pompage => Rivi�re (mois) Max = 	watershed.all.pumping.river.halflife_fall.lower,watershed.all.pumping.river.halflife_fall.upper	=	0,-1	float(x)#float(x)	
178	         =Min : Temps de 1/2 mont�e du pompage infl. => Nappe    (mois) Max =	watershed.all.pumping.groundwater.halflife_rise.lower,watershed.all.pumping.groundwater.halflife_rise.upper	=	0,-1	float(x)#float(x)	
179	         =Min : Temps de 1/2 stabilisation du pompage => Nappe   (mois) Max =	watershed.all.pumping.groundwater.halflife_fall.lower,watershed.all.pumping.groundwater.halflife_fall.upper	=	0,-1	float(x)#float(x)	
180	 *** >>>>>>>>>>>>>> Fin des donn�es du bassin ] >>>>>
-1					"exec(""time_step = datetime.timedelta(**{'seconds' if unit.startswith('sec') else 'minutes' if unit.startswith('min') else 'hours' if unit.startswith('heu') else 'days' if unit.startswith('jou') else 'days': step}) if unit != 'Standard' else (datetime.timedelta(days=1) if dt == 0 else datetime.timedelta(days=10) if dt == 2 else datetime.timedelta(days=5) if dt == 5 else datetime.timedelta(days=7) if dt == 7 else datetime.timedelta(days=30.4) if dt == 3 else ValueError(x))"")"
-1		input_format.starting_date			datetime.datetime(fyear, month, day, hour, minute) if ((unit != 'Standard') and (fyear != 0) and (month != 0) and (day !=0)) else None	related to lines #62+#63
-1		input_format.time_step			time_step	
-1		optimization.starting_date			datetime.datetime(fyear + start, 8 if hydro else 1, 1)	
-1		starting_date			datetime.datetime(fyear + start, 8 if hydro else 1, 1)
-1		spinup.starting_date,spinup.ending_date		,	datetime.datetime(fyear, 8 if hydro else 1, 1)#datetime.datetime(fyear + start, 8 if hydro else 1, 1) - time_step
-1		optimization.ending_date			datetime.datetime(fyear + nyear - final, 8 if hydro else 1, 1) - time_step if (final >= 0 and nyear !=0) else datetime.datetime(-final, 8 if hydro else 1, 1) - time_step if final < 0 else None	
-1		forecast.emission_date			datetime.datetime(frc_fyear + (frc_nyear if hydro else frc_nyear - 1), frc_issuemonth, frc_issueday) if ((frc_nyear != 0) and (frc_fyear != 0) and (frc_issuemonth != 0) and (frc_issueday !=0)) else None
-1		forecast.scope			time_step * frc_scope if frc_scope else None	
-1		watershed.all.groundwater.1.halflife_baseflow.value,watershed.all.groundwater.1.halflife_baseflow.opti,watershed.all.groundwater.1.halflife_baseflow.lower,watershed.all.groundwater.1.halflife_baseflow.upper		,,,	baseflow_2_val if nres == -1 else baseflow_1_val#baseflow_2_opt if nres == -1 else baseflow_1_opt#baseflow_2_low if nres == -1 else baseflow_1_low#baseflow_2_upp if nres == -1 else baseflow_1_upp
-1		watershed.all.groundwater.2.halflife_baseflow.value,watershed.all.groundwater.2.halflife_baseflow.opti,watershed.all.groundwater.2.halflife_baseflow.lower,watershed.all.groundwater.2.halflife_baseflow.upper		,,,	baseflow_2_val if nres == 2 else 0#baseflow_2_opt if nres == 2 else False#baseflow_2_low#baseflow_2_upp
-1		watershed.all.groundwater.1.overflow.halflife.value,watershed.all.groundwater.1.overflow.halflife.opti,watershed.all.groundwater.1.overflow.halflife.lower,watershed.all.groundwater.1.overflow.halflife.upper		,,,	baseflow_1_val if nres == -1 else 0#baseflow_1_opt if nres == -1 else False#baseflow_1_low#baseflow_1_upp
-1		forecast.quantiles_output			True if frc_scope else False
-1		forecast.norain			True if frc_scope else False