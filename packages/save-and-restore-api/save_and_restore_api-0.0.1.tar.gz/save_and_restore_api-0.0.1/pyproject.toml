[build-system]
requires = ["setuptools>=77", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"


[project]
name = "save-and-restore-api"
description = "Python package for communication with CS Studio save-and-restore service"
readme = "README.md"
license = "BSD-3-Clause"
license-files = ["LICENSE"]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "httpx",
]

[project.scripts]
save-and-restore = "save_and_restore_api.tools.cli:main"

[project.urls]
Homepage = "https://github.com/dmgav/save-and-restore-api"

[project.optional-dependencies]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "pytest-asyncio",
  "pre-commit",
  "ruff",
  "softioc",
  "pyepics",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "sphinx_rtd_theme",
  "numpydoc",
  "ipython",
]

[tool.setuptools_scm]
write_to = "src/save_and_restore_api/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
# Don't collect the interactive directory which is intended for manual execution
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst" --ignore docs --ignore ioc
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = [
    "error",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "src/save_and_restore_api/tests"


[tool.coverage]
run.source = ["save_and_restore_api"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.9"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "save_and_restore_api.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
src = ["src", "tests"]
line-length = 115
exclude = [
    "docs/source/conf.py",
    "docs/source/examples",
]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
unfixable = ["F401"]
ignore = [
]
isort.required-imports = [
]

[tool.ruff.lint.per-file-ignores]
# By default, private member access is allowed in tests
# See https://github.com/DiamondLightSource/python-copier-template/issues/154
# Remove this line to forbid private member access in tests
"tests/**/*" = ["SLF001"]
