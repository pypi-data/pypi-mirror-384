[build-system]
requires = [
    "setuptools >= 40.6.0",
    "setuptools_scm>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Pyfive Development Team", email = "valeriu.predoi@ncas.ac.uk"},
    {name = "Valeriu Predoi", email = "valeriu.predoi@ncas.ac.uk"},
    {name = "David Hassell", email = "david.hassell@ncas.ac.uk"},
    {name = "Bryan Lawrence", email = "bryan.lawrence@ncas.ac.uk"},
    {name = "Jonathan Helmus", email = "jjhelmus@gmail.com"},
    {name = "Kai Muehlbauer", email = "kai.muehlbauer@uni-bonn.de"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Physics",
]
dynamic = [
    "readme",
    "version",
]
dependencies = [
    "numpy",
]
description = "A pure python HDF5 reader"
license = {text = "BSD License, Version 3-Clause"}
name = "pyfive"
requires-python = ">=3.10"

[project.optional-dependencies]
test = [
    "pytest>6.0.0",
    "pytest-cov>=2.10.1",
    "pytest-html!=2.1.0",
    "pytest-xdist",
    "dask",
    "flake8",
    "flask",
    "flask-cors",
    "h5netcdf",
    "h5py",
    "netCDF4",
    "moto",
    "s3fs>=2025.9.0",  # v-mismatch with boto3 results in ancient s3fs
]

# needed for doc builds
doc = [
    "autodocsumm",
    "sphinx",
    "sphinx_rtd_theme",
]
# develop = [
#     "pre-commit",
#     "pylint",
#     "pydocstyle",
# ]


[project.urls]
Code = "https://github.com/jjhelmus/pyfive"
# Documentation = ""
Issues = "https://github.com/jjhelmus/pyfive/issues"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]
packages = ["pyfive"]
zip-safe = false  # possibly yes

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[tool.pytest.ini_options]
addopts = [
    "--cov-report=xml:test-reports/coverage.xml",
    "--cov-report=html:test-reports/coverage_html",
    "--html=test-reports/report.html",
]

[tool.coverage.run]
parallel = true
source = ["pyfive"]
    
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
