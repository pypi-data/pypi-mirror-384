# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from composabl_core.proto.composabl.v1 import main_pb2 as composabl_dot_v1_dot_main__pb2


class ComposablStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.make = channel.unary_unary(
                '/composabl.Composabl/make',
                request_serializer=composabl_dot_v1_dot_main__pb2.MakeRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.MakeResponse.FromString,
                )
        self.step = channel.unary_unary(
                '/composabl.Composabl/step',
                request_serializer=composabl_dot_v1_dot_main__pb2.StepRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.StepResponse.FromString,
                )
        self.reset = channel.unary_unary(
                '/composabl.Composabl/reset',
                request_serializer=composabl_dot_v1_dot_main__pb2.ResetRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ResetResponse.FromString,
                )
        self.close = channel.unary_unary(
                '/composabl.Composabl/close',
                request_serializer=composabl_dot_v1_dot_main__pb2.CloseRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.CloseResponse.FromString,
                )
        self.action_space_sample = channel.unary_unary(
                '/composabl.Composabl/action_space_sample',
                request_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.FromString,
                )
        self.action_space_info = channel.unary_unary(
                '/composabl.Composabl/action_space_info',
                request_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.FromString,
                )
        self.sensor_space_info = channel.unary_unary(
                '/composabl.Composabl/sensor_space_info',
                request_serializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.FromString,
                )
        self.set_scenario = channel.unary_unary(
                '/composabl.Composabl/set_scenario',
                request_serializer=composabl_dot_v1_dot_main__pb2.SetScenarioRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.SetScenarioResponse.FromString,
                )
        self.get_scenario = channel.unary_unary(
                '/composabl.Composabl/get_scenario',
                request_serializer=composabl_dot_v1_dot_main__pb2.GetScenarioRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.GetScenarioResponse.FromString,
                )
        self.get_render = channel.unary_unary(
                '/composabl.Composabl/get_render',
                request_serializer=composabl_dot_v1_dot_main__pb2.GetRenderRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.GetRenderResponse.FromString,
                )
        self.get_mappings = channel.unary_unary(
                '/composabl.Composabl/get_mappings',
                request_serializer=composabl_dot_v1_dot_main__pb2.GetMappingsRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.GetMappingsResponse.FromString,
                )


class ComposablServicer(object):
    """Missing associated documentation comment in .proto file."""

    def make(self, request, context):
        """Creates the reinforcement learning environment with specified configurations.
        - MakeRequest: Contains parameters to configure the environment.
        - MakeResponse: Returns an identifier for the created environment and possibly other initial setup information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def step(self, request, context):
        """Advances the environment by one timestep using the action provided in the request.
        - StepRequest: Includes the action to be taken in the current state of the environment.
        - StepResponse: Returns the new state of the environment, reward received, and a flag indicating if the episode has ended.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset(self, request, context):
        """Resets the state of the environment, returning it to its initial conditions.
        - ResetRequest: May include parameters for resetting to specific scenarios.
        - ResetResponse: Provides the initial sensor of the reset environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
        """Performs any necessary cleanup before the environment is closed.
        - CloseRequest: May be empty or include specific closing instructions.
        - CloseResponse: Acknowledges the environment has been successfully closed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def action_space_sample(self, request, context):
        """Generates a sample action from the environment's action space.
        - ActionSpaceSampleRequest: May be empty or specify particular sampling criteria.
        - ActionSpaceSampleResponse: Provides a sample action from the action space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def action_space_info(self, request, context):
        """Retrieves information about the environment's action space.
        - ActionSpaceInfoRequest: May be empty or include parameters for the information request.
        - ActionSpaceInfoResponse: Returns detailed information about the action space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sensor_space_info(self, request, context):
        """Retrieves information about the environment's sensor space.
        - SensorSpaceInfoRequest: May be empty or include parameters for the information request.
        - SensorSpaceInfoResponse: Returns detailed information about the sensor space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_scenario(self, request, context):
        """Sets the current scenario for the environment.
        - SetScenarioRequest: Includes parameters defining the scenario to set.
        - SetScenarioResponse: Acknowledges the scenario has been set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_scenario(self, request, context):
        """Retrieves the current scenario of the environment.
        - GetScenarioRequest: May be empty if simply retrieving the current scenario.
        - GetScenarioResponse: Returns details of the current scenario.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_render(self, request, context):
        """Retrieves the current render of the environment.
        - GetRenderRequest: May include parameters specifying the render details.
        - GetRenderResponse: Provides the current render of the environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_mappings(self, request, context):
        """Retrieves the obs and action spaces as well as default sensor mappings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComposablServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'make': grpc.unary_unary_rpc_method_handler(
                    servicer.make,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.MakeRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.MakeResponse.SerializeToString,
            ),
            'step': grpc.unary_unary_rpc_method_handler(
                    servicer.step,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.StepRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.StepResponse.SerializeToString,
            ),
            'reset': grpc.unary_unary_rpc_method_handler(
                    servicer.reset,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ResetRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ResetResponse.SerializeToString,
            ),
            'close': grpc.unary_unary_rpc_method_handler(
                    servicer.close,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.CloseRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.CloseResponse.SerializeToString,
            ),
            'action_space_sample': grpc.unary_unary_rpc_method_handler(
                    servicer.action_space_sample,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.SerializeToString,
            ),
            'action_space_info': grpc.unary_unary_rpc_method_handler(
                    servicer.action_space_info,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.SerializeToString,
            ),
            'sensor_space_info': grpc.unary_unary_rpc_method_handler(
                    servicer.sensor_space_info,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.SerializeToString,
            ),
            'set_scenario': grpc.unary_unary_rpc_method_handler(
                    servicer.set_scenario,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.SetScenarioRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.SetScenarioResponse.SerializeToString,
            ),
            'get_scenario': grpc.unary_unary_rpc_method_handler(
                    servicer.get_scenario,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.GetScenarioRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.GetScenarioResponse.SerializeToString,
            ),
            'get_render': grpc.unary_unary_rpc_method_handler(
                    servicer.get_render,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.GetRenderRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.GetRenderResponse.SerializeToString,
            ),
            'get_mappings': grpc.unary_unary_rpc_method_handler(
                    servicer.get_mappings,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.GetMappingsRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.GetMappingsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'composabl.Composabl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Composabl(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def make(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/make',
            composabl_dot_v1_dot_main__pb2.MakeRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.MakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/step',
            composabl_dot_v1_dot_main__pb2.StepRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.StepResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/reset',
            composabl_dot_v1_dot_main__pb2.ResetRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/close',
            composabl_dot_v1_dot_main__pb2.CloseRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.CloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def action_space_sample(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/action_space_sample',
            composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def action_space_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/action_space_info',
            composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sensor_space_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/sensor_space_info',
            composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_scenario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/set_scenario',
            composabl_dot_v1_dot_main__pb2.SetScenarioRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.SetScenarioResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_scenario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/get_scenario',
            composabl_dot_v1_dot_main__pb2.GetScenarioRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetScenarioResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_render(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/get_render',
            composabl_dot_v1_dot_main__pb2.GetRenderRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetRenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_mappings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.Composabl/get_mappings',
            composabl_dot_v1_dot_main__pb2.GetMappingsRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetMappingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RemoteSkillIsolationServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.make = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/make',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillMakeRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillMakeResponse.FromString,
                )
        self.reset = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/reset',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillResetRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillResetResponse.FromString,
                )
        self.close = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/close',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillCloseRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillCloseResponse.FromString,
                )
        self.compute_reward = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/compute_reward',
                request_serializer=composabl_dot_v1_dot_main__pb2.ComputeRewardRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ComputeRewardResponse.FromString,
                )
        self.compute_success_criteria = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/compute_success_criteria',
                request_serializer=composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaResponse.FromString,
                )
        self.compute_termination = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/compute_termination',
                request_serializer=composabl_dot_v1_dot_main__pb2.ComputeTerminationRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ComputeTerminationResponse.FromString,
                )
        self.compute_action_mask = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/compute_action_mask',
                request_serializer=composabl_dot_v1_dot_main__pb2.ComputeActionMaskRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.ComputeActionMaskResponse.FromString,
                )
        self.transform_action = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/transform_action',
                request_serializer=composabl_dot_v1_dot_main__pb2.TransformActionRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.TransformActionResponse.FromString,
                )
        self.transform_sensors = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/transform_sensors',
                request_serializer=composabl_dot_v1_dot_main__pb2.TransformSensorRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.TransformSensorResponse.FromString,
                )
        self.filtered_sensor_space = channel.unary_unary(
                '/composabl.RemoteSkillIsolationServer/filtered_sensor_space',
                request_serializer=composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceResponse.FromString,
                )


class RemoteSkillIsolationServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def make(self, request, context):
        """Calls the teacher's "compute_reward" method
        - RemoteSkillMakeRequest: Contains the URL for the remote teacher
        - RemoteSkillMakeResponse: Returns an acknowledgement
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset(self, request, context):
        """Reinstantiates a new teacher
        - RemoteSkillResetRequest: Contains the parameters for the teacher method.
        - RemoteSkillResetResponse: Acknowledgement the teacher is reset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
        """Performs any necessary cleanup before the teacher is closed.
        - RemoteSkillCloseRequest: Contains the parameters for the teacher method.
        - RemoteSkillCloseResponse: Acknowledgement the teacher is closed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_reward(self, request, context):
        """Calls the teacher's "compute_reward" method
        - ComputeRewardRequest: Contains parameters for the teacher method.
        - ComputeRewardResponse: Returns the computed reward from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_success_criteria(self, request, context):
        """Calls the teacher's "compute_success_criteria" method
        - ComputeSuccessCriteriaRequest: Contains the parameters for the teacher method.
        - ComputeSuccessCriteriaResponse: Returns the computed the success criteria from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_termination(self, request, context):
        """Calls the teacher's "compute_termination" method
        - ComputeTerminationRequest: Contains the parameters for the teacher method.
        - ComputeTerminationResponse: Returns the computed the success criteria from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_action_mask(self, request, context):
        """Calls the teacher's "compute_action_mask" method
        - ComputeActionMaskRequest: Contains the parameters for the teacher method.
        - ComputeActionMaskResponse: Returns the computed action mask from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def transform_action(self, request, context):
        """Calls the teacher's "transform_action" method
        - TransformActionRequest: Contains the parameters for the teacher method.
        - TransformActionResponse: Returns the transformed action from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def transform_sensors(self, request, context):
        """Calls the teacher's "transform_sensors" method
        - TransformSensorRequest: Contains the parameters for the teacher method.
        - TransformSensorResponse: Returns the transformed sensor from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def filtered_sensor_space(self, request, context):
        """Calls the teacher's "filtered_sensor_space" method
        - FilteredSensorSpaceRequest: Contains the parameters for the teacher method.
        - FilteredSensorSpaceResponse: Returns the filtered sensor space from the teacher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemoteSkillIsolationServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'make': grpc.unary_unary_rpc_method_handler(
                    servicer.make,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillMakeRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillMakeResponse.SerializeToString,
            ),
            'reset': grpc.unary_unary_rpc_method_handler(
                    servicer.reset,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillResetRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillResetResponse.SerializeToString,
            ),
            'close': grpc.unary_unary_rpc_method_handler(
                    servicer.close,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteSkillCloseRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteSkillCloseResponse.SerializeToString,
            ),
            'compute_reward': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_reward,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ComputeRewardRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ComputeRewardResponse.SerializeToString,
            ),
            'compute_success_criteria': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_success_criteria,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaResponse.SerializeToString,
            ),
            'compute_termination': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_termination,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ComputeTerminationRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ComputeTerminationResponse.SerializeToString,
            ),
            'compute_action_mask': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_action_mask,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.ComputeActionMaskRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.ComputeActionMaskResponse.SerializeToString,
            ),
            'transform_action': grpc.unary_unary_rpc_method_handler(
                    servicer.transform_action,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.TransformActionRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.TransformActionResponse.SerializeToString,
            ),
            'transform_sensors': grpc.unary_unary_rpc_method_handler(
                    servicer.transform_sensors,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.TransformSensorRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.TransformSensorResponse.SerializeToString,
            ),
            'filtered_sensor_space': grpc.unary_unary_rpc_method_handler(
                    servicer.filtered_sensor_space,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'composabl.RemoteSkillIsolationServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemoteSkillIsolationServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def make(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/make',
            composabl_dot_v1_dot_main__pb2.RemoteSkillMakeRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteSkillMakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/reset',
            composabl_dot_v1_dot_main__pb2.RemoteSkillResetRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteSkillResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/close',
            composabl_dot_v1_dot_main__pb2.RemoteSkillCloseRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteSkillCloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_reward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/compute_reward',
            composabl_dot_v1_dot_main__pb2.ComputeRewardRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ComputeRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_success_criteria(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/compute_success_criteria',
            composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ComputeSuccessCriteriaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_termination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/compute_termination',
            composabl_dot_v1_dot_main__pb2.ComputeTerminationRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ComputeTerminationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_action_mask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/compute_action_mask',
            composabl_dot_v1_dot_main__pb2.ComputeActionMaskRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ComputeActionMaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def transform_action(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/transform_action',
            composabl_dot_v1_dot_main__pb2.TransformActionRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.TransformActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def transform_sensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/transform_sensors',
            composabl_dot_v1_dot_main__pb2.TransformSensorRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.TransformSensorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def filtered_sensor_space(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteSkillIsolationServer/filtered_sensor_space',
            composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.FilteredSensorSpaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RemotePerceptorIsolationServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.make = channel.unary_unary(
                '/composabl.RemotePerceptorIsolationServer/make',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeResponse.FromString,
                )
        self.reset = channel.unary_unary(
                '/composabl.RemotePerceptorIsolationServer/reset',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorResetRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorResetResponse.FromString,
                )
        self.close = channel.unary_unary(
                '/composabl.RemotePerceptorIsolationServer/close',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseResponse.FromString,
                )
        self.perceive = channel.unary_unary(
                '/composabl.RemotePerceptorIsolationServer/perceive',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveResponse.FromString,
                )


class RemotePerceptorIsolationServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def make(self, request, context):
        """Request to pull the remote perceptor down via the API
        - RemotePerceptorMakeRequest: Contains the URL for the remote teacher
        - RemotePerceptorMakeResponse: Acknowledgement the perceptor was successfully downloaded and instantiated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset(self, request, context):
        """Reinstantiates a new perceptor
        - RemotePerceptorResetRequest: Empty message
        - RemotePerceptorResetResponse: Acknowledgement the perceptor is reset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
        """Performs any necessary cleanup before the teacher is closed.
        - RemotePerceptorCloseRequest: Empty message
        - RemotePerceptorCloseResponse: Acknowledgement the connection is closed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def perceive(self, request, context):
        """Calls the remote perceptor's "compute" method
        - RemotePerceptorPerceiveRequest: Contains the composabl observation
        - RemotePerceptorPerceiveResponse: The perceptor variables
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemotePerceptorIsolationServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'make': grpc.unary_unary_rpc_method_handler(
                    servicer.make,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeResponse.SerializeToString,
            ),
            'reset': grpc.unary_unary_rpc_method_handler(
                    servicer.reset,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorResetRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorResetResponse.SerializeToString,
            ),
            'close': grpc.unary_unary_rpc_method_handler(
                    servicer.close,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseResponse.SerializeToString,
            ),
            'perceive': grpc.unary_unary_rpc_method_handler(
                    servicer.perceive,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'composabl.RemotePerceptorIsolationServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemotePerceptorIsolationServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def make(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemotePerceptorIsolationServer/make',
            composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemotePerceptorMakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemotePerceptorIsolationServer/reset',
            composabl_dot_v1_dot_main__pb2.RemotePerceptorResetRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemotePerceptorResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemotePerceptorIsolationServer/close',
            composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemotePerceptorCloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def perceive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemotePerceptorIsolationServer/perceive',
            composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemotePerceptorPerceiveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RemoteControllerIsolationServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.make = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/make',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerMakeRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerMakeResponse.FromString,
                )
        self.reset = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/reset',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerResetRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerResetResponse.FromString,
                )
        self.close = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/close',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerCloseRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerCloseResponse.FromString,
                )
        self.compute_action = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/compute_action',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionResponse.FromString,
                )
        self.compute_success_criteria = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/compute_success_criteria',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaResponse.FromString,
                )
        self.compute_termination = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/compute_termination',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationResponse.FromString,
                )
        self.transform_sensors = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/transform_sensors',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsResponse.FromString,
                )
        self.transform_action = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/transform_action',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionResponse.FromString,
                )
        self.filtered_sensor_space = channel.unary_unary(
                '/composabl.RemoteControllerIsolationServer/filtered_sensor_space',
                request_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceRequest.SerializeToString,
                response_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceResponse.FromString,
                )


class RemoteControllerIsolationServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def make(self, request, context):
        """Request to pull the remote perceptor down via the API
        - RemoteControllerMakeRequest: Contains the URL for the remote teacher
        - RemoteControllerMakeResponse: Acknowledgement the perceptor was successfully downloaded and instantiated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset(self, request, context):
        """Reinstantiates a new perceptor
        - RemoteControllerResetRequest: Empty message
        - RemoteControllerResetResponse: Acknowledgement the perceptor is reset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
        """Performs any necessary cleanup before the teacher is closed.
        - RemoteControllerCloseRequest: Empty message
        - RemoteControllerCloseResponse: Acknowledgement the connection is closed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_action(self, request, context):
        """Calls the remote controller's "compute_action" method
        - RemoteControllerComputeActionRequest: Contains the composabl observation
        - RemoteControllerComputeActionResponse: The compute_action result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_success_criteria(self, request, context):
        """Calls the remote controller's "compute_success_criteria" method
        - RemoteControllerComputeSuccessCriteriaRequest: Contains the composabl observation
        - RemoteControllerComputeSuccessCriteriaResponse: The compute_success_criteria result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def compute_termination(self, request, context):
        """Calls the remote controller's "compute_termination" method
        - RemoteControllerComputeTerminationRequest: Contains the composabl observation
        - RemoteControllerComputeTerminationResponse: The compute_termination result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def transform_sensors(self, request, context):
        """Calls the remote controller's "transform_sensors" method
        - RemoteControllerTransformSensorsRequest: Contains the composabl observation
        - RemoteControllerTransformSensorsResponse: The transform_sensors result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def transform_action(self, request, context):
        """Calls the remote controller's "transform_action" method
        - RemoteControllerTransformActionRequest: Contains the composabl observation
        - RemoteControllerTransformActionResponse: The transform_action result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def filtered_sensor_space(self, request, context):
        """Calls the remote controller's "filtered_sensor_space" method
        - RemoteControllerFilteredSensorSpaceRequest: Contains the composabl observation
        - RemoteControllerFilteredSensorSpaceResponse: The filtered_sensor_space result
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemoteControllerIsolationServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'make': grpc.unary_unary_rpc_method_handler(
                    servicer.make,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerMakeRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerMakeResponse.SerializeToString,
            ),
            'reset': grpc.unary_unary_rpc_method_handler(
                    servicer.reset,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerResetRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerResetResponse.SerializeToString,
            ),
            'close': grpc.unary_unary_rpc_method_handler(
                    servicer.close,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerCloseRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerCloseResponse.SerializeToString,
            ),
            'compute_action': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_action,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionResponse.SerializeToString,
            ),
            'compute_success_criteria': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_success_criteria,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaResponse.SerializeToString,
            ),
            'compute_termination': grpc.unary_unary_rpc_method_handler(
                    servicer.compute_termination,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationResponse.SerializeToString,
            ),
            'transform_sensors': grpc.unary_unary_rpc_method_handler(
                    servicer.transform_sensors,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsResponse.SerializeToString,
            ),
            'transform_action': grpc.unary_unary_rpc_method_handler(
                    servicer.transform_action,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionResponse.SerializeToString,
            ),
            'filtered_sensor_space': grpc.unary_unary_rpc_method_handler(
                    servicer.filtered_sensor_space,
                    request_deserializer=composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceRequest.FromString,
                    response_serializer=composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'composabl.RemoteControllerIsolationServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemoteControllerIsolationServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def make(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/make',
            composabl_dot_v1_dot_main__pb2.RemoteControllerMakeRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerMakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/reset',
            composabl_dot_v1_dot_main__pb2.RemoteControllerResetRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/close',
            composabl_dot_v1_dot_main__pb2.RemoteControllerCloseRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerCloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_action(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/compute_action',
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_success_criteria(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/compute_success_criteria',
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeSuccessCriteriaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def compute_termination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/compute_termination',
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerComputeTerminationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def transform_sensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/transform_sensors',
            composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerTransformSensorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def transform_action(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/transform_action',
            composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerTransformActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def filtered_sensor_space(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/composabl.RemoteControllerIsolationServer/filtered_sensor_space',
            composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.RemoteControllerFilteredSensorSpaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
