window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "pyro_mysql", "modulename": "pyro_mysql", "kind": "module", "doc": "<p>pyro_mysql - High-performance MySQL driver for Python, written in Rust.</p>\n\n<ul>\n<li>pyro_mysql.sync: The synchronous API using the <code>mysql</code> crate.</li>\n<li>pyro_mysql.async_: The asynchronous API using the <code>mysql_async</code> crate.</li>\n<li>pyro_mysql.error: Exceptions.</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">pyro_mysql</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">mysql</span>\n\n<span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">worker_threads</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">example_select</span><span class=\"p\">():</span>\n    <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">&quot;mysql://localhost@127.0.0.1:3306/test&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"s2\">&quot;SELECT * from mydb.mytable&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">())</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">example_transaction</span><span class=\"p\">():</span>\n    <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mysql</span><span class=\"o\">.</span><span class=\"n\">Conn</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">&quot;mysql://localhost@127.0.0.1:3306/test&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">start_transaction</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tx</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">exec_drop</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;INSERT INTO test.asyncmy(`decimal`, `date`, `datetime`, `float`, `string`, `tinyint`) VALUES (?,?,?,?,?,?)&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">(</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;2021-01-01&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;2020-07-16 22:49:54&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;asyncmy&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT * FROM mydb.mytable&#39;</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"mi\">100</span>\n\n<span class=\"c1\"># The connection pool is not tied to a single event loop.</span>\n<span class=\"c1\"># You can reuse the pool between event loops.</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">example_pool</span><span class=\"p\">())</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">example_select</span><span class=\"p\">())</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">example_transaction</span><span class=\"p\">())</span>\n<span class=\"o\">...</span>\n</code></pre>\n</div>\n"}, {"fullname": "pyro_mysql.init", "modulename": "pyro_mysql", "qualname": "init", "kind": "function", "doc": "<p>Initialize the Tokio runtime for async operations.\nThis function can be called multiple times until Any async operation is called.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>worker_threads:</strong>  Number of worker threads for the Tokio runtime. If None, set to the number of CPUs.</li>\n<li><strong>thread_name:</strong>  Name prefix for worker threads.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">worker_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">thread_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Row", "modulename": "pyro_mysql", "qualname": "Row", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.Row.to_tuple", "modulename": "pyro_mysql", "qualname": "Row.to_tuple", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Row.to_dict", "modulename": "pyro_mysql", "qualname": "Row.to_dict", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.IsolationLevel", "modulename": "pyro_mysql", "qualname": "IsolationLevel", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.IsolationLevel.as_str", "modulename": "pyro_mysql", "qualname": "IsolationLevel.as_str", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.IsolationLevel.ReadUncommitted", "modulename": "pyro_mysql", "qualname": "IsolationLevel.ReadUncommitted", "kind": "variable", "doc": "<p></p>\n", "default_value": "IsolationLevel.ReadUncommitted"}, {"fullname": "pyro_mysql.IsolationLevel.ReadCommitted", "modulename": "pyro_mysql", "qualname": "IsolationLevel.ReadCommitted", "kind": "variable", "doc": "<p></p>\n", "default_value": "IsolationLevel.ReadCommitted"}, {"fullname": "pyro_mysql.IsolationLevel.RepeatableRead", "modulename": "pyro_mysql", "qualname": "IsolationLevel.RepeatableRead", "kind": "variable", "doc": "<p></p>\n", "default_value": "IsolationLevel.RepeatableRead"}, {"fullname": "pyro_mysql.IsolationLevel.Serializable", "modulename": "pyro_mysql", "qualname": "IsolationLevel.Serializable", "kind": "variable", "doc": "<p></p>\n", "default_value": "IsolationLevel.Serializable"}, {"fullname": "pyro_mysql.CapabilityFlags", "modulename": "pyro_mysql", "qualname": "CapabilityFlags", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_LONG_PASSWORD", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_LONG_PASSWORD", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_FOUND_ROWS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_FOUND_ROWS", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_LONG_FLAG", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_LONG_FLAG", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_CONNECT_WITH_DB", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_CONNECT_WITH_DB", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_NO_SCHEMA", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_NO_SCHEMA", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_COMPRESS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_COMPRESS", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_ODBC", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_ODBC", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_LOCAL_FILES", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_LOCAL_FILES", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_IGNORE_SPACE", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_IGNORE_SPACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "256"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_PROTOCOL_41", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_PROTOCOL_41", "kind": "variable", "doc": "<p></p>\n", "default_value": "512"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_INTERACTIVE", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_INTERACTIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_SSL", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_SSL", "kind": "variable", "doc": "<p></p>\n", "default_value": "2048"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_IGNORE_SIGPIPE", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_IGNORE_SIGPIPE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4096"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_TRANSACTIONS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_TRANSACTIONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "8192"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_RESERVED", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_RESERVED", "kind": "variable", "doc": "<p></p>\n", "default_value": "16384"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_SECURE_CONNECTION", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_SECURE_CONNECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "32768"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_MULTI_STATEMENTS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_MULTI_STATEMENTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "65536"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_MULTI_RESULTS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_MULTI_RESULTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "131072"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_PS_MULTI_RESULTS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_PS_MULTI_RESULTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "262144"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_PLUGIN_AUTH", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_PLUGIN_AUTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "524288"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_CONNECT_ATTRS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_CONNECT_ATTRS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1048576"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "2097152"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "4194304"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_SESSION_TRACK", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_SESSION_TRACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "8388608"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_DEPRECATE_EOF", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_DEPRECATE_EOF", "kind": "variable", "doc": "<p></p>\n", "default_value": "16777216"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_OPTIONAL_RESULTSET_METADATA", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_OPTIONAL_RESULTSET_METADATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "33554432"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_ZSTD_COMPRESSION_ALGORITHM", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_ZSTD_COMPRESSION_ALGORITHM", "kind": "variable", "doc": "<p></p>\n", "default_value": "67108864"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_QUERY_ATTRIBUTES", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_QUERY_ATTRIBUTES", "kind": "variable", "doc": "<p></p>\n", "default_value": "134217728"}, {"fullname": "pyro_mysql.CapabilityFlags.MULTI_FACTOR_AUTHENTICATION", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.MULTI_FACTOR_AUTHENTICATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "268435456"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_PROGRESS_OBSOLETE", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_PROGRESS_OBSOLETE", "kind": "variable", "doc": "<p></p>\n", "default_value": "536870912"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_SSL_VERIFY_SERVER_CERT", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_SSL_VERIFY_SERVER_CERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "1073741824"}, {"fullname": "pyro_mysql.CapabilityFlags.CLIENT_REMEMBER_OPTIONS", "modulename": "pyro_mysql", "qualname": "CapabilityFlags.CLIENT_REMEMBER_OPTIONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "2147483648"}, {"fullname": "pyro_mysql.PyroFuture", "modulename": "pyro_mysql", "qualname": "PyroFuture", "kind": "class", "doc": "<p>A wrapper around a Python future that cancels the associated Rust future when dropped.</p>\n"}, {"fullname": "pyro_mysql.PyroFuture.cancel", "modulename": "pyro_mysql", "qualname": "PyroFuture.cancel", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PyroFuture.get_loop", "modulename": "pyro_mysql", "qualname": "PyroFuture.get_loop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Pool", "modulename": "pyro_mysql", "qualname": "Pool", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.Pool.get", "modulename": "pyro_mysql", "qualname": "Pool.get", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Pool.get", "modulename": "pyro_mysql", "qualname": "Pool.get", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn", "modulename": "pyro_mysql", "qualname": "Conn", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.Conn.start_transaction", "modulename": "pyro_mysql", "qualname": "Conn.start_transaction", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">consistent_snapshot</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">isolation_level</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readonly</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.id", "modulename": "pyro_mysql", "qualname": "Conn.id", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.affected_rows", "modulename": "pyro_mysql", "qualname": "Conn.affected_rows", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.last_insert_id", "modulename": "pyro_mysql", "qualname": "Conn.last_insert_id", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.ping", "modulename": "pyro_mysql", "qualname": "Conn.ping", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.query", "modulename": "pyro_mysql", "qualname": "Conn.query", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.query_first", "modulename": "pyro_mysql", "qualname": "Conn.query_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.query_drop", "modulename": "pyro_mysql", "qualname": "Conn.query_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.query_iter", "modulename": "pyro_mysql", "qualname": "Conn.query_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.exec", "modulename": "pyro_mysql", "qualname": "Conn.exec", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.exec_first", "modulename": "pyro_mysql", "qualname": "Conn.exec_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.exec_drop", "modulename": "pyro_mysql", "qualname": "Conn.exec_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.exec_batch", "modulename": "pyro_mysql", "qualname": "Conn.exec_batch", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params_list</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.exec_iter", "modulename": "pyro_mysql", "qualname": "Conn.exec_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.close", "modulename": "pyro_mysql", "qualname": "Conn.close", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.reset", "modulename": "pyro_mysql", "qualname": "Conn.reset", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Conn.server_version", "modulename": "pyro_mysql", "qualname": "Conn.server_version", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction", "modulename": "pyro_mysql", "qualname": "Transaction", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.Transaction.commit", "modulename": "pyro_mysql", "qualname": "Transaction.commit", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.rollback", "modulename": "pyro_mysql", "qualname": "Transaction.rollback", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.affected_rows", "modulename": "pyro_mysql", "qualname": "Transaction.affected_rows", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.query", "modulename": "pyro_mysql", "qualname": "Transaction.query", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.query_first", "modulename": "pyro_mysql", "qualname": "Transaction.query_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.query_drop", "modulename": "pyro_mysql", "qualname": "Transaction.query_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.query_iter", "modulename": "pyro_mysql", "qualname": "Transaction.query_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.exec", "modulename": "pyro_mysql", "qualname": "Transaction.exec", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.exec_first", "modulename": "pyro_mysql", "qualname": "Transaction.exec_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.exec_drop", "modulename": "pyro_mysql", "qualname": "Transaction.exec_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.exec_batch", "modulename": "pyro_mysql", "qualname": "Transaction.exec_batch", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params_list</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Transaction.exec_iter", "modulename": "pyro_mysql", "qualname": "Transaction.exec_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Opts", "modulename": "pyro_mysql", "qualname": "Opts", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.Opts.pool_opts", "modulename": "pyro_mysql", "qualname": "Opts.pool_opts", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">pool_opts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder", "modulename": "pyro_mysql", "qualname": "OptsBuilder", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.OptsBuilder.from_opts", "modulename": "pyro_mysql", "qualname": "OptsBuilder.from_opts", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">opts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.from_url", "modulename": "pyro_mysql", "qualname": "OptsBuilder.from_url", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.from_hash_map", "modulename": "pyro_mysql", "qualname": "OptsBuilder.from_hash_map", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.ip_or_hostname", "modulename": "pyro_mysql", "qualname": "OptsBuilder.ip_or_hostname", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">hostname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_port", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_port", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">port</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.socket", "modulename": "pyro_mysql", "qualname": "OptsBuilder.socket", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.bind_address", "modulename": "pyro_mysql", "qualname": "OptsBuilder.bind_address", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.user", "modulename": "pyro_mysql", "qualname": "OptsBuilder.user", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">username</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.password", "modulename": "pyro_mysql", "qualname": "OptsBuilder.password", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">password</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.db_name", "modulename": "pyro_mysql", "qualname": "OptsBuilder.db_name", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">database</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.secure_auth", "modulename": "pyro_mysql", "qualname": "OptsBuilder.secure_auth", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">enable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.read_timeout", "modulename": "pyro_mysql", "qualname": "OptsBuilder.read_timeout", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">seconds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.write_timeout", "modulename": "pyro_mysql", "qualname": "OptsBuilder.write_timeout", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">seconds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_connect_timeout", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_connect_timeout", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">seconds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.stmt_cache_size", "modulename": "pyro_mysql", "qualname": "OptsBuilder.stmt_cache_size", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_nodelay", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_nodelay", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">enable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_keepalive_time_ms", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_keepalive_time_ms", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">time_ms</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_keepalive_probe_interval_secs", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_keepalive_probe_interval_secs", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">interval_secs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_keepalive_probe_count", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_keepalive_probe_count", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">count</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.tcp_user_timeout_ms", "modulename": "pyro_mysql", "qualname": "OptsBuilder.tcp_user_timeout_ms", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">timeout_ms</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.max_allowed_packet", "modulename": "pyro_mysql", "qualname": "OptsBuilder.max_allowed_packet", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">max_allowed_packet</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.prefer_socket", "modulename": "pyro_mysql", "qualname": "OptsBuilder.prefer_socket", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">prefer_socket</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.init", "modulename": "pyro_mysql", "qualname": "OptsBuilder.init", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">commands</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.connect_attrs", "modulename": "pyro_mysql", "qualname": "OptsBuilder.connect_attrs", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">attrs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.compress", "modulename": "pyro_mysql", "qualname": "OptsBuilder.compress", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">level</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.ssl_opts", "modulename": "pyro_mysql", "qualname": "OptsBuilder.ssl_opts", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">_opts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.local_infile_handler", "modulename": "pyro_mysql", "qualname": "OptsBuilder.local_infile_handler", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">_handler</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.pool_opts", "modulename": "pyro_mysql", "qualname": "OptsBuilder.pool_opts", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">opts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.additional_capabilities", "modulename": "pyro_mysql", "qualname": "OptsBuilder.additional_capabilities", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">capabilities</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.enable_cleartext_plugin", "modulename": "pyro_mysql", "qualname": "OptsBuilder.enable_cleartext_plugin", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">enable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.OptsBuilder.build", "modulename": "pyro_mysql", "qualname": "OptsBuilder.build", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PoolOpts", "modulename": "pyro_mysql", "qualname": "PoolOpts", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.PoolOpts.with_constraints", "modulename": "pyro_mysql", "qualname": "PoolOpts.with_constraints", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">constraints</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn", "modulename": "pyro_mysql", "qualname": "PooledConn", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "pyro_mysql.PooledConn.start_transaction", "modulename": "pyro_mysql", "qualname": "PooledConn.start_transaction", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">consistent_snapshot</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">isolation_level</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readonly</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.affected_rows", "modulename": "pyro_mysql", "qualname": "PooledConn.affected_rows", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.ping", "modulename": "pyro_mysql", "qualname": "PooledConn.ping", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.query", "modulename": "pyro_mysql", "qualname": "PooledConn.query", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.query_first", "modulename": "pyro_mysql", "qualname": "PooledConn.query_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.query_drop", "modulename": "pyro_mysql", "qualname": "PooledConn.query_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.query_iter", "modulename": "pyro_mysql", "qualname": "PooledConn.query_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.exec", "modulename": "pyro_mysql", "qualname": "PooledConn.exec", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.exec_first", "modulename": "pyro_mysql", "qualname": "PooledConn.exec_first", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.exec_drop", "modulename": "pyro_mysql", "qualname": "PooledConn.exec_drop", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.exec_batch", "modulename": "pyro_mysql", "qualname": "PooledConn.exec_batch", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params_list</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.exec_iter", "modulename": "pyro_mysql", "qualname": "PooledConn.exec_iter", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"bp\">Ellipsis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.PooledConn.close", "modulename": "pyro_mysql", "qualname": "PooledConn.close", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyro_mysql.Value", "modulename": "pyro_mysql", "qualname": "Value", "kind": "variable", "doc": "<p>Type alias for the purpose of documenation.</p>\n\n<p>These Python types can be converted to MySQL values:</p>\n\n<ul>\n<li><code>None</code></li>\n<li><code>bool</code></li>\n<li><code>int</code></li>\n<li><code>float</code></li>\n<li><code>str</code></li>\n<li><code>bytes</code></li>\n<li><code>bytearray</code></li>\n<li><code>tuple[Any, ...]</code></li>\n<li><code>list[Any]</code></li>\n<li><code>dict[str, Any]</code></li>\n<li><code>datetime.datetime</code></li>\n<li><code>datetime.date</code></li>\n<li><code>datetime.time</code></li>\n<li><code>datetime.timedelta</code></li>\n<li><code>time.struct_time</code></li>\n<li><code>decimal.Decimal</code></li>\n</ul>\n", "annotation": ": &#x27;type[None | bool | int | float | str | bytes | bytearray | tuple[Any, ...] | list[Any] | dict[str, Any] | datetime.datetime | datetime.date | datetime.time | datetime.timedelta | time.struct_time | decimal.Decimal]&#x27;"}, {"fullname": "pyro_mysql.Params", "modulename": "pyro_mysql", "qualname": "Params", "kind": "variable", "doc": "<p>Type alias for the purpose of documenation.</p>\n\n<p>Parameters that can be passed to query execution methods:</p>\n\n<ul>\n<li><code>None</code>: No parameters</li>\n<li><code>tuple[Value, ...]</code>: Positional parameters for queries with ? placeholders</li>\n<li><code>list[Value]</code>: List of parameters for queries with ? placeholders  </li>\n<li><code>dict[str, Value]</code>: Named parameters for queries with named placeholders</li>\n</ul>\n\n<p>Examples:</p>\n\n<h6 id=\"no-parameters\">No parameters:</h6>\n\n<blockquote>\n  <p><code>await conn.exec(\"SELECT * FROM users\")</code></p>\n</blockquote>\n\n<h6 id=\"positional-parameters\">Positional parameters:</h6>\n\n<blockquote>\n  <p><code>await conn.exec(\"SELECT * FROM users WHERE id = ?\", (123,))</code></p>\n</blockquote>\n\n<h6 id=\"multiple-positional-parameters\">Multiple positional parameters:</h6>\n\n<blockquote>\n  <p><code>await conn.exec(\"SELECT * FROM users WHERE age &gt; ? AND city = ?\", (18, \"NYC\"))</code></p>\n</blockquote>\n\n<h6 id=\"named-parameters\">Named parameters:</h6>\n\n<blockquote>\n  <p><code>await conn.exec(\"SELECT * FROM users WHERE age &gt; :age AND city = :city\", dict(age=18, name=\"NYC\"))</code></p>\n</blockquote>\n", "annotation": ": &#x27;type[None | tuple[Value, ...] | list[Value] | dict[str, Value]]&#x27;"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();