// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/example/example_parser_configuration.proto
// Protobuf C++ Version: 6.31.1

#ifndef tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_2epb_2eh
#define tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
}  // extern "C"
namespace tensorflow {
class ExampleParserConfiguration;
struct ExampleParserConfigurationDefaultTypeInternal;
PROTOBUF_EXPORT extern ExampleParserConfigurationDefaultTypeInternal _ExampleParserConfiguration_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ExampleParserConfiguration_class_data_;
class ExampleParserConfiguration_FeatureMapEntry_DoNotUse;
struct ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal;
PROTOBUF_EXPORT extern ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal _ExampleParserConfiguration_FeatureMapEntry_DoNotUse_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ExampleParserConfiguration_FeatureMapEntry_DoNotUse_class_data_;
class FeatureConfiguration;
struct FeatureConfigurationDefaultTypeInternal;
PROTOBUF_EXPORT extern FeatureConfigurationDefaultTypeInternal _FeatureConfiguration_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull FeatureConfiguration_class_data_;
class FixedLenFeatureProto;
struct FixedLenFeatureProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern FixedLenFeatureProtoDefaultTypeInternal _FixedLenFeatureProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull FixedLenFeatureProto_class_data_;
class VarLenFeatureProto;
struct VarLenFeatureProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern VarLenFeatureProtoDefaultTypeInternal _VarLenFeatureProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull VarLenFeatureProto_class_data_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT VarLenFeatureProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.VarLenFeatureProto) */ {
 public:
  inline VarLenFeatureProto() : VarLenFeatureProto(nullptr) {}
  ~VarLenFeatureProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VarLenFeatureProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VarLenFeatureProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VarLenFeatureProto(::google::protobuf::internal::ConstantInitialized);

  inline VarLenFeatureProto(const VarLenFeatureProto& from) : VarLenFeatureProto(nullptr, from) {}
  inline VarLenFeatureProto(VarLenFeatureProto&& from) noexcept
      : VarLenFeatureProto(nullptr, ::std::move(from)) {}
  inline VarLenFeatureProto& operator=(const VarLenFeatureProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline VarLenFeatureProto& operator=(VarLenFeatureProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VarLenFeatureProto& default_instance() {
    return *reinterpret_cast<const VarLenFeatureProto*>(
        &_VarLenFeatureProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(VarLenFeatureProto& a, VarLenFeatureProto& b) { a.Swap(&b); }
  inline void Swap(VarLenFeatureProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VarLenFeatureProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VarLenFeatureProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VarLenFeatureProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VarLenFeatureProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VarLenFeatureProto& from) { VarLenFeatureProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VarLenFeatureProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.VarLenFeatureProto"; }

 protected:
  explicit VarLenFeatureProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VarLenFeatureProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VarLenFeatureProto& from);
  VarLenFeatureProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VarLenFeatureProto&& from) noexcept
      : VarLenFeatureProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesOutputTensorNameFieldNumber = 2,
    kIndicesOutputTensorNameFieldNumber = 3,
    kShapesOutputTensorNameFieldNumber = 4,
    kDtypeFieldNumber = 1,
  };
  // string values_output_tensor_name = 2;
  void clear_values_output_tensor_name() ;
  const ::std::string& values_output_tensor_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_values_output_tensor_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_values_output_tensor_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_values_output_tensor_name();
  void set_allocated_values_output_tensor_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_values_output_tensor_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_values_output_tensor_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_values_output_tensor_name();

  public:
  // string indices_output_tensor_name = 3;
  void clear_indices_output_tensor_name() ;
  const ::std::string& indices_output_tensor_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_indices_output_tensor_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_indices_output_tensor_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_indices_output_tensor_name();
  void set_allocated_indices_output_tensor_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_indices_output_tensor_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_indices_output_tensor_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_indices_output_tensor_name();

  public:
  // string shapes_output_tensor_name = 4;
  void clear_shapes_output_tensor_name() ;
  const ::std::string& shapes_output_tensor_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_shapes_output_tensor_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_shapes_output_tensor_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_shapes_output_tensor_name();
  void set_allocated_shapes_output_tensor_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_shapes_output_tensor_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_shapes_output_tensor_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_shapes_output_tensor_name();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.VarLenFeatureProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 114,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VarLenFeatureProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr values_output_tensor_name_;
    ::google::protobuf::internal::ArenaStringPtr indices_output_tensor_name_;
    ::google::protobuf::internal::ArenaStringPtr shapes_output_tensor_name_;
    int dtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull VarLenFeatureProto_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FixedLenFeatureProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.FixedLenFeatureProto) */ {
 public:
  inline FixedLenFeatureProto() : FixedLenFeatureProto(nullptr) {}
  ~FixedLenFeatureProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FixedLenFeatureProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FixedLenFeatureProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FixedLenFeatureProto(::google::protobuf::internal::ConstantInitialized);

  inline FixedLenFeatureProto(const FixedLenFeatureProto& from) : FixedLenFeatureProto(nullptr, from) {}
  inline FixedLenFeatureProto(FixedLenFeatureProto&& from) noexcept
      : FixedLenFeatureProto(nullptr, ::std::move(from)) {}
  inline FixedLenFeatureProto& operator=(const FixedLenFeatureProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline FixedLenFeatureProto& operator=(FixedLenFeatureProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FixedLenFeatureProto& default_instance() {
    return *reinterpret_cast<const FixedLenFeatureProto*>(
        &_FixedLenFeatureProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FixedLenFeatureProto& a, FixedLenFeatureProto& b) { a.Swap(&b); }
  inline void Swap(FixedLenFeatureProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FixedLenFeatureProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FixedLenFeatureProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FixedLenFeatureProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FixedLenFeatureProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FixedLenFeatureProto& from) { FixedLenFeatureProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FixedLenFeatureProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.FixedLenFeatureProto"; }

 protected:
  explicit FixedLenFeatureProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FixedLenFeatureProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FixedLenFeatureProto& from);
  FixedLenFeatureProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FixedLenFeatureProto&& from) noexcept
      : FixedLenFeatureProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesOutputTensorNameFieldNumber = 4,
    kShapeFieldNumber = 2,
    kDefaultValueFieldNumber = 3,
    kDtypeFieldNumber = 1,
  };
  // string values_output_tensor_name = 4;
  void clear_values_output_tensor_name() ;
  const ::std::string& values_output_tensor_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_values_output_tensor_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_values_output_tensor_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_values_output_tensor_name();
  void set_allocated_values_output_tensor_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_values_output_tensor_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_values_output_tensor_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_values_output_tensor_name();

  public:
  // .tensorflow.TensorShapeProto shape = 2;
  bool has_shape() const;
  void clear_shape() ;
  const ::tensorflow::TensorShapeProto& shape() const;
  [[nodiscard]] ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE release_shape();
  ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL mutable_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value);
  ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE unsafe_arena_release_shape();

  private:
  const ::tensorflow::TensorShapeProto& _internal_shape() const;
  ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL _internal_mutable_shape();

  public:
  // .tensorflow.TensorProto default_value = 3;
  bool has_default_value() const;
  void clear_default_value() ;
  const ::tensorflow::TensorProto& default_value() const;
  [[nodiscard]] ::tensorflow::TensorProto* PROTOBUF_NULLABLE release_default_value();
  ::tensorflow::TensorProto* PROTOBUF_NONNULL mutable_default_value();
  void set_allocated_default_value(::tensorflow::TensorProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_default_value(::tensorflow::TensorProto* PROTOBUF_NULLABLE value);
  ::tensorflow::TensorProto* PROTOBUF_NULLABLE unsafe_arena_release_default_value();

  private:
  const ::tensorflow::TensorProto& _internal_default_value() const;
  ::tensorflow::TensorProto* PROTOBUF_NONNULL _internal_mutable_default_value();

  public:
  // .tensorflow.DataType dtype = 1;
  void clear_dtype() ;
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  private:
  ::tensorflow::DataType _internal_dtype() const;
  void _internal_set_dtype(::tensorflow::DataType value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.FixedLenFeatureProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FixedLenFeatureProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr values_output_tensor_name_;
    ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE shape_;
    ::tensorflow::TensorProto* PROTOBUF_NULLABLE default_value_;
    int dtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull FixedLenFeatureProto_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT FeatureConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.FeatureConfiguration) */ {
 public:
  inline FeatureConfiguration() : FeatureConfiguration(nullptr) {}
  ~FeatureConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FeatureConfiguration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FeatureConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeatureConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline FeatureConfiguration(const FeatureConfiguration& from) : FeatureConfiguration(nullptr, from) {}
  inline FeatureConfiguration(FeatureConfiguration&& from) noexcept
      : FeatureConfiguration(nullptr, ::std::move(from)) {}
  inline FeatureConfiguration& operator=(const FeatureConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeatureConfiguration& operator=(FeatureConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeatureConfiguration& default_instance() {
    return *reinterpret_cast<const FeatureConfiguration*>(
        &_FeatureConfiguration_default_instance_);
  }
  enum ConfigCase {
    kFixedLenFeature = 1,
    kVarLenFeature = 2,
    CONFIG_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FeatureConfiguration& a, FeatureConfiguration& b) { a.Swap(&b); }
  inline void Swap(FeatureConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeatureConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeatureConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FeatureConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeatureConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeatureConfiguration& from) { FeatureConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FeatureConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.FeatureConfiguration"; }

 protected:
  explicit FeatureConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FeatureConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FeatureConfiguration& from);
  FeatureConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FeatureConfiguration&& from) noexcept
      : FeatureConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFixedLenFeatureFieldNumber = 1,
    kVarLenFeatureFieldNumber = 2,
  };
  // .tensorflow.FixedLenFeatureProto fixed_len_feature = 1;
  bool has_fixed_len_feature() const;
  private:
  bool _internal_has_fixed_len_feature() const;

  public:
  void clear_fixed_len_feature() ;
  const ::tensorflow::FixedLenFeatureProto& fixed_len_feature() const;
  [[nodiscard]] ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE release_fixed_len_feature();
  ::tensorflow::FixedLenFeatureProto* PROTOBUF_NONNULL mutable_fixed_len_feature();
  void set_allocated_fixed_len_feature(::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_fixed_len_feature(::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE value);
  ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE unsafe_arena_release_fixed_len_feature();

  private:
  const ::tensorflow::FixedLenFeatureProto& _internal_fixed_len_feature() const;
  ::tensorflow::FixedLenFeatureProto* PROTOBUF_NONNULL _internal_mutable_fixed_len_feature();

  public:
  // .tensorflow.VarLenFeatureProto var_len_feature = 2;
  bool has_var_len_feature() const;
  private:
  bool _internal_has_var_len_feature() const;

  public:
  void clear_var_len_feature() ;
  const ::tensorflow::VarLenFeatureProto& var_len_feature() const;
  [[nodiscard]] ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE release_var_len_feature();
  ::tensorflow::VarLenFeatureProto* PROTOBUF_NONNULL mutable_var_len_feature();
  void set_allocated_var_len_feature(::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_var_len_feature(::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE value);
  ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE unsafe_arena_release_var_len_feature();

  private:
  const ::tensorflow::VarLenFeatureProto& _internal_var_len_feature() const;
  ::tensorflow::VarLenFeatureProto* PROTOBUF_NONNULL _internal_mutable_var_len_feature();

  public:
  void clear_config();
  ConfigCase config_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.FeatureConfiguration)
 private:
  class _Internal;
  void set_has_fixed_len_feature();
  void set_has_var_len_feature();
  inline bool has_config() const;
  inline void clear_has_config();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FeatureConfiguration& from_msg);
    union ConfigUnion {
      constexpr ConfigUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE fixed_len_feature_;
      ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE var_len_feature_;
    } config_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull FeatureConfiguration_class_data_;
// -------------------------------------------------------------------

class ExampleParserConfiguration_FeatureMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ExampleParserConfiguration_FeatureMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExampleParserConfiguration_FeatureMapEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ExampleParserConfiguration_FeatureMapEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ExampleParserConfiguration_FeatureMapEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 65,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ExampleParserConfiguration_FeatureMapEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ExampleParserConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.ExampleParserConfiguration) */ {
 public:
  inline ExampleParserConfiguration() : ExampleParserConfiguration(nullptr) {}
  ~ExampleParserConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExampleParserConfiguration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExampleParserConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExampleParserConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline ExampleParserConfiguration(const ExampleParserConfiguration& from) : ExampleParserConfiguration(nullptr, from) {}
  inline ExampleParserConfiguration(ExampleParserConfiguration&& from) noexcept
      : ExampleParserConfiguration(nullptr, ::std::move(from)) {}
  inline ExampleParserConfiguration& operator=(const ExampleParserConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExampleParserConfiguration& operator=(ExampleParserConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExampleParserConfiguration& default_instance() {
    return *reinterpret_cast<const ExampleParserConfiguration*>(
        &_ExampleParserConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ExampleParserConfiguration& a, ExampleParserConfiguration& b) { a.Swap(&b); }
  inline void Swap(ExampleParserConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExampleParserConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExampleParserConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExampleParserConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExampleParserConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExampleParserConfiguration& from) { ExampleParserConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExampleParserConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.ExampleParserConfiguration"; }

 protected:
  explicit ExampleParserConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ExampleParserConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExampleParserConfiguration& from);
  ExampleParserConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ExampleParserConfiguration&& from) noexcept
      : ExampleParserConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureMapFieldNumber = 1,
  };
  // map<string, .tensorflow.FeatureConfiguration> feature_map = 1;
  int feature_map_size() const;
  private:
  int _internal_feature_map_size() const;

  public:
  void clear_feature_map() ;
  const ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>& feature_map() const;
  ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>* PROTOBUF_NONNULL mutable_feature_map();

  private:
  const ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>& _internal_feature_map() const;
  ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>* PROTOBUF_NONNULL _internal_mutable_feature_map();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.ExampleParserConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   2, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ExampleParserConfiguration& from_msg);
    ::google::protobuf::internal::MapField<ExampleParserConfiguration_FeatureMapEntry_DoNotUse, std::string, ::tensorflow::FeatureConfiguration,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        feature_map_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ExampleParserConfiguration_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VarLenFeatureProto

// .tensorflow.DataType dtype = 1;
inline void VarLenFeatureProto::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::tensorflow::DataType VarLenFeatureProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.VarLenFeatureProto.dtype)
  return _internal_dtype();
}
inline void VarLenFeatureProto::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tensorflow.VarLenFeatureProto.dtype)
}
inline ::tensorflow::DataType VarLenFeatureProto::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void VarLenFeatureProto::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// string values_output_tensor_name = 2;
inline void VarLenFeatureProto::clear_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_output_tensor_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& VarLenFeatureProto::values_output_tensor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VarLenFeatureProto.values_output_tensor_name)
  return _internal_values_output_tensor_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VarLenFeatureProto::set_values_output_tensor_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.values_output_tensor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VarLenFeatureProto.values_output_tensor_name)
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::mutable_values_output_tensor_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_values_output_tensor_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VarLenFeatureProto.values_output_tensor_name)
  return _s;
}
inline const ::std::string& VarLenFeatureProto::_internal_values_output_tensor_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_output_tensor_name_.Get();
}
inline void VarLenFeatureProto::_internal_set_values_output_tensor_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.values_output_tensor_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::_internal_mutable_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.values_output_tensor_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VarLenFeatureProto::release_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VarLenFeatureProto.values_output_tensor_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.values_output_tensor_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.values_output_tensor_name_.Set("", GetArena());
  }
  return released;
}
inline void VarLenFeatureProto::set_allocated_values_output_tensor_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.values_output_tensor_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.values_output_tensor_name_.IsDefault()) {
    _impl_.values_output_tensor_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VarLenFeatureProto.values_output_tensor_name)
}

// string indices_output_tensor_name = 3;
inline void VarLenFeatureProto::clear_indices_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.indices_output_tensor_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& VarLenFeatureProto::indices_output_tensor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VarLenFeatureProto.indices_output_tensor_name)
  return _internal_indices_output_tensor_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VarLenFeatureProto::set_indices_output_tensor_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.indices_output_tensor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VarLenFeatureProto.indices_output_tensor_name)
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::mutable_indices_output_tensor_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_indices_output_tensor_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VarLenFeatureProto.indices_output_tensor_name)
  return _s;
}
inline const ::std::string& VarLenFeatureProto::_internal_indices_output_tensor_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.indices_output_tensor_name_.Get();
}
inline void VarLenFeatureProto::_internal_set_indices_output_tensor_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.indices_output_tensor_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::_internal_mutable_indices_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.indices_output_tensor_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VarLenFeatureProto::release_indices_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VarLenFeatureProto.indices_output_tensor_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.indices_output_tensor_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.indices_output_tensor_name_.Set("", GetArena());
  }
  return released;
}
inline void VarLenFeatureProto::set_allocated_indices_output_tensor_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.indices_output_tensor_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.indices_output_tensor_name_.IsDefault()) {
    _impl_.indices_output_tensor_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VarLenFeatureProto.indices_output_tensor_name)
}

// string shapes_output_tensor_name = 4;
inline void VarLenFeatureProto::clear_shapes_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shapes_output_tensor_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& VarLenFeatureProto::shapes_output_tensor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.VarLenFeatureProto.shapes_output_tensor_name)
  return _internal_shapes_output_tensor_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void VarLenFeatureProto::set_shapes_output_tensor_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.shapes_output_tensor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.VarLenFeatureProto.shapes_output_tensor_name)
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::mutable_shapes_output_tensor_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_shapes_output_tensor_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.VarLenFeatureProto.shapes_output_tensor_name)
  return _s;
}
inline const ::std::string& VarLenFeatureProto::_internal_shapes_output_tensor_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shapes_output_tensor_name_.Get();
}
inline void VarLenFeatureProto::_internal_set_shapes_output_tensor_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.shapes_output_tensor_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL VarLenFeatureProto::_internal_mutable_shapes_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.shapes_output_tensor_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE VarLenFeatureProto::release_shapes_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.VarLenFeatureProto.shapes_output_tensor_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.shapes_output_tensor_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.shapes_output_tensor_name_.Set("", GetArena());
  }
  return released;
}
inline void VarLenFeatureProto::set_allocated_shapes_output_tensor_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.shapes_output_tensor_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.shapes_output_tensor_name_.IsDefault()) {
    _impl_.shapes_output_tensor_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.VarLenFeatureProto.shapes_output_tensor_name)
}

// -------------------------------------------------------------------

// FixedLenFeatureProto

// .tensorflow.DataType dtype = 1;
inline void FixedLenFeatureProto::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::tensorflow::DataType FixedLenFeatureProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.FixedLenFeatureProto.dtype)
  return _internal_dtype();
}
inline void FixedLenFeatureProto::set_dtype(::tensorflow::DataType value) {
  _internal_set_dtype(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tensorflow.FixedLenFeatureProto.dtype)
}
inline ::tensorflow::DataType FixedLenFeatureProto::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::DataType>(_impl_.dtype_);
}
inline void FixedLenFeatureProto::_internal_set_dtype(::tensorflow::DataType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_ = value;
}

// .tensorflow.TensorShapeProto shape = 2;
inline bool FixedLenFeatureProto::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shape_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorShapeProto& FixedLenFeatureProto::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorShapeProto* p = _impl_.shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorShapeProto&>(::tensorflow::_TensorShapeProto_default_instance_);
}
inline const ::tensorflow::TensorShapeProto& FixedLenFeatureProto::shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FixedLenFeatureProto.shape)
  return _internal_shape();
}
inline void FixedLenFeatureProto::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }
  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FixedLenFeatureProto.shape)
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE FixedLenFeatureProto::release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::TensorShapeProto* released = _impl_.shape_;
  _impl_.shape_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE FixedLenFeatureProto::unsafe_arena_release_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.FixedLenFeatureProto.shape)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::TensorShapeProto* temp = _impl_.shape_;
  _impl_.shape_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL FixedLenFeatureProto::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorShapeProto>(GetArena());
    _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(p);
  }
  return _impl_.shape_;
}
inline ::tensorflow::TensorShapeProto* PROTOBUF_NONNULL FixedLenFeatureProto::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::TensorShapeProto* _msg = _internal_mutable_shape();
  // @@protoc_insertion_point(field_mutable:tensorflow.FixedLenFeatureProto.shape)
  return _msg;
}
inline void FixedLenFeatureProto::set_allocated_shape(::tensorflow::TensorShapeProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.shape_ = reinterpret_cast<::tensorflow::TensorShapeProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FixedLenFeatureProto.shape)
}

// .tensorflow.TensorProto default_value = 3;
inline bool FixedLenFeatureProto::has_default_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.default_value_ != nullptr);
  return value;
}
inline const ::tensorflow::TensorProto& FixedLenFeatureProto::_internal_default_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::TensorProto* p = _impl_.default_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::TensorProto&>(::tensorflow::_TensorProto_default_instance_);
}
inline const ::tensorflow::TensorProto& FixedLenFeatureProto::default_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FixedLenFeatureProto.default_value)
  return _internal_default_value();
}
inline void FixedLenFeatureProto::unsafe_arena_set_allocated_default_value(
    ::tensorflow::TensorProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_value_);
  }
  _impl_.default_value_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FixedLenFeatureProto.default_value)
}
inline ::tensorflow::TensorProto* PROTOBUF_NULLABLE FixedLenFeatureProto::release_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::TensorProto* released = _impl_.default_value_;
  _impl_.default_value_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::TensorProto* PROTOBUF_NULLABLE FixedLenFeatureProto::unsafe_arena_release_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.FixedLenFeatureProto.default_value)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::TensorProto* temp = _impl_.default_value_;
  _impl_.default_value_ = nullptr;
  return temp;
}
inline ::tensorflow::TensorProto* PROTOBUF_NONNULL FixedLenFeatureProto::_internal_mutable_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default_value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::TensorProto>(GetArena());
    _impl_.default_value_ = reinterpret_cast<::tensorflow::TensorProto*>(p);
  }
  return _impl_.default_value_;
}
inline ::tensorflow::TensorProto* PROTOBUF_NONNULL FixedLenFeatureProto::mutable_default_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tensorflow::TensorProto* _msg = _internal_mutable_default_value();
  // @@protoc_insertion_point(field_mutable:tensorflow.FixedLenFeatureProto.default_value)
  return _msg;
}
inline void FixedLenFeatureProto::set_allocated_default_value(::tensorflow::TensorProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.default_value_ = reinterpret_cast<::tensorflow::TensorProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FixedLenFeatureProto.default_value)
}

// string values_output_tensor_name = 4;
inline void FixedLenFeatureProto::clear_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_output_tensor_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FixedLenFeatureProto::values_output_tensor_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FixedLenFeatureProto.values_output_tensor_name)
  return _internal_values_output_tensor_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FixedLenFeatureProto::set_values_output_tensor_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.values_output_tensor_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.FixedLenFeatureProto.values_output_tensor_name)
}
inline ::std::string* PROTOBUF_NONNULL FixedLenFeatureProto::mutable_values_output_tensor_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_values_output_tensor_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.FixedLenFeatureProto.values_output_tensor_name)
  return _s;
}
inline const ::std::string& FixedLenFeatureProto::_internal_values_output_tensor_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_output_tensor_name_.Get();
}
inline void FixedLenFeatureProto::_internal_set_values_output_tensor_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.values_output_tensor_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FixedLenFeatureProto::_internal_mutable_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.values_output_tensor_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FixedLenFeatureProto::release_values_output_tensor_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.FixedLenFeatureProto.values_output_tensor_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.values_output_tensor_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.values_output_tensor_name_.Set("", GetArena());
  }
  return released;
}
inline void FixedLenFeatureProto::set_allocated_values_output_tensor_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.values_output_tensor_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.values_output_tensor_name_.IsDefault()) {
    _impl_.values_output_tensor_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FixedLenFeatureProto.values_output_tensor_name)
}

// -------------------------------------------------------------------

// FeatureConfiguration

// .tensorflow.FixedLenFeatureProto fixed_len_feature = 1;
inline bool FeatureConfiguration::has_fixed_len_feature() const {
  return config_case() == kFixedLenFeature;
}
inline bool FeatureConfiguration::_internal_has_fixed_len_feature() const {
  return config_case() == kFixedLenFeature;
}
inline void FeatureConfiguration::set_has_fixed_len_feature() {
  _impl_._oneof_case_[0] = kFixedLenFeature;
}
inline void FeatureConfiguration::clear_fixed_len_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (config_case() == kFixedLenFeature) {
    if (GetArena() == nullptr) {
      delete _impl_.config_.fixed_len_feature_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.fixed_len_feature_);
    }
    clear_has_config();
  }
}
inline ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE FeatureConfiguration::release_fixed_len_feature() {
  // @@protoc_insertion_point(field_release:tensorflow.FeatureConfiguration.fixed_len_feature)
  if (config_case() == kFixedLenFeature) {
    clear_has_config();
    auto* temp = _impl_.config_.fixed_len_feature_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.config_.fixed_len_feature_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::FixedLenFeatureProto& FeatureConfiguration::_internal_fixed_len_feature() const {
  return config_case() == kFixedLenFeature ? *_impl_.config_.fixed_len_feature_ : reinterpret_cast<::tensorflow::FixedLenFeatureProto&>(::tensorflow::_FixedLenFeatureProto_default_instance_);
}
inline const ::tensorflow::FixedLenFeatureProto& FeatureConfiguration::fixed_len_feature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FeatureConfiguration.fixed_len_feature)
  return _internal_fixed_len_feature();
}
inline ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE FeatureConfiguration::unsafe_arena_release_fixed_len_feature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.FeatureConfiguration.fixed_len_feature)
  if (config_case() == kFixedLenFeature) {
    clear_has_config();
    auto* temp = _impl_.config_.fixed_len_feature_;
    _impl_.config_.fixed_len_feature_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FeatureConfiguration::unsafe_arena_set_allocated_fixed_len_feature(
    ::tensorflow::FixedLenFeatureProto* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_config();
  if (value) {
    set_has_fixed_len_feature();
    _impl_.config_.fixed_len_feature_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FeatureConfiguration.fixed_len_feature)
}
inline ::tensorflow::FixedLenFeatureProto* PROTOBUF_NONNULL FeatureConfiguration::_internal_mutable_fixed_len_feature() {
  if (config_case() != kFixedLenFeature) {
    clear_config();
    set_has_fixed_len_feature();
    _impl_.config_.fixed_len_feature_ = 
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::FixedLenFeatureProto>(GetArena());
  }
  return _impl_.config_.fixed_len_feature_;
}
inline ::tensorflow::FixedLenFeatureProto* PROTOBUF_NONNULL FeatureConfiguration::mutable_fixed_len_feature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::FixedLenFeatureProto* _msg = _internal_mutable_fixed_len_feature();
  // @@protoc_insertion_point(field_mutable:tensorflow.FeatureConfiguration.fixed_len_feature)
  return _msg;
}

// .tensorflow.VarLenFeatureProto var_len_feature = 2;
inline bool FeatureConfiguration::has_var_len_feature() const {
  return config_case() == kVarLenFeature;
}
inline bool FeatureConfiguration::_internal_has_var_len_feature() const {
  return config_case() == kVarLenFeature;
}
inline void FeatureConfiguration::set_has_var_len_feature() {
  _impl_._oneof_case_[0] = kVarLenFeature;
}
inline void FeatureConfiguration::clear_var_len_feature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (config_case() == kVarLenFeature) {
    if (GetArena() == nullptr) {
      delete _impl_.config_.var_len_feature_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.var_len_feature_);
    }
    clear_has_config();
  }
}
inline ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE FeatureConfiguration::release_var_len_feature() {
  // @@protoc_insertion_point(field_release:tensorflow.FeatureConfiguration.var_len_feature)
  if (config_case() == kVarLenFeature) {
    clear_has_config();
    auto* temp = _impl_.config_.var_len_feature_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.config_.var_len_feature_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::VarLenFeatureProto& FeatureConfiguration::_internal_var_len_feature() const {
  return config_case() == kVarLenFeature ? *_impl_.config_.var_len_feature_ : reinterpret_cast<::tensorflow::VarLenFeatureProto&>(::tensorflow::_VarLenFeatureProto_default_instance_);
}
inline const ::tensorflow::VarLenFeatureProto& FeatureConfiguration::var_len_feature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.FeatureConfiguration.var_len_feature)
  return _internal_var_len_feature();
}
inline ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE FeatureConfiguration::unsafe_arena_release_var_len_feature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.FeatureConfiguration.var_len_feature)
  if (config_case() == kVarLenFeature) {
    clear_has_config();
    auto* temp = _impl_.config_.var_len_feature_;
    _impl_.config_.var_len_feature_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FeatureConfiguration::unsafe_arena_set_allocated_var_len_feature(
    ::tensorflow::VarLenFeatureProto* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_config();
  if (value) {
    set_has_var_len_feature();
    _impl_.config_.var_len_feature_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FeatureConfiguration.var_len_feature)
}
inline ::tensorflow::VarLenFeatureProto* PROTOBUF_NONNULL FeatureConfiguration::_internal_mutable_var_len_feature() {
  if (config_case() != kVarLenFeature) {
    clear_config();
    set_has_var_len_feature();
    _impl_.config_.var_len_feature_ = 
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::VarLenFeatureProto>(GetArena());
  }
  return _impl_.config_.var_len_feature_;
}
inline ::tensorflow::VarLenFeatureProto* PROTOBUF_NONNULL FeatureConfiguration::mutable_var_len_feature()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::VarLenFeatureProto* _msg = _internal_mutable_var_len_feature();
  // @@protoc_insertion_point(field_mutable:tensorflow.FeatureConfiguration.var_len_feature)
  return _msg;
}

inline bool FeatureConfiguration::has_config() const {
  return config_case() != CONFIG_NOT_SET;
}
inline void FeatureConfiguration::clear_has_config() {
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}
inline FeatureConfiguration::ConfigCase FeatureConfiguration::config_case() const {
  return FeatureConfiguration::ConfigCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExampleParserConfiguration

// map<string, .tensorflow.FeatureConfiguration> feature_map = 1;
inline int ExampleParserConfiguration::_internal_feature_map_size() const {
  return _internal_feature_map().size();
}
inline int ExampleParserConfiguration::feature_map_size() const {
  return _internal_feature_map_size();
}
inline void ExampleParserConfiguration::clear_feature_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>& ExampleParserConfiguration::_internal_feature_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>& ExampleParserConfiguration::feature_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:tensorflow.ExampleParserConfiguration.feature_map)
  return _internal_feature_map();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>* PROTOBUF_NONNULL ExampleParserConfiguration::_internal_mutable_feature_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.feature_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::tensorflow::FeatureConfiguration>* PROTOBUF_NONNULL ExampleParserConfiguration::mutable_feature_map()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ExampleParserConfiguration.feature_map)
  return _internal_mutable_feature_map();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_2epb_2eh
