// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/stream_executor/launch_dim.proto
// Protobuf C++ Version: 6.31.1

#ifndef xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto_2epb_2eh
#define xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto PROTOBUF_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct PROTOBUF_EXPORT TableStruct_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
PROTOBUF_EXPORT extern const ::google::protobuf::internal::DescriptorTable descriptor_table_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto;
}  // extern "C"
namespace stream_executor {
class BlockDimProto;
struct BlockDimProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern BlockDimProtoDefaultTypeInternal _BlockDimProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull BlockDimProto_class_data_;
class ClusterDimProto;
struct ClusterDimProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern ClusterDimProtoDefaultTypeInternal _ClusterDimProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ClusterDimProto_class_data_;
class Dim3DProto;
struct Dim3DProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern Dim3DProtoDefaultTypeInternal _Dim3DProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull Dim3DProto_class_data_;
class ThreadDimProto;
struct ThreadDimProtoDefaultTypeInternal;
PROTOBUF_EXPORT extern ThreadDimProtoDefaultTypeInternal _ThreadDimProto_default_instance_;
PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ThreadDimProto_class_data_;
}  // namespace stream_executor
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace stream_executor {

// ===================================================================


// -------------------------------------------------------------------

class PROTOBUF_EXPORT Dim3DProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.Dim3DProto) */ {
 public:
  inline Dim3DProto() : Dim3DProto(nullptr) {}
  ~Dim3DProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Dim3DProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Dim3DProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Dim3DProto(::google::protobuf::internal::ConstantInitialized);

  inline Dim3DProto(const Dim3DProto& from) : Dim3DProto(nullptr, from) {}
  inline Dim3DProto(Dim3DProto&& from) noexcept
      : Dim3DProto(nullptr, ::std::move(from)) {}
  inline Dim3DProto& operator=(const Dim3DProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline Dim3DProto& operator=(Dim3DProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Dim3DProto& default_instance() {
    return *reinterpret_cast<const Dim3DProto*>(
        &_Dim3DProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Dim3DProto& a, Dim3DProto& b) { a.Swap(&b); }
  inline void Swap(Dim3DProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Dim3DProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Dim3DProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Dim3DProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Dim3DProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Dim3DProto& from) { Dim3DProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Dim3DProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "stream_executor.Dim3DProto"; }

 protected:
  explicit Dim3DProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Dim3DProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Dim3DProto& from);
  Dim3DProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Dim3DProto&& from) noexcept
      : Dim3DProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int64 x = 1;
  void clear_x() ;
  ::int64_t x() const;
  void set_x(::int64_t value);

  private:
  ::int64_t _internal_x() const;
  void _internal_set_x(::int64_t value);

  public:
  // int64 y = 2;
  void clear_y() ;
  ::int64_t y() const;
  void set_y(::int64_t value);

  private:
  ::int64_t _internal_y() const;
  void _internal_set_y(::int64_t value);

  public:
  // int64 z = 3;
  void clear_z() ;
  ::int64_t z() const;
  void set_z(::int64_t value);

  private:
  ::int64_t _internal_z() const;
  void _internal_set_z(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.Dim3DProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Dim3DProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t x_;
    ::int64_t y_;
    ::int64_t z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull Dim3DProto_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ThreadDimProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.ThreadDimProto) */ {
 public:
  inline ThreadDimProto() : ThreadDimProto(nullptr) {}
  ~ThreadDimProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ThreadDimProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ThreadDimProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreadDimProto(::google::protobuf::internal::ConstantInitialized);

  inline ThreadDimProto(const ThreadDimProto& from) : ThreadDimProto(nullptr, from) {}
  inline ThreadDimProto(ThreadDimProto&& from) noexcept
      : ThreadDimProto(nullptr, ::std::move(from)) {}
  inline ThreadDimProto& operator=(const ThreadDimProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThreadDimProto& operator=(ThreadDimProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ThreadDimProto& default_instance() {
    return *reinterpret_cast<const ThreadDimProto*>(
        &_ThreadDimProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ThreadDimProto& a, ThreadDimProto& b) { a.Swap(&b); }
  inline void Swap(ThreadDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ThreadDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ThreadDimProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ThreadDimProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ThreadDimProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ThreadDimProto& from) { ThreadDimProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ThreadDimProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "stream_executor.ThreadDimProto"; }

 protected:
  explicit ThreadDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ThreadDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ThreadDimProto& from);
  ThreadDimProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ThreadDimProto&& from) noexcept
      : ThreadDimProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 1,
  };
  // .stream_executor.Dim3DProto coordinates = 1;
  bool has_coordinates() const;
  void clear_coordinates() ;
  const ::stream_executor::Dim3DProto& coordinates() const;
  [[nodiscard]] ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE release_coordinates();
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL mutable_coordinates();
  void set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE unsafe_arena_release_coordinates();

  private:
  const ::stream_executor::Dim3DProto& _internal_coordinates() const;
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.ThreadDimProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ThreadDimProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE coordinates_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ThreadDimProto_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT ClusterDimProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.ClusterDimProto) */ {
 public:
  inline ClusterDimProto() : ClusterDimProto(nullptr) {}
  ~ClusterDimProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterDimProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterDimProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterDimProto(::google::protobuf::internal::ConstantInitialized);

  inline ClusterDimProto(const ClusterDimProto& from) : ClusterDimProto(nullptr, from) {}
  inline ClusterDimProto(ClusterDimProto&& from) noexcept
      : ClusterDimProto(nullptr, ::std::move(from)) {}
  inline ClusterDimProto& operator=(const ClusterDimProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterDimProto& operator=(ClusterDimProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterDimProto& default_instance() {
    return *reinterpret_cast<const ClusterDimProto*>(
        &_ClusterDimProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ClusterDimProto& a, ClusterDimProto& b) { a.Swap(&b); }
  inline void Swap(ClusterDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterDimProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterDimProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterDimProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterDimProto& from) { ClusterDimProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterDimProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "stream_executor.ClusterDimProto"; }

 protected:
  explicit ClusterDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClusterDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClusterDimProto& from);
  ClusterDimProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClusterDimProto&& from) noexcept
      : ClusterDimProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 3,
  };
  // .stream_executor.Dim3DProto coordinates = 3;
  bool has_coordinates() const;
  void clear_coordinates() ;
  const ::stream_executor::Dim3DProto& coordinates() const;
  [[nodiscard]] ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE release_coordinates();
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL mutable_coordinates();
  void set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE unsafe_arena_release_coordinates();

  private:
  const ::stream_executor::Dim3DProto& _internal_coordinates() const;
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.ClusterDimProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClusterDimProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE coordinates_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull ClusterDimProto_class_data_;
// -------------------------------------------------------------------

class PROTOBUF_EXPORT BlockDimProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:stream_executor.BlockDimProto) */ {
 public:
  inline BlockDimProto() : BlockDimProto(nullptr) {}
  ~BlockDimProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockDimProto* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockDimProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockDimProto(::google::protobuf::internal::ConstantInitialized);

  inline BlockDimProto(const BlockDimProto& from) : BlockDimProto(nullptr, from) {}
  inline BlockDimProto(BlockDimProto&& from) noexcept
      : BlockDimProto(nullptr, ::std::move(from)) {}
  inline BlockDimProto& operator=(const BlockDimProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockDimProto& operator=(BlockDimProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockDimProto& default_instance() {
    return *reinterpret_cast<const BlockDimProto*>(
        &_BlockDimProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BlockDimProto& a, BlockDimProto& b) { a.Swap(&b); }
  inline void Swap(BlockDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockDimProto* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockDimProto* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockDimProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockDimProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockDimProto& from) { BlockDimProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockDimProto* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "stream_executor.BlockDimProto"; }

 protected:
  explicit BlockDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockDimProto& from);
  BlockDimProto(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockDimProto&& from) noexcept
      : BlockDimProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 2,
  };
  // .stream_executor.Dim3DProto coordinates = 2;
  bool has_coordinates() const;
  void clear_coordinates() ;
  const ::stream_executor::Dim3DProto& coordinates() const;
  [[nodiscard]] ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE release_coordinates();
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL mutable_coordinates();
  void set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value);
  ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE unsafe_arena_release_coordinates();

  private:
  const ::stream_executor::Dim3DProto& _internal_coordinates() const;
  ::stream_executor::Dim3DProto* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // @@protoc_insertion_point(class_scope:stream_executor.BlockDimProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockDimProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE coordinates_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto;
};

PROTOBUF_EXPORT extern const ::google::protobuf::internal::ClassDataFull BlockDimProto_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Dim3DProto

// int64 x = 1;
inline void Dim3DProto::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Dim3DProto::x() const {
  // @@protoc_insertion_point(field_get:stream_executor.Dim3DProto.x)
  return _internal_x();
}
inline void Dim3DProto::set_x(::int64_t value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:stream_executor.Dim3DProto.x)
}
inline ::int64_t Dim3DProto::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Dim3DProto::_internal_set_x(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int64 y = 2;
inline void Dim3DProto::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Dim3DProto::y() const {
  // @@protoc_insertion_point(field_get:stream_executor.Dim3DProto.y)
  return _internal_y();
}
inline void Dim3DProto::set_y(::int64_t value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:stream_executor.Dim3DProto.y)
}
inline ::int64_t Dim3DProto::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Dim3DProto::_internal_set_y(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// int64 z = 3;
inline void Dim3DProto::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Dim3DProto::z() const {
  // @@protoc_insertion_point(field_get:stream_executor.Dim3DProto.z)
  return _internal_z();
}
inline void Dim3DProto::set_z(::int64_t value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:stream_executor.Dim3DProto.z)
}
inline ::int64_t Dim3DProto::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Dim3DProto::_internal_set_z(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// ThreadDimProto

// .stream_executor.Dim3DProto coordinates = 1;
inline bool ThreadDimProto::has_coordinates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordinates_ != nullptr);
  return value;
}
inline void ThreadDimProto::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ != nullptr) _impl_.coordinates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stream_executor::Dim3DProto& ThreadDimProto::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::Dim3DProto* p = _impl_.coordinates_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::Dim3DProto&>(::stream_executor::_Dim3DProto_default_instance_);
}
inline const ::stream_executor::Dim3DProto& ThreadDimProto::coordinates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.ThreadDimProto.coordinates)
  return _internal_coordinates();
}
inline void ThreadDimProto::unsafe_arena_set_allocated_coordinates(
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }
  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stream_executor.ThreadDimProto.coordinates)
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE ThreadDimProto::release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* released = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE ThreadDimProto::unsafe_arena_release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.ThreadDimProto.coordinates)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* temp = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  return temp;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL ThreadDimProto::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::Dim3DProto>(GetArena());
    _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(p);
  }
  return _impl_.coordinates_;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL ThreadDimProto::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stream_executor::Dim3DProto* _msg = _internal_mutable_coordinates();
  // @@protoc_insertion_point(field_mutable:stream_executor.ThreadDimProto.coordinates)
  return _msg;
}
inline void ThreadDimProto::set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:stream_executor.ThreadDimProto.coordinates)
}

// -------------------------------------------------------------------

// BlockDimProto

// .stream_executor.Dim3DProto coordinates = 2;
inline bool BlockDimProto::has_coordinates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordinates_ != nullptr);
  return value;
}
inline void BlockDimProto::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ != nullptr) _impl_.coordinates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stream_executor::Dim3DProto& BlockDimProto::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::Dim3DProto* p = _impl_.coordinates_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::Dim3DProto&>(::stream_executor::_Dim3DProto_default_instance_);
}
inline const ::stream_executor::Dim3DProto& BlockDimProto::coordinates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.BlockDimProto.coordinates)
  return _internal_coordinates();
}
inline void BlockDimProto::unsafe_arena_set_allocated_coordinates(
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }
  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stream_executor.BlockDimProto.coordinates)
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE BlockDimProto::release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* released = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE BlockDimProto::unsafe_arena_release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.BlockDimProto.coordinates)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* temp = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  return temp;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL BlockDimProto::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::Dim3DProto>(GetArena());
    _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(p);
  }
  return _impl_.coordinates_;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL BlockDimProto::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stream_executor::Dim3DProto* _msg = _internal_mutable_coordinates();
  // @@protoc_insertion_point(field_mutable:stream_executor.BlockDimProto.coordinates)
  return _msg;
}
inline void BlockDimProto::set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:stream_executor.BlockDimProto.coordinates)
}

// -------------------------------------------------------------------

// ClusterDimProto

// .stream_executor.Dim3DProto coordinates = 3;
inline bool ClusterDimProto::has_coordinates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordinates_ != nullptr);
  return value;
}
inline void ClusterDimProto::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ != nullptr) _impl_.coordinates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::stream_executor::Dim3DProto& ClusterDimProto::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::stream_executor::Dim3DProto* p = _impl_.coordinates_;
  return p != nullptr ? *p : reinterpret_cast<const ::stream_executor::Dim3DProto&>(::stream_executor::_Dim3DProto_default_instance_);
}
inline const ::stream_executor::Dim3DProto& ClusterDimProto::coordinates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:stream_executor.ClusterDimProto.coordinates)
  return _internal_coordinates();
}
inline void ClusterDimProto::unsafe_arena_set_allocated_coordinates(
    ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }
  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:stream_executor.ClusterDimProto.coordinates)
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE ClusterDimProto::release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* released = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NULLABLE ClusterDimProto::unsafe_arena_release_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:stream_executor.ClusterDimProto.coordinates)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::stream_executor::Dim3DProto* temp = _impl_.coordinates_;
  _impl_.coordinates_ = nullptr;
  return temp;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL ClusterDimProto::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coordinates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::stream_executor::Dim3DProto>(GetArena());
    _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(p);
  }
  return _impl_.coordinates_;
}
inline ::stream_executor::Dim3DProto* PROTOBUF_NONNULL ClusterDimProto::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::stream_executor::Dim3DProto* _msg = _internal_mutable_coordinates();
  // @@protoc_insertion_point(field_mutable:stream_executor.ClusterDimProto.coordinates)
  return _msg;
}
inline void ClusterDimProto::set_allocated_coordinates(::stream_executor::Dim3DProto* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.coordinates_ = reinterpret_cast<::stream_executor::Dim3DProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:stream_executor.ClusterDimProto.coordinates)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace stream_executor


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xla_2fstream_5fexecutor_2flaunch_5fdim_2eproto_2epb_2eh
