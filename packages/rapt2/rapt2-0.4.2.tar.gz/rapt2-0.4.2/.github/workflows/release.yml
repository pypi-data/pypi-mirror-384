name: Release on version change

on:
  push:
    branches: [ master ]
    paths:
      - 'pyproject.toml'

jobs:
  release:
    name: Tag and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import re,sys,pathlib; t=pathlib.Path('pyproject.toml').read_text(); m=re.search(r'^version\\s*=\\s*\\\"([^\\\"]+)\\\"', t, re.M); print(m.group(1)) if m else sys.exit(1)")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Fetch tags
        run: |
          git fetch --tags --force --prune --no-recurse-submodules

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG=v${{ steps.get_version.outputs.version }}
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          TAG=v${{ steps.get_version.outputs.version }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          generate_release_notes: true

      - name: Build package
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
        if: steps.check_tag.outputs.exists == 'false'


