[build-system]
requires = ["setuptools>=80.9.0", "setuptools-scm>=9.2.0", "wheel>=0.45.1"]
build-backend = "setuptools.build_meta"

[project]
name = "anhaltai-gbif-downloader"
description = "This project automatically downloads taxon-specific images from the GBIF API (https://techdocs.gbif.org/en/openapi/), processes them, and stores both images and metadata in a taxonomically organized structure in a MinIO (https://www.min.io/) bucket."
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "AnhaltAI", email = "hello@anhalt.ai" }]
requires-python = ">=3.12"

keywords = ["GBIF", "image", "downloader"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

dynamic = ["version"]

dependencies = [
    "python-dotenv==1.0.1",
    "pandas==2.2.3",
    "anhaltai_commons_minio==2025.3.5",
    "requests==2.32.4",
    "pillow==11.2.1",
    "pyYAML==6.0.2",
    "openpyxl==3.1.5",
    "pandas-stubs==2.3.0.250703",
    "types-requests==2.32.4.20250611",
    "types-PyYAML==6.0.12.20250516",
]

[project.optional-dependencies]
test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]

[project.scripts]
# Adjust to your actual module and entrypoint (if you have a CLI)
# gbif-dl = "anhaltai_gbif_downloader.cli:main"

[project.urls]
Homepage = "https://pypi.org/project/anhaltai-gbif-downloader/"
#Documentation = "https://your-project.readthedocs.io"
#Source = "https://github.com/you/your-project"
#Issues = "https://github.com/you/your-project/issues"

# -----------------------------
# setuptools configuration
# -----------------------------
[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src/"]
exclude = ["tests/*"]

[tool.setuptools.package-data]
your_package = [
    "config/*",
    "data/*",
]

# -----------------------------
# setuptools-scm config
# -----------------------------
[tool.setuptools_scm]
version_scheme = "release-branch-semver"   # common choice, see below
local_scheme = "node-and-date"             # adds +g<hash> for dirty/untagged builds

# -----------------------------
# Tool configs
# -----------------------------

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.flake8]
max-line-length = 88

[tool.pylint.main]
load-plugins = ["pylint.extensions.docparams"]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.docstring_style]
convention = "google"

[tool.mypy]
python_version = "3.12"
#strict = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["anhaltai_gbif_downloader"]

[tool.coverage.report]
skip_empty = true
fail_under = 0
