[tool.poetry]
name = "nv-one-logger-pytorch-lightning-integration"
version = "2.2.0"
description = "Wrappers that facilitate enabling training job telemetry for a set of supported training frameworks."
authors = ["HWInf-MLWFO <HWInf-MLWFO-E2E-Dev@exchange.nvidia.com>"]
readme = "README.md"
packages = [
    {include = "nv_one_logger", from = "src"},
]
license = "Apache-2.0"

[project.urls]
Homepage = "https://github.com/NVIDIA/nv-one-logger"

[tool.poetry.dependencies]
# python version required minimum 3.9 to meet security requirement.
# Note: 3.14 is is breaking pytorch again, need extra cause when we upgrade to 3.14, in the future.
python = ">=3.9,<3.14"
StrEnum = "^0.4.0" # replace with built-in StrEnum if/when we upgrade Python requirement to >= 3.11
# lightning (formerly pytorch-lightning) version required minimum 2.0.0.
lightning = {version = ">=2.2.0"}
nv-one-logger-core = {version = "^2.1.0", source = "mlwfo-staging-pypi"}
nv-one-logger-training-telemetry = {version = "^2.1.0", source = "mlwfo-staging-pypi"}

# Required by NSPECT security requirements.
setuptools = {version = ">=79.0.0"}

[build-system]
requires = ["poetry-core>=1.9.1,<2.0.0", "python-semantic-release>=9.8.3,<10.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.14.1"
overrides = "^7.7.0"
pre-commit = "^3.5.0"
pytest = "^8.3.4"
pytest-cov = "^5.0.0"
annotated-types = "^0.7.0"
typing-extensions = "^4.12.2"
mypy-extensions = "^1.0.0"
flake8 = "^5.0.4"
flake8-bugbear = "^23.3.12"
flake8-pyproject = "^1.2.3"
flake8-docstrings = "^1.7.0"
python-semantic-release = "^9.8.3"

[tool.black]
line-length = 160
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
strict = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 160
max-complexity = 10
exclude = [".git", "__pycache__", "build", "dist", ".cache", ".venv",".txt",".md",".toml", ".lock"]
docstring_style = "google" 
ignore = ["D100", "D107", "W503"]
per-file-ignores = ["src/nv_one_logger/training_telemetry/integration/pytorch_lightning.py: E402"]

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
command_line = "-m unittest discover -s tests/"

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.poetry.group.test.dependencies]
# pytorch version required minimum 2.8.0 to meet security requirement. Only needed for tests.
torch = { version = ">=2.8.0" }

[[tool.poetry.source]]
name = "nv-shared-pypi"
url = "https://urm.nvidia.com/artifactory/api/pypi/nv-shared-pypi/simple"

[[tool.poetry.source]]
 name = "mlwfo-staging-pypi"
 url = "https://sc-hw-artf.nvidia.com/artifactory/api/pypi/hwinf-mlwfo-staging-pypi/simple"
 priority = "supplemental"

