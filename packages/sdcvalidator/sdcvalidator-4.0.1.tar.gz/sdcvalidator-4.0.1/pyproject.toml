[build-system]
requires = ["setuptools >= 77.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sdcvalidator"
version = "4.0.1"
description = "SDC4 XML validation with ExceptionalValue recovery"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.9"
authors = [
    { name = "Axius-SDC, Inc." },
]
maintainers = [
    { name = "Tim Cook", email = "contact@axius-sdc.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries",
    "Topic :: Text Processing :: Markup :: XML",
]
dependencies = [
    "elementpath>=5.0.1, <6.0.0",
]

[project.optional-dependencies]
codegen = [
    "jinja2",
]
dev = [
    "coverage",
    "flake8",
    "lxml",
    "lxml-stubs",
    "mypy",
    "psutil",
    "tox",
    "xmlschema[docs]",
]
docs = [
    "jinja2",
    "sphinx",
    "sphinx_rtd_theme",
]

[project.scripts]
sdcvalidate = "sdcvalidator.cli:validate"
sdc-recover = "sdcvalidator.cli:recover"
sdcvalidator-json2xml = "sdcvalidator.cli:json2xml"
sdcvalidator-xml2json = "sdcvalidator.cli:xml2json"

[project.urls]
Homepage = "https://github.com/Axius-SDC/sdcvalidator"
Repository = "https://github.com/Axius-SDC/sdcvalidator"
Issues = "https://github.com/Axius-SDC/sdcvalidator/issues"

[tool.setuptools]
include-package-data = false

[tool.setuptools.package-data]
sdcvalidator = [
    'py.typed',
    'locale/**/*.mo',
    'locale/**/*.po',
    'schemas/*/*.xsd',
    'extras/templates/*/*.jinja',
    'models/**/*.xsd',
    'models/**/*.owl',
]

[tool.setuptools.packages.find]
include = ["sdcvalidator*"]
namespaces = false

[tool.mypy]
show_error_code_links = true

[tool.coverage.run]
branch = true
source = ["sdcvalidator"]
omit = ["sdcvalidator/testing/*", "sdcvalidator/utils/protocols.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError()",
    'in self._etree_iterparse\(',
]
