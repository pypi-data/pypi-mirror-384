[build-system]
requires = ["setuptools", "wheel", "Cython>=0.29.23", "numpy >= 2.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ssm-simulators"
version = "0.11.3"
description = "SSMS is a package collecting simulators and training data generators for cognitive science, neuroscience, and approximate bayesian computation"
authors = [
    { name = "Alexander Fengler", email = "alexander_fengler@brown.edu" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">3.10,<3.13" # for compatibility with lanfactory
dependencies = [
    "scipy >= 1.6.3",
    "pandas >= 1.0.0",
    "matplotlib",
    "scikit-learn >= 0.24.0",
    "psutil >= 5.0.0",
    "pathos >= 0.3.0",
    "numpy>=2.0",
    "typer>=0.15.3",
    "pyyaml>=6.0.2",
    "tqdm>=4.67.1",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

[dependency-groups]
dev = [
    "pytest",
    "mypy",
    "black",
    "ruff",
    "pre-commit",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "ipykernel>=6.29.5",
    "nbconvert>=7.16.6",
    "nb-clean>=4.0.1",
    "pytest-timer>=1.0.0",
    "pytest-rerunfailures>=16.0.1",
]

[project.urls]
Homepage = "https://github.com/lnccbrown/ssm-simulators"
"Bug Tracker" = "https://github.com/lnccbrown/ssm-simulators/issues"

[tool.setuptools.packages.find]
include = ["ssms", "ssms.*"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO" # set minimum log level for console output
testpaths = ["tests"]
addopts = [
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--timer-top-n=25",
    "--reruns=2",
    "--reruns-delay=1",
]

[tool.ruff]
line-length = 88
exclude = ["notebooks", "docs"]

[tool.ruff.lint]
exclude = ["notebooks", "docs"]
ignore = [
    # space before : (needed for how black formats slicing)
    # "E203",  # not yet implemented
    # module level import not at top of file
    "E402",
    # do not assign a lambda expression, use a def
    "E731",
    # line break before binary operator
    # "W503",  # not yet implemented
    # line break after binary operator
    # "W504",  # not yet implemented
    # controversial
    "B006",
    # controversial
    "B007",
    # controversial
    "B008",
    # setattr is used to side-step mypy
    "B009",
    # getattr is used to side-step mypy
    "B010",
    # tests use assert False
    "B011",
    # tests use comparisons but not their returned value
    "B015",
    # false positives
    "B019",
    # Loop control variable overrides iterable it iterates
    "B020",
    # Function definition does not bind loop variable
    "B023",
    # zip()` without an explicit `strict=
    "B905",
    # Functions defined inside a loop must not use variables redefined in the loop
    # "B301",  # not yet implemented
    # Too many arguments to function call
    "PLR0913",
    # Too many returns
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915",
    # Global statements are discouraged
    "PLW0603",
    # Docstrings should not be included in stubs
    "PYI021",
    # Use typing_extensions.TypeAlias for type aliases
    # "PYI026",  # not yet implemented
    # Use "collections.abc.*" instead of "typing.*" (PEP 585 syntax)
    # "PYI027",  # not yet implemented
    # while int | float can be shortened to float, the former is more explicit
    # "PYI041",  # not yet implemented

    # Additional checks that don't pass yet
    # Within an except clause, raise exceptions with ...
    "B904",
    # Magic number
    "PLR2004",
    # Consider `elif` instead of `else` then `if` to remove indentation level
    "PLR5501",
    # Ignore "Use `float` instead of `int | float`."
    "PYI041",
    # Allow importing from parent modules
    "TID252",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["bambi"]
ignore_missing_imports = true

[tool.coverage.run]
omit = ["*/setup.py", "*/__init__.py"]

[project.scripts]
generate = "ssms.cli.generate:app"

[tool.setuptools.package-data]
"ssms.cli" = ["config_network_training_lan.yaml"]
