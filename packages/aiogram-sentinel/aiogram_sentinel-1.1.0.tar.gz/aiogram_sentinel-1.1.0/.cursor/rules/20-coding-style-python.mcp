---
description: Python coding style (PEP 8/PEP 20 aligned) for aiogram-sentinel
globs: "src/**/*.py, tests/**/*.py, examples/**/*.py"
alwaysApply: true
---

# Coding Style — Python

## Language & Versions
- Python **>= 3.10**.
- Use **type hints everywhere** on public functions/classes.
- Prefer `from __future__ import annotations` in modules with heavy typing.

## Naming
- `snake_case` for functions, variables, modules.
- `PascalCase` for classes & exceptions.
- `UPPER_SNAKE_CASE` for constants.
- Prefix non-public helpers with `_`.

## Imports
- Absolute imports preferred.
- Group: stdlib → third-party → local; keep each group alphabetized.
- Optional deps (e.g., `redis`) **must be imported only** in their impl/factory.

## Functions & Modules
- Keep functions small and single-purpose.
- Avoid deep nesting; early return over else pyramids.
- No global mutable state in library code.

## Formatting & Linting
- Use **Ruff** for linting/formatting (no Black/isort separately).
- Target line length **100** (soft).
- Resolve all Ruff warnings unless explicitly justified in a comment.

## Comments & Docstrings
- Public API must have concise docstrings explaining behavior, inputs/outputs, and async aspects.
- Prefer clear code over comments; when non-obvious, explain *why*, not *what*.
