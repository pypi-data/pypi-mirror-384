[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "visiontext"
description = "Utilities for deep learning on multimodal data."
readme = "README.md"
authors = [{ "name" = "simon-ging" }]
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
keywords = ["python", "jupyter", "notebook", "lab", "ipython", "html", "pandas", "matplotlib",
    "pytorch", "numpy", ]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Version Control :: Git"
]
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Project-URL = "https://github.com/simon-ging/visiontext"

[tool.setuptools]
zip-safe = true
platforms = ["any"]
include-package-data = false

[tool.setuptools.dynamic]
version = { attr = "visiontext.__version__" }
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
full = { file = ["optional-requirements.txt"] }

[tool.black]
line-length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: mark tests as slow (deselect with '-m \"not slow\"')",
    "local: mark tests as local, i.e. not to be run on CI e.g. because they need a GPU.",
    "full: mark tests to require the full requirements from pip install package[full]",
]

[tool.coverage.run]
source_pkgs = ["visiontext"]
branch = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.html]
directory = ".covreport"

[tool.coverage.xml]
output = ".covreport/coverage.xml"

[tool.pylint.main]
jobs = 1

[tool.pylint.messages_control]

enable = "all"

disable = [
    'suppressed-message', 'locally-disabled', 'file-ignored',
    'line-too-long', 'missing-module-docstring',
    'missing-class-docstring', 'missing-function-docstring', 'fixme',
    'f-string-without-interpolation', 'invalid-name',
    'logging-fstring-interpolation', 'consider-iterating-dictionary',
    'use-implicit-booleaness-not-comparison',
    'attribute-defined-outside-init', 'consider-using-with', 'global-statement',
    'import-outside-toplevel', 'super-init-not-called', 'broad-exception-caught',
    'disallowed-name', 'redefined-outer-name', 'use-implicit-booleaness-not-comparison-to-zero',
    'eval-used', 'unknown-option-value', 'arguments-differ', 'subprocess-run-check',
    'use-implicit-booleaness-not-comparison-to-string', 'use-dict-literal',
    'useless-suppression', 'too-many-positional-arguments', 'use-symbolic-message-instead',
]

[tool.pylint.format]
max-line-length = 99999
max-module-lines = 99999

[tool.pylint.refactoring]
max-nested-blocks = 9999

[tool.pylint.design]
max-args = 9999
max-attributes = 9999
max-bool-expr = 9999
max-branches = 9999
max-locals = 9999
max-parents = 9999
max-public-methods = 9999
max-returns = 9999
max-statements = 9999
min-public-methods = 0
