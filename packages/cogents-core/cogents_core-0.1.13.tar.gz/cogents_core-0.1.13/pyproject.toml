[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cogents-core"
version = "0.1.13"
description = "Towards a cognitive agentic framework"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
maintainers = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
keywords = ["agents", "multi-agent system", "cognition", "artificial intelligence"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    # Basic dependencies
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.1.1",
    "colorlog>=6.8.0",
    "typing-extensions>=4.8.0",
    "deprecated>=1.2.18",
    "bubus>=1.5.6",  # requires python 3.11+
    # LLM and AI dependencies
    "openai>=1.0.0",
    "instructor>=1.10.0",
    "google-genai>=1.5.0",
    "litellm>=1.0.0",
    "ollama>=0.5.3",
    "huggingface-hub>=0.34.4",
    "llama-cpp-python>=0.3.16",
    # LangChain ecosystem
    "langchain-core>=0.3.72",
    "langchain-text-splitters>=0.3.0",
    "langchain-ollama>=0.2.0",
    "langgraph>=0.5.4",
    # Orchestration
    "networkx>=3.5",
    # MCP support
    "mcp>=1.0.0",
    # vector store
    "weaviate-client>=4.16.9",
    "psycopg2>=2.9.10",
    "psycopg2-binary>=2.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2,<9",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "pytest-twisted>=1.14.3",
    "twisted>=25.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=7.3.0",
    "autoflake>=2.3.1",
    "pillow>=11.3.0",  # Optional dependency for image understanding
]

[project.urls]
Homepage = "https://github.com/caesar0301/cogents-core"
Repository = "https://github.com/caesar0301/cogents-core"

[tool.uv.extra-build-variables."llama-cpp-python"]
CC = "gcc"
CXX = "g++"

[tool.setuptools.packages.find]
include = ["cogents_core*"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cogents_core"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
