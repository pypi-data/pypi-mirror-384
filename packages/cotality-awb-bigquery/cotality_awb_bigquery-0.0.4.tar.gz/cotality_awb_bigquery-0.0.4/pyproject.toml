[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cotality-awb-bigquery"
version = "0.0.4"
description = "Cotality Python SDK"
authors = ["Steven Pham <stpham@cotality.com>"]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "cotality" },
]
include = [
  "cotality/**/*"
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"

# Core Dependencies
requests = ">=2.31.0,<3.0.0"
pandas = ">=2.2.0,<3.0.0"
dataclasses-json = ">=0.6.0,<1.0.0"
smart_open = ">=5.2.0,<7.0.0"
db-dtypes = ">=1.4.3"

# Cloud Platform - Google Cloud
google-cloud-bigquery = ">=3.35.0,<4.0.0"
google-cloud-secret-manager = ">=2.24.0,<3.0.0"
google-auth = ">=2.0.0,<3.0.0"
google-cloud-bigquery-storage = ">=2.32.0,<3.0.0"
pandas_gbq = ">=0.29.2"

# Visualization & Analytics
plotly = ">=5.0.0,<7.0.0"

# UI Frameworks - Panel
panel = ">=1.7.0,<2.0.0"
bokeh = ">=3.7.0,<4.0.0"
jupyter_bokeh = ">=3.0.0,<4.0.0"
ipywidgets = ">=8.1.0,<9.0.0"
holoviews = ">=1.21.0,<2.0.0"
hvplot = ">=0.12.0,<1.0.0"

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = ["snowflake.*", "panel.*", "param.*"]
ignore_missing_imports = true

[tool.pylint]
[tool.pylint.master]
extension-pkg-whitelist = ["pydantic"]
load-plugins = ["pylint_pytest"]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "invalid-name",
    "duplicate-code",
    "too-many-instance-attributes",
    "too-many-public-methods",
    "too-many-positional-arguments",
    "line-too-long",
    "broad-exception-caught",
    "unused-argument",
    "unused-import",
    "no-member",
    "attribute-defined-outside-init",
    "undefined-variable",
    "inconsistent-return-statements",
    "assignment-from-no-return",
    "return-in-init",
    "cyclic-import"
]

[tool.pylint.format]
max-line-length = 120

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=cotality",
    "--cov-report=term-missing",
    "--cov-report=html:build/reports/htmlcov",
    "--cov-report=xml:build/reports/coverage.xml",
    "--html=build/reports/report.html",
    "--self-contained-html"
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, external dependencies)",
    "aqa: marks tests as automated quality assurance tests",
    "slow: marks tests as slow running",
    "external: marks tests that require external services",
    "snowflake: marks tests that require Snowflake connection",
    "bigquery: marks tests that require BigQuery connection",
    "gcp: marks tests that require Google Cloud Platform",
    "ui: marks tests for user interface components"
]

[tool.coverage.run]
source = ["cotality"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_functions in tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.flake8]
max-line-length = 120
max-complexity = 10
extend-ignore = [
    "E203",  # whitespace before ':'
    "E402",  # module level import not at top of file
    "E501",  # line too long (handled by black)
    "F403",  # 'from module import *' used; unable to detect undefined names
    "F401",  # module imported but unused
    "F541",  # f-string is missing placeholders
    "F821",  # undefined name
    "W293",  # blank line contains whitespace
    "W605",  # invalid escape sequence
    "C901",  # function is too complex
]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "__init__.py"
]

[tool.poetry.group.dev.dependencies]
# Build Tools
setuptools = ">=78.0.0"
setuptools-scm = ">=8.0.0"
wheel = ">=0.45.0"
build = ">=1.2.0"
twine = ">=6.0.0"

# Code Quality & Formatting
black = ">=24.0.0"
isort = ">=5.13.0"
flake8 = ">=7.0.0"
pyproject-flake8 = ">=7.0.0"
pycodestyle = ">=2.11.0"
pylint = ">=3.3.0"
pylint-pytest = ">=1.1.0"
mypy = ">=1.8.0"

# Security & Vulnerability Scanning
bandit = ">=1.7.5"
safety = ">=3.0.0"
pip-audit = ">=2.6.0"

# Documentation
sphinx = ">=7.0.0"
sphinx-rtd-theme = ">=2.0.0"
myst-parser = ">=2.0.0"

# Pre-commit
pre-commit = ">=4.0.0"

# Type Stubs
types-requests = ">=2.32.0"
types-toml = ">=0.10.0"

[tool.poetry.group.test.dependencies]
# Testing Framework
pytest = ">=8.0.0"
pytest-cov = ">=6.0.0"
pytest-html = ">=4.0.0"
pytest-xdist = ">=3.5.0"
pytest-mock = ">=3.12.0"
pytest-asyncio = ">=0.23.0"
pytest-benchmark = ">=4.0.0"

# Test Utilities
mockito = ">=1.5.0"
factory-boy = ">=3.3.0"
faker = ">=20.0.0"
freezegun = ">=1.4.0"

# Performance & Profiling
memory-profiler = ">=0.61.0"
line-profiler = ">=4.1.0"

[tool.poetry.group.aqa.dependencies]
# End-to-End Testing
selenium = ">=4.34.0"
webdriver-manager = ">=4.0.0"
allure-pytest = ">=2.15.0"

# Environment Management
python-dotenv = ">=1.0.0"

# API Testing
httpx = ">=0.26.0"
respx = ">=0.21.0"
