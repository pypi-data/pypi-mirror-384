[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sfeos-tools"
version = "0.1.0"
description = "CLI tools for managing stac-fastapi-elasticsearch-opensearch deployments"
readme = "README.md"
authors = [
    {name = "Jonathan Healy", email = "jon@healy-hypersaptial.dev"},
    {name = "CloudFerro S.A."}
]
license = {file = "LICENSE"}
maintainers = [
    {name = "Jonathan Healy", email = "jon@healy-hypersaptial.dev"}
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    "click>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/Healy-Hyperspatial/sfeos-tools"
Documentation = "https://github.com/Healy-Hyperspatial/sfeos-tools#readme"
Issues = "https://github.com/Healy-Hyperspatial/sfeos-tools/issues"
Source = "https://github.com/Healy-Hyperspatial/sfeos-tools"

[project.optional-dependencies]
elasticsearch = [
    "stac-fastapi-elasticsearch",
]
opensearch = [
    "stac-fastapi-opensearch",
]
dev = [
    "stac-fastapi-elasticsearch",
    "stac-fastapi-opensearch",
    # Development tools
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "isort>=5.0",
    "mypy>=0.900",
    "flake8>=4.0.0",
]

[project.scripts]
sfeos-tools = "sfeos_tools.cli:cli"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = false
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=sfeos_tool --cov-report=term-missing"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
