[project]
name = "celine-utils"
version = "1.0.6"
description = "CELINE utils"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "bcrypt>=4.3.0",
    "openlineage-python>=1.37.0",
    "paho-mqtt>=2.1.0",
    "pandas>=2.3.2",
    "prefect-dbt>=0.7.6",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "python-dotenv>=1.1.1",
    "python-keycloak>=5.8.1",
    "requests>=2.32.5",
    "sqlalchemy>=2.0.43",
]

[dependency-groups]
dev = [
    "dbt-core>=1.10.10",
    "dbt-postgres>=1.9.1",
    "debugpy>=1.8.16",
    "meltano>=3.9.1",
    "pytest>=8.4.2",
    "prefect>=3.4.14",
    "python-semantic-release>=10.4.1",
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project.scripts]
celine-cli = "celine.cli:__main__"

[tool.setuptools.packages.find]
where = ["."]
include = ["celine"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]

build_command = """
    uv lock --upgrade-package "$PACKAGE_NAME"
    git add uv.lock
    uv build
"""

branch = "main"
changelog_file = "CHANGELOG.md"
tag_format = "v{version}"
commit_parser = "conventional"

upload_to_release = false
upload_to_pypi = false
commit_version_number = false

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "up"]
parse_squash_commits = true
ignore_merge_commits = true

