from ..base import LibraryComponent as LibraryComponent
from ..utils import FormatingRules as FormatingRules, FormatterKeywords as FormatterKeywords, FormatterTypes as FormatterTypes, LambdaFunction as LambdaFunction, Scope as Scope, logger as logger
from Browser.utils.data_types import ensure_formatter_type as ensure_formatter_type
from _typeshed import Incomplete
from assertionengine.formatter import Formatter as ASFormatter
from collections.abc import Callable as Callable, Generator

class Formatter(ASFormatter, LibraryComponent):
    def set_assertion_formatter(self, keyword: FormatterKeywords | None = None, *formatters: FormatingRules | LambdaFunction, scope: Scope = ...) -> dict[str, list[str]]: ...
    def get_formatter_functions(self, formatters) -> Generator[Incomplete]: ...
    def method_to_kw_str(self, keyword: Callable) -> str: ...
    def get_formatter(self, keyword: str) -> list: ...
    def set_formatter(self, keyword, formatter) -> None: ...
    def set_assertion_formatters(self, formatters: FormatterTypes, scope: Scope = ...) -> dict[str, list[str]]: ...
