from ..assertion_engine import assertion_formatter_used as assertion_formatter_used, with_assertion_polling as with_assertion_polling
from ..base import LibraryComponent as LibraryComponent
from ..generated.playwright_pb2 import Request as Request
from ..utils import keyword as keyword, logger as logger
from assertionengine import AssertionOperator as AssertionOperator
from typing import Any

class WebAppState(LibraryComponent):
    def eval_js(self, script: str, frame_selector: str | None = None) -> Any: ...
    @with_assertion_polling
    @assertion_formatter_used
    def local_storage_get_item(self, key: str, assertion_operator: AssertionOperator | None = None, assertion_expected: Any | None = None, message: str | None = None, frame_selector: str | None = None) -> Any: ...
    def local_storage_set_item(self, key: str, value: str, frame_selector: str | None = None): ...
    def local_storage_remove_item(self, key: str, frame_selector: str | None = None): ...
    def local_storage_clear(self, frame_selector: str | None = None): ...
    @with_assertion_polling
    @assertion_formatter_used
    def session_storage_get_item(self, key: str, assertion_operator: AssertionOperator | None = None, assertion_expected: Any | None = None, message: str | None = None, frame_selector: str | None = None) -> Any: ...
    def session_storage_set_item(self, key: str, value: str, frame_selector: str | None = None): ...
    def session_storage_remove_item(self, key: str, frame_selector: str | None = None): ...
    def session_storage_clear(self, frame_selector: str | None = None): ...
