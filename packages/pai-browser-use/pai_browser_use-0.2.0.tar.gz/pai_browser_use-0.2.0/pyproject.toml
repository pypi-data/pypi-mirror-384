[project]
name = "pai-browser-use"
version = "0.2.0"
description = "Pydantic AI Toolsets for browser use"
authors = [{ name = "Wh1isper", email = "jizhongsheng957@gmail.com" }]
readme = "README.md"
keywords = [
    'python',
    'pydantic',
    'pydantic-ai',
    'cdp',
    'browser',
    'automation',
    'scraping',
    "browser-use",
    'llm',
    'ai',
    'agent',
]
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "cdp-use>=1.4.1, < 2.0.0",
    "httpx>=0.28.1",
    "pillow>=11.3.0",
    "pydantic>=2.11.9",
    "pydantic-ai>=1.0.10, <2.0.0",
    "python-dotenv>=1.1.1",
    "typing-extensions>=4.15.0",
]

[project.urls]
Homepage = "https://wh1isper.github.io/pai-browser-use/"
Repository = "https://github.com/wh1isper/pai-browser-use"
Documentation = "https://wh1isper.github.io/pai-browser-use/"

[dependency-groups]
dev = [
    "docker>=7.1.0",
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "pytest-asyncio>=0.25.3",
    "tox-uv>=1.11.3",
    "deptry>=0.22.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.9.2",
    "inline-snapshot",
    "dirty_equals",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
py-modules = ["pai_browser_use"]

[tool.mypy]
files = ["pai_browser_use"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    "S104",
    "TRY003",
    "TRY300",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"examples/*" = ["E402"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["pai_browser_use"]
omit = [
    "tests/*",
    "pai_browser_use/_logger.py",
]
