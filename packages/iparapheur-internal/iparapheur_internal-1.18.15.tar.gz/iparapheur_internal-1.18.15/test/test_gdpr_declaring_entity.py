# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_internal.models.gdpr_declaring_entity import GdprDeclaringEntity

class TestGdprDeclaringEntity(unittest.TestCase):
    """GdprDeclaringEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GdprDeclaringEntity:
        """Test GdprDeclaringEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GdprDeclaringEntity`
        """
        model = GdprDeclaringEntity()
        if include_optional:
            return GdprDeclaringEntity(
                name = '',
                address = '',
                siret = '',
                ape_code = '',
                phone_number = '',
                mail = '',
                dpo = iparapheur_internal.models.gdpr_declaring_entity_dpo.GdprDeclaringEntityDpo(
                    name = '', 
                    mail = '', ),
                responsible = iparapheur_internal.models.gdpr_declaring_entity_responsible.GdprDeclaringEntityResponsible(
                    name = '', 
                    title = '', )
            )
        else:
            return GdprDeclaringEntity(
        )
        """

    def testGdprDeclaringEntity(self):
        """Test GdprDeclaringEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
