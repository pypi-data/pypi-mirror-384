# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_internal.models.gdpr_application import GdprApplication

class TestGdprApplication(unittest.TestCase):
    """GdprApplication unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GdprApplication:
        """Test GdprApplication
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GdprApplication`
        """
        model = GdprApplication()
        if include_optional:
            return GdprApplication(
                name = '',
                cookie_session_duration = '',
                mandatory_cookies = [
                    ''
                    ],
                preserved_data_after_deletion = [
                    ''
                    ],
                optional_cookies = [
                    iparapheur_internal.models.gdpr_cookie.GdprCookie(
                        name = '', 
                        elements = [
                            ''
                            ], 
                        description = '', )
                    ],
                no_cookies = True,
                editor = iparapheur_internal.models.gdpr_entity.GdprEntity(
                    name = '', 
                    address = '', 
                    siret = '', ),
                no_data_processed = True,
                no_data_collected = True,
                data_processes = [
                    iparapheur_internal.models.gdpr_data_element.GdprDataElement(
                        name = '', 
                        elements = [
                            ''
                            ], )
                    ],
                collected_data_set = [
                    iparapheur_internal.models.gdpr_data_set.GdprDataSet(
                        name = '', 
                        mandatory_elements = [
                            ''
                            ], 
                        optional_elements = [
                            ''
                            ], )
                    ]
            )
        else:
            return GdprApplication(
        )
        """

    def testGdprApplication(self):
        """Test GdprApplication"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
