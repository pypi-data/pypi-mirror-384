# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic. 

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iparapheur_internal.models.subtype_dto import SubtypeDto

class TestSubtypeDto(unittest.TestCase):
    """SubtypeDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubtypeDto:
        """Test SubtypeDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubtypeDto`
        """
        model = SubtypeDto()
        if include_optional:
            return SubtypeDto(
                id = '',
                name = 'jXAuKb%@;_5)#fEb-bx%oZ01',
                description = '012',
                creation_workflow_id = '',
                validation_workflow_id = '',
                workflow_selection_script = '',
                annotations_allowed = True,
                external_signature_automatic = True,
                secure_mail_server_id = 56,
                seal_certificate_id = '',
                seal_certificate = iparapheur_internal.models.seal_certificate_representation.SealCertificateRepresentation(
                    id = '', 
                    name = 'Example certificate', 
                    expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    usage_count = 56, ),
                subtype_metadata_list = [
                    iparapheur_internal.models.subtype_metadata_dto.SubtypeMetadataDto(
                        metadata_id = '', 
                        metadata = iparapheur_internal.models.metadata_dto.MetadataDto(
                            id = '', 
                            name = 'Example metadata', 
                            key = 'example_metadata', 
                            index = 56, 
                            type = 'TEXT', 
                            restricted_values = [
                                ''
                                ], ), 
                        default_value = '', 
                        mandatory = True, 
                        editable = True, )
                    ],
                subtype_layers = [
                    iparapheur_internal.models.subtype_layer_dto.SubtypeLayerDto(
                        layer_id = '', 
                        layer = iparapheur_internal.models.layer_representation.LayerRepresentation(
                            id = '', 
                            name = 'jXAuKb%@;_5)#fEb-bx%oZ01', ), 
                        association = 'ALL', )
                    ],
                external_signature_config_id = '',
                external_signature_config = iparapheur_internal.models.external_signature_config_representation.ExternalSignatureConfigRepresentation(
                    id = '', 
                    name = '01', 
                    service_name = 'YOUSIGN_V2', 
                    signature_level = 'SIMPLE', 
                    url = '', 
                    login = '', ),
                creation_permitted_desk_ids = [
                    ''
                    ],
                creation_permitted_desks = [
                    iparapheur_internal.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                filterable_by_desk_ids = [
                    ''
                    ],
                filterable_by_desks = [
                    iparapheur_internal.models.desk_representation.DeskRepresentation(
                        id = '', 
                        name = 'jXAuKb%@;_5)#fEb-bx%oZ01', 
                        tenant_id = '', )
                    ],
                max_main_documents = 56,
                multi_documents = True,
                digital_signature_mandatory = True,
                reading_mandatory = True,
                annexe_included = True,
                seal_automatic = True
            )
        else:
            return SubtypeDto(
                name = 'jXAuKb%@;_5)#fEb-bx%oZ01',
        )
        """

    def testSubtypeDto(self):
        """Test SubtypeDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
