[project]
# See: https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
name = "questdb"
requires-python = ">=3.9"
version = "4.0.0"
description = "QuestDB client library for Python"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Cython",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
    "Topic :: Database :: Front-Ends",
    "Topic :: Scientific/Engineering"
]
license = "Apache-2.0"
license-files = ["LICENSE.txt"]
dependencies = ["numpy>=1.21.0"]  # Keep in sync with build-system.requires

[[project.authors]]
name = "Adam Cimarosti"
email = "adam@questdb.com"

[project.optional-dependencies]
publish = ["twine", "wheel"]
ci = ["cibuildwheel"]
dataframe = ["pandas", "pyarrow", "numpy"]

[project.urls]
Homepage = "https://questdb.io/"
Changelog = "https://py-questdb-client.readthedocs.io/en/latest/changelog.html"
Documentation = "https://py-questdb-client.readthedocs.io/en/latest/index.html"
Source = "https://github.com/questdb/py-questdb-client/"
Tracker = "https://github.com/questdb/py-questdb-client/issues"
Community = "http://community.questdb.io"

[build-system]
requires = [
    # Keep in sync with `dev_requirements.txt`
    # as well as `ci/pip_install_deps.py`.

    # Tools should be up to date.
    "setuptools>=80.9.0",
    "packaging>=25.0",
    "wheel>=0.45.1",
    "cython>=3.1.2",

    # This is the oldest version we're happy to support.
    "numpy>=1.21.0",
]


[tool.cibuildwheel]
# See: https://cibuildwheel.readthedocs.io/en/stable/options/#configuration-file
build-verbosity = 3
before-build = "python {project}/install_rust.py"
before-test = "python {project}/ci/pip_install_deps.py"
test-command = "python {project}/test/test.py -v"
skip = [
    # Skip all 32-bit builds, except for Windows.
    # Those builds are named `*win32*` in cibuildwheel.
    "*i686*",

    # Skip Python 3.14 builds until the dependencies catch up
    "cp314-*",
    "cp314t-*"
]

# [tool.cibuildwheel.windows]
# # This doens't work yet. Windows/ARM64 support is experimental.
# archs = "auto ARM64"

# [tool.cibuildwheel.linux]
# # Build wheels for the native platform (i.e. x86) as well as an emulated
# # build for aarch64.
# archs = "auto aarch64"

[tool.cibuildwheel.environment]
SETUP_DO_GIT_SUBMODULE_INIT = "1"
