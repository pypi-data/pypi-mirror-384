* This file is autogenerated by optcopt.
.feaspref double 12 1 0 maxdouble 1 7 preference to include variable bound or equation side into feasibility relaxation
AbsGap double 0 0 0 maxdouble 1 1 The absolute gap for MIP
BarHomogeneous enumint 0 -1 1 3 Whether to use homogeneous self-dual form in barrier
 -1 1 Choose automatically.
 0 1 No.
 1 1 Yes.
BarIterLimit integer 0 maxint 0 maxint 1 1 Barrier iteration limit
BarOrder enumint 0 -1 1 3 Ordering method for barrier
 -1 1 Choose automatically.
 0 1 Approximate Minimum Degree (AMD).
 1 1 Nested Dissection (ND).
BarStart enumint 0 -1 1 3 Starting Point method for barrier
 -1 1 Choose automatically.
 0 1 Simple.
 1 1 Mehrotra.
 2 1 Modified Mehrotra.
BarThreads integer 0 -1 -1 128 1 6 Number of threads to use in the barrier solver
ConflictAnalysis enumint 0 -1 1 4 Whether to perform conflict analysis
 -1 1 Automatic.
 0 1 No.
 1 1 Yes.
Crossover enumint 0 1 1 3 Whether to run crossover after barrier
 -1 1 Choose automatically. Only run crossover when the LP solution is not primal-dual feasible.
 0 1 No.
 1 1 Yes.
CrossoverThreads integer 0 -1 -1 128 1 6 Number of threads to use in the crossover
CutLevel enumint 0 -1 1 4 Level of cutting planes generation
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
DivingHeurLevel enumint 0 -1 1 4 Level of diving heuristics
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
Dualize enumint 0 -1 1 2 Whether to dualize a problem before solving it
 -1 1 Choose automatically.
 0 1 No dualizing.
 1 1 Dualizing the problem.
DualPerturb enumint 0 -1 1 3 Whether to allow the objective function perturbation
 -1 1 Choose automatically.
 0 1 No perturbation.
 1 1 Allow objective function perturbation.
DualPrice enumint 0 -1 1 3 Specifies the dual simplex pricing algorithm
 -1 1 Choose automatically.
 0 1 Using Devex pricing algorithm.
 1 1 Using dual steepest-edge pricing algorithm .
DualTol double 0 1e-06 1e-09 0.0001 1 1 The tolerance for dual solutions and reduced cost
FAPHeurLevel enumint 0 -1 1 4 Level of fix-and-propagate heuristics
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
FeasRelax boolean 11 0 1 7 whether to compute a feasible relaxation instead of solving the problem
FeasRelaxMode enumint 0 0 1 7 Specifies the feasibility relaxation mode
 0 1 Minimize sum of violations.
 1 1 Optimize original objective function under minimal sum of violations.
 2 1 Minimize number of violations.
 3 1 Optimize original objective function under minimal number of violations.
 4 1 Minimize sum of squared violations.
 5 1 Optimize original objective function under minimal sum of squared violations.
FeasTol double 0 1e-06 1e-09 0.0001 1 1 The feasibility tolerance
GPUDevice integer 0 -1 -1 maxint 1 3 Utilize the GPU with the specified device ID (in cases where the running machine has multiple GPUs)
GPUMode enumint 0 -1 1 3 Usage mode of the GPU solver
 -1 1 Choose automatically.
 0 1 Force the use of CPU mode.
 1 1 Utilize NVIDIA GPU.
HeurLevel enumint 0 -1 1 4 Level of heuristics
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
iis enumint 10 0 1 7 whether to compute an Irreducible Inconsistent Subsystem (IIS) if the problem is infeasible
 0 1 no
 1 1 compute IIS after solve if infeasible
 2 1 compute IIS without solving original problem
IISMethod enumint 0 -1 1 7 Specifies the IIS method
 -1 1 Automatic.
 0 1 Find smaller IIS.
 1 1 Find IIS quickly.
IntTol double 0 1e-06 1e-09 0.1 1 1 The integer feasibility tolerance
LinearizeIndicators enumint 0 -1 1 4 Controls whether to force the linearization of Indicator constraints.
 -1 1 Choose automatically. COPT attempts to linearize indicator constraints when the model is numerically well-conditioned.
 0 1 Do not force linearization of indicator constraints.
 1 1 Force linearization of all indicator constraints. All indicator constraints will be transformed into equivalent linear constraints if enabled.
LinearizeSos enumint 0 -1 1 4 Controls whether to force the linearization of SOS constraints.
 -1 1 Choose automatically. COPT attempts to linearize SOS constraints when the model is numerically well-conditioned.
 0 1 Do not force linearization of SOS constraints.
 1 1 Force linearization of all SOS constraints. All SOS constraints will be transformed into equivalent linear constraints if enabled.
LpMethod enumint 0 -1 1 3 Specifies the LP method
 -1 1 Dual Simplex for LP. Automatic choice between Dual Simplex and Barrier for MIP.
 1 1 Dual simplex.
 2 1 Barrier.
 3 1 Crossover.
 4 1 Concurrent (Use simplex and barrier simultaneously).
 5 1 Choose between simplex and barrier automatically (Based on features such as sparsity and/or coefficients ranges).
 6 1 First-order method (PDLP).
MatrixTol double 0 1e-10 0 1e-07 1 1 The input matrix coefficient tolerance
MipStartMode enumint 0 -1 1 4 Specifies MIP start mode
 -1 1 Automatic.
 0 1 Disable MIP starts.
 1 1 Only use full and feasible MIP starts.
 2 1 Try to complete partial feasible MIP starts by solving subMIPs.
MipStartNodeLimit integer 0 -1 -1 maxint 1 4 Limit of nodes for MIP start sub-MIP (to complete partial MIP starts) (-1: unlimited)
MipTasks integer 0 -1 -1 256 1 6 Number of parallel tasks in MIP solving (-1: automatic)
NLPIterLimit integer 0 maxint 0 maxint 1 5 Iteration limit for the nonlinear solver
NLPLinScale enumint 0 -1 1 5 Linear system scaling strategy of the nonlinear solver
 -1 1 Choose automatically.
 0 1 No scaling.
 1 1 Always scale.
NLPMuUpdate enumint 0 -1 1 5 Barrier parameter update strategy of the nonlinear solver
 -1 1 Choose automatically.
 0 1 Monotonically decreasing.
 1 1 Adaptive adjustment.
NLPTol double 0 1e-08 1e-13 0.001 1 5 Optimal relative tolerance for nonlinear programming
NodeCutRounds integer 0 -1 -1 maxint 1 4 Maximum cut rounds in a local node
NodeLimit integer 0 maxint -1 maxint 1 1 Limit of nodes for MIP
NonConvex enumint 0 -1 1 5 Handling strategy for nonconvex models
 -1 1 Choose automatically.
 0 1 Report nonconvexity and terminate.
 1 1 Search for a local optimal solution.
PDLPTol double 0 1e-06 1e-12 0.0001 1 1 Convergence tolerance for the first-order method (PDLP)
Presolve enumint 0 -1 1 2 Level of presolving performed before solving a problem
 -1 1 Choose automatically.
 0 1 No presolving.
 1 1 Fast presolving.
 2 1 Normal presolving.
 3 1 Aggressive presolving.
qextractalg enumint 18 0 1 9 extraction algorithm for quadratic equations
 0 1 choose automatically
 1 1 threepass: uses a three-pass forward / backward / forward AD technique to compute function / gradient / Hessian values and a hybrid scheme for storage
 2 1 doubleforward: uses forward-mode AD to compute and store function, gradient, and Hessian values at each node or stack level as required; the gradients and Hessians are stored in linked lists
 3 1 concurrent: uses threepass and doubleforward in parallel; as soon as one finishes, the other one stops
qextractdenseswitchfactor double 19 0.008 0 maxdouble 1 9 sparse/dense factor for quadratic extraction algorithm
qextractdenseswitchlog boolean 20 0 1 9 whether to print additional information about sparse/dense factor choice in quadratic extraction algorithm
readparams string 9 "" 1 9 read COPT parameter file
RelGap double 0 0.0001 0 maxdouble 1 1 The relative gap for MIP
ReqFarkasRay boolean 0 1 1 3 Whether to return a Farkas or Ray when an LP is infeasible or unbounded
RootCutLevel enumint 0 -1 1 4 Level of root cutting planes generation
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
RootCutRounds integer 0 -1 -1 maxint 1 4 Maximum cut rounds in the root (-1: unlimited)
RoundingHeurLevel enumint 0 -1 1 4 Level of rounding heuristics
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
Scaling enumint 0 -1 1 2 Whether to perform scaling before solving a problem
 -1 1 Choose automatically.
 0 1 No scaling.
 1 1 Apply scaling.
SimplexThreads integer 0 -1 -1 128 1 6 Number of threads to use in the simplex solver
solnpool string 1 "" 1 9 Solution pool file name
solnpoolmerge string 2 "" 1 9 Solution pool file name for merged solutions
SolTimeLimit double 0 1e+20 0 1e+20 1 1 Time limit that is only effictive after a primal feasible solution has been found
solvefinal boolean 3 1 1 9 whether to solve the LP obtained from fixing discrete variables and variables in SOS after a MIP solve
solvetrace string 15 "" 1 9 name of file for writing solving progress information during solve
solvetracenodefreq integer 16 100 0 maxint 1 9 frequency in number of nodes for writing to solve trace file
solvetracetimefreq double 17 5 0 maxdouble 1 9 frequency in seconds for writing to solve trace file
StrongBranching enumint 0 -1 1 4 Level of strong branching
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
SubMipHeurLevel enumint 0 -1 1 4 Level of sub-MIP heuristics
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
Threads integer 0 0 -1 128 1 6 Number of threads to use (-1: automatic, 0: 1 thread)
TimeLimit double 0 1e+10 0 1e+20 1 1 Time limit of the optimization
TreeCutLevel enumint 0 -1 1 4 Level of tree cutting planes generation
 -1 1 Automatic.
 0 1 Off.
 1 1 Fast.
 2 1 Normal.
 3 1 Aggressive.
TuneMeasure enumint 0 -1 1 8 Method to aggregate multiple permutation solves into a single measure for tuner
 -1 1 Choose automatically.
 0 1 Average value.
 1 1 Maximum value.
TuneMethod enumint 0 -1 1 8 Tuning method
 -1 1 Choose automatically.
 0 1 Greedy search strategy.
 1 1 Broader search strategy.
TuneMode enumint 0 -1 1 8 Specifies tuning mode for tuner
 -1 1 Choose automatically.
 0 1 Solving time.
 1 1 Relative optimality gap.
 2 1 Primal bound (objective function value of incumbent).
 3 1 Dual bound (bound on optimal value).
TuneOutputLevel enumint 0 2 1 8 Output level for tuner
 0 1 No tuning log.
 1 1 Summary of the improved parameters only.
 2 1 Summary of each tuning attempt.
 3 1 Detailed log of each tuning attempt.
TuneParams string 14 "" 1 8 COPT parameter file with options to be tuned
TunePermutes integer 0 0 0 maxint 1 8 Number of permuted solves for each parameter set by tuner (0: auto)
TuneTargetRelGap double 0 0.0001 0 maxdouble 1 8 Target relative gap for tuning
TuneTargetTime double 0 0.01 0 maxdouble 1 8 Target elapsed time for tuning
TuneTimeLimit double 0 0 0 1e+20 1 8 Time limit of tuning (0: auto)
Tuning string 13 "" 1 8 If set, enables tuning tool. The option value should be the prefix for names of tuned option files that are written.
writebas string 7 "" 1 9 name of file to which to write advanced starting basis in basis format
writebin string 6 "" 1 9 name of file to which to write problem in COPT binary format
writelp string 4 "" 1 9 name of file to which to write problem in LP file format
writemps string 5 "" 1 9 name of file to which to write problem in MPS file format
writemst string 8 "" 1 9 name of file to which to write MIP starting point
writenl string 21 "" 1 9 name of file to which to write problem in NL file format
*
* synonym section
*
feasopt synonym FeasRelax
feasoptmode synonym FeasRelaxMode
*
* indicator section
*
indicator SEPARATOR " "
indicator STRINGQUOTE 
indic indicator
*
* Groups
*
gr_Limits_and_Tolerances group 1 1 Limits and Tolerances
gr_Presolving_and_Scaling group 2 1 Presolving and Scaling
gr_LP_solving group 3 1 LP solving
gr_MIP_solving group 4 1 MIP solving
gr_NLP_solving group 5 1 NLP solving
gr_Multithreading group 6 1 Multithreading
gr_Infeasibility_Analysis group 7 1 Infeasibility Analysis
gr_Parameter_Tuning group 8 1 Parameter Tuning
gr_GAMS_COPT_link group 9 1 GAMS/COPT link
