name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine hatchling

      - name: Update version if manual
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION="${{ github.event.inputs.version }}"
          sed -i "s/version = .*/version = \"$VERSION\"/" pyproject.toml

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/

  publish-testpypi:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_type == 'tag' && contains(github.ref, 'beta')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: python-package
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_type == 'tag' && !contains(github.ref, 'beta')
    environment:
      name: pypi
      url: https://pypi.org/project/mcp-standards
    permissions:
      id-token: write  # OIDC for PyPI trusted publishing

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: python-package
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true

  verify:
    runs-on: ubuntu-latest
    needs: [publish-pypi]
    steps:
      - name: Wait for PyPI to update
        run: sleep 60

      - name: Install from PyPI
        run: |
          pip install mcp-standards --upgrade
          mcp-standards --version || python -m mcp_standards --version

      - name: Test basic functionality
        run: |
          python -c "import mcp_standards; print('Import successful')"
