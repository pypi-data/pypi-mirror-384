[pytest]
asyncio_mode = auto
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (database, file system)
    e2e: End-to-end tests (full workflows)
    performance: Performance benchmarks
    security: Security vulnerability tests
    slow: Slow running tests (skip with -m "not slow")

# Test output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings

# Coverage configuration
[coverage:run]
source = claude_memory,hooks,intelligence
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
