[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.flake8]
max-line-length = 120

[project]
name = "propflow"
version = "0.1.3"
description = "Highly configurable belief propagation simulator for factor graphs"
readme = {file = "README.md", content-type = "text/markdown"}
authors = [{name = "Or Muller"}]
license = "MIT"
requires-python = ">=3.10"
keywords = [
    "belief-propagation",
    "factor-graphs",
    "graphical-models",
    "inference",
    "optimization",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Framework :: Matplotlib",
]

# Runtime dependencies
dependencies = [
    "networkx~=3.4.2",
    "numpy~=2.2.1",
    "matplotlib~=3.10.0",
    "scipy~=1.15.2",
    "dash~=2.18.2",
    "dash_cytoscape~=1.0.2",
    "colorlog~=6.9.0",
    "pandas~=2.2.3",
    "seaborn~=0.13.2",
    "psutil~=7.0.0",
    "twine>=6.2.0",
    "sphinx>=8.1.3",
    "torch>=2.8.0",
    "flake8>=7.3.0",
    "gunicorn>=23.0.0",
]

[project.urls]
Homepage = "https://github.com/OrMullerHahitti/Belief-Propagation-Simulator"
Repository = "https://github.com/OrMullerHahitti/Belief-Propagation-Simulator"
Issues = "https://github.com/OrMullerHahitti/Belief-Propagation-Simulator/issues"
Documentation = "https://ormullerhahitti.github.io/Belief-Propagation-Simulator/index.html"

[project.optional-dependencies]
# Development extras
dev = [
    "pytest",
    "pytest-cov",
    "mypy",
    "black",
    "pylint",
    "jupyter",
    "build",
    "twine",
    "pre-commit"
]

# Optional: PyTorch-backed differentiable BP components
torch = [
    "torch>=2.2"
]

[project.scripts]
bp-sim = "propflow.cli:main"

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
]
