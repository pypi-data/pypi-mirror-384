# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from v4_proto.cosmos.feegrant.v1beta1 import tx_pb2 as cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cosmos/feegrant/v1beta1/tx_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MsgStub(object):
    """Msg defines the feegrant msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GrantAllowance = channel.unary_unary(
                '/cosmos.feegrant.v1beta1.Msg/GrantAllowance',
                request_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowance.SerializeToString,
                response_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowanceResponse.FromString,
                _registered_method=True)
        self.RevokeAllowance = channel.unary_unary(
                '/cosmos.feegrant.v1beta1.Msg/RevokeAllowance',
                request_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowance.SerializeToString,
                response_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowanceResponse.FromString,
                _registered_method=True)
        self.PruneAllowances = channel.unary_unary(
                '/cosmos.feegrant.v1beta1.Msg/PruneAllowances',
                request_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowances.SerializeToString,
                response_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowancesResponse.FromString,
                _registered_method=True)


class MsgServicer(object):
    """Msg defines the feegrant msg service.
    """

    def GrantAllowance(self, request, context):
        """GrantAllowance grants fee allowance to the grantee on the granter's
        account with the provided expiration time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeAllowance(self, request, context):
        """RevokeAllowance revokes any fee allowance of granter's account that
        has been granted to the grantee.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PruneAllowances(self, request, context):
        """PruneAllowances prunes expired fee allowances, currently up to 75 at a time.

        Since cosmos-sdk 0.50
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GrantAllowance': grpc.unary_unary_rpc_method_handler(
                    servicer.GrantAllowance,
                    request_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowance.FromString,
                    response_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowanceResponse.SerializeToString,
            ),
            'RevokeAllowance': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeAllowance,
                    request_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowance.FromString,
                    response_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowanceResponse.SerializeToString,
            ),
            'PruneAllowances': grpc.unary_unary_rpc_method_handler(
                    servicer.PruneAllowances,
                    request_deserializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowances.FromString,
                    response_serializer=cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowancesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cosmos.feegrant.v1beta1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cosmos.feegrant.v1beta1.Msg', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the feegrant msg service.
    """

    @staticmethod
    def GrantAllowance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cosmos.feegrant.v1beta1.Msg/GrantAllowance',
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowance.SerializeToString,
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgGrantAllowanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeAllowance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cosmos.feegrant.v1beta1.Msg/RevokeAllowance',
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowance.SerializeToString,
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgRevokeAllowanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PruneAllowances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cosmos.feegrant.v1beta1.Msg/PruneAllowances',
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowances.SerializeToString,
            cosmos_dot_feegrant_dot_v1beta1_dot_tx__pb2.MsgPruneAllowancesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
