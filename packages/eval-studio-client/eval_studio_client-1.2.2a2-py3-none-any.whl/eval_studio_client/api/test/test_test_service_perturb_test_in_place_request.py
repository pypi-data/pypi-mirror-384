# coding: utf-8

"""
    ai/h2o/eval_studio/v1/insight.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eval_studio_client.api.models.test_service_perturb_test_in_place_request import TestServicePerturbTestInPlaceRequest

class TestTestServicePerturbTestInPlaceRequest(unittest.TestCase):
    """TestServicePerturbTestInPlaceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestServicePerturbTestInPlaceRequest:
        """Test TestServicePerturbTestInPlaceRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestServicePerturbTestInPlaceRequest`
        """
        model = TestServicePerturbTestInPlaceRequest()
        if include_optional:
            return TestServicePerturbTestInPlaceRequest(
                perturbator_configurations = [
                    eval_studio_client.api.models.v1_perturbator_configuration.v1PerturbatorConfiguration(
                        name = '', 
                        intensity = 'PERTURBATOR_INTENSITY_UNSPECIFIED', 
                        params = '', )
                    ],
                test_case_names = [
                    ''
                    ]
            )
        else:
            return TestServicePerturbTestInPlaceRequest(
        )
        """

    def testTestServicePerturbTestInPlaceRequest(self):
        """Test TestServicePerturbTestInPlaceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
