# coding: utf-8

"""
    ai/h2o/eval_studio/v1/insight.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from eval_studio_client.api.models.v1_get_perturbator_response import V1GetPerturbatorResponse
from eval_studio_client.api.models.v1_list_perturbators_response import V1ListPerturbatorsResponse

from eval_studio_client.api.api_client import ApiClient, RequestSerialized
from eval_studio_client.api.api_response import ApiResponse
from eval_studio_client.api.rest import RESTResponseType


class PerturbatorServiceApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def perturbator_service_get_perturbator(
        self,
        name_7: Annotated[str, Field(strict=True, description="Required. The name of the Perturbator to retrieve.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> V1GetPerturbatorResponse:
        """perturbator_service_get_perturbator


        :param name_7: Required. The name of the Perturbator to retrieve. (required)
        :type name_7: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_get_perturbator_serialize(
            name_7=name_7,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1GetPerturbatorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def perturbator_service_get_perturbator_with_http_info(
        self,
        name_7: Annotated[str, Field(strict=True, description="Required. The name of the Perturbator to retrieve.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[V1GetPerturbatorResponse]:
        """perturbator_service_get_perturbator


        :param name_7: Required. The name of the Perturbator to retrieve. (required)
        :type name_7: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_get_perturbator_serialize(
            name_7=name_7,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1GetPerturbatorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def perturbator_service_get_perturbator_without_preload_content(
        self,
        name_7: Annotated[str, Field(strict=True, description="Required. The name of the Perturbator to retrieve.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """perturbator_service_get_perturbator


        :param name_7: Required. The name of the Perturbator to retrieve. (required)
        :type name_7: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_get_perturbator_serialize(
            name_7=name_7,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1GetPerturbatorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _perturbator_service_get_perturbator_serialize(
        self,
        name_7,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if name_7 is not None:
            _path_params['name_7'] = name_7
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/{name_7}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def perturbator_service_list_perturbators(
        self,
        default_h2ogpte_model_name: Annotated[Optional[StrictStr], Field(description="Output only. Name of the Model resource. e.g.: \"models/<UUID>\"")] = None,
        default_h2ogpte_model_create_time: Annotated[Optional[datetime], Field(description="Output only. Timestamp when the Model was created.")] = None,
        default_h2ogpte_model_creator: Annotated[Optional[StrictStr], Field(description="Output only. Name of the user or service that requested creation of the Model.")] = None,
        default_h2ogpte_model_update_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Timestamp when the Model was last updated.")] = None,
        default_h2ogpte_model_updater: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested update of the Model.")] = None,
        default_h2ogpte_model_delete_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.")] = None,
        default_h2ogpte_model_deleter: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested deletion of the Model.")] = None,
        default_h2ogpte_model_display_name: Annotated[Optional[StrictStr], Field(description="Human readable name of the Model.")] = None,
        default_h2ogpte_model_description: Annotated[Optional[StrictStr], Field(description="Optional. Arbitrary description of the Model.")] = None,
        default_h2ogpte_model_url: Annotated[Optional[StrictStr], Field(description="Optional. Immutable. Absolute URL to the Model.")] = None,
        default_h2ogpte_model_api_key: Annotated[Optional[StrictStr], Field(description="Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.")] = None,
        default_h2ogpte_model_type: Annotated[Optional[StrictStr], Field(description="Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.")] = None,
        default_h2ogpte_model_parameters: Annotated[Optional[StrictStr], Field(description="Optional. Model specific parameters in JSON format.")] = None,
        default_h2ogpte_model_demo: Annotated[Optional[StrictBool], Field(description="Output only. Whether the Model is a demo resource or not. Demo resources are read only.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> V1ListPerturbatorsResponse:
        """perturbator_service_list_perturbators


        :param default_h2ogpte_model_name: Output only. Name of the Model resource. e.g.: \"models/<UUID>\"
        :type default_h2ogpte_model_name: str
        :param default_h2ogpte_model_create_time: Output only. Timestamp when the Model was created.
        :type default_h2ogpte_model_create_time: datetime
        :param default_h2ogpte_model_creator: Output only. Name of the user or service that requested creation of the Model.
        :type default_h2ogpte_model_creator: str
        :param default_h2ogpte_model_update_time: Output only. Optional. Timestamp when the Model was last updated.
        :type default_h2ogpte_model_update_time: datetime
        :param default_h2ogpte_model_updater: Output only. Optional. Name of the user or service that requested update of the Model.
        :type default_h2ogpte_model_updater: str
        :param default_h2ogpte_model_delete_time: Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.
        :type default_h2ogpte_model_delete_time: datetime
        :param default_h2ogpte_model_deleter: Output only. Optional. Name of the user or service that requested deletion of the Model.
        :type default_h2ogpte_model_deleter: str
        :param default_h2ogpte_model_display_name: Human readable name of the Model.
        :type default_h2ogpte_model_display_name: str
        :param default_h2ogpte_model_description: Optional. Arbitrary description of the Model.
        :type default_h2ogpte_model_description: str
        :param default_h2ogpte_model_url: Optional. Immutable. Absolute URL to the Model.
        :type default_h2ogpte_model_url: str
        :param default_h2ogpte_model_api_key: Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.
        :type default_h2ogpte_model_api_key: str
        :param default_h2ogpte_model_type: Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.
        :type default_h2ogpte_model_type: str
        :param default_h2ogpte_model_parameters: Optional. Model specific parameters in JSON format.
        :type default_h2ogpte_model_parameters: str
        :param default_h2ogpte_model_demo: Output only. Whether the Model is a demo resource or not. Demo resources are read only.
        :type default_h2ogpte_model_demo: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_list_perturbators_serialize(
            default_h2ogpte_model_name=default_h2ogpte_model_name,
            default_h2ogpte_model_create_time=default_h2ogpte_model_create_time,
            default_h2ogpte_model_creator=default_h2ogpte_model_creator,
            default_h2ogpte_model_update_time=default_h2ogpte_model_update_time,
            default_h2ogpte_model_updater=default_h2ogpte_model_updater,
            default_h2ogpte_model_delete_time=default_h2ogpte_model_delete_time,
            default_h2ogpte_model_deleter=default_h2ogpte_model_deleter,
            default_h2ogpte_model_display_name=default_h2ogpte_model_display_name,
            default_h2ogpte_model_description=default_h2ogpte_model_description,
            default_h2ogpte_model_url=default_h2ogpte_model_url,
            default_h2ogpte_model_api_key=default_h2ogpte_model_api_key,
            default_h2ogpte_model_type=default_h2ogpte_model_type,
            default_h2ogpte_model_parameters=default_h2ogpte_model_parameters,
            default_h2ogpte_model_demo=default_h2ogpte_model_demo,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1ListPerturbatorsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def perturbator_service_list_perturbators_with_http_info(
        self,
        default_h2ogpte_model_name: Annotated[Optional[StrictStr], Field(description="Output only. Name of the Model resource. e.g.: \"models/<UUID>\"")] = None,
        default_h2ogpte_model_create_time: Annotated[Optional[datetime], Field(description="Output only. Timestamp when the Model was created.")] = None,
        default_h2ogpte_model_creator: Annotated[Optional[StrictStr], Field(description="Output only. Name of the user or service that requested creation of the Model.")] = None,
        default_h2ogpte_model_update_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Timestamp when the Model was last updated.")] = None,
        default_h2ogpte_model_updater: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested update of the Model.")] = None,
        default_h2ogpte_model_delete_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.")] = None,
        default_h2ogpte_model_deleter: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested deletion of the Model.")] = None,
        default_h2ogpte_model_display_name: Annotated[Optional[StrictStr], Field(description="Human readable name of the Model.")] = None,
        default_h2ogpte_model_description: Annotated[Optional[StrictStr], Field(description="Optional. Arbitrary description of the Model.")] = None,
        default_h2ogpte_model_url: Annotated[Optional[StrictStr], Field(description="Optional. Immutable. Absolute URL to the Model.")] = None,
        default_h2ogpte_model_api_key: Annotated[Optional[StrictStr], Field(description="Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.")] = None,
        default_h2ogpte_model_type: Annotated[Optional[StrictStr], Field(description="Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.")] = None,
        default_h2ogpte_model_parameters: Annotated[Optional[StrictStr], Field(description="Optional. Model specific parameters in JSON format.")] = None,
        default_h2ogpte_model_demo: Annotated[Optional[StrictBool], Field(description="Output only. Whether the Model is a demo resource or not. Demo resources are read only.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[V1ListPerturbatorsResponse]:
        """perturbator_service_list_perturbators


        :param default_h2ogpte_model_name: Output only. Name of the Model resource. e.g.: \"models/<UUID>\"
        :type default_h2ogpte_model_name: str
        :param default_h2ogpte_model_create_time: Output only. Timestamp when the Model was created.
        :type default_h2ogpte_model_create_time: datetime
        :param default_h2ogpte_model_creator: Output only. Name of the user or service that requested creation of the Model.
        :type default_h2ogpte_model_creator: str
        :param default_h2ogpte_model_update_time: Output only. Optional. Timestamp when the Model was last updated.
        :type default_h2ogpte_model_update_time: datetime
        :param default_h2ogpte_model_updater: Output only. Optional. Name of the user or service that requested update of the Model.
        :type default_h2ogpte_model_updater: str
        :param default_h2ogpte_model_delete_time: Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.
        :type default_h2ogpte_model_delete_time: datetime
        :param default_h2ogpte_model_deleter: Output only. Optional. Name of the user or service that requested deletion of the Model.
        :type default_h2ogpte_model_deleter: str
        :param default_h2ogpte_model_display_name: Human readable name of the Model.
        :type default_h2ogpte_model_display_name: str
        :param default_h2ogpte_model_description: Optional. Arbitrary description of the Model.
        :type default_h2ogpte_model_description: str
        :param default_h2ogpte_model_url: Optional. Immutable. Absolute URL to the Model.
        :type default_h2ogpte_model_url: str
        :param default_h2ogpte_model_api_key: Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.
        :type default_h2ogpte_model_api_key: str
        :param default_h2ogpte_model_type: Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.
        :type default_h2ogpte_model_type: str
        :param default_h2ogpte_model_parameters: Optional. Model specific parameters in JSON format.
        :type default_h2ogpte_model_parameters: str
        :param default_h2ogpte_model_demo: Output only. Whether the Model is a demo resource or not. Demo resources are read only.
        :type default_h2ogpte_model_demo: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_list_perturbators_serialize(
            default_h2ogpte_model_name=default_h2ogpte_model_name,
            default_h2ogpte_model_create_time=default_h2ogpte_model_create_time,
            default_h2ogpte_model_creator=default_h2ogpte_model_creator,
            default_h2ogpte_model_update_time=default_h2ogpte_model_update_time,
            default_h2ogpte_model_updater=default_h2ogpte_model_updater,
            default_h2ogpte_model_delete_time=default_h2ogpte_model_delete_time,
            default_h2ogpte_model_deleter=default_h2ogpte_model_deleter,
            default_h2ogpte_model_display_name=default_h2ogpte_model_display_name,
            default_h2ogpte_model_description=default_h2ogpte_model_description,
            default_h2ogpte_model_url=default_h2ogpte_model_url,
            default_h2ogpte_model_api_key=default_h2ogpte_model_api_key,
            default_h2ogpte_model_type=default_h2ogpte_model_type,
            default_h2ogpte_model_parameters=default_h2ogpte_model_parameters,
            default_h2ogpte_model_demo=default_h2ogpte_model_demo,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1ListPerturbatorsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def perturbator_service_list_perturbators_without_preload_content(
        self,
        default_h2ogpte_model_name: Annotated[Optional[StrictStr], Field(description="Output only. Name of the Model resource. e.g.: \"models/<UUID>\"")] = None,
        default_h2ogpte_model_create_time: Annotated[Optional[datetime], Field(description="Output only. Timestamp when the Model was created.")] = None,
        default_h2ogpte_model_creator: Annotated[Optional[StrictStr], Field(description="Output only. Name of the user or service that requested creation of the Model.")] = None,
        default_h2ogpte_model_update_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Timestamp when the Model was last updated.")] = None,
        default_h2ogpte_model_updater: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested update of the Model.")] = None,
        default_h2ogpte_model_delete_time: Annotated[Optional[datetime], Field(description="Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.")] = None,
        default_h2ogpte_model_deleter: Annotated[Optional[StrictStr], Field(description="Output only. Optional. Name of the user or service that requested deletion of the Model.")] = None,
        default_h2ogpte_model_display_name: Annotated[Optional[StrictStr], Field(description="Human readable name of the Model.")] = None,
        default_h2ogpte_model_description: Annotated[Optional[StrictStr], Field(description="Optional. Arbitrary description of the Model.")] = None,
        default_h2ogpte_model_url: Annotated[Optional[StrictStr], Field(description="Optional. Immutable. Absolute URL to the Model.")] = None,
        default_h2ogpte_model_api_key: Annotated[Optional[StrictStr], Field(description="Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.")] = None,
        default_h2ogpte_model_type: Annotated[Optional[StrictStr], Field(description="Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.")] = None,
        default_h2ogpte_model_parameters: Annotated[Optional[StrictStr], Field(description="Optional. Model specific parameters in JSON format.")] = None,
        default_h2ogpte_model_demo: Annotated[Optional[StrictBool], Field(description="Output only. Whether the Model is a demo resource or not. Demo resources are read only.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """perturbator_service_list_perturbators


        :param default_h2ogpte_model_name: Output only. Name of the Model resource. e.g.: \"models/<UUID>\"
        :type default_h2ogpte_model_name: str
        :param default_h2ogpte_model_create_time: Output only. Timestamp when the Model was created.
        :type default_h2ogpte_model_create_time: datetime
        :param default_h2ogpte_model_creator: Output only. Name of the user or service that requested creation of the Model.
        :type default_h2ogpte_model_creator: str
        :param default_h2ogpte_model_update_time: Output only. Optional. Timestamp when the Model was last updated.
        :type default_h2ogpte_model_update_time: datetime
        :param default_h2ogpte_model_updater: Output only. Optional. Name of the user or service that requested update of the Model.
        :type default_h2ogpte_model_updater: str
        :param default_h2ogpte_model_delete_time: Output only. Optional. Set when the Model is deleted. When set Model should be considered as deleted.
        :type default_h2ogpte_model_delete_time: datetime
        :param default_h2ogpte_model_deleter: Output only. Optional. Name of the user or service that requested deletion of the Model.
        :type default_h2ogpte_model_deleter: str
        :param default_h2ogpte_model_display_name: Human readable name of the Model.
        :type default_h2ogpte_model_display_name: str
        :param default_h2ogpte_model_description: Optional. Arbitrary description of the Model.
        :type default_h2ogpte_model_description: str
        :param default_h2ogpte_model_url: Optional. Immutable. Absolute URL to the Model.
        :type default_h2ogpte_model_url: str
        :param default_h2ogpte_model_api_key: Optional. API key used to access the Model. Not set for read calls (i.e. get, list) by public clients (front-end). Set only for internal (server-to-worker) communication.
        :type default_h2ogpte_model_api_key: str
        :param default_h2ogpte_model_type: Immutable. Type of this Model.   - MODEL_TYPE_UNSPECIFIED: Unspecified type.  - MODEL_TYPE_H2OGPTE_RAG: h2oGPTe RAG.  - MODEL_TYPE_OPENAI_RAG: OpenAI Assistant RAG.  - MODEL_TYPE_H2OGPTE_LLM: h2oGPTe LLM.  - MODEL_TYPE_H2OGPT_LLM: h2oGPT LLM.  - MODEL_TYPE_OPENAI_CHAT: OpenAI chat.  - MODEL_TYPE_AZURE_OPENAI_CHAT: Microsoft Azure hosted OpenAI Chat.  - MODEL_TYPE_OPENAI_API_CHAT: OpenAI API chat.  - MODEL_TYPE_H2OLLMOPS: H2O LLMOps.  - MODEL_TYPE_OLLAMA: Ollama.  - MODEL_TYPE_AMAZON_BEDROCK: Amazon Bedrock.
        :type default_h2ogpte_model_type: str
        :param default_h2ogpte_model_parameters: Optional. Model specific parameters in JSON format.
        :type default_h2ogpte_model_parameters: str
        :param default_h2ogpte_model_demo: Output only. Whether the Model is a demo resource or not. Demo resources are read only.
        :type default_h2ogpte_model_demo: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._perturbator_service_list_perturbators_serialize(
            default_h2ogpte_model_name=default_h2ogpte_model_name,
            default_h2ogpte_model_create_time=default_h2ogpte_model_create_time,
            default_h2ogpte_model_creator=default_h2ogpte_model_creator,
            default_h2ogpte_model_update_time=default_h2ogpte_model_update_time,
            default_h2ogpte_model_updater=default_h2ogpte_model_updater,
            default_h2ogpte_model_delete_time=default_h2ogpte_model_delete_time,
            default_h2ogpte_model_deleter=default_h2ogpte_model_deleter,
            default_h2ogpte_model_display_name=default_h2ogpte_model_display_name,
            default_h2ogpte_model_description=default_h2ogpte_model_description,
            default_h2ogpte_model_url=default_h2ogpte_model_url,
            default_h2ogpte_model_api_key=default_h2ogpte_model_api_key,
            default_h2ogpte_model_type=default_h2ogpte_model_type,
            default_h2ogpte_model_parameters=default_h2ogpte_model_parameters,
            default_h2ogpte_model_demo=default_h2ogpte_model_demo,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1ListPerturbatorsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _perturbator_service_list_perturbators_serialize(
        self,
        default_h2ogpte_model_name,
        default_h2ogpte_model_create_time,
        default_h2ogpte_model_creator,
        default_h2ogpte_model_update_time,
        default_h2ogpte_model_updater,
        default_h2ogpte_model_delete_time,
        default_h2ogpte_model_deleter,
        default_h2ogpte_model_display_name,
        default_h2ogpte_model_description,
        default_h2ogpte_model_url,
        default_h2ogpte_model_api_key,
        default_h2ogpte_model_type,
        default_h2ogpte_model_parameters,
        default_h2ogpte_model_demo,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if default_h2ogpte_model_name is not None:
            
            _query_params.append(('defaultH2ogpteModel.name', default_h2ogpte_model_name))
            
        if default_h2ogpte_model_create_time is not None:
            if isinstance(default_h2ogpte_model_create_time, datetime):
                _query_params.append(
                    (
                        'defaultH2ogpteModel.createTime',
                        default_h2ogpte_model_create_time.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('defaultH2ogpteModel.createTime', default_h2ogpte_model_create_time))
            
        if default_h2ogpte_model_creator is not None:
            
            _query_params.append(('defaultH2ogpteModel.creator', default_h2ogpte_model_creator))
            
        if default_h2ogpte_model_update_time is not None:
            if isinstance(default_h2ogpte_model_update_time, datetime):
                _query_params.append(
                    (
                        'defaultH2ogpteModel.updateTime',
                        default_h2ogpte_model_update_time.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('defaultH2ogpteModel.updateTime', default_h2ogpte_model_update_time))
            
        if default_h2ogpte_model_updater is not None:
            
            _query_params.append(('defaultH2ogpteModel.updater', default_h2ogpte_model_updater))
            
        if default_h2ogpte_model_delete_time is not None:
            if isinstance(default_h2ogpte_model_delete_time, datetime):
                _query_params.append(
                    (
                        'defaultH2ogpteModel.deleteTime',
                        default_h2ogpte_model_delete_time.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('defaultH2ogpteModel.deleteTime', default_h2ogpte_model_delete_time))
            
        if default_h2ogpte_model_deleter is not None:
            
            _query_params.append(('defaultH2ogpteModel.deleter', default_h2ogpte_model_deleter))
            
        if default_h2ogpte_model_display_name is not None:
            
            _query_params.append(('defaultH2ogpteModel.displayName', default_h2ogpte_model_display_name))
            
        if default_h2ogpte_model_description is not None:
            
            _query_params.append(('defaultH2ogpteModel.description', default_h2ogpte_model_description))
            
        if default_h2ogpte_model_url is not None:
            
            _query_params.append(('defaultH2ogpteModel.url', default_h2ogpte_model_url))
            
        if default_h2ogpte_model_api_key is not None:
            
            _query_params.append(('defaultH2ogpteModel.apiKey', default_h2ogpte_model_api_key))
            
        if default_h2ogpte_model_type is not None:
            
            _query_params.append(('defaultH2ogpteModel.type', default_h2ogpte_model_type))
            
        if default_h2ogpte_model_parameters is not None:
            
            _query_params.append(('defaultH2ogpteModel.parameters', default_h2ogpte_model_parameters))
            
        if default_h2ogpte_model_demo is not None:
            
            _query_params.append(('defaultH2ogpteModel.demo', default_h2ogpte_model_demo))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/perturbators',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


