# coding: utf-8

"""
    ai/h2o/eval_studio/v1/insight.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eval_studio_client.api.models.perturbation_service_create_perturbation_request import PerturbationServiceCreatePerturbationRequest

class TestPerturbationServiceCreatePerturbationRequest(unittest.TestCase):
    """PerturbationServiceCreatePerturbationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerturbationServiceCreatePerturbationRequest:
        """Test PerturbationServiceCreatePerturbationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerturbationServiceCreatePerturbationRequest`
        """
        model = PerturbationServiceCreatePerturbationRequest()
        if include_optional:
            return PerturbationServiceCreatePerturbationRequest(
                perturbator_configurations = [
                    eval_studio_client.api.models.v1_perturbator_configuration.v1PerturbatorConfiguration(
                        name = '', 
                        intensity = 'PERTURBATOR_INTENSITY_UNSPECIFIED', 
                        params = '', )
                    ],
                test_cases = [
                    eval_studio_client.api.models.v1_test_case.v1TestCase(
                        name = '', 
                        create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        creator = '', 
                        update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updater = '', 
                        delete_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleter = '', 
                        parent = '', 
                        prompt = '', 
                        answer = '', 
                        constraints = [
                            ''
                            ], 
                        condition = '', 
                        perturbed_by = [
                            ''
                            ], 
                        topics = [
                            ''
                            ], 
                        generator = 'TEST_CASES_GENERATOR_UNSPECIFIED', )
                    ],
                test_case_relationships = [
                    eval_studio_client.api.models.v1_test_case_relationship.v1TestCaseRelationship(
                        source = '', 
                        target = '', 
                        type = '', )
                    ],
                default_h2ogpte_model = eval_studio_client.api.models.v1_model.v1Model(
                    name = '', 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    creator = '', 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updater = '', 
                    delete_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleter = '', 
                    display_name = '', 
                    description = '', 
                    url = '', 
                    api_key = '', 
                    type = 'MODEL_TYPE_UNSPECIFIED', 
                    parameters = '', 
                    demo = True, )
            )
        else:
            return PerturbationServiceCreatePerturbationRequest(
        )
        """

    def testPerturbationServiceCreatePerturbationRequest(self):
        """Test PerturbationServiceCreatePerturbationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
