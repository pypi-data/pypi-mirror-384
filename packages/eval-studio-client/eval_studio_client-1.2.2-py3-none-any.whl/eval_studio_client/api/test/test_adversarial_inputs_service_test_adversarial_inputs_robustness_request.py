# coding: utf-8

"""
    ai/h2o/eval_studio/v1/insight.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eval_studio_client.api.models.adversarial_inputs_service_test_adversarial_inputs_robustness_request import AdversarialInputsServiceTestAdversarialInputsRobustnessRequest

class TestAdversarialInputsServiceTestAdversarialInputsRobustnessRequest(unittest.TestCase):
    """AdversarialInputsServiceTestAdversarialInputsRobustnessRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdversarialInputsServiceTestAdversarialInputsRobustnessRequest:
        """Test AdversarialInputsServiceTestAdversarialInputsRobustnessRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdversarialInputsServiceTestAdversarialInputsRobustnessRequest`
        """
        model = AdversarialInputsServiceTestAdversarialInputsRobustnessRequest()
        if include_optional:
            return AdversarialInputsServiceTestAdversarialInputsRobustnessRequest(
                operation = '',
                generator_input_types = [
                    'TEST_CASES_GENERATOR_UNSPECIFIED'
                    ],
                generator_document_urls = [
                    ''
                    ],
                generator_model = eval_studio_client.api.models.v1_model.v1Model(
                    name = '', 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    creator = '', 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updater = '', 
                    delete_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleter = '', 
                    display_name = '', 
                    description = '', 
                    url = '', 
                    api_key = '', 
                    type = 'MODEL_TYPE_UNSPECIFIED', 
                    parameters = '', 
                    demo = True, ),
                generator_base_llm_model = '',
                generator_count = 56,
                generator_topics = [
                    ''
                    ],
                generator_chunks = [
                    ''
                    ],
                generator_h2ogpte_collection_id = '',
                evaluator_identifiers = [
                    ''
                    ],
                evaluators_parameters = {
                    'key' : ''
                    },
                model = eval_studio_client.api.models.v1_model.v1Model(
                    name = '', 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    creator = '', 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updater = '', 
                    delete_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleter = '', 
                    display_name = '', 
                    description = '', 
                    url = '', 
                    api_key = '', 
                    type = 'MODEL_TYPE_UNSPECIFIED', 
                    parameters = '', 
                    demo = True, ),
                base_llm_model = '',
                model_parameters = '',
                default_h2ogpte_model = eval_studio_client.api.models.v1_model.v1Model(
                    name = '', 
                    create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    creator = '', 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updater = '', 
                    delete_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleter = '', 
                    display_name = '', 
                    description = '', 
                    url = '', 
                    api_key = '', 
                    type = 'MODEL_TYPE_UNSPECIFIED', 
                    parameters = '', 
                    demo = True, ),
                baseline_eval = '',
                baseline_metrics = {
                    'key' : eval_studio_client.api.models.v1_metric_scores.v1MetricScores(
                        scores = [
                            eval_studio_client.api.models.v1_metric_score.v1MetricScore(
                                key = '', 
                                value = 1.337, )
                            ], )
                    }
            )
        else:
            return AdversarialInputsServiceTestAdversarialInputsRobustnessRequest(
        )
        """

    def testAdversarialInputsServiceTestAdversarialInputsRobustnessRequest(self):
        """Test AdversarialInputsServiceTestAdversarialInputsRobustnessRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
