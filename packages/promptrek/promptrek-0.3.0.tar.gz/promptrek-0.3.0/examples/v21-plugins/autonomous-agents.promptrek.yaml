schema_version: 2.1.0
metadata:
  title: Autonomous Agents Example
  description: Example agent configurations for automated tasks
  version: 1.0.0
  author: PrompTrek Team
  tags: [agents, automation, example]

content: |
  # Autonomous Agents Example

  This configuration demonstrates autonomous AI agents that can perform
  tasks with varying levels of trust and autonomy.

  ## Trust Levels

  - **full**: Agent can act without approval
  - **partial**: Agent requires approval for sensitive operations
  - **untrusted**: Agent requires approval for all operations

plugins:
  agents:
    # Code reviewer agent - reviews code automatically
    - name: code-reviewer
      description: Autonomous code review agent
      system_prompt: |
        You are an expert code reviewer with deep knowledge of software engineering
        best practices. Your role is to:

        1. Review code for quality, security, and performance issues
        2. Suggest improvements and refactorings
        3. Ensure code follows project conventions
        4. Identify potential bugs and edge cases
        5. Recommend additional tests

        Be thorough but constructive in your reviews. Explain the reasoning
        behind your suggestions.
      tools:
        - file_read
        - git_diff
        - static_analysis
        - run_tests
      trust_level: partial
      requires_approval: true
      context:
        review_criteria: ["code_quality", "security", "performance", "testing"]
        severity_threshold: "medium"
      trust_metadata:
        trusted: true
        trust_level: partial
        source: local

    # Documentation generator agent
    - name: doc-generator
      description: Automatically generates and updates documentation
      system_prompt: |
        You are a documentation specialist. Generate clear, comprehensive
        documentation that helps developers understand and use the code.

        Focus on:
        - Clear explanations
        - Practical examples
        - Common use cases
        - API references
        - Troubleshooting guides
      tools:
        - file_read
        - file_write
        - analyze_code_structure
      trust_level: partial
      requires_approval: true

    # Test generator agent
    - name: test-generator
      description: Generates unit and integration tests
      system_prompt: |
        You are a test automation expert. Generate comprehensive tests that:
        - Cover normal operations
        - Test edge cases
        - Handle error conditions
        - Mock external dependencies
        - Follow testing best practices
      tools:
        - file_read
        - file_write
        - run_tests
        - analyze_coverage
      trust_level: partial
      requires_approval: true

    # Bug fixer agent - highly autonomous
    - name: bug-fixer
      description: Automatically fixes simple bugs
      system_prompt: |
        You are a bug-fixing specialist. Identify and fix bugs while:
        - Understanding the root cause
        - Applying minimal changes
        - Adding tests to prevent regression
        - Documenting the fix
      tools:
        - file_read
        - file_write
        - git_commit
        - run_tests
      trust_level: untrusted
      requires_approval: true
      context:
        max_files_per_fix: 3
        require_tests: true
        auto_commit: false

    # Refactoring agent
    - name: refactorer
      description: Suggests and applies code refactorings
      system_prompt: |
        You are a refactoring expert. Improve code quality through:
        - Extracting functions/classes
        - Removing duplication
        - Simplifying complex logic
        - Improving naming
        - Applying design patterns

        Always ensure refactorings maintain existing behavior.
      tools:
        - file_read
        - file_write
        - run_tests
        - static_analysis
      trust_level: untrusted
      requires_approval: true
