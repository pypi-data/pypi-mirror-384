[build-system]
build-backend = "hatchling.build"
requires = ["hatch-vcs", "hatchling"]


[project]
name = "escapist"
description = "A lightweight tool and CLI for rendering Jinja2 templates with JSON or Python data, ideal for scripting and automation workflows."
readme = "docs/README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [{ name = "Jitesh Sahani (JD)", email = "jitesh.sahani@outlook.com" }]
keywords = [
  "automation",
  "cli",
  "configuration",
  "jinja2",
  "jinja2-renderer",
  "json",
  "rendering",
  "template",
  "templating",
  "yaml",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

dependencies = ["click>=8.3", "jinja2>=3.1.6"]

[project.optional-dependencies]
docs = [
  "click",
  "jinja2",
  "mike",
  "mkdocs",
  "mkdocs-autorefs",
  "mkdocs-gen-files",
  "mkdocs-macros-plugin",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "pymdown-extensions",
  "pyyaml",
  "ruff",
  "towncrier",
]
tests = ["pytest>=8.3.5", "pytest-cov>=6.1.1"]
types = []

[project.urls]
Documentation = "https://github.com/jd-35656/escapist#readme"
Issues = "https://github.com/jd-35656/escapist/issues"
Source = "https://github.com/jd-35656/escapist"

[project.scripts]
escapist = "escapist.cli:escapist"


[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "python-simplified-semver"
fallback_version = "0.0.0"
local_scheme = "node-and-date"
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--tags",
  "--long",
  "--match",
  "v*",
]

[tool.hatch.build.hooks.vcs]
version-file = "src/escapist/__version__.py"

[tool.hatch.build.targets.wheel]
exclude = ["src/escapist/__version__.pyi"]


[tool.ruff]
target-version = "py313"
line-length = 121
src = ["src", "tests", "scripts"]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C4",
  "C9",
  "DTZ",
  "E",
  "F",
  "I",
  "ISC",
  "N",
  "PERF",
  "PGH",
  "PIE",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PYI",
  "Q",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "T20",
  "UP",
  "W",
]
per-file-ignores."tests/*" = [
  "ARG",
  "N806",
  "PLR0913",
  "PLR2004",
  "S101",
  "S106",
]
isort.known-first-party = ["escapist"]
mccabe.max-complexity = 15


[tool.codespell]
skip = ".nox,.git,venv,__pycache__,.mypy_cache,.ruff_cache"
check-hidden = true
quiet-level = 2


[tool.pytest.ini_options]
minversion = "8.0"
log_cli = true
log_cli_level = "INFO"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
  "-ra",
  "--strict-config",
  "--strict-markers",
  "--cov=escapist",
  "--cov-report=term-missing",
]


[tool.coverage.run]
source = ["escapist", "tests"]
branch = true
parallel = true
omit = ["src/escapist/__version__.py"]

[tool.coverage.paths]
escapist = ["src/escapist", "*/escapist/src/escapist"]
tests = ["tests", "*/escapist/tests"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
fail_under = 90
show_missing = true


[tool.towncrier]
directory = "changelog.d"
filename = "docs/changelog.md"
package = "escapist"
start_string = "<!-- BEGIN RELEASED CHANGELOG -->\n"
title_format = "## [{version}](https://github.com/jd-35656/readme-credly-badges/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/jd-35656/readme-credly-badges/issues/{issue})"
underlines = ["", "", ""]

[[tool.towncrier.type]]
name = "Security"

[[tool.towncrier.type]]
name = "Removed"

[[tool.towncrier.type]]
name = "Deprecated"

[[tool.towncrier.type]]
name = "Added"

[[tool.towncrier.type]]
name = "Changed"

[[tool.towncrier.type]]
name = "Fixed"


[tool.mypy]
files = ["src"]
python_version = "3.11"
ignore_missing_imports = true
follow_imports = "normal"
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_unused_ignores = true
warn_unreachable = true
no_implicit_reexport = true
check_untyped_defs = true
enable_error_code = ["ignore-without-code", "truthy-bool"]
