*
* optdicopt.def
*

convex boolean 0 0 1 1 If enabled, the defaults for a number of other options are set to values appropriate to convex MINLPs
continue enumint 0 2 1 1 How to proceed in case of NLP errors
 0 1 Stop on solver failure
 1 1 Accept non-optimal feasible solutions
 2 1 Ignore infeasible solutions
infeasder enumint 0 0 1 1 Use derivatives of infeasible nonlinear subproblems
 0 1 No linearizations of infeasible NLP subproblems
 1 1 Add linearization for infeasible NLP subproblems
maxcycles integer 0 20 0 maxint 1 1 Maximum number of cycles
relaxed enumint 0 1 1 1 How to start DICOPT
 0 1 Start with all integers fixed to the starting value
 1 1 Start with relaxed NLP
 2 1 Start with mixture of fixed and relaxed integers
stop enumint 0 2 1 1 Stopping criterion
 0 1 Stop on maxcycles
 1 1 Stop on crossover
 2 1 Stop on worsening
 3 1 Stop on crossover or worsening
weight double 0 1000 0 maxdouble 1 1 Penalty parameter, set above 1e20 to disable penalty relaxation
usexinit boolean 0 0 1 1 Use the user initial point as starting point for all NLP solves
infbnd double 0 10000 0 maxdouble 1 1 Bound to use for unbounded integer variables in integer cuts
dumpsubprob boolean 0 0 1 1 Whether to dump MIP and NLP subproblems into GAMS files
epsmip double 0 1.0e-6 0 maxdouble 1 2 Tolerance on test on monotonic improvement of MIP master problem
epsx double 0 1.0e-3 0 maxdouble 1 2 Tolerance for integer values when loading relaxed solution
mipiterlim string 0 "" 1 3 List of iteration limits
mipoptfile string 0 "" 1 3 List of option files for MIP solver
mipreslim string 0 "" 1 3 List of resource limits
mipsolver string 0 "" 1 3 List of MIP solvers
optca string 0 "" 1 3 List of OPTCA values
optcr string 0 "" 1 3 List of OPTCR values
nlpiterlim string 0 "" 1 4 List of iteration limits
nlpoptfile string 0 "" 1 4 List of option files for NLP solver
nlpreslim string 0 "" 1 4 List of resource limits
nlpsolver string 0 "" 1 4 List of NLP solvers
nlptracefile string 0 "nlptrace" 1 4 Base name of trace files
nlptracelevel enumint 0 0 1 4 Trace level
 0 1 No trace info is written
 1 1 GAMS file with fixed integer variables
 2 1 Include levels of continuous variables
 3 1 Include all levels and marginals
domlim string 0 "" 1 4 List of allowed number of domain errors
solvelink enumint 0 5 1 1 Solvelink for NLP and MIP subsolver
 1 1 Call NLP and MIP solver via script
 2 1 Call NLP and MIP solver via module
 4 0 Call NLP and MIP solver via grid script (simulate)
 5 1 Call NLP and MIP solver in memory
feaspump enumint 0 0 1 5 Whether to run the Feasibility Pump
 0 1 Do not run the Feasibility Pump
 1 1 Run the Feasibility Pump if there are no semicontinuous or semiinteger variables and no special ordered sets
 2 1 Always run the Feasibility Pump
fp_iterlimit integer 0 20 0 maxint 1 5 Major Iteration limit
fp_timelimit double 0 maxdouble 0 maxdouble 1 5 Time limit
fp_sollimit integer 0 maxint 0 maxint 1 5 Stop when a number of (improving) solutions has been bound
fp_stalllimit integer 0 5 -1 maxint 1 5 Stop when no improving solution has been bound for a number of FP iterations, -1 to disable
fp_dumpsubprob boolean 0 0 1 5 Whether to dump subproblems (NLPs and MIPs) into GAMS files
fp_subsolverlog boolean 0 0 1 5 Whether to show the log of subsolvers
fp_cutoffdecr double 0 0.1 0 maxdouble 1 5 Additional relative decrement of cutoff value for the original objective function
fp_acttol double 0 1E-6 0 maxdouble 1 5 Tolerance on when to consider an equation as active
fp_projzerotol double 0 1E-4 0 maxdouble 1 5 Tolerance on when to consider optimal value of projection problem as zero, which may trigger the solution of a Sub-NLP
fp_mipgap double 0 0.01 0 maxdouble 1 5 Optimality tolerance (relative gap) to use for solving MIP projection problem
fp_softcuts boolean 0 0 0 5 Whether to add slack variables to linearization cuts
fp_transfercuts boolean 0 1 1 5 Whether to transfer cuts from the Feasibility Pump MIP to the DICOPT MIP (all except from the round in which the FP MIP became infeasible)
fp_multistartpoints integer 0 0 0 maxint 0 5 Number of additional solves (from randomly generated starting points) for a NLP
fp_integercuts enumint 0 1 1 5 Whether to add integer cuts after an NLP subproblem has been solved to optimality
 0 1 Do not use integer cuts
 1 1 Use integer cuts only for mixed-binary problems
 2 1 Always use integer cuts
fp_projcuts boolean 0 1 1 5 Whether to add cut derived from projection of MIP solution onto NLP feasible set
myeolchar EOLCOMM *
*
* Groups
* <group-ident> group <group-number <help-context> <help-text>
*
dicopt group 1 1 Algorithmic options
tolerances group 2 1 Tolerances
mip group 3 1 MIP masterproblem options
nlp group 4 1 NLP subproblem options
fp group 5 1 Feasibility Pump
*** End of file
