# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.interconnection_pricing_list_provider_pricing_inner import InterconnectionPricingListProviderPricingInner

class TestInterconnectionPricingListProviderPricingInner(unittest.TestCase):
    """InterconnectionPricingListProviderPricingInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InterconnectionPricingListProviderPricingInner:
        """Test InterconnectionPricingListProviderPricingInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InterconnectionPricingListProviderPricingInner`
        """
        model = InterconnectionPricingListProviderPricingInner()
        if include_optional:
            return InterconnectionPricingListProviderPricingInner(
                href = '',
                provider = 'CSP_AWS',
                tiers = [
                    equinix.services.metalv1.models.interconnection_pricing_list_provider_pricing_inner_tiers_inner.InterconnectionPricingList_provider_pricing_inner_tiers_inner(
                        bandwidth = 500, 
                        billing_cycle = 'monthly', 
                        href = '', 
                        price = 10.04, )
                    ]
            )
        else:
            return InterconnectionPricingListProviderPricingInner(
        )
        """

    def testInterconnectionPricingListProviderPricingInner(self):
        """Test InterconnectionPricingListProviderPricingInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
