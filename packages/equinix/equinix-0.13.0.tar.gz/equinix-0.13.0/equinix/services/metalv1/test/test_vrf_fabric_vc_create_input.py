# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.vrf_fabric_vc_create_input import VrfFabricVcCreateInput

class TestVrfFabricVcCreateInput(unittest.TestCase):
    """VrfFabricVcCreateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VrfFabricVcCreateInput:
        """Test VrfFabricVcCreateInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VrfFabricVcCreateInput`
        """
        model = VrfFabricVcCreateInput()
        if include_optional:
            return VrfFabricVcCreateInput(
                contact_email = '',
                description = '',
                facility_id = '',
                href = '',
                metro = '',
                name = '',
                project = '',
                redundancy = '',
                service_token_type = 'a_side',
                speed = '10000000000',
                tags = [
                    ''
                    ],
                type = 'shared',
                vrfs = [
                    ''
                    ]
            )
        else:
            return VrfFabricVcCreateInput(
                metro = '',
                name = '',
                redundancy = '',
                service_token_type = 'a_side',
                type = 'shared',
                vrfs = [
                    ''
                    ],
        )
        """

    def testVrfFabricVcCreateInput(self):
        """Test VrfFabricVcCreateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
