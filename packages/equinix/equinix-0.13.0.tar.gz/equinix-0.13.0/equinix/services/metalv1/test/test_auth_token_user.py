# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.auth_token_user import AuthTokenUser

class TestAuthTokenUser(unittest.TestCase):
    """AuthTokenUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthTokenUser:
        """Test AuthTokenUser
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthTokenUser`
        """
        model = AuthTokenUser()
        if include_optional:
            return AuthTokenUser(
                avatar_thumb_url = '',
                avatar_url = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                customdata = equinix.services.metalv1.models.customdata.customdata(),
                default_organization_id = '',
                default_project_id = '',
                email = '',
                emails = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                first_name = '',
                fraud_score = '',
                full_name = '',
                href = '',
                id = '',
                last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_name = '',
                max_organizations = 56,
                max_projects = 56,
                phone_number = '',
                short_id = '',
                timezone = '',
                two_factor_auth = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AuthTokenUser(
        )
        """

    def testAuthTokenUser(self):
        """Test AuthTokenUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
