# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.api.vrfs_api import VRFsApi


class TestVRFsApi(unittest.TestCase):
    """VRFsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = VRFsApi()

    def tearDown(self) -> None:
        pass

    def test_bgp_dynamic_neighbors_id_get(self) -> None:
        """Test case for bgp_dynamic_neighbors_id_get

        Retrieve a BGP Dynamic Neighbor
        """
        pass

    def test_create_vrf(self) -> None:
        """Test case for create_vrf

        Create a new VRF in the specified project
        """
        pass

    def test_create_vrf_route(self) -> None:
        """Test case for create_vrf_route

        Create a VRF route
        """
        pass

    def test_delete_bgp_dynamic_neighbor_by_id(self) -> None:
        """Test case for delete_bgp_dynamic_neighbor_by_id

        Delete a VRF BGP Dynamic Neighbor
        """
        pass

    def test_delete_vrf(self) -> None:
        """Test case for delete_vrf

        Delete the VRF
        """
        pass

    def test_delete_vrf_route_by_id(self) -> None:
        """Test case for delete_vrf_route_by_id

        Delete a VRF Route
        """
        pass

    def test_find_vrf_by_id(self) -> None:
        """Test case for find_vrf_by_id

        Retrieve a VRF
        """
        pass

    def test_find_vrf_ip_reservation(self) -> None:
        """Test case for find_vrf_ip_reservation

        Retrieve the Specified VRF IP Reservation
        """
        pass

    def test_find_vrf_ip_reservations(self) -> None:
        """Test case for find_vrf_ip_reservations

        Retrieve all VRF IP Reservations in the VRF
        """
        pass

    def test_find_vrf_route_by_id(self) -> None:
        """Test case for find_vrf_route_by_id

        Retrieve a VRF Route
        """
        pass

    def test_find_vrfs(self) -> None:
        """Test case for find_vrfs

        Retrieve all VRFs in the project
        """
        pass

    def test_get_vrf_bgp_neighbors(self) -> None:
        """Test case for get_vrf_bgp_neighbors

        Retrieve BGP neighbor states for the VRF
        """
        pass

    def test_get_vrf_learned_routes(self) -> None:
        """Test case for get_vrf_learned_routes

        Retrieve learned L3 routes within the VRF
        """
        pass

    def test_get_vrf_routes(self) -> None:
        """Test case for get_vrf_routes

        Retrieve all routes in the VRF
        """
        pass

    def test_update_vrf(self) -> None:
        """Test case for update_vrf

        Update the VRF
        """
        pass

    def test_update_vrf_route_by_id(self) -> None:
        """Test case for update_vrf_route_by_id

        Update a VRF Route
        """
        pass


if __name__ == '__main__':
    unittest.main()
