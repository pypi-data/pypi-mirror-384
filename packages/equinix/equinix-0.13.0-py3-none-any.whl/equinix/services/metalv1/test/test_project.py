# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.project import Project

class TestProject(unittest.TestCase):
    """Project unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project:
        """Test Project
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project`
        """
        model = Project()
        if include_optional:
            return Project(
                backend_transfer_enabled = True,
                bgp_config = equinix.services.metalv1.models.href.Href(
                    href = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                customdata = equinix.services.metalv1.models.customdata.customdata(),
                devices = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                href = '',
                id = '',
                invitations = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                max_devices = equinix.services.metalv1.models.max_devices.max_devices(),
                members = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                memberships = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                name = '0',
                network_status = equinix.services.metalv1.models.network_status.network_status(),
                organization = equinix.services.metalv1.models.href.Href(
                    href = '', ),
                payment_method = equinix.services.metalv1.models.href.Href(
                    href = '', ),
                ssh_keys = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ],
                tags = [
                    ''
                    ],
                type = 'default',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                volumes = [
                    equinix.services.metalv1.models.href.Href(
                        href = '', )
                    ]
            )
        else:
            return Project(
        )
        """

    def testProject(self):
        """Test Project"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
