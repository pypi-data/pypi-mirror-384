# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.bgp_config import BgpConfig

class TestBgpConfig(unittest.TestCase):
    """BgpConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BgpConfig:
        """Test BgpConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BgpConfig`
        """
        model = BgpConfig()
        if include_optional:
            return BgpConfig(
                asn = 65000,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deployment_type = 'local',
                href = '',
                id = '',
                max_prefix = 56,
                md5 = '',
                project = equinix.services.metalv1.models.href.Href(
                    href = '', ),
                ranges = [
                    equinix.services.metalv1.models.global_bgp_range.GlobalBgpRange(
                        address_family = 56, 
                        href = '', 
                        id = '', 
                        project = equinix.services.metalv1.models.href.Href(
                            href = '', ), 
                        range = '', )
                    ],
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                route_object = '',
                sessions = [
                    equinix.services.metalv1.models.bgp_session.BgpSession(
                        address_family = 'ipv4', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        default_route = True, 
                        device = equinix.services.metalv1.models.href.Href(
                            href = '', ), 
                        href = '', 
                        id = '', 
                        learned_routes = [
                            '10.32.16.0/31'
                            ], 
                        status = 'up,down', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                status = 'requested'
            )
        else:
            return BgpConfig(
        )
        """

    def testBgpConfig(self):
        """Test BgpConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
