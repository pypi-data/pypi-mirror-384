# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.metadata import Metadata

class TestMetadata(unittest.TestCase):
    """Metadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Metadata:
        """Test Metadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Metadata`
        """
        model = Metadata()
        if include_optional:
            return Metadata(
                var_class = '',
                customdata = { },
                facility = '',
                hostname = '',
                href = '',
                id = '',
                iqn = '',
                metro = '',
                network = equinix.services.metalv1.models.metadata_network.Metadata_network(
                    addresses = [
                        ''
                        ], 
                    href = '', 
                    interfaces = [
                        None
                        ], 
                    network = equinix.services.metalv1.models.metadata_network_network.Metadata_network_network(
                        bonding = equinix.services.metalv1.models.metadata_network_network_bonding.Metadata_network_network_bonding(
                            href = '', 
                            link_aggregation = '', 
                            mac = '', 
                            mode = 56, ), 
                        href = '', ), ),
                operating_system = None,
                plan = '',
                private_subnets = [
                    ''
                    ],
                reserved = True,
                specs = None,
                ssh_keys = [
                    ''
                    ],
                state = 'queued',
                switch_short_id = '',
                tags = [
                    ''
                    ],
                volumes = [
                    ''
                    ]
            )
        else:
            return Metadata(
        )
        """

    def testMetadata(self):
        """Test Metadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
