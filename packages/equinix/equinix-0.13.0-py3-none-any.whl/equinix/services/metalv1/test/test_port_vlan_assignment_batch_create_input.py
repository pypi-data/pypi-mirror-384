# coding: utf-8

"""
    Metal API

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.metalv1.models.port_vlan_assignment_batch_create_input import PortVlanAssignmentBatchCreateInput

class TestPortVlanAssignmentBatchCreateInput(unittest.TestCase):
    """PortVlanAssignmentBatchCreateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PortVlanAssignmentBatchCreateInput:
        """Test PortVlanAssignmentBatchCreateInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PortVlanAssignmentBatchCreateInput`
        """
        model = PortVlanAssignmentBatchCreateInput()
        if include_optional:
            return PortVlanAssignmentBatchCreateInput(
                href = '',
                vlan_assignments = [
                    equinix.services.metalv1.models.port_vlan_assignment_batch_create_input_vlan_assignments_inner.PortVlanAssignmentBatchCreateInput_vlan_assignments_inner(
                        href = '', 
                        native = True, 
                        state = 'assigned', 
                        vlan = '', )
                    ]
            )
        else:
            return PortVlanAssignmentBatchCreateInput(
        )
        """

    def testPortVlanAssignmentBatchCreateInput(self):
        """Test PortVlanAssignmentBatchCreateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
