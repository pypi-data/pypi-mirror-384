import os
import unittest
from pathlib import Path

import pandas

from steam_sdk.data import DataRoxieParser as pd
from steam_sdk.parsers.ParserRoxie import ParserRoxie
from steam_sdk.parsers.ParserYAML import yaml_to_data
from steam_sdk.utils.delete_if_existing import delete_if_existing
from tests.TestHelpers import compare_dicts_print_differences


class TestParserROXIE(unittest.TestCase):

    @classmethod
    def setUpClass(cls) -> None:
        """
        This function is executed once before any tests in this class
        """
        delete_if_existing(os.path.join(os.path.dirname(__file__), 'output', 'ROXIE'), verbose=True)

    def setUp(self) -> None:
        """
            This function is executed before each test in this class
        """
        self.current_path = Path(__file__).parent  # os.getcwd()
        os.chdir(os.path.dirname(__file__))  # move to the directory where this file is located
        print('\nCurrent folder:          {}'.format(self.current_path))
        print('\nTest is run from folder: {}'.format(os.getcwd()))

    def tearDown(self) -> None:
        """
            This function is executed after each test in this class
        """
        os.chdir(self.current_path)  # go back to initial folder

    def test_getIronYokeDataFromIronFile(self):
        """
            Test the function getIronYokeDataFromIronFile with data from MQXF_V2
        """
        # arrange
        iron_content = """
        --file generated by Xhermes 10.0
HyperMesh;
--COMMENTS
--''

--VARIABLES
pi           = 3.14159265;
deg2r        = pi/180;
mm           = 0.001;
dv dshellth  = 0*mm;
dv dvesselth = 0*mm;
dv dpadth    = 0*mm;
dv dkeyy     = 0*mm;
dv dkeyh     = 0*mm;
dv deng      = 0*mm;
dv dbusdeg   = 0;
dv dtooldeg  = 0;
dv dblady    = 0*mm;
dv dbladh    = 0*mm;
dv dhcorner  = 0*mm;
dv r1        = 75*mm;
dv r21       = 93.813*mm;
dv r22       = 94.313*mm;
dv r3        = 113.126*mm;
dv collarin  = 115*mm;
dv padin     = 133*mm;
dv collarth  = padin-collarin;
dv fillth    = collarin-r3;
dv padsep    = 40*mm;
dv eng       = 33*mm+deng;
dv hcorner   = 60*mm+dhcorner;
dv rcoltie   = 9*mm/2;
dv xcoltie   = 118*mm;
dv ycoltie   = 45*mm;
dv identd    = 4*mm;
dv identw    = 12*mm;
dv padth     = 41.5*mm+dpadth;
dv padout    = padin+padth;
dv colpadth  = collarth+padth;
dv rpadtie   = 16*mm/2;
dv xpadtie   = 140*mm;
dv ypadtie   = 82*mm;
dv rrod      = 36*mm/2;
dv rhole     = 40*mm/2;
dv rwash     = 28*mm;
dv xhole     = 155*mm*Sqrt(2)/2;
dv yhole     = 155*mm*Sqrt(2)/2;
dv alkeyh    = 12*mm;
dv keyy      = 24.5*mm+dkeyy-dkeyh;
dv keyh      = 13.5*mm+dkeyh;
dv blady     = keyy+keyh+4*mm-dkeyy-dbladh+dblady;
dv bladh     = 58*mm+dbladh;
dv padcut    = 6*mm;
dv slot      = 3*mm;
dv mastersep = 3*mm;
dv slotb     = 3*mm;
dv slota     = 5*mm;
dv sloti     = 5*mm;
dv pmasterth = 15*mm;
dv pmastery  = blady+bladh+pmasterth-dblady+1*mm;
dv outerd    = 630*mm;
dv vesselout = outerd/2;
dv vesselth  = 8*mm+dvesselth;
dv vesselin  = vesselout-vesselth;
dv vesselgap = 0*mm;
dv shellout  = vesselin-vesselgap;
dv shellth   = 29*mm+dshellth;
dv shellin   = shellout-shellth;
dv ymasterth = pmasterth;
dv ymastery  = pmastery;
dv yokein    = padout+mastersep;
dv yokeout   = shellin;
dv yokesep   = 12*mm;
dv grwidth   = 9.5*mm;
dv grdepth   = 3*mm;
dv ryoketie  = 24*mm/2;
dv xyoketie  = 226*mm;
dv yyoketie  = 78*mm;
dv ryokecool = 77*mm/2;
dv xyokecool = 227.5*mm*Sqrt(2)/2;
dv yyokecool = 227.5*mm*Sqrt(2)/2;
dv busdeg    = 30+dbusdeg;
dv busw      = 20*mm;
dv bush      = 50*mm;
dv tooldeg   = 17+dtooldeg;
dv toolcut   = 20*mm;
dv rcryo1    = 0.445;
dv rcryo2    = 0.457;
dv rvessel1  = vesselin;
dv rvessel2  = vesselout;
dv off       = 0.080;
dv slot_sep  = 24*mm;
dv slot_h    = 15*mm;
dv slot_w    = 10*mm;
dv slot_hcut = 0*mm;
dv slot_wcut = 2*mm;
dv rfillet   = 15*mm;
xpin = yokeout;
ypin = 0*mm;
dpin = 8*mm;
rpin = dpin/2;
midp = (padout+pmastery)/2;
dist = Sqrt( (xyokecool-midp)^2+(yyokecool-midp)^2 );
ang = Acos(dist/ryokecool)+5/4*pi;
distfill = 0.0062132034356;
midp2 = (padin+hcorner)/2;

--NODES
-- pad 1st octant
kppident1  = [padin-identd,0];
kppident2  = [padin-identd,identw/2];
kppident3  = [padin,identw/2];
kppcor     = [padin,hcorner];
kppfllt1   = [padin,hcorner-distfill];
kppfllt2   = [padin-distfill/Sqrt(2.0),hcorner+distfill/Sqrt(2.0)];
kppalkey1  = [padout-slota,0];
kppalkey2  = [padout-slota,alkeyh/2];
kppalkey3  = [padout,alkeyh/2];
kppkey1    = [padout,keyy];
kppkey2    = [padout-sloti,keyy];
kppkey3    = [padout-sloti,keyy+keyh];
kppkey4    = [padout,keyy+keyh];
kppblad1   = [padout,blady];
kppblad2   = [padout-slotb,blady];
kppblad3   = [padout-slotb,blady+bladh];
kppblad4   = [padout,blady+bladh];
kppmtop    = [padout,pmastery];
kppeng1    = [midp2+padsep/2/Sqrt(2),midp2-padsep/2/Sqrt(2)];
kppcool1   = [kppmtop.x,kppmtop.y+padcut];
kppcool2   = [kppcool1.y-(kppeng1.y-kppeng1.x),kppcool1.y];
kpptie1    = [xpadtie-rpadtie,ypadtie];
kpptie2    = [xpadtie+rpadtie,ypadtie];

-- pad 2nd octant
kppident1s = [kppident1.y,kppident1.x];
kppident2s = [kppident2.y,kppident2.x];
kppident3s = [kppident3.y,kppident3.x];
kppcors    = [kppcor.y,kppcor.x];
kppfllt1s  = [kppfllt1.y,kppfllt1.x];
kppfllt2s  = [kppfllt2.y,kppfllt2.x];
kppalkey1s = [kppalkey1.y,kppalkey1.x];
kppalkey2s = [kppalkey2.y,kppalkey2.x];
kppalkey3s = [kppalkey3.y,kppalkey3.x];
kppkey1s   = [kppkey1.y,kppkey1.x];
kppkey2s   = [kppkey2.y,kppkey2.x];
kppkey3s   = [kppkey3.y,kppkey3.x];
kppkey4s   = [kppkey4.y,kppkey4.x];
kppblad1s  = [kppblad1.y,kppblad1.x];
kppblad2s  = [kppblad2.y,kppblad2.x];
kppblad3s  = [kppblad3.y,kppblad3.x];
kppblad4s  = [kppblad4.y,kppblad4.x];
kppmtops   = [kppmtop.y,kppmtop.x];
kppeng1s   = [kppeng1.y,kppeng1.x];
kppcool1s  = [kppcool1.y,kppcool1.x];
kppcool2s  = [kppcool2.y,kppcool2.x];
kpptie1s   = [kpptie1.y,kpptie1.x];
kpptie2s   = [kpptie2.y,kpptie2.x];

-- yoke 1st octant
kpyalkey1  = [yokein+slota,0];
kpyalkey2  = [yokein+slota,alkeyh/2];
kpyalkey3  = [yokein,alkeyh/2];
kpykey1    = [yokein,keyy];
kpykey2    = [yokein+sloti,keyy];
kpykey3    = [yokein+sloti,keyy+keyh];
kpykey4    = [yokein,keyy+keyh];
kpyblad1   = [yokein,blady];
kpyblad2   = [yokein+slotb,blady];
kpyblad3   = [yokein+slotb,blady+bladh];
kpyblad4   = [yokein,blady+bladh];
kpytool1   = [yokeout @ (45-tooldeg)*deg2r];
kpytool2   = [kpytool1.x-toolcut,kpytool1.y];
kpytool3   = [kpytool2.x,Sqrt(yokeout^2-kpytool2.x^2)];
kpyout1    = [yokeout @ 0];
kpyout2    = [yokeout @ (pi/4-Asin(yokesep/2/yokeout))];
kpysep1    = [kpyout2.x-Sqrt(0.5*grwidth^2), kpyout2.y-Sqrt(0.5*grwidth^2)];
kpysep2    = [kpysep1.x-Sqrt(0.5*grdepth^2), kpysep1.y+Sqrt(0.5*grdepth^2)];
kpycool1   = [xyokecool+ryokecool*Cos(-Asin((yokesep/2-grdepth)/ryokecool)+pi/4),yyokecool+ryokecool*Sin(-Asin((yokesep/2-grdepth)/ryokecool)+pi/4)];
kpycool2   = [yokein,yyokecool-Sqrt(ryokecool^2-(yokein-xyokecool)^2)];
kpyslot1   = [yokeout @ Asin(slot_sep/2/yokeout)];
kpyslot2   = [kpyslot1.x-slot_w,kpyslot1.y];
kpyslot3   = [kpyslot1.x-slot_w,kpyslot1.y+slot_h];
kpyslot5   = [yokeout @ Asin((slot_sep/2+slot_h+slot_hcut)/yokeout)];
kpyslot4   = [kpyslot5.x-slot_wcut,kpyslot1.y+slot_h];
kpytie1    = [xyoketie-ryoketie,yyoketie];
kpytie2    = [xyoketie+ryoketie,yyoketie];
kpypin1    = [yokeout-rpin,0];
kpypin2    = [yokeout @ 2*Asin(rpin/2/yokeout)];

-- yoke 2nd octant
kpyalkey1s = [kpyalkey1.y,kpyalkey1.x];
kpyalkey2s = [kpyalkey2.y,kpyalkey2.x];
kpyalkey3s = [kpyalkey3.y,kpyalkey3.x];
kpykey1s   = [kpykey1.y,kpykey1.x];
kpykey2s   = [kpykey2.y,kpykey2.x];
kpykey3s   = [kpykey3.y,kpykey3.x];
kpykey4s   = [kpykey4.y,kpykey4.x];
kpyblad1s  = [kpyblad1.y,kpyblad1.x];
kpyblad2s  = [kpyblad2.y,kpyblad2.x];
kpyblad3s  = [kpyblad3.y,kpyblad3.x];
kpyblad4s  = [kpyblad4.y,kpyblad4.x];
kpytool1s  = [kpytool1.y,kpytool1.x];
kpytool2s  = [kpytool2.y,kpytool2.x];
kpytool3s  = [kpytool3.y,kpytool3.x];
kpyout1s   = [kpyout1.y,kpyout1.x];
kpyout2s   = [kpyout2.y,kpyout2.x];
kpysep1s   = [kpysep1.y,kpysep1.x];
kpysep2s   = [kpysep2.y,kpysep2.x];
kpycool1s  = [kpycool1.y,kpycool1.x];
kpycool2s  = [kpycool2.y,kpycool2.x];
kpyslot1s  = [kpyslot1.y,kpyslot1.x];
kpyslot2s  = [kpyslot2.y,kpyslot2.x];
kpyslot3s  = [kpyslot3.y,kpyslot3.x];
kpyslot4s  = [kpyslot4.y,kpyslot4.x];
kpyslot5s  = [kpyslot5.y,kpyslot5.x];
kpytie1s   = [kpytie1.y,kpytie1.x];
kpytie2s   = [kpytie2.y,kpytie2.x];
kpypin1s   = [kpypin1.y, kpypin1.x];
kpypin2s   = [kpypin2.y, kpypin2.x];

--LINES
-- pad 1st octant
lnpmed     = HyperLine(kppident1,kppalkey1,"Line",0.5);
lnpalkey1  = HyperLine(kppalkey1,kppalkey2,"Line",0.5);
lnpalkey2  = HyperLine(kppalkey2,kppalkey3,"Line",0.5);
lnpm1      = HyperLine(kppalkey3,kppkey1,"Line",0.5);
lnpkey1    = HyperLine(kppkey1,kppkey2,"Line",0.5);
lnpkey2    = HyperLine(kppkey2,kppkey3,"Line",0.5);
lnpkey3    = HyperLine(kppkey3,kppkey4,"Line",0.5);
lnpm2      = HyperLine(kppkey4,kppblad1,"Line",0.5);
lnpblad1   = HyperLine(kppblad1,kppblad2,"Line",0.5);
lnpblad2   = HyperLine(kppblad2,kppblad3,"Line",0.5);
lnpblad3   = HyperLine(kppblad3,kppblad4,"Line",0.5);
lnpm3      = HyperLine(kppblad4,kppmtop,"Line",0.5);
lnpm4      = HyperLine(kppmtop,kppcool1,"Line",0.5);
lnpcool    = HyperLine(kppcool1,kppcool2,"Line",0.5);
lnpeng     = HyperLine(kppcool2,kppeng1,"Line",0.5);
lnpcol1    = HyperLine(kppeng1,kppfllt2,"Line",0.5);
lnpfllt    = HyperLine(kppfllt2,kppfllt1,"Arc",rfillet);
lnpcol2    = HyperLine(kppfllt1,kppident3,"Line",0.5);
lnpident1  = HyperLine(kppident3,kppident2,"Line",0.5);
lnpident2  = HyperLine(kppident2,kppident1,"Line",0.5);
lnpadtie   = HyperLine(kpptie1,kpptie2,"Circle");

-- pad 2nd octant
lnpmeds    = HyperLine(kppident1s,kppalkey1s,"Line",0.5);
lnpalkey1s = HyperLine(kppalkey1s,kppalkey2s,"Line",0.5);
lnpalkey2s = HyperLine(kppalkey2s,kppalkey3s,"Line",0.5);
lnpm1s     = HyperLine(kppalkey3s,kppkey1s,"Line",0.5);
lnpkey1s   = HyperLine(kppkey1s,kppkey2s,"Line",0.5);
lnpkey2s   = HyperLine(kppkey2s,kppkey3s,"Line",0.5);
lnpkey3s   = HyperLine(kppkey3s,kppkey4s,"Line",0.5);
lnpm2s     = HyperLine(kppkey4s,kppblad1s,"Line",0.5);
lnpblad1s  = HyperLine(kppblad1s,kppblad2s,"Line",0.5);
lnpblad2s  = HyperLine(kppblad2s,kppblad3s,"Line",0.5);
lnpblad3s  = HyperLine(kppblad3s,kppblad4s,"Line",0.5);
lnpm3s     = HyperLine(kppblad4s,kppmtops,"Line",0.5);
lnpm4s     = HyperLine(kppmtops,kppcool1s,"Line",0.5);
lnpcools   = HyperLine(kppcool2s,kppcool1s,"Line",0.5);
lnpengs    = HyperLine(kppcool2s,kppeng1s,"Line",0.5);
lnpcol1s   = HyperLine(kppeng1s,kppfllt2s,"Line",0.5);
lnpfllts    = HyperLine(kppfllt1s,kppfllt2s,"Arc",rfillet);
lnpcol2s   = HyperLine(kppfllt1s,kppident3s,"Line",0.5);
lnpident1s = HyperLine(kppident3s,kppident2s,"Line",0.5);
lnpident2s = HyperLine(kppident2s,kppident1s,"Line",0.5);
lnpadties  = HyperLine(kpptie1s,kpptie2s,"Circle");

-- yoke 1st octant
lnymed     = HyperLine(kpyalkey1,kpypin1,"Line",0.5);
lnypin     = HyperLine(kpypin1,kpypin2,"Arc",rpin);
lnyout1    = HyperLine(kpyslot1,kpypin2,"Arc",yokeout);
lnyslot1     = HyperLine(kpyslot1,kpyslot2,"Line",0.5);
lnyslot2     = HyperLine(kpyslot2,kpyslot3,"Line",0.5);
lnyslot3     = HyperLine(kpyslot3,kpyslot4,"Line",0.5);
lnyslot4     = HyperLine(kpyslot4,kpyslot5,"Line",0.5);
lnyout2    = HyperLine(kpytool1,kpyslot5,"Arc",yokeout);
lnytool1   = HyperLine(kpytool1,kpytool2,"Line",0.5);
lnytool2   = HyperLine(kpytool2,kpytool3,"Line",0.5);
lnyout3    = HyperLine(kpyout2,kpytool3,"Arc",yokeout);
lnysep1     = HyperLine(kpyout2,kpysep1,"Line",0.5);
lnysep2     = HyperLine(kpysep1,kpysep2,"Line",0.5);
lnysep3     = HyperLine(kpysep2,kpycool1,"Line",0.5);
lnycool    = HyperLine(kpycool1,kpycool2,"Arc",ryokecool);
lnym1      = HyperLine(kpycool2,kpyblad4,"Line",0.5);
lnyblad1   = HyperLine(kpyblad4,kpyblad3,"Line",0.5);
lnyblad2   = HyperLine(kpyblad3,kpyblad2,"Line",0.5);
lnyblad3   = HyperLine(kpyblad2,kpyblad1,"Line",0.5);
lnym2      = HyperLine(kpyblad1,kpykey4,"Line",0.5);
lnykey1    = HyperLine(kpykey4,kpykey3,"Line",0.5);
lnykey2    = HyperLine(kpykey3,kpykey2,"Line",0.5);
lnykey3    = HyperLine(kpykey2,kpykey1,"Line",0.5);
lnym3      = HyperLine(kpykey1,kpyalkey3,"Line",0.5);
lnyalkey1  = HyperLine(kpyalkey3,kpyalkey2,"Line",0.5);
lnyalkey2  = HyperLine(kpyalkey2,kpyalkey1,"Line",0.5);
lnyoketie  = HyperLine(kpytie1,kpytie2,"Circle");

-- yoke 2nd octant
lnymeds    = HyperLine(kpyalkey1s,kpypin1s,"Line",0.5);
lnypins    = HyperLine(kpypin2s,kpypin1s,"Arc",rpin);
lnyout1s   = HyperLine(kpypin2s,kpyslot1s,"Arc",yokeout);
lnyslot1s     = HyperLine(kpyslot1s,kpyslot2s,"Line",0.5);
lnyslot2s     = HyperLine(kpyslot2s,kpyslot3s,"Line",0.5);
lnyslot3s     = HyperLine(kpyslot3s,kpyslot4s,"Line",0.5);
lnyslot4s     = HyperLine(kpyslot4s,kpyslot5s,"Line",0.5);
lnyout2s   = HyperLine(kpyslot5s,kpytool1s,"Arc",yokeout);
lnytool1s  = HyperLine(kpytool1s,kpytool2s,"Line",0.5);
lnytool2s  = HyperLine(kpytool2s,kpytool3s,"Line",0.5);
lnyout3s   = HyperLine(kpytool3s,kpyout2s,"Arc",yokeout);
lnysep1s   = HyperLine(kpyout2s,kpysep1s,"Line",0.5);
lnysep2s   = HyperLine(kpysep1s,kpysep2s,"Line",0.5);
lnysep3s   = HyperLine(kpysep2s,kpycool1s,"Line",0.5);
lnycools   = HyperLine(kpycool2s,kpycool1s,"Arc",ryokecool);
lnym1s     = HyperLine(kpycool2s,kpyblad4s,"Line",0.5);
lnyblad1s  = HyperLine(kpyblad4s,kpyblad3s,"Line",0.5);
lnyblad2s  = HyperLine(kpyblad3s,kpyblad2s,"Line",0.5);
lnyblad3s  = HyperLine(kpyblad2s,kpyblad1s,"Line",0.5);
lnym2s     = HyperLine(kpyblad1s,kpykey4s,"Line",0.5);
lnykey1s   = HyperLine(kpykey4s,kpykey3s,"Line",0.5);
lnykey2s   = HyperLine(kpykey3s,kpykey2s,"Line",0.5);
lnykey3s   = HyperLine(kpykey2s,kpykey1s,"Line",0.5);
lnym3s     = HyperLine(kpykey1s,kpyalkey3s,"Line",0.5);
lnyalkey1s = HyperLine(kpyalkey3s,kpyalkey2s,"Line",0.5);
lnyalkey2s = HyperLine(kpyalkey2s,kpyalkey1s,"Line",0.5);
lnyoketies = HyperLine(kpytie1s,kpytie2s,"Circle");

--AREAS
--aryoke     = HyperArea(lnymed,lnypin,lnyout1,lnyslot1,lnyslot2,lnyslot3,lnyslot4,lnyout2,lnytool1,lnytool2,lnyout3,lnysep,lnycool,lnym1,lnyblad1,lnyblad2,lnyblad3,lnym2,lnykey1,lnykey2,lnykey3,lnym3,lnyalkey1,lnyalkey2,BHiron1);
aryoke     = HyperArea(lnymed,lnypin,lnyout1,lnyslot1,lnyslot2,lnyslot3,lnyslot4,lnyout2,lnytool1,lnytool2,lnyout3,lnysep1,lnysep2,lnysep3,lnycool,lnym1,lnyblad1,lnyblad2,lnyblad3,lnym2,lnykey1,lnykey2,lnykey3,lnym3,lnyalkey1,lnyalkey2,BHiron1);
aryoketie  = HyperArea(lnyoketie,BH_air);
aryokes    = HyperArea(lnyalkey2s,lnyalkey1s,lnym3s,lnykey3s,lnykey2s,lnykey1s,lnym2s,lnyblad3s,lnyblad2s,lnyblad1s,lnym1s,lnycools,lnysep3s,lnysep2s,lnysep1s,lnyout3s,lnytool2s,lnytool1s,lnyout2s,lnyslot4s,lnyslot3s,lnyslot2s,lnyslot1s,lnyout1s,lnypins,lnymeds,BHiron1);
aryoketies = HyperArea(lnyoketies,BH_air);
arpad      = HyperArea(lnpmed,lnpalkey1,lnpalkey2,lnpm1,lnpkey1,lnpkey2,lnpkey3,lnpm2,lnpblad1,lnpblad2,lnpblad3,lnpm3,lnpm4,lnpcool,lnpeng,lnpcol1,lnpfllt,lnpcol2,lnpident1,lnpident2,BHiron1);
arpadtie   = HyperArea(lnpadtie,BH_air);
arpads     = HyperArea(lnpident2s,lnpident1s,lnpcol2s,lnpfllts,lnpcol1s,lnpengs,lnpcools,lnpm4s,lnpm3s,lnpblad3s,lnpblad2s,lnpblad1s,lnpm2s,lnpkey3s,lnpkey2s,lnpkey1s,lnpm1s,lnpalkey2s,lnpalkey1s,lnpmeds,BHiron1);
arpadties  = HyperArea(lnpadties,BH_air);

--HOLES
HyperHoleOf(aryoketie,aryoke);
HyperHoleOf(aryoketies,aryokes);
HyperHoleOf(arpadtie,arpad);
HyperHoleOf(arpadties,arpads);

--MESH
--Lmesh(,);

Mirrorx;
Mirrory;

Lmesh(lnpmed,9);

        """

        # act
        roxie_parser = ParserRoxie()
        data_iron = roxie_parser.getIronYokeDataFromIronFile(iron_content=iron_content)
        iron_yaml = yaml_to_data('references/iron_REFERENCE.yaml')

        # assert
        self.assertEqual(data_iron.model_dump(), iron_yaml)

    def test_getConductorDataFromCadataFile(self):
        """
            Test the function getConductorDataFromCadataFile
        """
        # arrange
        cadata_content = """ VERSION 11
INSUL 31
  1 BARE                 0            0 'BARE                          ' 
  2 ALLPOLYIL         0.15         0.12 'POLYIMID MB INNER             ' 
  3 ALLPOLYOL         0.15         0.13 'POLYIMID MB OUTER             ' 
  4 ALLPOLMQY         0.08         0.08 'POLYIMID MQY,MQM              ' 
  5 ALLPOLMQ          0.13         0.11 'POLYIMID MQ                   ' 
  6 RIBINS1           0.06         0.06 'RIBBON INS. THICK             ' 
  7 RIBINS2           0.03         0.03 'RIBBON INS. THIN              ' 
  8 RIBINS3           0.03         0.02 'RIBBON INS. SIEMAT            ' 
  9 RHICINS           0.18          0.1 'RHIC INSULATION               ' 
 10 GSI1INS       0.081075     0.081075 'GSI001 INSULATION             ' 
 11 SIS3INS          0.125        0.098 'SIS300 CABLE                  ' 
 12 ITERINS            0.2          0.2 'for iter Nb3Sn                ' 
 13 EFDAJA1           1.55         1.55 'EFDA JACKET1                  ' 
 14 EFDAJA2           1.25         1.25 'EFDA JACKET2                  ' 
 15 CEAINS             0.2          0.2 'CEA Special Insulation        ' 
 16 KEKIT              0.1        0.084 'MQXA                          ' 
 17 FNALIT          0.1016        0.075 'MQXB                          ' 
 18 MQWD               0.5          0.5 'MQW double half lapped 0.25   ' 
 19 MBXWINS            0.5          0.5 'MBXW 4-5 layers of glass      ' 
 20 MBWINS             0.5          0.8 'MBW 4-5 layers of glass       ' 
 21 MCBWINS            0.4          0.8 'MCBW 4-5 layers of glass      ' 
 22 GECSEXPN         0.045        0.055 'MS sextupole                  ' 
 23 GECSEXN2          0.06         0.06 'MO octupole                   ' 
 24 ROEBINS            0.1          0.1 'Insulation Roebel cable (ER)  ' 
 25 INSXF145         0.145        0.145 'MQXF 150mm aperture,145 um ins' 
 26 TININS3            0.1          0.1 'Nb3Sn 150 um after rect.      ' 
 27 NEWD1            0.155        0.130 'The new D1 for HL-LHC         ' 
 28 S2_150            0.15         0.15 'Nb3Sn (MQXF_V1)               ' 
 29 MU_INS          0.1797      0.08115 'Insulation of LHC MU undulator' 
 30 MU34_INS          0.15      0.08115 'Ins. LHC MU undulator (34in1) ' 
 31 MU_R_INS           0.2          0.2 'Par-Resistor LHC MU undulator ' 
 No Name            Radial       Azimut  Comment                         

REMFIT 5
  1 FIT1   1           3E+09          9.2         0.57          0.9         2.32        27.04         14.5            0            0            0            0 'MB FILAMENT TYPE              ' 
  2 TES1   1           3E+09          9.2         0.57          0.9         2.32        27.04         14.5            0            0            0            0 'FILAMENT TEST TYPE alph       ' 
  3 GSIFIT 1           3E+09          9.2          0.7         1.57            1           25         14.5            0            0            0            0 'APPROXIMATE THE WILSON FIT    ' 
  4 SISFIT 1           3E+09      9.33517         0.68       0.8477      2.23234           25         14.5            0            0            0            0 'Glyn MQYT5 FIT at 4.5K        ' 
  5 NB3SNI 5     4.13904E+10        27.59        17.08            0            0            0            0            0            0            0            0 'MBH05, wo SF                  ' 
 No Name   Type           C1           C2           C3           C4           C5           C6           C7           C8           C9          C10          C11  Comment                         

FILAMENT 12
  1 TESTI1               6            0 TES1   TES1   'NBTI  INNER CABLES            ' 
  2 TESTO1               5            0 TES1   TES1   'NBTI  INNER CABLES            ' 
  3 NBTII                7            0 FIT1   FIT1   'NBTI  INNER CABLES            ' 
  4 NBTIO                6            0 FIT1   FIT1   'NBTI  OUTER CABLES            ' 
  5 NB3SN               22           12 FIT1   FIT1   'NB2SN TWENTE                  ' 
  6 NBTIS                5            0 FIT1   FIT1   'NBTI  SIEMAT(ALSTOM)          ' 
  7 NBTIG                6            0 GSIFIT GSIFIT 'NBTI GSI001                   ' 
  8 SIS3NBTI           3.5            0 SISFIT SISFIT 'NBTI SIS300                   ' 
  9 DUMMY                0            0 FIT1   FIT1   'Unused for warm magnets       ' 
 10 QXF89H              56            0 NB3SNH NB3SNH 'QXF OST RRP 108/129, Nov 2014 ' 
 11 HFM43I              43            0 NB3SNI NB3SNI '0.7 OST 150/169 43um MBH05    ' 
 12 HFM60R              60            0 NB3SNR NB3SNR '60UM, RMM 5 % deg             ' 
 No Name           fildiao      fildiai Jc-Fit fit-|   Comment                         

STRAND 34
  1 STR01            1.065          1.6    70          1.9           10       1433.3       500.34 'MB INNER                      ' 
  2 STR02            0.825          1.9    80          1.9            9         1953       550.03 'MB OUTER, MQ                  ' 
  3 STR05             0.48         1.75    80          1.9            5       2872.2          600 'MQM                           ' 
  4 STR06            0.735         1.25    80          4.5            5       2810.6          600 'MQY                           ' 
  5 WIRE1            0.375            4   100        4.222            5         2490        606.8 'MCB                           ' 
  6 WIRE2          0.52248            4    70          1.9            5         4807        635.8 'MCBC, MCBY                    ' 
  7 WIRE3          0.93683          1.6    70        4.222            5         2640        606.8 'MCS,MCD,MQT?                  ' 
  8 WIRE3L4          0.937         1.71    70          1.9          5.5      4603.79      652.067 'MQSX                          ' 
  9 WIRE4           1.2868          1.7    70        4.222            5         2499        613.2 'MCBX                          ' 
 10 WIRES           0.5804         1.85    90            2         7.83         2250          480 'TESLA 500 STRA                ' 
 11 GSI1STRA         0.648         2.21   187          4.2          5.5      2495.24      583.898 'GSI001 STRANDS                ' 
 12 RHIC1STRA        0.648         2.25   187          4.2          5.5      2495.24      583.898 'RHIC D1 STRANDS               ' 
 13 RHIC2STRA        0.648          1.8   187          4.2          5.5      2495.24      583.898 'RHIC D2-D4 STRANDS            ' 
 14 SIS3STRA         0.825          1.4   278          4.2            5         2700          570 'SIS300 STRANDS                ' 
 15 ITERS1            1.98          1.1    70        4.222           12         1100          300 'For iter test station         ' 
 16 ITERS2             0.9          1.7    70        4.222           12         1100          300 'For iter test station         ' 
 17 EFDAS1            0.81            1    70          4.5           12         2000          300 'EFDA strand for fusion        ' 
 18 STRNED            1.25         1.25   120          4.2           15         1500          500 'NED Motor 1                   ' 
 19 STRDI            0.438         1.35    70        4.222            5         2332        635.8 'XFEL IN DIPOLE v2             ' 
 20 STRKEK1          0.814         1.17    80          4.5          9.2         1.94          553 'MQXA Inner Layer              ' 
 21 STRKEK2          0.732         1.87    80          4.5          9.2         1.94          553 'MQXA Outer Layer              ' 
 22 STRFNAL1         0.808          1.3    80          1.9            5         4117          506 'MQXB Inner Layer              ' 
 23 STRFNAL2         0.648          1.8    80          1.9            5         4117          506 'MQXB Outer Layer              ' 
 24 DUMMY                0            0     0            0            0            0            0 'Unused for warm magnets       ' 
 25 MCB              0.375         4.25   100          1.9            5         4588       606.85 'MCB orbit correctors          ' 
 26 GECSEXPN       0.93683          1.6   100          1.9          5.5       4043.5          573 'MS sextupoles                 ' 
 27 STRMCSOX         0.522         3.58    70          1.9          5.5       4523.2       640.65 'MCSOX correctors              ' 
 28 ROEDUMMY        3.4961            1   100            0            0            0            0 'Dummy for Roebel cable (ER)   ' 
 29 DUMMY1S        1.12838         1000   100            0            0            0            0 'Dummy for 1x1 mm dummy wire   ' 
 30 STRXF150          0.85         1.15   150          4.4        13.54         2087          161 'MQXF 150 mm aperture          ' 
 31 HFMD07B            0.7        1.106   100          4.2           15         1274          301 'OST 0.7 mm 108/127            ' 
 32 STR05_6K          0.48         1.75    80            6            5      1145.33       487.73 'MQY OL strand 6K              ' 
 33 RMM1                 1            1   100          4.2           12         3000          620 'RRP RMM prototype v1 HF       ' 
 34 MU_WIRE       0.003007         1.63    80          4.2            5         2499        613.2 'Wire of LHC MU undulator      ' 
  No Name             diam.        cu/sc   RRR         Tref         Bref      Jc@BrTr       dJc/dB  Comment                         

TRANSIENT 7
  1 TRANS1           1E-06        1E-07        0.004     1.24E-10        9E-11          0.5     'LHC cable resitances          ' 
  2 GSITRANS        0.0625      6.4E-05        0.004     1.24E-10        9E-11          0.5     'GSI001 resistances            ' 
  3 SISTRANS          0.02       0.0002        0.005      4.4E-10        9E-11        0.627     'GSI001 resistances            ' 
  4 OSTA             2E-06        5E-06       0.0027     1.24E-10        9E-11          0.5     'guess for Nb3Sn               ' 
  5 OSTCOR2          3E-05        3E-07       0.0027     1.24E-10        9E-11          0.5     'guess for Nb3Sn               ' 
  6 LHCCORE         0.0625       0.0001        0.018     1.24E-10        9E-11          0.5     'LHC cable SS CORE mk          ' 
  7 OSTCOR4          3E-05        3E-07        0.014     1.24E-10        9E-11          0.5     '11T cored caable              ' 
 No Name                Rc           Ra  fil.twistp.       fil.R0    fil.dR/dB strandfill.fac.   Comment                         

QUENCH 2
  1 NB3SNMP   3            1            1             1           2             4              3                         0 'matpro mat prop. Nb3Sn coils  ' 
  2 NB3SN     3            1            1             1           2             4              3                         0 'MATPRO properties for Nb3Sn   ' 
 No Name      SCHeatCapa   CuHeatCapa   CuThermCond   CuElecRes   InsHeatCapa   InsThermCond   FillHeatCapa            He%  Comment                         

CABLE 64
  1 CABLE01           15.1        1.736        2.064    28          115            5 'MB INNER LAYER,STR01          ' 
  2 CABLE02           15.1        1.362        1.598    36          100            5 'MB OUTER LAYER,STR01          ' 
  3 CABLE04            8.8         0.78         0.91    36           66            5 'MQM,STRO5                     ' 
  4 CABLE05            8.3         0.78         0.91    34           66            5 'MQY OUTER,STR05               ' 
  5 CABLE06            8.3         1.15          1.4    22           66            5 'MQY INNER,STR06               ' 
  6 CABLE11           15.1         2.74         2.74    28          115            5 'MB INNER + STABILIZER         ' 
  7 D1US275           15.4      1.32528      1.58791    38            0            0 'MQXB outer layer 1            ' 
  8 D2US275           15.4       1.0544       1.2372    46            0            0 'MQXB outer layer 2            ' 
  9 EFDAC1             4.5        19.93        19.93    84          100            0 'EFDA cable1                   ' 
 10 EFDAC2            8.55        9.015        9.015    32          100            0 'EFDA cable2                   ' 
 11 GECSEXN2          2.38         0.61         0.61     2            0            0 'MO octupole                   ' 
 12 GECSEXPN         9.698         0.61         0.61     8            0            0 'MS sextupole                  ' 
 13 GSI001            9.73        1.111        1.321    30           74            0 'GSI001 following Wanderer     ' 
 14 GSI1CAB           9.74        1.061        1.271    30           74            0 'GSI001 (RHIC) CABLE           ' 
 15 ITERC1            19.8          3.7          3.7    20          100           13 'For iter test station         ' 
 16 ITERC2            19.8         1.65         1.65    44          100           13 'For iter test station         ' 
 17 KEKIT               11       1.2639       1.7101    27            0            0 'MQXA inner layer              ' 
 18 KEKOT               11       1.2106       1.4694    30            0            0 'MQXA outer layer 1            ' 
 19 MBXW                15           18           18     1            0            0 'MBXW warm cable               ' 
 20 MCB            11.4775       0.3351       0.3351    25            0            0 'MCB orbit correctors          ' 
 21 MCBW                10           16           16     1            0            0 'MCBW warm cable               ' 
 22 MQW1                18         20.5         20.5     1            0            0 'MQW warm cable 1              ' 
 23 MQW2                17           17           17     1            0            0 'MQW warm cable 2              ' 
 24 NEDM1               24         2.35         2.35    40            0           10 'NED Motor 1                   ' 
 25 PSMM              55.6           36           36    20            0            0 'PS Combined Function Magnet   ' 
 26 RHIC               9.7        1.061        1.271    30           74            0 'GSI001 (RHIC CABLE)           ' 
 27 RIB1                 0        0.375        0.375    25            0            0 'MCB,WIRE1                     ' 
 28 RIB2             10.16         0.32         0.32    14            0            0 'MCBC,MCBL,MCBR,WIRE2          ' 
 29 RIB2L2             1.4         0.32         0.32     2            0            0 'MCSOX WIRE                    ' 
 30 RIB3             10.89         0.32         0.32    15            0            0 'MCBY,WIRE2                    ' 
 31 RIB4              0.67         0.32         0.32     1            0            0 'MCO,WIRE2                     ' 
 32 RIB4L4            2.89         0.32         0.32     4            0            0 'MCO,WIRE2                     ' 
 33 RIB5              1.53         0.61         0.61     1            0            0 'MCS,MCD,MO,WIRE3              ' 
 34 RIB6              7.38         0.61         0.61     6            0            0 'MQT,MQTL,WIRE3                ' 
 35 RIB7              4.88         0.61         0.61     4            0            0 'MS,WIRE3                      ' 
 36 RIB72             2.38         0.61         0.61     2            0            0 'MCDO,WIRE3                    ' 
 37 RIB8             9.698         0.85         0.85     8            0            0 'MXBXH,MXBXV,WIRE4             ' 
 38 RIBINN9          14.73         0.85         0.85     9            0            0 'MCBX INNER OLD                ' 
 39 RIBOUT7          11.43         0.85         0.85     7            0            0 'MCBX OUTER OLD                ' 
 40 RIBOUT8          13.08         0.85         0.85     8            0            0 'MCBX OUTER OLD                ' 
 41 RIBS              4.49         0.42         0.42     8            0            0 'TESLA 500 RIBBON              ' 
 42 ROEBCAB             12          0.8          0.8     1            0            0 'HTS Roebel cable (ER)         ' 
 43 SINGLE            0.94         0.94         0.94     1            0            0 'SINGLE STRAND                 ' 
 44 SIS300            15.1        1.362        1.598    36          100            5 'SIS300 degrad 0-5%!!!         ' 
 45 XFEL1              1.2          1.2          1.2     1            0            0 'TESLA XFEL                    ' 
 46 XFEL2             10.2         13.2         13.2     1            0            0 'TESLA XFEL QUAD               ' 
 47 XFEL3              8.8         12.7         12.7   580            0            0 'TESLA XFEL QUAD 2             ' 
 48 XFEL4            0.438        0.438        0.438     1            0            0 'TESLA XFEL IN DIPOLE 2        ' 
 49 XFEL5              1.2          1.2          1.2     1            0            0 'TESLA XFEL IN DIPOLE 3        ' 
 50 XFEL5              1.2          1.2          1.2     1            0            0 'TESLA XFEL IN DIPOLE 3        ' 
 51 DUMMY1C              1            1            1     1            0            0 '1x1 mm dummy wire             ' 
 52 DUMMY05C           0.5            1            1     1            0            0 '0.5x1 mm dummy wire           ' 
 53 RIB71             1.13         0.61         0.61     1            0            0 'MCDO,WIRE3 (single strand)    ' 
 54 CXF150HT5       18.363         1.53        1.658    40          109            0 'MQXF150, after HT, March2015  ' 
 55 RIB61             1.13         0.61         0.61     1            0            0 'MQT,MQTL,WIRE3 (single strand)'
 56 GECSEXN1        1.1335         0.61         0.61     1            0            0 'MS sextupole (single strand)  '
 57 FNAL40_ND       14.847        1.202        1.411    40          111            0 '40 x 0.7 mm OST 108/127, no de' 
 58 CRISP             15.1        1.358        1.594    36          100            5 'CRISP 00-5%!!!                ' 
 59 RIB3_1W           0.67         0.32         0.32     1            0            0 'MCBY,WIRE2 (single strand)    ' 
 60 RIBOUT8_1W        1.53         0.85         0.85     1            0            0 'MCBX,WIRE4 (single strand)    ' 
 61 RMMHT19         21.109        1.875        1.875    40          120            0 'Non-Graded RMM (1%,3% HT exp) ' 
 62 MU_CAB            0.67         1.53         1.53     1            0            0 'Cable of LHC MU undulator     ' 
 63 MU34_CAB          34.7         1.53         1.53     1            0            0 'Cable LHC MU undulator (34in1)' 
 64 MU_R_CAB          35.5         0.20         0.20    34            0            0 'Par-Resistor LHC MU undulator ' 
 No Name            height      width_i      width_o    ns      transp.        degrd  Comment                         

CONDUCTOR 69
  1 YELLONIN      1 CABLE01     STR01     NBTII     ALLPOLYIL TRANS1    NONE                 1.9 'V6-1 DESIGN DIPOLE INNER      ' 
  2 YELLONOU      1 CABLE02     STR02     NBTIO     ALLPOLYOL TRANS1    NONE                 1.9 'V6-1 DESIGN DIPOLE OUTER      ' 
  3 HOLLONIN      1 CABLE01     STR01     NB3SN     ALLPOLYIL NONE      NONE                 1.9 'V6-1 DESIGN HOLLOW FILAM      ' 
  4 HOLLONOU      1 CABLE02     STR02     NB3SN     ALLPOLYOL NONE      NONE                 1.9 'V6-1 DESIGN HOLLOW FILAM      ' 
  5 MQYT11        1 CABLE06     STR06     NBTIO     ALLPOLMQY NONE      NONE                 4.5 'MQY INNER LAYERS              ' 
  6 MQYT21        1 CABLE05     STR05     NBTIO     ALLPOLMQY NONE      NONE                 4.5 'MQY OUTER LAYERS              ' 
  7 OUTD1196      1 CABLE02     STR02     NBTIO     ALLPOLMQ  NONE      NONE                 1.9 'MQ                            ' 
  8 MQMNEW4       1 CABLE04     STR05     NBTIO     ALLPOLMQY NONE      NONE                 1.9 'MQM                           ' 
  9 MBIBOTH9      1 RIBINN9     WIRE4     NBTII     RIBINS1   NONE      NONE                 1.9 'MBI DIPOLE CORR. INNER        ' 
 10 MBIBOTH7      1 RIBOUT7     WIRE4     NBTII     RIBINS1   NONE      NONE                 1.9 'MBI DIPOLE CORR. OUTER        ' 
 11 LOWBW2L1      1 RIB4        WIRE2     NBTII     RIBINS2   NONE      NONE                 1.9 'MCSTX SEXTUPOLE CABLE         ' 
 12 LOWBW2L2      1 RIB2L2      STRMCSOX  NBTII     RIBINS2   NONE      NONE                 1.9 'MCSOX CABLES                  ' 
 13 LOWBW2L4      1 RIB4L4      WIRE2     NBTII     RIBINS2   NONE      NONE                 1.9 'MCSTX DODECAPOLE CABLE        ' 
 14 LOWBW3L4      1 RIB7        WIRE3L4   NBTII     RIBINS1   NONE      NONE                 1.9 'MQSX CABLE                    ' 
 15 MCBXW4I8      1 RIBOUT8     WIRE4     NBTII     RIBINS1   NONE      NONE                 1.9 'MBI DIPOLE CORRETOR NEW       ' 
 16 NEQUAD6B      1 RIB6        WIRE3     NBTII     RIBINS1   NONE      NONE                 1.9 'MQT QUADRUPOLE CORR.          ' 
 17 SISU2         1 RIB72       WIRE3     NBTII     RIBINS1   NONE      NONE                 1.9 'MCDO DECAPOLE                 ' 
 18 MCBY42        1 RIB4        WIRE2     NBTII     RIBINS2   NONE      NONE                 1.9 'MCDO OCTUPOLE                 ' 
 19 YELLTI1       1 CABLE01     STR01     TESTI1    ALLPOLYIL TRANS1    NONE                 1.9 'V6-1 DESIGN DIPOLE INNER      ' 
 20 YELLTO1       1 CABLE02     STR02     TESTO1    ALLPOLYOL TRANS1    NONE                 1.9 'V6-1 DESIGN DIPOLE OUTER      ' 
 21 GECQ2CO       1 RIBS        WIRES     NBTIS     RIBINS3   NONE      NONE                 1.9 'SIEMAT TESLA PROJ. RIBBON     ' 
 22 YELLONIS      1 CABLE11     STR01     NBTII     ALLPOLYIL NONE      NONE                 1.9 'DIPOLE INNER W. STABILIZ      ' 
 23 SINGLEC       1 SINGLE      WIRE3     NBTII     RIBINS1   NONE      NONE                 4.2 'SINGLE STRAND CONDUCTORS      ' 
 24 RHIC1         1 RHIC        RHIC1STRA NBTIO     RHICINS   GSITRANS  NONE                 4.5 'D1 MAGNETS                    ' 
 25 RHIC2         1 RHIC        RHIC2STRA NBTIO     RHICINS   GSITRANS  NONE                 4.5 'D2-D4 MAGNETS                 ' 
 26 GSI001        1 GSI001      GSI1STRA  NBTIO     GSI1INS   GSITRANS  NONE                 4.2 'GSI001 following Wanderer     ' 
 27 SIS300        1 SIS300      SIS3STRA  SIS3NBTI  SIS3INS   SISTRANS  NONE                 4.7 'SIS300 acc. J. Kaugerts 8.6.05' 
 28 XFELDI        1 XFEL1       WIRE2     NBTII     RIBINS2   NONE      NONE                 1.9 'XFEL round conductor          ' 
 29 XFELQU        1 XFEL2       WIRE2     NBTII     BARE      NONE      NONE               4.222 'XFEL QUAD coil                ' 
 30 ITER1         1 ITERC1      ITERS1    NB3SN     ITERINS   NONE      NONE               4.222 'For iter test station         ' 
 31 ITER2         1 ITERC2      ITERS2    NB3SN     ITERINS   NONE      NONE               4.222 'For iter test station         ' 
 32 EFDA1         1 EFDAC1      EFDAS1    NB3SN     EFDAJA1   NONE      NONE                 4.5 'EFAD predesign                ' 
 33 EFDA2         1 EFDAC2      EFDAS1    NB3SN     EFDAJA2   NONE      NONE                 4.5 'EFAD predesign                ' 
 34 NEDM1         1 NEDM1       STRNED    NB3SN     CEAINS    NONE      NONE                 4.2 'NED Motor 1                   ' 
 35 XFELQ2        1 XFEL3       WIRE2     NBTII     BARE      NONE      NONE               4.222 'XFEL QUAD coil 3              ' 
 36 XFDI          1 XFEL4       STRDI     NBTII     BARE      NONE      NONE               4.222 'XFEL IN DIPOLE 2              ' 
 37 XFD2          1 XFEL5       STRDI     NBTII     BARE      NONE      NONE               4.222 'XFEL IN DIPOLE 3              ' 
 38 PSMM          1 PSMM        STR01     NBTII     BARE      NONE      NONE                 290 'PS Combined Function          ' 
 39 KEKI3RD2      1 KEKIT       STRKEK1   NBTII     KEKIT     NONE      NONE                 1.9 'MQXA Inner layer 1            ' 
 40 KEKO3RD2      1 KEKOT       STRKEK2   NBTII     KEKIT     NONE      NONE                 1.9 'MQXA Inner layer 2            ' 
 41 FNALI275      1 D1US275     STRFNAL1  NBTIO     FNALIT    NONE      NONE                 1.9 'MQXB Inner Layer 1            ' 
 42 FNALO275      1 D2US275     STRFNAL2  NBTIO     FNALIT    NONE      NONE                 1.9 'MQXB Outer Layer 2            ' 
 43 MQW1          1 MQW1        DUMMY     DUMMY     MQWD      NONE      NONE                 293 'MQW warm cable 1              ' 
 44 MQW2          1 MQW2        DUMMY     DUMMY     MQWD      NONE      NONE                 293 'MQW warm cable 2              ' 
 45 MBXW          1 MBXW        DUMMY     DUMMY     MBXWINS   NONE      NONE                 293 'MBXW warm cable               ' 
 46 MBW           1 MBXW        DUMMY     DUMMY     MBWINS    NONE      NONE                 293 'MBW warm cable                ' 
 47 MCBW          1 MCBW        DUMMY     DUMMY     MCBWINS   NONE      NONE                 293 'MCBW warm cable               ' 
 48 MCB           1 MCB         MCB       NBTII     RIBINS2   NONE      NONE                 1.9 'MCB H/V orbit correctors      ' 
 49 GECSEXPN      1 GECSEXPN    GECSEXPN  NBTII     GECSEXPN  NONE      NONE                 1.9 'MS sextupole                  ' 
 50 GECSEXN2      1 GECSEXN2    GECSEXPN  NBTII     GECSEXN2  NONE      NONE                 1.9 'MO octupole                   ' 
 51 MCB14W2       1 RIB2        WIRE2     NBTII     RIBINS2   NONE      NONE                 4.5 'MCBC H/V orbit correctors     ' 
 52 MCB15W2       1 RIB3        WIRE2     NBTII     RIBINS2   NONE      NONE                 4.5 'MCBY H/W orbit correctors     ' 
 53 ROEBHTS       1 ROEBCAB     ROEDUMMY  DUMMY     ROEBINS   NONE      NONE                 4.5 'HTS Roebel cable (ER)         ' 
 54 DUMMY1X1      1 DUMMY1C     DUMMY1S   DUMMY     ROEBINS   NONE      NONE                 4.5 'Dummy 1x1 mm copper wire      ' 
 55 DUMMY051      1 DUMMY05C    DUMMY1S   DUMMY     ROEBINS   NONE      NONE                 4.5 'Dummy 0.5x1 mm copper wire    ' 
 56 SISU1         1 RIB71       WIRE3     NBTII     RIBINS1   NONE      NONE                 1.9 'MCDO DECAPOLE (single strand) ' 
 57 XF145HTH5     1 CXF150HT5   STRXF150  QXF89H    INSXF145  OSTA      NB3SNMP              1.9 'MQXF,afterHT,March2015,145umi ' 
 58 NEQUAD1B      1 RIB61       WIRE3     NBTII     RIBINS1   NONE      NONE                 1.9 'MQT QUAD.CORR. (single strand)' 
 59 GECSEXN1      1 GECSEXN1    GECSEXPN  NBTII     GECSEXPN  NONE      NONE                 1.9 'MS sextupole (single strand)  ' 
 60 11T_P023      1 FNAL40_ND   HFMD07B   HFM43I    TININS3   OSTCOR2   NB3SN                1.9 '40 x 0.7 OST 150/169 MBHSP02_2' 
 61 D2            1 CRISP       STR02     NBTIO     SIS3INS   TRANS1    NONE                 1.9 'Yellonou at 70 MPa            ' 
 62 NEWD1         1 CABLE02     STR02     NBTIO     NEWD1     NONE      NONE                 1.9 'The new D1 for HL-LHC         ' 
 63 MQYT2C_6K     1 CABLE05     STR05_6K  NBTII     ALLPOLMQY LHCCORE   NONE                   6 'MQY OUTER SS CORE 6K          ' 
 64 MCB1W2        1 RIB3_1W     WIRE2     NBTII     RIBINS2   NONE      NONE                 4.5 'MCBY H/W orbitCorrectors(s.s.)' 
 65 MCBXW4I1      1 RIBOUT8_1W  WIRE4     NBTII     RIBINS1   NONE      NONE                 1.9 'MCBX_HV (single Strand)       ' 
 66 RMMV28        1 RMMHT19     RMM1      HFM60R    S2_150    OSTCOR4   NB3SN                1.9 '40x1,cusc = 1,RMMJan. 2016    ' 
 67 MU_CON        1 MU_CAB      MU_WIRE   NBTIO     MU_INS    NONE      NONE                 4.2 'Conductor of LHC MU undulator ' 
 68 MU_34IN1      1 MU34_CAB    MU_WIRE   NBTIO     MU34_INS  NONE      NONE                 4.2 'Cond. LHC MU undulator (34in1)' 
 69 MU_RES        1 MU_R_CAB    DUMMY     DUMMY     MU_R_INS  NONE      NONE                 4.2 'Par-Resistor LHC MU undulator ' 
 No Name       Type CableGeom.  Strand    Filament  Insul     Trans     QuenchMat.           T_o  Comment                         

"""

        # act
        roxie_parser = ParserRoxie()
        cadata = roxie_parser.getConductorDataFromCadataFile(cadata_content=cadata_content)
        cadata_yaml = yaml_to_data('references/cadata_REFERENCE.yaml')

        # assert
        self.assertEqual(cadata.model_dump(), cadata_yaml)

    def test_getCoilDataFromDataFile(self):
        """
            Test the function getCoilDataFromDataFile with data from MQXF_V2
        """
        # arrange
        coil_content = """ VERSION 10.2.1
'b6=-1.5	optimization	@	"6.5Te,"	field	@	7	TeV                                      '
'/eos/project/r/roxie/users/emm/datab/roxie_new_LHC_iron2_Per_Hagen.bhdata          '
'/eos/project/r/roxie/users/emm/MQXF_V2/roxie_vs10.cadata                           '
'/eos/project/r/roxie/users/emm/MQXF_V2/MQXF_iron_vs24_4quadrants.iron              '

BLOCK 16
    1     1    16       94.313      0.22782            0        16471  XF145HTH5   2  20     0            0 
    2     1    12       94.313           19      20.8049        16471  XF145HTH5   2  20     0            0 
    3     1    17           75      0.28648            0        16471  XF145HTH5   2  20     0            0 
    4     1     5           75         28.5           24        16471  XF145HTH5   2  20     0            0 
    5     1    16       94.313      0.22782            0       -16471  XF145HTH5   2  20     0           90 
    6     1    12       94.313           19      20.8049       -16471  XF145HTH5   2  20     0           90 
    7     1    17           75      0.28648            0       -16471  XF145HTH5   2  20     0           90 
    8     1     5           75         28.5           24       -16471  XF145HTH5   2  20     0           90 
    9     1    16       94.313      0.22782            0        16471  XF145HTH5   2  20     0          180 
   10     1    12       94.313           19      20.8049        16471  XF145HTH5   2  20     0          180 
   11     1    17           75      0.28648            0        16471  XF145HTH5   2  20     0          180 
   12     1     5           75         28.5           24        16471  XF145HTH5   2  20     0          180 
   13     1    16       94.313      0.22782            0       -16471  XF145HTH5   2  20     0          270 
   14     1    12       94.313           19      20.8049       -16471  XF145HTH5   2  20     0          270 
   15     1    17           75      0.28648            0       -16471  XF145HTH5   2  20     0          270 
   16     1     5           75         28.5           24       -16471  XF145HTH5   2  20     0          270 
   no  type   nco       radius          phi        alpha      current   condname  n1  n2  imag         turn 

LAYER 8
      1     4     2 1 2 /
      2     4     2 3 4 /
      3     4     2 5 6 /
      4     4     2 7 8 /
      5     4     2 9 10 /
      6     4     2 11 12 /
      7     4     2 13 14 /
      8     4     2 15 16 /
     no  symm typexy blocks 

EULER 0

"""

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.getCoilDataFromDataFile(coil_content=coil_content)
        # def my_represent_none(self, data):
        #     return self.represent_scalar('tag:yaml.org,2002:null', 'null')
        # Yaml = ruamel.yaml.YAML()
        # Yaml.default_flow_style = False
        # Yaml.emitter.alt_null = 'Null'
        # Yaml.representer.add_representer(type(None), my_represent_none)
        # with open('references/coil_output.yaml', 'w') as yaml_file:
        #     Yaml.dump(data.dict(), yaml_file)
        data_yaml = yaml_to_data('references/coil_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_applyMultipoleSymmetry(self):
        """
            Test the function applyMultipoleSymmetry with data from MQXF_V2
        """
        # arrange
        blocks = {
            '1': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                          n1=2,
                          n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '2': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0, condname='XF145HTH5',
                          n1=2,
                          n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=2,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))}
        group = pd.Group(symm=4, typexy=2, blocks=[1, 2])

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.applyMultipoleSymmetry(blocks=blocks, group=group)
        data_yaml = yaml_to_data('references/symmetry_REFERENCE.yaml')

        # assert
        for key, value in data.items():
            self.assertEqual(value.model_dump(), data_yaml[key])

    def test_applyCoilTransformation(self):
        """
            Test the function applyCoilTransformation with data from MQY_2in1
        """
        # arrange
        coil = pd.Coil(
            blocks={
                '1': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '2': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=0.0, coil=1, pole=1, layer=2, winding=2,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '41': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=1, pole=1, layer=1, winding=1,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '42': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=1, pole=1, layer=2, winding=2,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))},
            groups={'1': pd.Group(symm=4, typexy=2, blocks=[1, 2, 41, 42])})
        trans = pd.Trans(x=97.0, y=0.0, alph=0.0, bet=0.0, string='SHIFT2', act=1, bcs=[1])

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.applyCoilTransformation(coil=coil, trans=trans)
        data_yaml = yaml_to_data('references/transformation_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_applySymmetryConditions(self):
        """
            Test the function applySymmetryConditions with data from MQXF_V2
        """
        # arrange
        coil = pd.Coil(
            blocks={
                '1': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '2': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=2,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '3': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0,
                              condname='XF145HTH5', n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=2,
                              winding=3, shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '4': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=2, winding=4,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '5': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=1, winding=5,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '6': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=1, winding=6,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '7': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=2, winding=7,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '8': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=2, winding=8,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '9': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0,
                              condname='XF145HTH5',
                              n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=1, winding=9,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '10': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0,
                               condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=1, winding=10,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '11': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0,
                               condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=2, winding=11,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '12': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=2, winding=12,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '13': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0,
                               condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=1, winding=13,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '14': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                               condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=1, winding=14,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '15': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0,
                               condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=2, winding=15,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '16': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                               n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=2, winding=16,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))},
            groups={'1': pd.Group(symm=4, typexy=2, blocks=[1, 2]), '2': pd.Group(symm=4, typexy=2, blocks=[3, 4]),
                    '3': pd.Group(symm=4, typexy=2, blocks=[5, 6]), '4': pd.Group(symm=4, typexy=2, blocks=[7, 8]),
                    '5': pd.Group(symm=4, typexy=2, blocks=[9, 10]), '6': pd.Group(symm=4, typexy=2, blocks=[11, 12]),
                    '7': pd.Group(symm=4, typexy=2, blocks=[13, 14]), '8': pd.Group(symm=4, typexy=2, blocks=[15, 16])},
            transs={})

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.applySymmetryConditions(coil=coil)
        data_yaml = yaml_to_data('references/symmetries_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_applyTransformations(self):
        """
            Test the function applyTransformations with data from MQY_2in1
        """
        # arrange
        coil = pd.Coil(
            blocks={
                '1': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '2': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=0.0, coil=1, pole=1, layer=2, winding=2,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '3': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=0.0, coil=1, pole=1, layer=3, winding=3,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '4': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                              n1=2, n2=11, imag=0, turn=0.0, coil=1, pole=1, layer=3, winding=4,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '5': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                              n1=2, n2=11, imag=0, turn=0.0, coil=1, pole=1, layer=4, winding=5,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '6': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=90.0, coil=1, pole=2, layer=1, winding=6,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '7': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=90.0, coil=1, pole=2, layer=2, winding=7,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '8': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                              n1=2, n2=17, imag=0, turn=90.0, coil=1, pole=2, layer=3, winding=8,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '9': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                              n1=2, n2=11, imag=0, turn=90.0, coil=1, pole=2, layer=3, winding=9,
                              shift2=pd.Coord(x=0.0, y=0.0, z=None),
                              roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '10': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=90.0, coil=1, pole=2, layer=4, winding=10,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '11': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=1, pole=3, layer=1, winding=11,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '12': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=1, pole=3, layer=2, winding=12,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '13': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=1, pole=3, layer=3, winding=13,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '14': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=180.0, coil=1, pole=3, layer=3, winding=14,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '15': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=180.0, coil=1, pole=3, layer=4, winding=15,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '16': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=1, pole=4, layer=1, winding=16,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '17': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=1, pole=4, layer=2, winding=17,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '18': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=1, pole=4, layer=3, winding=18,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '19': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=270.0, coil=1, pole=4, layer=3, winding=19,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '20': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=270.0, coil=1, pole=4, layer=4, winding=20,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '21': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=0.0, coil=2, pole=1, layer=1, winding=21,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '22': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=0.0, coil=2, pole=1, layer=2, winding=22,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '23': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=0.0, coil=2, pole=1, layer=3, winding=23,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '24': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=0.0, coil=2, pole=1, layer=3, winding=24,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '25': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=0.0, coil=2, pole=1, layer=4, winding=25,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '26': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=90.0, coil=2, pole=2, layer=1, winding=26,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '27': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=90.0, coil=2, pole=2, layer=2, winding=27,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '28': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=90.0, coil=2, pole=2, layer=3, winding=28,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '29': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=90.0, coil=2, pole=2, layer=3, winding=29,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '30': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=90.0, coil=2, pole=2, layer=4, winding=30,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '31': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=2, pole=3, layer=1, winding=31,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '32': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=2, pole=3, layer=2, winding=32,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '33': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=180.0, coil=2, pole=3, layer=3, winding=33,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '34': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=180.0, coil=2, pole=3, layer=3, winding=34,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '35': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=180.0, coil=2, pole=3, layer=4, winding=35,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '36': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=2, pole=4, layer=1, winding=36,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '37': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=2, pole=4, layer=2, winding=37,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '38': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=0, turn=270.0, coil=2, pole=4, layer=3, winding=38,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '39': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=270.0, coil=2, pole=4, layer=3, winding=39,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '40': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=0, turn=270.0, coil=2, pole=4, layer=4, winding=40,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '41': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=1, pole=1, layer=1, winding=1,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '42': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=1, pole=1, layer=2, winding=2,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '43': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=1, pole=1, layer=3, winding=3,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '44': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=90.0, coil=1, pole=1, layer=3, winding=4,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '45': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=90.0, coil=1, pole=1, layer=4, winding=5,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '46': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=1, pole=2, layer=1, winding=6,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '47': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=1, pole=2, layer=2, winding=7,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '48': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=1, pole=2, layer=3, winding=8,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '49': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=180.0, coil=1, pole=2, layer=3, winding=9,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '50': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=180.0, coil=1, pole=2, layer=4, winding=10,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '51': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=1, pole=3, layer=1, winding=11,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '52': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=1, pole=3, layer=2, winding=12,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '53': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=1, pole=3, layer=3, winding=13,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '54': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=270.0, coil=1, pole=3, layer=3, winding=14,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '55': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=270.0, coil=1, pole=3, layer=4, winding=15,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '56': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=1, pole=4, layer=1, winding=16,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '57': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=1, pole=4, layer=2, winding=17,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '58': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=1, pole=4, layer=3, winding=18,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '59': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=360.0, coil=1, pole=4, layer=3, winding=19,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '60': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=360.0, coil=1, pole=4, layer=4, winding=20,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '61': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=2, pole=1, layer=1, winding=21,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '62': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=2, pole=1, layer=2, winding=22,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '63': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=90.0, coil=2, pole=1, layer=3, winding=23,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '64': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=90.0, coil=2, pole=1, layer=3, winding=24,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '65': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=90.0, coil=2, pole=1, layer=4, winding=25,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '66': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=2, pole=2, layer=1, winding=26,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '67': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=2, pole=2, layer=2, winding=27,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '68': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=180.0, coil=2, pole=2, layer=3, winding=28,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '69': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=180.0, coil=2, pole=2, layer=3, winding=29,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '70': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=180.0, coil=2, pole=2, layer=4, winding=30,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '71': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=2, pole=3, layer=1, winding=31,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '72': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=2, pole=3, layer=2, winding=32,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '73': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=-3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=270.0, coil=2, pole=3, layer=3, winding=33,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '74': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=270.0, coil=2, pole=3, layer=3, winding=34,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '75': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=-3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=270.0, coil=2, pole=3, layer=4, winding=35,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '76': pd.Block(type=1, nco=20, radius=61.1, phi=0.117, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=2, pole=4, layer=1, winding=36,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '77': pd.Block(type=1, nco=17, radius=52.4, phi=0.1366, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=2, pole=4, layer=2, winding=37,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '78': pd.Block(type=1, nco=15, radius=43.71, phi=0.164, alpha=0.0, current=3600.0, condname='MQYT21',
                               n1=2, n2=17, imag=1, turn=360.0, coil=2, pole=4, layer=3, winding=38,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '79': pd.Block(type=1, nco=6, radius=43.71, phi=21.7, alpha=17.25, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=360.0, coil=2, pole=4, layer=3, winding=39,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
                '80': pd.Block(type=1, nco=16, radius=35.0, phi=0.2046, alpha=0.0, current=3600.0, condname='MQYT11',
                               n1=2, n2=11, imag=1, turn=360.0, coil=2, pole=4, layer=4, winding=40,
                               shift2=pd.Coord(x=0.0, y=0.0, z=None),
                               roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))},
            groups={'1': pd.Group(symm=4, typexy=2, blocks=[1, 2, 41, 42]),
                    '2': pd.Group(symm=4, typexy=2, blocks=[3, 4, 5, 43, 44, 45]),
                    '3': pd.Group(symm=4, typexy=2, blocks=[6, 7, 46, 47]),
                    '4': pd.Group(symm=4, typexy=2, blocks=[8, 9, 10, 48, 49, 50]),
                    '5': pd.Group(symm=4, typexy=2, blocks=[11, 12, 51, 52]),
                    '6': pd.Group(symm=4, typexy=2, blocks=[13, 14, 15, 53, 54, 55]),
                    '7': pd.Group(symm=4, typexy=2, blocks=[16, 17, 56, 57]),
                    '8': pd.Group(symm=4, typexy=2, blocks=[18, 19, 20, 58, 59, 60]),
                    '9': pd.Group(symm=4, typexy=2, blocks=[21, 22, 61, 62]),
                    '10': pd.Group(symm=4, typexy=2, blocks=[23, 24, 25, 63, 64, 65]),
                    '11': pd.Group(symm=4, typexy=2, blocks=[26, 27, 66, 67]),
                    '12': pd.Group(symm=4, typexy=2, blocks=[28, 29, 30, 68, 69, 70]),
                    '13': pd.Group(symm=4, typexy=2, blocks=[31, 32, 71, 72]),
                    '14': pd.Group(symm=4, typexy=2, blocks=[33, 34, 35, 73, 74, 75]),
                    '15': pd.Group(symm=4, typexy=2, blocks=[36, 37, 76, 77]),
                    '16': pd.Group(symm=4, typexy=2, blocks=[38, 39, 40, 78, 79, 80])},
            transs={
                '1': pd.Trans(x=97.0, y=0.0, alph=0.0, bet=0.0, string='SHIFT2', act=1, bcs=[1, 2, 3, 4, 5, 6, 7, 8]),
                '2': pd.Trans(x=-97.0, y=0.0, alph=0.0, bet=0.0, string='SHIFT2', act=1,
                              bcs=[9, 10, 11, 12, 13, 14, 15, 16])})

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.applyTransformations(coil=coil)
        data_yaml = yaml_to_data('references/transformations_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_findConductorPositions(self):
        """
            Test the function findConductorPositions with data from MQXF_V2
        """
        # arrange
        block = pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                         n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                         shift2=pd.Coord(x=0.0, y=0.0, z=None),
                         roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))
        conductor = pd.CondPar(wInsulNarrow=0.000145, wInsulWide=0.000145, dFilament=5.6e-05, dstrand=0.00085,
                               fracCu=0.5348837209302325, fracSc=0.46511627906976744, RRR=150.0, TupRRR=4.4, Top=1.9,
                               Rc=2e-06, Ra=5e-06, fRhoEff=1.0, lTp=0.0027, wBare=0.018363,
                               hInBare=0.0015300000000000001, hOutBare=0.001658, noOfStrands=40, noOfStrandsPerLayer=20,
                               noOfLayers=2, lTpStrand=0.109, wCore=0.0, hCore=0.0, thetaTpStrand=0.3109175021388801,
                               degradation=0.0, C1=0.0, C2=0.0, fracHe=0.0, fracFillInnerVoids=1.0,
                               fracFillOuterVoids=1.0)

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.findConductorPositions(block=block, conductor=conductor)
        data_yaml = yaml_to_data('references/block_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_getCablePositions(self):
        """
            Test the function getCablePositions with data from MQXF_V2
        """
        # arrange
        blocks = {
            '1': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=1,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '2': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=1, winding=2,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '3': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=2, winding=3,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '4': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5', n1=2,
                          n2=20, imag=0, turn=0.0, coil=1, pole=1, layer=2, winding=4,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '5': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=1, winding=5,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '6': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                          condname='XF145HTH5', n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=1, winding=6,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '7': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=2, winding=7,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '8': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=90.0, coil=1, pole=2, layer=2, winding=8,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '9': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                          n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=1, winding=9,
                          shift2=pd.Coord(x=0.0, y=0.0, z=None),
                          roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '10': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=1, winding=10,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '11': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=2, winding=11,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '12': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=0, turn=180.0, coil=1, pole=3, layer=2, winding=12,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '13': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=1, winding=13,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '14': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=1, winding=14,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '15': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=2, winding=15,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '16': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=0, turn=270.0, coil=1, pole=4, layer=2, winding=16,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '17': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=90.0, coil=1, pole=1, layer=1, winding=1,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '18': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=90.0, coil=1, pole=1, layer=1, winding=2,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '19': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=90.0, coil=1, pole=1, layer=2, winding=3,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '20': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=90.0, coil=1, pole=1, layer=2, winding=4,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '21': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=180.0, coil=1, pole=2, layer=1, winding=5,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '22': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=180.0, coil=1, pole=2, layer=1, winding=6,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '23': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=180.0, coil=1, pole=2, layer=2, winding=7,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '24': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=180.0, coil=1, pole=2, layer=2, winding=8,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '25': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=270.0, coil=1, pole=3, layer=1, winding=9,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '26': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=-16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=270.0, coil=1, pole=3, layer=1, winding=10,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '27': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=270.0, coil=1, pole=3, layer=2, winding=11,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '28': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=-16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=270.0, coil=1, pole=3, layer=2, winding=12,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '29': pd.Block(type=1, nco=16, radius=94.313, phi=0.22782, alpha=0.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=360.0, coil=1, pole=4, layer=1, winding=13,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '30': pd.Block(type=1, nco=12, radius=94.313, phi=19.0, alpha=20.8049, current=16471.0,
                           condname='XF145HTH5', n1=2, n2=20, imag=1, turn=360.0, coil=1, pole=4, layer=1, winding=14,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '31': pd.Block(type=1, nco=17, radius=75.0, phi=0.28648, alpha=0.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=360.0, coil=1, pole=4, layer=2, winding=15,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0)),
            '32': pd.Block(type=1, nco=5, radius=75.0, phi=28.5, alpha=24.0, current=16471.0, condname='XF145HTH5',
                           n1=2, n2=20, imag=1, turn=360.0, coil=1, pole=4, layer=2, winding=16,
                           shift2=pd.Coord(x=0.0, y=0.0, z=None),
                           roll2=pd.Roll(coor=pd.Coord(x=0.0, y=0.0, z=None), alph=0.0))}
        cadata = pd.Cadata(
            insul={'INSXF145': pd.Insulation(radial=0.145, azimut=0.145, comment="'MQXF 150mm aperture,145 um ins'")},
            filament={'QXF89H': pd.Filament(fildiao=56.0, fildiai=0.0, Jc_fit='NB3SNH', fit='NB3SNH',
                                            comment="'QXF OST RRP 108/129, Nov 2014 '")},
            strand={'STRXF150': pd.Strand(diam=0.85, cu_sc=1.15, RRR=150.0, Tref=4.4, Bref=13.54, Jc_BrTr=None,
                                          dJc_dB=161.0, comment="'MQXF 150 mm aperture '")},
            transient={'OSTA': pd.Transient(Rc=2e-06, Ra=5e-06, filTwistp=0.0027, filR0=1.24e-10, fil_dRdB=9e-11,
                                            strandfillFac=0.5, comment="'guess for Nb3Sn '")},
            quench={'NB3SNMP': pd.Quench(SCHeatCapa=3, CuHeatCapa=1, CuThermCond=1, CuElecRes=1,
                                         InsHeatCapa=2, InsThermCond=4, FillHeatCapa=3, He=0,
                                         comment="'matpro mat prop. Nb3Sn coils '")},
            cable={'CXF150HT5': pd.Cable(height=18.363, width_i=1.53, width_o=1.658, ns=40, transp=109.0, degrd=0.0,
                                         comment="'MQXF150, after HT, March2015 '")},
            conductor={'XF145HTH5': pd.ConductorRoxie(conductorType=None, cableGeom='CXF150HT5', strand='STRXF150',
                                                      filament='QXF89H', insul='INSXF145', trans='OSTA', quenchMat='NB3SNMP',
                                                      T_0=1.9, comment="'MQXF,afterHT,March2015,145umi '",
                                                      parameters=pd.CondPar(wInsulNarrow=None, wInsulWide=None,
                                                                       dFilament=None,
                                                                       dstrand=None, fracCu=None, fracSc=None, RRR=None,
                                                                       TupRRR=None, Top=None, Rc=None, Ra=None,
                                                                       fRhoEff=None, lTp=None, wBare=None, hInBare=None,
                                                                       hOutBare=None, noOfStrands=None,
                                                                       noOfStrandsPerLayer=None, noOfLayers=None,
                                                                       lTpStrand=None, wCore=None, hCore=None,
                                                                       thetaTpStrand=None, degradation=None, C1=None,
                                                                       C2=None, fracHe=None, fracFillInnerVoids=None,
                                                                       fracFillOuterVoids=None))})

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.getCablePositions(blocks=blocks, cadata=cadata)
        data_yaml = yaml_to_data('references/cables_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_getWedgePositions(self):
        """
            Test the function getWedgePositions with data from MQXF_V2
        """
        # arrange
        coil = pd.CoilData(coils={1: pd.Pole(type='cos-theta', bore_center=pd.Coord(x=0.0, y=0.0), poles={1: pd.Layer(layers={
            1: pd.Winding(windings={
                1: pd.WindingData(blocks={1: pd.BlockData(block_corners=pd.Corner(
                    iH=pd.Coord(x=0.08967737, y=0.02920465), iL=pd.Coord(x=0.09431225, y=0.00037501),
                    oH=pd.Coord(x=0.10854745, y=0.03128482), oL=pd.Coord(x=0.11296525, y=0.00037501)),
                    block_corners_ins=pd.Corner(
                        iH=pd.Coord(x=0.08967737, y=0.02920465), iL=pd.Coord(x=0.09431225, y=0.00037501),
                        oH=pd.Coord(x=0.10854745, y=0.03128482), oL=pd.Coord(x=0.11296525, y=0.00037501))
                )}),
                2: pd.WindingData(blocks={1: pd.BlockData(block_corners=pd.Corner(
                    iH=pd.Coord(x=0.07972738, y=0.0503834), iL=pd.Coord(x=0.08917469, y=0.03070531),
                    oH=pd.Coord(x=0.09665153, y=0.05846412), oL=pd.Coord(x=0.10661143, y=0.03733061)),
                    block_corners_ins=pd.Corner(
                        iH=pd.Coord(x=0.07972738, y=0.0503834), iL=pd.Coord(x=0.08917469, y=0.03070531),
                        oH=pd.Coord(x=0.09665153, y=0.05846412), oL=pd.Coord(x=0.10661143, y=0.03733061))
                )})
            })})})})

        # act
        roxie_parser = ParserRoxie()
        data = roxie_parser.getWedgePositions(coil=coil)
        data.wedges[1].corrected_center.inner.x = str(data.wedges[1].corrected_center.inner.x)
        data.wedges[1].corrected_center_ins.inner.x = str(data.wedges[1].corrected_center_ins.inner.x)
        data_yaml = yaml_to_data('references/wedges_REFERENCE.yaml')

        # assert
        self.assertEqual(data.model_dump(), data_yaml)

    def test_getData(self):
        """
            Check that ParserRoxie object can be initialized and getData method works
        """
        # arrange
        # path = Path.joinpath(self.current_path.parent, 'builders', 'input', magnet_name)
        # file_model_data = Path.joinpath(path, 'modelData_' + magnet_name + '.yaml')
        # with open(file_model_data, "r") as stream:
        #     dictionary_yaml = yaml.safe_load(stream)
        #     self.model_data = DataModelMagnet(**dictionary_yaml)
        # path_iron = Path.joinpath(path, self.model_data.Sources.iron_fromROXIE)
        # path_data = Path.joinpath(path, self.model_data.Sources.coil_fromROXIE)
        # path_cadata = Path.joinpath(path.parent, self.model_data.Sources.conductor_fromROXIE)

        # act
        roxie_parser = ParserRoxie()
        # roxie_parser.getData(dir_data=path_data, dir_cadata=path_cadata, dir_iron=path_iron)

        # assert
        self.assertTrue(isinstance(roxie_parser.getData(), pd.RoxieData))

    def test_compare_half_turns_LEDET_ribbon(self):
        """
        Test compares LEDET rearranged map2d with the rearrangement done in the ParserRoxie by comparing the block, half turn number and
        that each strand from LEDET map2d is within the ParserRoxie half turns.
        :return:
        """
        magnet_names = ['MS_1AP', 'MQSX']  # MQSX, MU, MS_1AP
        path_test_folder = Path(__file__).resolve().parent.parent
        for name in magnet_names:
            map2d_file_name = os.path.join('references', f"{name}_All_WithIron_WithSelfField_from_ParserLEDET.map2d")
            df = pandas.read_csv(map2d_file_name, delim_whitespace=True)
            print(f"Comparing LEDET reference {map2d_file_name} with ParserRoxie.")

            # Define necessary file paths
            file_model_data = os.path.join(path_test_folder, 'builders', 'model_library', 'magnets', name, 'input', f'modelData_{name}.yaml')
            path_data = Path(os.path.join(path_test_folder, 'builders', 'model_library', 'magnets', name, 'input', f'{name}.data'))
            path_cadata = Path(os.path.join(path_test_folder, 'builders', 'model_library', 'magnets', 'roxie.cadata'))
            roxie_parser = ParserRoxie()
            roxie_data = roxie_parser.getData(dir_data=path_data, dir_cadata=path_cadata, dir_iron=None,
                                              path_to_yaml_model_data=file_model_data)

            half_turns = dict() # List all half turns in a dict
            for coil_nr, coil in roxie_data.coil.coils.items():
                for pole_nr, pole in coil.poles.items():
                    for layer_nr, layer in pole.layers.items():
                        for winding_nr, winding in layer.windings.items():
                            for block_nr, block in winding.blocks.items():
                                for ht_nr, ht in block.half_turns.items():
                                    half_turns[ht_nr] = [ht, block_nr, ht_nr]

            """
            Algorithm to see if strand point from map2d is inside the constructed half turns the following way:
            1) Let P(x,y) be the point and rectangle A(x1,y1),B(x2,y2),C(x3,y3),D(x4,y4) the bare corner points of the half turns
            2) Calculate the sum of areas of △APD,△DPC,△CPB,△PBA
            3) If this sum is greater than the area of the rectangle, then P(x,y) is outside the rectangle
            4) Else if this sum is equal to the area of the rectangle (observe that this sum cannot be less than the latter)
                - if area of any of the triangles is 0, then P(x,y) is on the rectangle
                - else P(x,y) is inside the rectangle.
            """
            for index, row in df.iterrows():
                x, y = row['X-POS/MM']/1000, row['Y-POS/MM']/1000
                half_turn_nr = int(row['COND.'])
                block_nr = int(row['BL.'])
                if block_nr != half_turns[half_turn_nr][1]:
                    raise ValueError(f"Reference block {block_nr} is compared to block { half_turns[half_turn_nr][1]}")
                if half_turn_nr != half_turns[half_turn_nr][2]:
                    raise ValueError(f"Reference half turn {half_turn_nr} is compared to half turn { half_turns[half_turn_nr][2]}")

                ht_corners = half_turns[half_turn_nr][0].corners.bare
                x1, y1, x2, y2, x3, y3, x4, y4 = (ht_corners.iL.x, ht_corners.iL.y, ht_corners.iH.x, ht_corners.iH.y,
                                                  ht_corners.oL.x, ht_corners.oL.y, ht_corners.oH.x, ht_corners.oH.y)
                area_sum = (
                        area_of_triangle(x, y, x1, y1, x4, y4) +
                        area_of_triangle(x, y, x4, y4, x3, y3) +
                        area_of_triangle(x, y, x3, y3, x2, y2) +
                        area_of_triangle(x, y, x2, y2, x1, y1)
                )

                rectangle_area = area_of_rectangle(x1, y1, x2, y2, x3, y3)

                if area_sum > rectangle_area:
                    raise ValueError(f"Halfturns {half_turn_nr} are NOT matching")
                elif area_sum == rectangle_area:
                    if area_of_triangle(x, y, x1, y1, x4, y4) == 0 or \
                            area_of_triangle(x, y, x4, y4, x3, y3) == 0 or \
                            area_of_triangle(x, y, x3, y3, x2, y2) == 0 or \
                            area_of_triangle(x, y, x2, y2, x1, y1) == 0:
                        print(f"Block {block_nr}, halfturn {half_turn_nr} are matching")
                    else:
                        raise ValueError(f"Halfturns {half_turn_nr} are NOT matching")

                else:
                    print(f"Block {block_nr}, halfturn {half_turn_nr} are matching")

    def test_ParserRoxie_writeCadataFile(self):
        """
        This test reads a cadata file, writes it to a new file, and checks that the newly written file has the same information.
        """
        # Arrange
        path_input_cadata_file = os.path.join('input', 'write_cadata_file', 'TEST_INPUT_CADATA_FILE.cadata')
        path_written_cadata_file = os.path.join('output', 'ROXIE', 'write_cadata_file', 'TEST_OUTPUT_CADATA_FILE.cadata')

        # Delete output file, if existing
        if os.path.isfile(path_written_cadata_file):
            os.remove(path_written_cadata_file)
            print(f'File {path_written_cadata_file} already existed. It was removed.')

        # Read information from original .cadata file
        with open(path_input_cadata_file, "r") as file_original:
            fileContent_original = file_original.read()
        PR = ParserRoxie()
        data_cadata_original = PR.getConductorDataFromCadataFile(cadata_content=fileContent_original, verbose=True)

        # Act
        PR.write_cadata_file(path_written_cadata_file)

        # Assert
        # Read information from new .cadata file
        with open(path_written_cadata_file, "r") as file_new:
            fileContent_new = file_new.read()
        PR_new = ParserRoxie()
        data_cadata_new = PR_new.getConductorDataFromCadataFile(cadata_content=fileContent_new, verbose=True)

        # Display eventual differences
        print(f"whole dict: {compare_dicts_print_differences(dict(data_cadata_original), dict(data_cadata_new), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"insul: {compare_dicts_print_differences(dict(data_cadata_original.insul), dict(data_cadata_new.insul), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"remfit: {compare_dicts_print_differences(dict(data_cadata_original.remfit), dict(data_cadata_new.remfit), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"filament: {compare_dicts_print_differences(dict(data_cadata_original.filament), dict(data_cadata_new.filament), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"strand: {compare_dicts_print_differences(dict(data_cadata_original.strand), dict(data_cadata_new.strand), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"transient: {compare_dicts_print_differences(dict(data_cadata_original.transient), dict(data_cadata_new.transient), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"quench: {compare_dicts_print_differences(dict(data_cadata_original.quench), dict(data_cadata_new.quench), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"cable: {compare_dicts_print_differences(dict(data_cadata_original.cable), dict(data_cadata_new.cable), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")
        print(f"conductor: {compare_dicts_print_differences(dict(data_cadata_original.conductor), dict(data_cadata_new.conductor), name1='original', name2='new', check_for_same_order=False, keys_to_ignore=[])}")

        # Remove the "NONE" keys that are added by the ParserRoxie that would cause the test to fail (note that the output cadata file does NOT containt those entries)
        del data_cadata_new.transient['NONE']
        del data_cadata_new.quench['NONE']

        # Check that the original and new dictionaries are identical
        self.assertEqual(data_cadata_original, data_cadata_new)


def area_of_triangle(x1, y1, x2, y2, x3, y3):
    return abs((x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2)


def area_of_rectangle(x1, y1, x2, y2, x3, y3):
    side1 = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5
    side2 = ((x3 - x2) ** 2 + (y3 - y2) ** 2) ** 0.5
    return side1 * side2
