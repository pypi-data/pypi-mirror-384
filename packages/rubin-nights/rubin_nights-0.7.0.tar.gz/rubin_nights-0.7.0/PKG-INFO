Metadata-Version: 2.4
Name: rubin_nights
Version: 0.7.0
Summary: Tools to access Rubin nightly observing data
License: GPL
Project-URL: documentation, https://rubin-nights.lsst.io
Project-URL: repository, https://github.com/lsst-sims/rubin_nights
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Astronomy
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: astropy
Requires-Dist: astroplan
Requires-Dist: httpx
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pyvo
Requires-Dist: pyyaml
Provides-Extra: rubin
Requires-Dist: healpy; extra == "rubin"
Requires-Dist: lsst-resources; extra == "rubin"
Requires-Dist: psycopg; extra == "rubin"
Requires-Dist: rubin-scheduler>=3.18; extra == "rubin"
Requires-Dist: rubin-sim; extra == "rubin"
Requires-Dist: sqlalchemy; extra == "rubin"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: black; extra == "test"
Requires-Dist: ruff; extra == "test"
Requires-Dist: isort; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Provides-Extra: dev
Requires-Dist: documenteer[guide]; extra == "dev"
Dynamic: license-file

# rubin_nights
Tools for accessing Rubin data relevant for nightly visit investigations.


To install rubin_nights within the RSP: 

```pip install --user --upgrade git+https://github.com/lsst-sims/rubin_nights.git  --no-deps```

All of the dependencies are already present in the `rubin-env-rsp` environment, and the RSP does not appreciate you trying to update these, so `--no-deps` works great.


Outside the RSP (such as in your own conda environment), you can pip install similarly for the basic requirements: 

```pip install --upgrade git+https://github.com/lsst-sims/rubin_nights.git```

But, you may also be interested in some extra dependencies linked to rubin, such as lsst-resources and rubin-scheduler + rubin-sim. Adding lsst-resources enables you to download snapshots, etc. from the LFA. Adding rubin-scheduler and rubin-sim allow you to add additional information such as predicted zeropoint and predicted slewtimes to the visit + quicklook information gathered from the ConsDb. So then the easiest way forward is:

```pip install "rubin_nights[rubin] @ git+https://github.com/lsst-sims/rubin_nights.git"```
