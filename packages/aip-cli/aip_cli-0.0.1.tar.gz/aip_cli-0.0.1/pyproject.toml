
############################
#    Ruff Configuration    #
############################
[tool.ruff]
# Allow lines to be as long as 180.
line-length = 180

target-version = "py312"

[tool.ruff.lint]
# Use additional preview rules for pycodestyle errors
preview = true
explicit-preview-rules = true
extend-select = ["E111", "E112", "E113", "E114", "E115", "E116", "E117", "E201", "E202", "E203", "E211", "E223", "E224", "E225", "E226", "E228", "E231", "E241", "E242", "E251", "E252", "E261", "E262", "E265", "E271", "E272", "E273", "E274", "E275", "E301", "E302", "E304", "E305"]
# https://docs.astral.sh/ruff/rules/
select = [
    # pycodestyle
    "E", "W",
    # Pyflakes
    "F",
    # Pylint
    "PL",
    # Ruff-specific rules
    "RUF",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pep8-naming
    "N",
    # flake8-2020
    "YTT",
    # flake8-async,
    "ASYNC",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-boolean-trap
    "FBT",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-datetimez
    "DTZ",
    # flake8-executable
    "EXE",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-import-conventions
    "ICN",
    # flake8-no-pep420,
    "INP",
    # flake8-pie
    "PIE",
    # flake8-print
    "T20",
    # flake8-pyi
    "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-return
    "RET",
    # flake8-self
    "SLF",
    # flake8-tidy-imports
    "TID",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # eradicate
    "ERA",
    # tryceratops
    "TRY",
    # flynt
    "FLY",
    # Perflint
    "PERF",
    # flake8-logging
    "LOG",
]
# Rules that do not match our style or needs
ignore=["RET504", "TRY003", "PTH123", "SIM108", "RUF012", "S101", "T20", "PTH119", "F541", "BLE001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = false

[tool.ruff.lint.isort]
force-sort-within-sections = false
from-first = false
section-order = ["future", "standard-library", "first-party", "third-party", "local-folder"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 20

[tool.ruff.lint.pylint]
max-branches = 20
max-args = 10
allow-magic-value-types = ["int", "str"]


###############################
#    PyRight Configuration    #
###############################
[tool.pyright]
pythonVersion="3.12"
typeCheckingMode="basic"

# Enable these checks
reportPossiblyUnboundVariable = true

##############################
#    PyTest Configuration    #
##############################
[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:environ",
    "ignore::DeprecationWarning:kubernetes",
]