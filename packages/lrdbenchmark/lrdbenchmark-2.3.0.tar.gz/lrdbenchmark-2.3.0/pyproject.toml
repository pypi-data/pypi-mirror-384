[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lrdbenchmark"
version = "2.3.0"
description = "Comprehensive Long-Range Dependence Benchmarking Framework with Classical, ML, and Neural Network Estimators + 5 Demonstration Notebooks"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Davian R. Chin", email = "d.r.chin@reading.ac.uk"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",

]
keywords = [
    "long-range dependence",
    "hurst parameter", 
    "time series analysis",
    "benchmarking",
    "machine learning",
    "neural networks",
    "reproducible research",
    "fractional brownian motion",
    "wavelet analysis",
    "spectral analysis"
]
requires-python = ">=3.8,<3.13"
dependencies = [
    "numpy>=1.21.0,<2.0",
    "scipy>=1.7.0,<2.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "pywavelets>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "psutil>=5.8.0",
    "networkx>=2.6.0",
    "joblib>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.12",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "myst-parser>=0.15",
]
dashboard = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
]
accel-jax = [
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
]
accel-pytorch = [
    "torch>=1.9.0",
]
accel-numba = [
    "numba>=0.56.0",
]
accel-all = [
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
    "torch>=1.9.0",
    "numba>=0.56.0",
]
bayes = [
    "optuna>=3.0.0",
    "numpyro>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/dave2k77/LRDBenchmark"
Documentation = "https://lrdbenchmark.readthedocs.io/"
Repository = "https://github.com/dave2k77/LRDBenchmark.git"
Issues = "https://github.com/dave2k77/LRDBenchmark/issues"
Download = "https://pypi.org/project/lrdbenchmark/"
Source = "https://github.com/dave2k77/LRDBenchmark"

[tool.setuptools.packages.find]
where = ["."]
include = ["lrdbenchmark*"]

[tool.setuptools.package-data]
lrdbenchmark = ["py.typed"]
"*" = ["notebooks/*.ipynb", "notebooks/README.md"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lrdbenchmark"]

[tool.mypy]
python_version = "2.3.0"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "pandas.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "torch.*",
    "jax.*",
    "pywt.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "2.3.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
