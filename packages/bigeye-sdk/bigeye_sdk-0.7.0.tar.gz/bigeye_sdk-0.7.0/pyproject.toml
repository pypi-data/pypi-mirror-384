[tool.poetry]
name = "bigeye-sdk"
version = "0.7.0"
description = "Bigeye SDK offers developer tools and clients to interact with Bigeye programmatically."
license = "Proprietary"
authors = ["Bigeye <support@bigeye.com>"]
readme = "README.md"
homepage = "https://docs.bigeye.com/docs"

[[tool.poetry.source]]
name = "staging"
url = "https://bigeye-021451147547.d.codeartifact.us-west-2.amazonaws.com/pypi/pypi-store/"
priority = "supplemental"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.9.0"
requests = '^2.28.1'
betterproto = {extras = ["compiler"], version = "^1.2.5"}
PyYAML = '^6.0'
rapidfuzz = '^3.1.1'
lz4 = '^4.0.1'
keyring = "^24.3.1"
pycryptodomex = "^3.20.0"
pydantic = '^2.4.2'
pydantic-yaml = '^1.0.0'
setuptools = '>=65.5.0'
grpclib = '^0.4.2'
smart-open = '^6.1.0'
types-PyYAML = "^6.0.11"
boto3 = "^1.38.42"
botocore = "^1.38.42"
typer = "^0.19.2"
secretstorage = "^3.3.3"
slack_sdk = "^3.2.7"
deprecated = "^1.2.14"

[tool.poetry.group.dev.dependencies]
markupsafe = "^2.0.1"
grpcio = "^1.48.1"
grpcio-tools = "^1.48.1"
poethepoet = "^0.24.3"
pylint = "^2.15.2"
mypy = "^0.981"
pytest = "^7.1.3"
Sphinx = { version = "^5.2.2"}
sphinx-rtd-theme = { version = "^1.0.0"}

[tool.poe.tasks]
    test = ["python_tests"]
    pre_build = ["protogen"]
    pre_publish = ["clean", "docgen"]
    pre_install = ["protogen"]
    post_install = []
    post_publish = ["clean"]

    [tool.poe.tasks.include_generated]
        help = "Includes generated code for the Poetry build.  Git excluded code is not included in Poetry Build"
        shell = """
        grep -v "**/generated" ../../.gitignore > tmpfile && mv -f tmpfile ../../.gitignore
        """

    [tool.poe.tasks.exclude_generated]
        help = "Excludes generated code in a way that is compatible with Poetry.  Poetry will ignore all code that is ignored with .gitignore"
        shell = """
        if ! grep -q "**/generated" ../../.gitignore; then
        echo "**/generated" >> ../../.gitignore;
        fi
        """

    [tool.poe.poetry_hooks]
        pre_build = "pre_build"
        pre_install = "pre_install"
        pre_publish = "pre_publish"
        post_publish = "post_publish"

    [tool.poe.tasks.docgen]
        help = "Generate pydocs for SDK"
        shell = """
        cd docs
        sphinx-apidoc -o . ..
        make html
        """

        [tool.poe.tasks.format]
        help = "Run black on the code base"
        cmd  = "black ."

        [tool.poe.tasks.clean]
        help = "Remove generated files"
        cmd  = """
        rm -rf .coverage
        rm -rf .mypy_cache
        rm -rf ./dist
        """

        [tool.poe.tasks.protogen]
        help = "Generate Bigeye protobuf classes for Python SDK."
        shell  = """
        pip install markupsafe==2.0.1
        bash protogen.sh
        pip uninstall markupsafe==2.0.1 -y
        """

        [tool.poe.tasks.types]
        help = "Run the type checker"
        cmd  = "mypy bigeye_sdk --ignore-missing-imports"

        [tool.poe.tasks.lint]
        help = "Run the linter"
        cmd  = "pylint bigeye_sdk"

        [tool.poe.tasks.python_tests]
        help = "Run all tests"
        shell = """
        cd ../../tests
        PYTHONPATH=.:../bigeye-cli:../bigeye-aws:$PYTHONPATH pytest
        """

[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"


