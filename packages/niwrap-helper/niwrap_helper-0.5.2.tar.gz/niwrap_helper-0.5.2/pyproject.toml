[project]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14"
]
name = "niwrap-helper"
description = "Utility functions for working with NiWrap"
authors = [
  {"name" = "Jason Kai", "email" = "21226986+kaitj@users.noreply.github.com"}
]
license = "MIT"
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.11"
dependencies = ["bids2table[s3]>=2.1.2", "niwrap>=0.6.3", "pyyaml>=6.0.2"]

[project.urls]
Repository = "https://github.com/kaitj/niwrap-helper"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build]
source = ["src/"]

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.version]
source = "vcs"

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py312"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN002",  # *args should not be annotated
  "ANN003",  # **kwargs should not be annotated
  "D417"  # Ignore docstring descriptions for *args, **kwargs
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
  "mypy>=1.18.2",
  "pre-commit>=4.3.0",
  "ruff>=0.14.0",
  "types-pyyaml>=6.0.12.20250915"
]
