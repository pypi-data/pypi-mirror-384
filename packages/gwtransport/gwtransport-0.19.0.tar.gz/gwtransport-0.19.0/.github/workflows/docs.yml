name: Build and Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Disable man-db to speed up pandoc install
        run: |
          echo 'set man-db/auto-update false' | sudo debconf-communicate >/dev/null
          sudo dpkg-reconfigure man-db
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v7
      - name: Install the project
        run: uv sync --extra test
      - name: Run inline examples that are part of the documentation
        run: uv run pytest tests/docs
      - name: Install Pandoc
        uses: pandoc/actions/setup@v1
      - name: Check documentation links
        run: |
          uv tool run --from sphinx --with-editable ".[docs]" sphinx-build -j auto -b linkcheck docs/source docs/build/linkcheck
      - name: Build documentation with sphinx and uv
        run: |
          uv tool run --from sphinx --with-editable ".[docs]" sphinx-build -j auto -b html docs/source docs/build/html
      - name: Zip documentation
        run: |
          mv docs/build/html coverage
          zip -FSr documentation.zip coverage
          mv documentation.zip coverage
      - name: Download functional and example coverage results
        run: |
          curl https://gwtransport.github.io/gwtransport/coverage-functional.zip -L -o coverage-functional.zip
          curl https://gwtransport.github.io/gwtransport/coverage-examples.zip -L -o coverage-examples.zip
          unzip -o coverage-functional.zip || true
          unzip -o coverage-examples.zip || true
          mv coverage-functional.zip coverage || true
          mv coverage-examples.zip coverage || true
      - name: Upload both coverage results
        uses: actions/upload-pages-artifact@v4
        with:
          path: coverage

  deploy-documentation:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-documentation
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
