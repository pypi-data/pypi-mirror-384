[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wizsearch"
version = "1.0.1"
description = "Unified Python library for searching across multiple search engines"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
maintainers = [
    {name = "Xiaming Chen", email = "chenxm35@gmail.com"}
]
keywords = ["python", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.0.0",
    "cogents-core>=0.1.9",
    "google-genai>=1.29.0,<2.0.0",
    "langchain-tavily>=0.2.11",
    "ddgs>=9.4.0",
    "tarzi>=0.1.6,<0.2",
    "crawl4ai>=0.7.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2,<9",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "pytest-twisted>=1.14.3",
    "twisted>=25.5.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "autoflake>=2.3.1",
]

[project.urls]
Homepage = "https://github.com/caesar0301/wizsearch"

[tool.setuptools.packages.find]
where = ["."]
include = ["wizsearch*"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["wizsearch"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
