system:
  description: 你是一个智能助手，你需要认真负责的回答帮用户解决问题;要求回答的尽量精准和谨慎

dialogue:
  use_proxy_user: true
  max_proxy_step: 30
  max_tokens: 500

policies:
  - type: trigger
  - type: llm
    config:
      llms:
        - name: rag-glm-4
        - name: rag-utter
          action: BotUtter
        - name: rag-selector
          action: Selector

knowledge:
  - type: llm
    config:
      llms: 
        - name: rag-glm-4
          action: BotUtter
        - name: rag-glm-4
          action: Selector
        - name: rag-glm-4
          # No action specified - serves as default for all other actions

actions:
  UserUtter:
    description: "用户的action - 用户向智能体提问"
    prompt: |
      你是一个普通用户，正在与智能助手对话，你想要查询天气信息。请根据历史对话内容，以用户的身份和口吻提出下一个合理的问题或回应。

      **角色设定：**
      - 你是一个关心天气的普通用户
      - 你可能需要查询特定地点的天气
      - 你可能关心今天、明天或未来几天的天气情况
      - 你会像正常人一样自然地交流，包括问候、感谢等

      **历史对话：**
      {{history_messages}}

      **任务要求：**
      1. 根据对话历史，判断当前对话进展
      2. 如果对话刚开始或需要继续，提出关于天气的问题
      3. 如果已经得到满意答案，可以表示感谢并结束对话
      4. 保持用户的自然对话风格，不要过于正式

      **输出格式（严格按照JSON格式）：**
      ```json
      {
        "thought": "你的内心想法和推理过程，分析当前对话状态和下一步应该说什么",
        "text": "你作为用户要说的话，自然、口语化的表达",
        "state": "continue/stop - continue表示对话继续，stop表示对话可以结束"
      }
      ```

  BotUtter:
    description: "回复用户"
    prompt: |
      你是一个智能助手，需要根据当前对话历史生成合适的回复。

      **任务描述：**
      {{task_description}}

      **输出格式要求：**
      你必须严格按照以下JSON格式响应，不要有任何其他内容：
      ```json
      {"thought": "<你的推理过程>", "text": "<你的回复内容>"}
      ```

      **=============== 学习参考资料 ===============**
      （以下是思维模式参考，帮助你理解如何分析和思考，但不是真实对话内容）
      {{policies}}
      **============== 学习参考资料结束 ==============**

      **=============== 实际对话历史 ===============**
      （以下是真实的对话历史，请基于此内容生成回复）
      {{history_actions}}
      **============== 实际对话历史结束 ==============**

      请分析上述实际对话历史，参考学习资料中的思维模式，生成合适的JSON格式回复：

  RAG:
    description: "通过检索知识库，查询一些专业的知识"
    prompt: | 
      根据已有知识检索出来的内容，结合任务描述和历史对话，生成回答

      检索内容:
      {{rag}}

      任务描述:
      {{task_description}}

      历史对话:
      {{history_messages}}

      请严格按照，知识库检索出来的内容回答用户

  Selector:
    description: "选择合适的Actions"
    prompt: |
      你是一个智能对话助手，需要根据当前对话状态选择下一个最合适的Action。

      **输出格式要求：**
      你必须严格按照以下JSON格式响应，不要有任何其他内容：
      ```json
      {"thought": "<你的推理过程>", "action": "<工具名称>"}
      ```

      **可用的Action工具：**
      {{action_descriptions}}

      **=============== 决策参考模式 ===============**
      （以下是决策思维参考，帮助你理解如何选择Action，但不是真实对话内容）
      {{policies}}
      **============== 决策参考模式结束 ==============**

      **=============== 当前对话状态 ===============**
      （以下是真实的Action执行历史，请基于此状态选择下一个Action）
      {{history_actions}}
      **============== 当前对话状态结束 ==============**

      请分析当前对话状态，参考决策模式，选择最合适的下一个Action并输出JSON格式结果：

  Calculate:
    description: "计算器功能"
    prompt: |      
      当前正在执行{{current_form_name}}, 其描述为{{current_form_description}}，将计算结果返给用户。
      请将计算结果{{current_form_execute_result}}返回,注意：不要自己计算，使用计算器返回的结果, 不要有多余回答。

      你必须严格按照以下JSON格式响应，不要有任何其他内容：
      {"text": "<你的回复内容>"}}


    updater:
      description: "更新状态"
      prompt: |
        当前正在执行{{current_form_name}}， 其描述为{{current_form_description}}。根据对话内容及Action序列，结合当前slot的状态，填充或重置slot的值。
        
        历史Action序列为:
        {{history_actions}}

        Action的描述为:
        {{action_descriptions}}

        当前slots为:
        {{current_form_slot_states}}

        slots的含义为:
        {{current_form_slot_descriptions}}
        
        填充或重置slot的值, 保持slots格式输出json字符串。

        你必须严格按照以下JSON格式响应，不要有任何其他内容：
        {"text": "<你的回复内容>"}}


    slots:
      expression:
        description: 计算器所能识别的表达式，如1+1
        prompt: |
          当前正在执行Action {{current_form_name}}, 其描述为 {{current_form_description}}。
          接下来需要询问用户，需要获取到计算器所需要的表达式。

          输出格式为: <询问用户的话>

    executer:
      type: http
      url: http://rap2api.taobao.org/app/mock/319677/Calculate
      method: GET
      client_key: default
      output: [<text>, 接口异常]
      mock: true
  
  Weather:
    description: "查询天气"
    prompt: |
      当前正在执行{{current_form_name}}, 其描述为{{current_form_description}}。请将结果返给用户。

      你必须严格按照以下JSON格式响应，不要有任何其他内容：
      {"text": "<你的回复内容>"}}

      结果为
      {{current_form_execute_result}}

      以下是一些指导
      {{policies}}

    updater:
      description: "更新状态"
      prompt: |
        当前正在执行{{current_form_name}}， 其描述为{{current_form_description}}。根据对话内容及Action序列，结合当前slot的状态，填充或重置slot的值。
        
        历史Action序列为:
        {{history_actions_with_thoughts}}

        Action的描述为:
        {{action_descriptions}}

        当前slots为:
        {{current_form_slot_states}}

        slots的含义为:
        {{current_form_slot_descriptions}}
        
        填充或重置slot的值, 保持slots格式输出json字符串。

    slots:
      city:
        description: 城市，注意：接口只支持输入单个城市
        prompt: |
          当前正在执行Action {{current_form_name}}, 其描述为 {{current_form_description}}。
          接下来需要询问用户，需要查询哪个城市的天气。
          
          你必须严格按照以下JSON格式响应，不要有任何其他内容：
          {"text": "<你的回复内容>"}}

      time:
        description: 时间
        prompt: |
          当前正在执行Action {{current_form_name}}, 其描述为 {{current_form_description}}。
          接下来需要询问用户，需要查询哪天的天气。

          你必须严格按照以下JSON格式响应，不要有任何其他内容：
          {"text": "<你的回复内容>"}}


    executer:
      url: http://rap2api.taobao.org/app/mock/319677/Weather
      methold: GET
      output: [<text>, 接口异常]
      mock: false

  RenGong:
    description: "转人工"
    executer:
      url: http://rap2api.taobao.org/app/mock/319677/Rengong
      methold: GET
      output: [成功,失败]
      mock: true