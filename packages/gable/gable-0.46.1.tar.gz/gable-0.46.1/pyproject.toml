[tool.poetry]
name = "gable"
version = "0.46.1"
description = "Command line interface (CLI) and software development kit (SDK) to interact with Gable API"
authors = ["Gable.ai <engineers@gable.ai>"]
readme = "README.md"
packages = [{ include = "gable" }]
# Force include the openapi.py file even though it's in .gitignore
include = [{ path = "gable/openapi.py", format = ["sdist", "wheel"] }]
# Exclude things we don't want shipping in our published package
exclude = ["tests", "scripts"]

[tool.poetry.dependencies]
GitPython = "^3.1.0"
python = ">=3.10,<4.0"
click = "^8.1.3"
pydantic = { extras = ["email"], version = "^2.0.0" }
requests = "^2.31.0"
pyyaml = "^6.0.0"
psycopg2-binary = { version = '>=2.7', optional = true }
mysql-connector-python = { version = "^9.1.0", optional = true }
click-option-group = "^0.5.6"
giturlparse = "^0.10.0"
rich = "^13.5.0"
loguru = "^0.7.0"
jsonpickle = "^3.0.0"
jsonref = "^1.1.0"
pycryptodome = "^3.17.0"
# Only install recap for Python 3.10-3.13, otherwise skip it. This is because the recap-core package
# supports Python 3.10-3.13. Recap is only imported in the functions that use it, so it won't affect
# normal usage. Anyone that needs to use the recap functionality will need to be on Python 3.10-3.13.
recap-core = { version = "^0.13.0", python = ">=3.10,<3.14", extras = [
    "json",
    "proto",
] }
h11 = "^0.16.0" # https://github.com/gabledata/product/security/dependabot/403
# !!! IMPORTANT !!!
# S3 dependencies - make sure to add these to the `s3` and `all` extras lists as wel
boto3 = ">=1.34.0,<1.35.0"
botocore = ">=1.34.0,<1.35.0"
deepdiff = "^8.6.1"
fsspec = ">=2023.0.0,<2025.0.0"
mypy-boto3-s3 = "^1.0.0"
mypy-boto3-apigateway = "==1.38.0"
numpy = "^1.0.0"
pandas = ">=1.5.3,<3.0.0"
pyarrow = ">=17.0.0"
pymssql = "^2.2.8"
fastavro = "^1.10.0"
python-snappy = "^0.7.3"
duckdb = "^1.2.2"
tqdm = "^4.67.1"
urllib3 = ">=1.26,<2.6.0"

[tool.poetry.scripts]
gable = "gable.cli.cli_setup:cli"

[tool.poetry.group.dev.dependencies]
zstandard = "^0.23.0"
autoflake = "^2.3.1"
black = "^24.4.0"
boto3-stubs = { extras = ["essential,apigateway"], version = "^1.0.0" }
build = "^0.10.0"
datamodel-code-generator = "0.31.2"
flask = "^3.0.3"
flask_cors = ">=4.0.1,<7.0.0"
isort = "^5.12.0"
moto = "^5.0.5"
poethepoet = "^0.37.0"
pytest = "^7.3.1"
pyright = "^1.1.403"
requests-mock = "^1.12.1"
waiting = "^1.4.1"
tox = "^4.11.3"
pytest-timeout = "^2.2.0"
syrupy = "^3.0.0"
proto-schema-parser = "^0.2.0"
referencing = ">=0.31.0"
pytest-mock = "^3.11.1"
pytest_httpx = "^0.30.0"
twine = "^6.1.0"
toml = "^0.10.2"
packaging = "^25.0"
deptry = "^0.18.0"
pylint = "^3.3.7"
watchdog = "^6.0.0"

[tool.poetry.extras]
postgres = ['psycopg2-binary']
mysql = ['mysql-connector-python']
mssql = ['pymssql']
s3 = [
    'boto3',
    'botocore',
    'deepdiff',
    'fsspec',
    'mypy-boto3-s3',
    'mypy-boto3-apigateway',
    'numpy',
    'pandas',
    'pyarrow',
    'fastavro',
    'python-snappy',
    'duckdb',
]
all = [
    'psycopg2-binary',
    'mysql-connector-python',
    'pymssql',
    'boto3',
    'botocore',
    'deepdiff',
    'fsspec',
    'mypy-boto3-s3',
    'mypy-boto3-apigateway',
    'numpy',
    'pandas',
    'pyarrow',
    'fastavro',
    'python-snappy',
    'duckdb',
]

[tool.poe.tasks.pull_openapi_schema]
shell = "zsh scripts/pull_openapi_schema.sh"
args = [{ name = "VERSION", positional = true }]

[tool.poe.tasks.generate_types]
shell = "bash scripts/generate_types.sh"

[tool.poe.tasks.publish_pypi]
script = "scripts.publish_pypi:main"

[tool.poe.tasks.lint]
shell = "echo 'Beginning linting...'; pylint gable scripts tests --disable=C,R,W,E1101,E0611"

[tool.poe.tasks.format]
shell = "echo 'Beginning formatting...'; black . && isort . --quiet && autoflake --recursive . --quiet --in-place; echo 'Formatting complete.'"

[tool.poe.tasks.format-check]
shell = "black . --check && isort . --check-only && autoflake --recursive . --check-diff --quiet"

[tool.poe.tasks.typecheck]
shell = "echo 'Beginning typechecking...'; pyright && echo 'Typechecking complete.'"

[tool.poe.tasks.check_deps]
shell = "deptry ."

[tool.deptry]
ignore = ["DEP001", "DEP003", "DEP004"]

[tool.deptry.per_rule_ignores]
DEP002 = ["fsspec", "mypy-boto3-apigateway", "h11", "urllib3"]
# fsspec needed for pandas to have s3 access

[tool.deptry.package_module_name_map]
psycopg2-binary = "psycopg2"
mysql-connector-python = "mysql"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["gable/cli/", "gable/sdk/"]
exclude = ["gable/openapi.py"]

[tool.isort]
profile = "black"
