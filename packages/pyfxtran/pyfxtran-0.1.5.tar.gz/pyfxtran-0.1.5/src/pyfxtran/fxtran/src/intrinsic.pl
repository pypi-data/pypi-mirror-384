#!/usr/bin/perl -w
#
use strict;
use Data::Dumper;

my @f77 = qw (
  ABS    
  ACOS   
  AIMAG  
  AINT   
  ALOG   
  ALOG10 
  AMAX0  
  AMAX1  
  AMIN0  
  AMIN1  
  AMOD   
  ANINT  
  ASIN   
  ATAN   
  ATAN2  
  CABS   
  CCOS   
  CEXP   
  CHAR   
  CLOG   
  CMPLX  
  CONJG  
  COS    
  COSH   
  CSIN   
  CSQRT  
  DABS   
  DACOS  
  DASIN  
  DATAN  
  DATAN2 
  DBLE   
  DCOS   
  DCOSH  
  DDIM   
  DEXP   
  DIM    
  DINT   
  DLOG   
  DLOG10 
  DMAX1  
  DMIN1  
  DMOD   
  DNINT  
  DPROD  
  DSIGN  
  DSIN   
  DSINH  
  DSQRT  
  DTAN   
  DTANH  
  EXP    
  FLOAT  
  IABS   
  ICHAR  
  IDIM   
  IDINT  
  IDNINT 
  IFIX   
  INDEX  
  INT    
  ISIGN  
  LEN    
  LGE    
  LGT    
  LLE    
  LLT    
  LOG    
  LOG10  
  MAX    
  MAX0   
  MAX1   
  MIN    
  MIN0   
  MIN1   
  MOD    
  NINT   
  REAL   
  SIGN   
  SIN    
  SINH   
  SNGL   
  SQRT   
  TAN    
  TANH   
);

my @f90 = qw (
  ABS 
  ACHAR 
  ACOS 
  ADJUSTL 
  ADJUSTR 
  AIMAG 
  AINT 
  ALL 
  ALLOCATED 
  ANINT 
  ANY 
  ASIN 
  ASSOCIATED 
  ATAN 
  ATAN2 
  BIT_SIZE 
  BTEST 
  CEILING 
  CHAR 
  CMPLX 
  CONJG 
  COS 
  COSH 
  COUNT 
  CSHIFT 
  DBLE 
  DIGITS 
  DIM 
  DOT_PRODUCT 
  DPROD 
  EOSHIFT 
  EPSILON 
  EXP 
  EXPONENT 
  FLOOR 
  FRACTION 
  HUGE 
  IACHAR 
  IAND 
  IBCLR 
  IBITS 
  IBSET 
  ICHAR 
  IEOR 
  INDEX 
  INT 
  IOR 
  ISHFT 
  ISHFTC 
  KIND 
  LBOUND 
  LEN 
  LEN_TRIM 
  LGE 
  LGT 
  LLE 
  LLT 
  LOG 
  LOG10 
  LOGICAL 
  MATMUL 
  MAX 
  MAXEXPONENT 
  MAXLOC 
  MAXVAL 
  MERGE 
  MIN 
  MINEXPONENT 
  MINLOC 
  MINVAL 
  MOD 
  MODULO 
  NEAREST 
  NINT 
  NOT 
  PACK 
  PRECISION 
  PRESENT 
  PRODUCT 
  RADIX 
  RANGE 
  REAL 
  REPEAT 
  RESHAPE 
  RRSPACING 
  SCALE 
  SCAN 
  SELECTED_INT_KIND 
  SELECTED_REAL_KIND 
  SET_EXPONENT 
  SHAPE 
  SIGN 
  SIN 
  SINH 
  SIZE 
  SPACING 
  SPREAD 
  SQRT 
  SUM 
  TAN 
  TANH 
  TINY 
  TRANSFER 
  TRANSFER 
  TRANSPOSE 
  TRIM 
  UBOUND 
  UNPACK 
  VERIFY 
  DATE_AND_TIME
  MVBITS
  RANDOM_NUMBER
  RANDOM_SEED
  SYSTEM_CLOCK
);

my @f95 = qw (
  ABS 
  ACHAR 
  ACOS 
  ADJUSTL 
  ADJUSTR 
  AIMAG 
  AINT 
  ALL 
  ALLOCATED 
  ALOG 
  ALOG10 
  AMAX0 
  AMAX1 
  AMIN0 
  AMIN1 
  AMOD 
  ANINT 
  ANY 
  ASIN 
  ASSOCIATED 
  ATAN 
  ATAN2 
  BIT_SIZE 
  BTEST 
  CABS 
  CCOS 
  CEILING 
  CEXP 
  CHAR 
  CLOG 
  CMPLX 
  COMMAND_ARGUMENT_COUNT 
  CONJG 
  COS 
  COSH 
  COUNT 
  CPU_TIME 
  CSHIFT 
  CSIN 
  CSQRT 
  DABS 
  DACOS 
  DASIN 
  DATAN 
  DATAN2 
  DATE_AND_TIME 
  DBLE 
  DCOS 
  DCOSH 
  DDIM 
  DEXP 
  DIGITS 
  DIM 
  DINT 
  DLOG 
  DLOG10 
  DMAX1 
  DMIN1 
  DMOD 
  DNINT 
  DOT_PRODUCT 
  DPROD 
  DSIGN 
  DSIN 
  DSINH 
  DSQRT 
  DTAN 
  DTANH 
  EOSHIFT 
  EPSILON 
  EXP 
  EXPONENT 
  FLOAT 
  FLOOR 
  FRACTION 
  GET_COMMAND 
  GET_COMMAND_ARGUMENT 
  GET_ENVIRONMENT_VARIABLE 
  HUGE 
  IABS 
  IACHAR 
  IAND 
  IBCLR 
  IBITS 
  IBSET 
  ICHAR 
  IDIM 
  IDINT 
  IDNINT 
  IEOR 
  IFIX 
  INDEX 
  INT 
  IOR 
  ISHFT 
  ISHFTC 
  ISIGN 
  KIND 
  LBOUND 
  LEN 
  LEN_TRIM 
  LGE 
  LGT 
  LLE 
  LLT 
  LOG 
  LOG10 
  LOGICAL 
  MATMUL 
  MAX 
  MAX0 
  MAX1 
  MAXEXPONENT 
  MAXLOC 
  MAXVAL 
  MERGE 
  MIN 
  MIN0 
  MIN1 
  MINEXPONENT 
  MINLOC 
  MINVAL 
  MOD 
  MODULO 
  MVBITS 
  NEAREST 
  NINT 
  NOT 
  NULL 
  PACK 
  PRECISION 
  PRESENT
  PRODUCT 
  RADIX 
  RANDOM_NUMBER 
  RANDOM_SEED 
  RANGE 
  REAL 
  REPEAT 
  RESHAPE 
  RRSPACING 
  SCALE 
  SCAN 
  SELECTED_INT_KIND 
  SELECTED_REAL_KIND 
  SET_EXPONENT 
  SHAPE 
  SIGN 
  SIN 
  SINH 
  SIZE 
  SNGL 
  SPACING 
  SPREAD 
  SQRT 
  SUM 
  SYSTEM_CLOCK 
  TAN 
  TANH 
  TINY 
  TRANSFER 
  TRANSPOSE 
  TRIM 
  UBOUND 
  UNPACK 
  VERIFY 
);



