name: Build & Publish (on Release)

on:
  release:
    types: [published]  # only when a GitHub Release is published
    workflow_dispatch: 

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14]

    steps:
      - name: Check out release tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheels
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_SKIP: "*-cp314-*"
          CIBW_ARCHS_LINUX: "x86_64"            # ðŸ‘ˆ disable aarch64 here
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          CIBW_ENVIRONMENT: 'PIP_ONLY_BINARY="numpy,pyarrow" PIP_PREFER_BINARY="1"'
          CIBW_TEST_ENVIRONMENT: 'PIP_ONLY_BINARY="numpy,pyarrow" PIP_PREFER_BINARY="1"'
        run: |
          python -m pip install -U pip cibuildwheel build
          # cibuildwheel reads settings from pyproject.toml ([tool.cibuildwheel])
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    steps:
      - name: Check out release tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build sdist
        run: |
          python -m pip install -U build
          python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-22.04
    permissions:
      id-token: write   # required for PyPI Trusted Publisher (OIDC)
      contents: read

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Upload to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          # repository-url: https://test.pypi.org/legacy/  # uncomment to publish to TestPyPI
