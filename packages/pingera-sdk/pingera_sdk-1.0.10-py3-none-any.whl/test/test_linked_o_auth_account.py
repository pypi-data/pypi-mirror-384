# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.linked_o_auth_account import LinkedOAuthAccount

class TestLinkedOAuthAccount(unittest.TestCase):
    """LinkedOAuthAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LinkedOAuthAccount:
        """Test LinkedOAuthAccount
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LinkedOAuthAccount`
        """
        model = LinkedOAuthAccount()
        if include_optional:
            return LinkedOAuthAccount(
                id = 'oauth_acc123',
                created_at = '2023-08-02T11:30:45Z',
                provider = pingera.models.o_auth_provider.OAuthProvider(
                    authorization_url = 'https://oauth.yandex.ru/authorize', 
                    name = 'yandex', 
                    is_active = True, 
                    icon_url = 'https://yastatic.net/s3/passport-static/autofill/v2/svg/ya-logo.svg', 
                    display_name = 'Yandex.ID', ),
                provider_name = 'John Doe',
                provider_email = 'user@yandex.ru',
                provider_avatar_url = 'https://avatars.yandex.net/get-yapic/123/456/islands-200',
                last_used_at = '2023-08-02T11:30:45Z'
            )
        else:
            return LinkedOAuthAccount(
        )
        """

    def testLinkedOAuthAccount(self):
        """Test LinkedOAuthAccount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
