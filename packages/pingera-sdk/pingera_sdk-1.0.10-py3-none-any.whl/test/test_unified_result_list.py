# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.unified_result_list import UnifiedResultList

class TestUnifiedResultList(unittest.TestCase):
    """UnifiedResultList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnifiedResultList:
        """Test UnifiedResultList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnifiedResultList`
        """
        model = UnifiedResultList()
        if include_optional:
            return UnifiedResultList(
                results = [
                    pingera.models.unified_result.UnifiedResult(
                        check_id = '', 
                        id = '', 
                        result_type = 'regular', 
                        check_name = '', 
                        check_type = '', 
                        check_server_id = '', 
                        triggered_alerts = [{"alert_id":"alert123abc456","title":"Check 'API Health' has failed","severity":"high","status":"firing","is_primary_trigger":true}], 
                        status = '', 
                        check_server = null, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        check_metadata = {
                            'key' : null
                            }, 
                        region = '', 
                        error_message = '', 
                        response_time = 56, )
                    ],
                pagination = {"page":1,"page_size":20,"total_pages":5,"total_items":100}
            )
        else:
            return UnifiedResultList(
        )
        """

    def testUnifiedResultList(self):
        """Test UnifiedResultList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
