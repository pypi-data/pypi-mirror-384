# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_v1_api_tokens_get(self) -> None:
        """Test case for v1_api_tokens_get

        List API tokens
        """
        pass

    def test_v1_api_tokens_post(self) -> None:
        """Test case for v1_api_tokens_post

        Create new API token
        """
        pass

    def test_v1_api_tokens_token_id_delete(self) -> None:
        """Test case for v1_api_tokens_token_id_delete

        Delete API token
        """
        pass

    def test_v1_login_post(self) -> None:
        """Test case for v1_login_post

        User login
        """
        pass

    def test_v1_refresh_post(self) -> None:
        """Test case for v1_refresh_post

        Refresh access token
        """
        pass

    def test_v1_register_post(self) -> None:
        """Test case for v1_register_post

        Register a new user
        """
        pass

    def test_v1_users_change_password_post(self) -> None:
        """Test case for v1_users_change_password_post

        Change user password
        """
        pass

    def test_v1_users_get(self) -> None:
        """Test case for v1_users_get

        Get all users
        """
        pass

    def test_v1_users_invite_post(self) -> None:
        """Test case for v1_users_invite_post

        Invite a new user
        """
        pass

    def test_v1_users_onboarding_patch(self) -> None:
        """Test case for v1_users_onboarding_patch

        Update user onboarding status
        """
        pass

    def test_v1_users_profile_put(self) -> None:
        """Test case for v1_users_profile_put

        Update user profile information
        """
        pass

    def test_v1_users_request_password_reset_post(self) -> None:
        """Test case for v1_users_request_password_reset_post

        Request password reset email
        """
        pass

    def test_v1_users_resend_verification_post(self) -> None:
        """Test case for v1_users_resend_verification_post

        Resend email verification
        """
        pass

    def test_v1_users_reset_password_post(self) -> None:
        """Test case for v1_users_reset_password_post

        Reset password using token
        """
        pass

    def test_v1_users_roles_get(self) -> None:
        """Test case for v1_users_roles_get

        Get available user roles
        """
        pass

    def test_v1_users_user_id_delete(self) -> None:
        """Test case for v1_users_user_id_delete

        Delete user
        """
        pass

    def test_v1_users_user_id_get(self) -> None:
        """Test case for v1_users_user_id_get

        Get user details
        """
        pass

    def test_v1_users_user_id_patch(self) -> None:
        """Test case for v1_users_user_id_patch

        Update user
        """
        pass

    def test_v1_users_user_id_put(self) -> None:
        """Test case for v1_users_user_id_put

        Update user
        """
        pass

    def test_v1_users_user_id_resend_invitation_post(self) -> None:
        """Test case for v1_users_user_id_resend_invitation_post

        Resend invitation email for a user (admin only)
        """
        pass

    def test_v1_verify_email_token_get(self) -> None:
        """Test case for v1_verify_email_token_get

        Verify email address
        """
        pass


if __name__ == '__main__':
    unittest.main()
