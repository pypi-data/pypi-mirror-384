# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.monitor_check1 import MonitorCheck1

class TestMonitorCheck1(unittest.TestCase):
    """MonitorCheck1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitorCheck1:
        """Test MonitorCheck1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitorCheck1`
        """
        model = MonitorCheck1()
        if include_optional:
            return MonitorCheck1(
                position = 0,
                type = 'web',
                status = 'ok',
                created_at = '2024-01-15T10:00Z',
                host = 'example.com',
                name = 'Production API Health Check',
                group_id = 'grp123abc456',
                last_checked_at = '2024-01-15T14:30Z',
                interval = 300,
                port = 443,
                id = 'chk123def456',
                group = pingera.models.check_group.CheckGroup(
                    position = 0, 
                    id = 'grp123abc456', 
                    description = 'Critical production services monitoring', 
                    created_at = '2024-01-15T10:00Z', 
                    updated_at = '2024-01-15T14:00Z', 
                    active = True, 
                    name = 'Production Services', 
                    color = '#4F46E5', ),
                timeout = 10,
                secrets = [
                    pingera.models.check_secret.CheckSecret(
                        id = 'cs123abc456', 
                        created_at = '2024-01-15T10:00Z', 
                        env_variable = 'DATABASE_PASSWORD', 
                        secret = null, 
                        secret_id = 'sec123abc456', )
                    ],
                url = 'https://api.example.com/health',
                parameters = {"pw_script":"const { test, expect } = require('@playwright/test');\n\ntest('example', async ({ page }) => {\n  await page.goto('https://example.com');\n  await expect(page).toHaveTitle(/Example/);\n});","regions":["US, East coast","EU, West"]},
                updated_at = '2024-01-15T14:00Z',
                active = True
            )
        else:
            return MonitorCheck1(
        )
        """

    def testMonitorCheck1(self):
        """Test MonitorCheck1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
