# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.api.status_pages_incidents_api import StatusPagesIncidentsApi


class TestStatusPagesIncidentsApi(unittest.TestCase):
    """StatusPagesIncidentsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = StatusPagesIncidentsApi()

    def tearDown(self) -> None:
        pass

    def test_v1_incident_impacts_get(self) -> None:
        """Test case for v1_incident_impacts_get

        """
        pass

    def test_v1_incident_statuses_get(self) -> None:
        """Test case for v1_incident_statuses_get

        """
        pass

    def test_v1_maintenance_statuses_get(self) -> None:
        """Test case for v1_maintenance_statuses_get

        """
        pass

    def test_v1_pages_page_id_incidents_get(self) -> None:
        """Test case for v1_pages_page_id_incidents_get

        Get incidents for a specific status page
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_delete(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_delete

        Delete an incident by ID
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_get(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_get

        Get a specific incident by ID
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_incident_updates_get(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_incident_updates_get

        Get all updates for a specific incident
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_incident_updates_incident_update_id_patch(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_incident_updates_incident_update_id_patch

        Update an incident update
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_incident_updates_incident_update_id_put(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_incident_updates_incident_update_id_put

        Update an incident update
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_incident_updates_post(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_incident_updates_post

        Create a new update for a specific incident
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_patch(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_patch

        Update an incident by ID
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_postmortem_get(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_postmortem_get

        Get the postmortem for a specific incident
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_postmortem_publish_put(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_postmortem_publish_put

        Publish an incident postmortem
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_postmortem_put(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_postmortem_put

        Create or update an incident postmortem
        """
        pass

    def test_v1_pages_page_id_incidents_incident_id_put(self) -> None:
        """Test case for v1_pages_page_id_incidents_incident_id_put

        Update an incident by ID
        """
        pass

    def test_v1_pages_page_id_incidents_log_past_incident_post(self) -> None:
        """Test case for v1_pages_page_id_incidents_log_past_incident_post

        Log an incident that has already occurred in the past with multiple updates
        """
        pass

    def test_v1_pages_page_id_incidents_post(self) -> None:
        """Test case for v1_pages_page_id_incidents_post

        Create a new incident for a specific status page
        """
        pass

    def test_v1_pages_page_id_incidents_unresolved_get(self) -> None:
        """Test case for v1_pages_page_id_incidents_unresolved_get

        Get unresolved incidents for a specific status page
        """
        pass


if __name__ == '__main__':
    unittest.main()
