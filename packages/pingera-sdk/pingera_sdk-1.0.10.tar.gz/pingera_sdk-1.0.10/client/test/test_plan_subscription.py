# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.plan_subscription import PlanSubscription

class TestPlanSubscription(unittest.TestCase):
    """PlanSubscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlanSubscription:
        """Test PlanSubscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlanSubscription`
        """
        model = PlanSubscription()
        if include_optional:
            return PlanSubscription(
                id = 'sub_abc123def456',
                created_at = '2024-01-15T10:00Z',
                start_date = '2024-01-15T10:00Z',
                end_date = '2024-02-15T10:00Z',
                plan = pingera.models.plan.Plan(
                    id = 'plan_free_123', 
                    limits = {"checks":10,"heartbeats":5,"alert_channels":3}, 
                    description = 'Perfect for getting started with basic monitoring needs', 
                    duration = 30, 
                    price = {"USD":0,"EUR":0}, 
                    name = 'Free Plan', )
            )
        else:
            return PlanSubscription(
        )
        """

    def testPlanSubscription(self):
        """Test PlanSubscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
