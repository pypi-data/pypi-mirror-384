# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.api.alerts_api import AlertsApi


class TestAlertsApi(unittest.TestCase):
    """AlertsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AlertsApi()

    def tearDown(self) -> None:
        pass

    def test_v1_alerts_alert_id_acknowledge_post(self) -> None:
        """Test case for v1_alerts_alert_id_acknowledge_post

        Acknowledge an alert
        """
        pass

    def test_v1_alerts_alert_id_get(self) -> None:
        """Test case for v1_alerts_alert_id_get

        Get an alert by ID
        """
        pass

    def test_v1_alerts_alert_id_notifications_get(self) -> None:
        """Test case for v1_alerts_alert_id_notifications_get

        Get all notifications for a specific alert
        """
        pass

    def test_v1_alerts_alert_id_resolve_post(self) -> None:
        """Test case for v1_alerts_alert_id_resolve_post

        Manually resolve an alert
        """
        pass

    def test_v1_alerts_channels_channel_id_delete(self) -> None:
        """Test case for v1_alerts_channels_channel_id_delete

        Delete an alert channel by ID
        """
        pass

    def test_v1_alerts_channels_channel_id_get(self) -> None:
        """Test case for v1_alerts_channels_channel_id_get

        Get an alert channel by id
        """
        pass

    def test_v1_alerts_channels_channel_id_put(self) -> None:
        """Test case for v1_alerts_channels_channel_id_put

        Update an alert channel by ID
        """
        pass

    def test_v1_alerts_channels_get(self) -> None:
        """Test case for v1_alerts_channels_get

        Get all alert channels
        """
        pass

    def test_v1_alerts_channels_post(self) -> None:
        """Test case for v1_alerts_channels_post

        Create a new alert channel
        """
        pass

    def test_v1_alerts_get(self) -> None:
        """Test case for v1_alerts_get

        Get all alerts
        """
        pass

    def test_v1_alerts_rules_get(self) -> None:
        """Test case for v1_alerts_rules_get

        Get all alert rules
        """
        pass

    def test_v1_alerts_rules_post(self) -> None:
        """Test case for v1_alerts_rules_post

        Create a new alert rule
        """
        pass

    def test_v1_alerts_rules_rule_id_delete(self) -> None:
        """Test case for v1_alerts_rules_rule_id_delete

        Delete an alert rule by ID
        """
        pass

    def test_v1_alerts_rules_rule_id_get(self) -> None:
        """Test case for v1_alerts_rules_rule_id_get

        Get an alert rule by ID
        """
        pass

    def test_v1_alerts_rules_rule_id_put(self) -> None:
        """Test case for v1_alerts_rules_rule_id_put

        Update an alert rule by ID
        """
        pass

    def test_v1_alerts_stats_get(self) -> None:
        """Test case for v1_alerts_stats_get

        Get alert statistics
        """
        pass


if __name__ == '__main__':
    unittest.main()
