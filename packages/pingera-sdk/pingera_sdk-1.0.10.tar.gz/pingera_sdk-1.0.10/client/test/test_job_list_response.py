# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.job_list_response import JobListResponse

class TestJobListResponse(unittest.TestCase):
    """JobListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobListResponse:
        """Test JobListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobListResponse`
        """
        model = JobListResponse()
        if include_optional:
            return JobListResponse(
                pagination = {"page":1,"per_page":20,"total":100,"pages":5,"has_next":true,"has_prev":false},
                jobs = [
                    pingera.models.check_job.CheckJob(
                        check_id = 'chk123def456', 
                        id = 'job456ghi789', 
                        result = {"status":"ok","response_time":250,"check_server":{"region":"us-west-1"}}, 
                        started_at = '2024-01-15T14:26Z', 
                        status = 'completed', 
                        check_parameters = {"url":"https://api.example.com","timeout":10}, 
                        created_at = '2024-01-15T14:25Z', 
                        error_message = 'Unable to connect to target server', 
                        job_type = web_check, 
                        completed_at = '2024-01-15T14:30Z', )
                    ]
            )
        else:
            return JobListResponse(
        )
        """

    def testJobListResponse(self):
        """Test JobListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
