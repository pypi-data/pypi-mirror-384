# coding: utf-8

"""
    Platform API

    _OpenAPI specification for the **Platform API** of **Helix**, the nomination platform of ElecLink_  ---  Additional documentation available in the API's [GitHub repository](https://github.com/eleclink-helix/platform-api) 

    The version of the OpenAPI document: 1.2.0
    Contact: team.eleclink@eleclink.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data import ParticipantDashboardNettedNominationsData

class TestParticipantDashboardNettedNominationsData(unittest.TestCase):
    """ParticipantDashboardNettedNominationsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParticipantDashboardNettedNominationsData:
        """Test ParticipantDashboardNettedNominationsData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParticipantDashboardNettedNominationsData`
        """
        model = ParticipantDashboardNettedNominationsData()
        if include_optional:
            return ParticipantDashboardNettedNominationsData(
                mtu_size = 'MTU_15_MINS',
                mtus = [
                    helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus.ParticipantDashboardNettedNominationsDataMtus(
                        mtu = '2022-01-04T10:00:00.000Z', 
                        aggregated_nominations = [
                            helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus_aggregated_nominations.ParticipantDashboardNettedNominationsDataMtus_aggregatedNominations(
                                direction = 'GB_FR', 
                                value = 56, )
                            ], 
                        netted_nominations = helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus_netted_nominations.ParticipantDashboardNettedNominationsDataMtus_nettedNominations(
                            direction = 'GB_FR', 
                            flow = 56, ), )
                    ]
            )
        else:
            return ParticipantDashboardNettedNominationsData(
                mtu_size = 'MTU_15_MINS',
                mtus = [
                    helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus.ParticipantDashboardNettedNominationsDataMtus(
                        mtu = '2022-01-04T10:00:00.000Z', 
                        aggregated_nominations = [
                            helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus_aggregated_nominations.ParticipantDashboardNettedNominationsDataMtus_aggregatedNominations(
                                direction = 'GB_FR', 
                                value = 56, )
                            ], 
                        netted_nominations = helix_platform_api_public_client.models.participant_dashboard_netted_nominations_data_mtus_netted_nominations.ParticipantDashboardNettedNominationsDataMtus_nettedNominations(
                            direction = 'GB_FR', 
                            flow = 56, ), )
                    ],
        )
        """

    def testParticipantDashboardNettedNominationsData(self):
        """Test ParticipantDashboardNettedNominationsData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
