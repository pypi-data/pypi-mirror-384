#
# pyvider-cty/pyproject.toml
#

[project]
name = "pyvider-cty"
description = "Pyvider Cty Package - Core data types and serialization."
dynamic = ["version"]
requires-python = ">=3.11"
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "Tim Perkins", email = "code@tim.life" },
]
maintainers = [
    { name = "provide.io", email = "code@provide.io" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Typing :: Typed",
]
dependencies = [
    "attrs>=25.1.0",
    "msgpack>=1.1.0",
    "provide-foundation>=0.0.0",
]

[dependency-groups]
dev = [
    "provide-testkit[standard,advanced-testing,typecheck,build]",
]
docs = [
    "provide-testkit[docs]",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"} # Specifies that packages are under src

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}


################################################################################
# Pytest Configuration
################################################################################

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
asyncio_mode = "auto"
pythonpath = ["src", "."]
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "benchmark: mark test as a performance benchmark",
    "compat: mark test as a cross-language compatibility test",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:cannot collect test class.*:pytest.PytestCollectionWarning",
]
norecursedirs = [
    ".git",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "htmlcov",
    ".hypothesis",
]
# The log_file path will be set dynamically in conftest.py
addopts = "-ra -q --color=yes"

# ---------------------------------------------------------------------------- #
# ruff configuration
# ---------------------------------------------------------------------------- #

[tool.ruff]
line-length = 111
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "ANN", "B", "C90", "SIM", "PTH", "RUF"]
ignore = ["ANN401", "B008", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["pyvider", "tests"]
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# ---------------------------------------------------------------------------- #
# mypy configuration
# ---------------------------------------------------------------------------- #

[tool.mypy]
python_version = "3.11"
mypy_path = "src"
strict = true
pretty = true
show_error_codes = true
show_column_numbers = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = ["structlog.*", "google.*", "grpc.*", "pytest.*"]
ignore_missing_imports = true

# ---------------------------------------------------------------------------- #
# coverage configuration
# ---------------------------------------------------------------------------- #

[tool.coverage.run]
source = ["pyvider.cty"]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "def __repr__",
    "def __str__",
    "pass",
]
