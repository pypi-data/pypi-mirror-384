# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
from gams.core.gmo import _gmomcc

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


gmoequ_E = _gmomcc.gmoequ_E
gmoequ_G = _gmomcc.gmoequ_G
gmoequ_L = _gmomcc.gmoequ_L
gmoequ_N = _gmomcc.gmoequ_N
gmoequ_X = _gmomcc.gmoequ_X
gmoequ_C = _gmomcc.gmoequ_C
gmoequ_B = _gmomcc.gmoequ_B
gmovar_X = _gmomcc.gmovar_X
gmovar_B = _gmomcc.gmovar_B
gmovar_I = _gmomcc.gmovar_I
gmovar_S1 = _gmomcc.gmovar_S1
gmovar_S2 = _gmomcc.gmovar_S2
gmovar_SC = _gmomcc.gmovar_SC
gmovar_SI = _gmomcc.gmovar_SI
gmoorder_ERR = _gmomcc.gmoorder_ERR
gmoorder_L = _gmomcc.gmoorder_L
gmoorder_Q = _gmomcc.gmoorder_Q
gmoorder_NL = _gmomcc.gmoorder_NL
gmovar_X_F = _gmomcc.gmovar_X_F
gmovar_X_N = _gmomcc.gmovar_X_N
gmovar_X_P = _gmomcc.gmovar_X_P
gmoBstat_Lower = _gmomcc.gmoBstat_Lower
gmoBstat_Upper = _gmomcc.gmoBstat_Upper
gmoBstat_Basic = _gmomcc.gmoBstat_Basic
gmoBstat_Super = _gmomcc.gmoBstat_Super
gmoCstat_OK = _gmomcc.gmoCstat_OK
gmoCstat_NonOpt = _gmomcc.gmoCstat_NonOpt
gmoCstat_Infeas = _gmomcc.gmoCstat_Infeas
gmoCstat_UnBnd = _gmomcc.gmoCstat_UnBnd
gmoObjType_Var = _gmomcc.gmoObjType_Var
gmoObjType_Fun = _gmomcc.gmoObjType_Fun
gmoIFace_Processed = _gmomcc.gmoIFace_Processed
gmoIFace_Raw = _gmomcc.gmoIFace_Raw
gmoObj_Min = _gmomcc.gmoObj_Min
gmoObj_Max = _gmomcc.gmoObj_Max
gmoObj_None = _gmomcc.gmoObj_None
gmoSolveStat_Normal = _gmomcc.gmoSolveStat_Normal
gmoSolveStat_Iteration = _gmomcc.gmoSolveStat_Iteration
gmoSolveStat_Resource = _gmomcc.gmoSolveStat_Resource
gmoSolveStat_Solver = _gmomcc.gmoSolveStat_Solver
gmoSolveStat_EvalError = _gmomcc.gmoSolveStat_EvalError
gmoSolveStat_Capability = _gmomcc.gmoSolveStat_Capability
gmoSolveStat_License = _gmomcc.gmoSolveStat_License
gmoSolveStat_User = _gmomcc.gmoSolveStat_User
gmoSolveStat_SetupErr = _gmomcc.gmoSolveStat_SetupErr
gmoSolveStat_SolverErr = _gmomcc.gmoSolveStat_SolverErr
gmoSolveStat_InternalErr = _gmomcc.gmoSolveStat_InternalErr
gmoSolveStat_Skipped = _gmomcc.gmoSolveStat_Skipped
gmoSolveStat_SystemErr = _gmomcc.gmoSolveStat_SystemErr
gmoModelStat_OptimalGlobal = _gmomcc.gmoModelStat_OptimalGlobal
gmoModelStat_OptimalLocal = _gmomcc.gmoModelStat_OptimalLocal
gmoModelStat_Unbounded = _gmomcc.gmoModelStat_Unbounded
gmoModelStat_InfeasibleGlobal = _gmomcc.gmoModelStat_InfeasibleGlobal
gmoModelStat_InfeasibleLocal = _gmomcc.gmoModelStat_InfeasibleLocal
gmoModelStat_InfeasibleIntermed = _gmomcc.gmoModelStat_InfeasibleIntermed
gmoModelStat_Feasible = _gmomcc.gmoModelStat_Feasible
gmoModelStat_Integer = _gmomcc.gmoModelStat_Integer
gmoModelStat_NonIntegerIntermed = _gmomcc.gmoModelStat_NonIntegerIntermed
gmoModelStat_IntegerInfeasible = _gmomcc.gmoModelStat_IntegerInfeasible
gmoModelStat_LicenseError = _gmomcc.gmoModelStat_LicenseError
gmoModelStat_ErrorUnknown = _gmomcc.gmoModelStat_ErrorUnknown
gmoModelStat_ErrorNoSolution = _gmomcc.gmoModelStat_ErrorNoSolution
gmoModelStat_NoSolutionReturned = _gmomcc.gmoModelStat_NoSolutionReturned
gmoModelStat_SolvedUnique = _gmomcc.gmoModelStat_SolvedUnique
gmoModelStat_Solved = _gmomcc.gmoModelStat_Solved
gmoModelStat_SolvedSingular = _gmomcc.gmoModelStat_SolvedSingular
gmoModelStat_UnboundedNoSolution = _gmomcc.gmoModelStat_UnboundedNoSolution
gmoModelStat_InfeasibleNoSolution = _gmomcc.gmoModelStat_InfeasibleNoSolution
gmoHiterused = _gmomcc.gmoHiterused
gmoHresused = _gmomcc.gmoHresused
gmoHobjval = _gmomcc.gmoHobjval
gmoHdomused = _gmomcc.gmoHdomused
gmoHmarginals = _gmomcc.gmoHmarginals
gmoHetalg = _gmomcc.gmoHetalg
gmoTmipnod = _gmomcc.gmoTmipnod
gmoTninf = _gmomcc.gmoTninf
gmoTnopt = _gmomcc.gmoTnopt
gmoTmipbest = _gmomcc.gmoTmipbest
gmoTsinf = _gmomcc.gmoTsinf
gmoTrobj = _gmomcc.gmoTrobj
gmonumheader = _gmomcc.gmonumheader
gmonumtail = _gmomcc.gmonumtail
gmoProc_none = _gmomcc.gmoProc_none
gmoProc_lp = _gmomcc.gmoProc_lp
gmoProc_mip = _gmomcc.gmoProc_mip
gmoProc_rmip = _gmomcc.gmoProc_rmip
gmoProc_nlp = _gmomcc.gmoProc_nlp
gmoProc_mcp = _gmomcc.gmoProc_mcp
gmoProc_mpec = _gmomcc.gmoProc_mpec
gmoProc_rmpec = _gmomcc.gmoProc_rmpec
gmoProc_cns = _gmomcc.gmoProc_cns
gmoProc_dnlp = _gmomcc.gmoProc_dnlp
gmoProc_rminlp = _gmomcc.gmoProc_rminlp
gmoProc_minlp = _gmomcc.gmoProc_minlp
gmoProc_qcp = _gmomcc.gmoProc_qcp
gmoProc_miqcp = _gmomcc.gmoProc_miqcp
gmoProc_rmiqcp = _gmomcc.gmoProc_rmiqcp
gmoProc_emp = _gmomcc.gmoProc_emp
gmoProc_nrofmodeltypes = _gmomcc.gmoProc_nrofmodeltypes
gmoMinAgent = _gmomcc.gmoMinAgent
gmoMaxAgent = _gmomcc.gmoMaxAgent
gmoVIAgent = _gmomcc.gmoVIAgent
gmoEVALERRORMETHOD_KEEPGOING = _gmomcc.gmoEVALERRORMETHOD_KEEPGOING
gmoEVALERRORMETHOD_FASTSTOP = _gmomcc.gmoEVALERRORMETHOD_FASTSTOP
class intArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _gmomcc.intArray_swiginit(self, _gmomcc.new_intArray(nelements))
    __swig_destroy__ = _gmomcc.delete_intArray

    def __getitem__(self, index):
        return _gmomcc.intArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _gmomcc.intArray___setitem__(self, index, value)

    def cast(self):
        return _gmomcc.intArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _gmomcc.intArray_frompointer(t)

# Register intArray in _gmomcc:
_gmomcc.intArray_swigregister(intArray)
class doubleArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _gmomcc.doubleArray_swiginit(self, _gmomcc.new_doubleArray(nelements))
    __swig_destroy__ = _gmomcc.delete_doubleArray

    def __getitem__(self, index):
        return _gmomcc.doubleArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _gmomcc.doubleArray___setitem__(self, index, value)

    def cast(self):
        return _gmomcc.doubleArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _gmomcc.doubleArray_frompointer(t)

# Register doubleArray in _gmomcc:
_gmomcc.doubleArray_swigregister(doubleArray)

def new_intp():
    return _gmomcc.new_intp()

def copy_intp(value):
    return _gmomcc.copy_intp(value)

def delete_intp(obj):
    return _gmomcc.delete_intp(obj)

def intp_assign(obj, value):
    return _gmomcc.intp_assign(obj, value)

def intp_value(obj):
    return _gmomcc.intp_value(obj)

def new_doublep():
    return _gmomcc.new_doublep()

def copy_doublep(value):
    return _gmomcc.copy_doublep(value)

def delete_doublep(obj):
    return _gmomcc.delete_doublep(obj)

def doublep_assign(obj, value):
    return _gmomcc.doublep_assign(obj, value)

def doublep_value(obj):
    return _gmomcc.doublep_value(obj)

def new_gmoHandle_tp():
    return _gmomcc.new_gmoHandle_tp()

def copy_gmoHandle_tp(value):
    return _gmomcc.copy_gmoHandle_tp(value)

def delete_gmoHandle_tp(obj):
    return _gmomcc.delete_gmoHandle_tp(obj)

def gmoHandle_tp_assign(obj, value):
    return _gmomcc.gmoHandle_tp_assign(obj, value)

def gmoHandle_tp_value(obj):
    return _gmomcc.gmoHandle_tp_value(obj)

def gmoHandleToPtr(pgmo):
    r"""gmoHandleToPtr(pgmo) -> void *"""
    return _gmomcc.gmoHandleToPtr(pgmo)

def ptrTogmoHandle(vptr):
    r"""ptrTogmoHandle(vptr) -> gmoHandle_t"""
    return _gmomcc.ptrTogmoHandle(vptr)

def gmoGetReady(msgBufSize):
    r"""gmoGetReady(msgBufSize) -> int"""
    return _gmomcc.gmoGetReady(msgBufSize)

def gmoGetReadyD(dirName, msgBufSize):
    r"""gmoGetReadyD(dirName, msgBufSize) -> int"""
    return _gmomcc.gmoGetReadyD(dirName, msgBufSize)

def gmoGetReadyL(libName, msgBufSize):
    r"""gmoGetReadyL(libName, msgBufSize) -> int"""
    return _gmomcc.gmoGetReadyL(libName, msgBufSize)

def gmoCreate(pgmo, msgBufSize):
    r"""gmoCreate(pgmo, msgBufSize) -> int"""
    return _gmomcc.gmoCreate(pgmo, msgBufSize)

def gmoCreateD(pgmo, dirName, msgBufSize):
    r"""gmoCreateD(pgmo, dirName, msgBufSize) -> int"""
    return _gmomcc.gmoCreateD(pgmo, dirName, msgBufSize)

def gmoCreateDD(pgmo, dirName, msgBufSize):
    r"""gmoCreateDD(pgmo, dirName, msgBufSize) -> int"""
    return _gmomcc.gmoCreateDD(pgmo, dirName, msgBufSize)

def gmoCreateL(pgmo, libName, msgBufSize):
    r"""gmoCreateL(pgmo, libName, msgBufSize) -> int"""
    return _gmomcc.gmoCreateL(pgmo, libName, msgBufSize)

def gmoFree(pgmo):
    r"""gmoFree(pgmo) -> int"""
    return _gmomcc.gmoFree(pgmo)

def gmoLibraryLoaded():
    r"""gmoLibraryLoaded() -> int"""
    return _gmomcc.gmoLibraryLoaded()

def gmoLibraryUnload():
    r"""gmoLibraryUnload() -> int"""
    return _gmomcc.gmoLibraryUnload()

def gmoGetScreenIndicator():
    r"""gmoGetScreenIndicator() -> int"""
    return _gmomcc.gmoGetScreenIndicator()

def gmoSetScreenIndicator(scrind):
    r"""gmoSetScreenIndicator(scrind)"""
    return _gmomcc.gmoSetScreenIndicator(scrind)

def gmoGetExceptionIndicator():
    r"""gmoGetExceptionIndicator() -> int"""
    return _gmomcc.gmoGetExceptionIndicator()

def gmoSetExceptionIndicator(excind):
    r"""gmoSetExceptionIndicator(excind)"""
    return _gmomcc.gmoSetExceptionIndicator(excind)

def gmoGetExitIndicator():
    r"""gmoGetExitIndicator() -> int"""
    return _gmomcc.gmoGetExitIndicator()

def gmoSetExitIndicator(extind):
    r"""gmoSetExitIndicator(extind)"""
    return _gmomcc.gmoSetExitIndicator(extind)

def gmoGetErrorCallback():
    r"""gmoGetErrorCallback() -> gmoErrorCallback_t"""
    return _gmomcc.gmoGetErrorCallback()

def gmoSetErrorCallback(func):
    r"""gmoSetErrorCallback(func)"""
    return _gmomcc.gmoSetErrorCallback(func)

def gmoGetAPIErrorCount():
    r"""gmoGetAPIErrorCount() -> int"""
    return _gmomcc.gmoGetAPIErrorCount()

def gmoSetAPIErrorCount(ecnt):
    r"""gmoSetAPIErrorCount(ecnt)"""
    return _gmomcc.gmoSetAPIErrorCount(ecnt)

def gmoErrorHandling(msg):
    r"""gmoErrorHandling(msg)"""
    return _gmomcc.gmoErrorHandling(msg)

def gmoInitData(pgmo, rows, cols, codelen):
    r"""gmoInitData(pgmo, rows, cols, codelen) -> int"""
    return _gmomcc.gmoInitData(pgmo, rows, cols, codelen)

def gmoAddRow(pgmo, etyp, ematch, eslack, escale, erhs, emarg, ebas, enz, colidx, jacval, nlflag):
    r"""gmoAddRow(pgmo, etyp, ematch, eslack, escale, erhs, emarg, ebas, enz, colidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoAddRow(pgmo, etyp, ematch, eslack, escale, erhs, emarg, ebas, enz, colidx, jacval, nlflag)

def gmoAddCol(pgmo, vtyp, vlo, vl, vup, vmarg, vbas, vsos, vprior, vscale, vnz, rowidx, jacval, nlflag):
    r"""gmoAddCol(pgmo, vtyp, vlo, vl, vup, vmarg, vbas, vsos, vprior, vscale, vnz, rowidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoAddCol(pgmo, vtyp, vlo, vl, vup, vmarg, vbas, vsos, vprior, vscale, vnz, rowidx, jacval, nlflag)

def gmoCompleteData(pgmo):
    r"""gmoCompleteData(pgmo) -> int"""
    return _gmomcc.gmoCompleteData(pgmo)

def gmoFillMatches(pgmo):
    r"""gmoFillMatches(pgmo) -> int"""
    return _gmomcc.gmoFillMatches(pgmo)

def gmoLoadDataLegacy(pgmo):
    r"""gmoLoadDataLegacy(pgmo) -> int"""
    return _gmomcc.gmoLoadDataLegacy(pgmo)

def gmoLoadDataLegacyEx(pgmo, fillMatches):
    r"""gmoLoadDataLegacyEx(pgmo, fillMatches) -> int"""
    return _gmomcc.gmoLoadDataLegacyEx(pgmo, fillMatches)

def gmoRegisterEnvironment(pgmo, gevptr):
    r"""gmoRegisterEnvironment(pgmo, gevptr) -> int"""
    return _gmomcc.gmoRegisterEnvironment(pgmo, gevptr)

def gmoEnvironment(pgmo):
    r"""gmoEnvironment(pgmo) -> void *"""
    return _gmomcc.gmoEnvironment(pgmo)

def gmoViewStore(pgmo):
    r"""gmoViewStore(pgmo) -> void *"""
    return _gmomcc.gmoViewStore(pgmo)

def gmoViewRestore(pgmo, viewptr):
    r"""gmoViewRestore(pgmo, viewptr)"""
    return _gmomcc.gmoViewRestore(pgmo, viewptr)

def gmoViewDump(pgmo):
    r"""gmoViewDump(pgmo)"""
    return _gmomcc.gmoViewDump(pgmo)

def gmoGetiSolver(pgmo, mi):
    r"""gmoGetiSolver(pgmo, mi) -> int"""
    return _gmomcc.gmoGetiSolver(pgmo, mi)

def gmoGetjSolver(pgmo, mj):
    r"""gmoGetjSolver(pgmo, mj) -> int"""
    return _gmomcc.gmoGetjSolver(pgmo, mj)

def gmoGetiSolverQuiet(pgmo, mi):
    r"""gmoGetiSolverQuiet(pgmo, mi) -> int"""
    return _gmomcc.gmoGetiSolverQuiet(pgmo, mi)

def gmoGetjSolverQuiet(pgmo, mj):
    r"""gmoGetjSolverQuiet(pgmo, mj) -> int"""
    return _gmomcc.gmoGetjSolverQuiet(pgmo, mj)

def gmoGetiModel(pgmo, si):
    r"""gmoGetiModel(pgmo, si) -> int"""
    return _gmomcc.gmoGetiModel(pgmo, si)

def gmoGetjModel(pgmo, sj):
    r"""gmoGetjModel(pgmo, sj) -> int"""
    return _gmomcc.gmoGetjModel(pgmo, sj)

def gmoSetEquPermutation(pgmo, permut):
    r"""gmoSetEquPermutation(pgmo, permut) -> int"""
    return _gmomcc.gmoSetEquPermutation(pgmo, permut)

def gmoSetRvEquPermutation(pgmo, rvpermut, len):
    r"""gmoSetRvEquPermutation(pgmo, rvpermut, len) -> int"""
    return _gmomcc.gmoSetRvEquPermutation(pgmo, rvpermut, len)

def gmoSetVarPermutation(pgmo, permut):
    r"""gmoSetVarPermutation(pgmo, permut) -> int"""
    return _gmomcc.gmoSetVarPermutation(pgmo, permut)

def gmoSetRvVarPermutation(pgmo, rvpermut, len):
    r"""gmoSetRvVarPermutation(pgmo, rvpermut, len) -> int"""
    return _gmomcc.gmoSetRvVarPermutation(pgmo, rvpermut, len)

def gmoSetNRowPerm(pgmo):
    r"""gmoSetNRowPerm(pgmo) -> int"""
    return _gmomcc.gmoSetNRowPerm(pgmo)

def gmoGetVarTypeCnt(pgmo, vtyp):
    r"""gmoGetVarTypeCnt(pgmo, vtyp) -> int"""
    return _gmomcc.gmoGetVarTypeCnt(pgmo, vtyp)

def gmoGetEquTypeCnt(pgmo, etyp):
    r"""gmoGetEquTypeCnt(pgmo, etyp) -> int"""
    return _gmomcc.gmoGetEquTypeCnt(pgmo, etyp)

def gmoGetObjStat(pgmo):
    r"""gmoGetObjStat(pgmo) -> int"""
    return _gmomcc.gmoGetObjStat(pgmo)

def gmoGetRowStat(pgmo, si):
    r"""gmoGetRowStat(pgmo, si) -> int"""
    return _gmomcc.gmoGetRowStat(pgmo, si)

def gmoGetRowStatEx(pgmo, si):
    r"""gmoGetRowStatEx(pgmo, si) -> int"""
    return _gmomcc.gmoGetRowStatEx(pgmo, si)

def gmoGetColStat(pgmo, sj):
    r"""gmoGetColStat(pgmo, sj) -> int"""
    return _gmomcc.gmoGetColStat(pgmo, sj)

def gmoGetRowQNZOne(pgmo, si):
    r"""gmoGetRowQNZOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetRowQNZOne(pgmo, si)

def gmoGetRowQNZOne64(pgmo, si):
    r"""gmoGetRowQNZOne64(pgmo, si) -> INT64"""
    return _gmomcc.gmoGetRowQNZOne64(pgmo, si)

def gmoGetRowQDiagNZOne(pgmo, si):
    r"""gmoGetRowQDiagNZOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetRowQDiagNZOne(pgmo, si)

def gmoGetRowCVecNZOne(pgmo, si):
    r"""gmoGetRowCVecNZOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetRowCVecNZOne(pgmo, si)

def gmoGetSosCounts(pgmo):
    r"""gmoGetSosCounts(pgmo)"""
    return _gmomcc.gmoGetSosCounts(pgmo)

def gmoGetXLibCounts(pgmo, orgcolind):
    r"""gmoGetXLibCounts(pgmo, orgcolind)"""
    return _gmomcc.gmoGetXLibCounts(pgmo, orgcolind)

def gmoGetActiveModelType(pgmo, checkv):
    r"""gmoGetActiveModelType(pgmo, checkv) -> int"""
    return _gmomcc.gmoGetActiveModelType(pgmo, checkv)

def gmoGetMatrixRow(pgmo, rowstart, colidx, jacval, nlflag):
    r"""gmoGetMatrixRow(pgmo, rowstart, colidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetMatrixRow(pgmo, rowstart, colidx, jacval, nlflag)

def gmoGetMatrixCol(pgmo, colstart, rowidx, jacval, nlflag):
    r"""gmoGetMatrixCol(pgmo, colstart, rowidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetMatrixCol(pgmo, colstart, rowidx, jacval, nlflag)

def gmoGetMatrixCplex(pgmo, colstart, collength, rowidx, jacval):
    r"""gmoGetMatrixCplex(pgmo, colstart, collength, rowidx, jacval) -> int"""
    return _gmomcc.gmoGetMatrixCplex(pgmo, colstart, collength, rowidx, jacval)

def gmoUpdateJac(pgmo, mi, mj, v):
    r"""gmoUpdateJac(pgmo, mi, mj, v) -> int"""
    return _gmomcc.gmoUpdateJac(pgmo, mi, mj, v)

def gmoGetObjName(pgmo):
    r"""gmoGetObjName(pgmo) -> char *"""
    return _gmomcc.gmoGetObjName(pgmo)

def gmoGetObjNameCustom(pgmo, suffix):
    r"""gmoGetObjNameCustom(pgmo, suffix) -> char *"""
    return _gmomcc.gmoGetObjNameCustom(pgmo, suffix)

def gmoGetObjVector(pgmo, jacval, nlflag):
    r"""gmoGetObjVector(pgmo, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetObjVector(pgmo, jacval, nlflag)

def gmoGetObjSparse(pgmo, colidx, jacval, nlflag):
    r"""gmoGetObjSparse(pgmo, colidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetObjSparse(pgmo, colidx, jacval, nlflag)

def gmoGetObjSparseEx(pgmo, colidx, gradval, nlflag):
    r"""gmoGetObjSparseEx(pgmo, colidx, gradval, nlflag) -> int"""
    return _gmomcc.gmoGetObjSparseEx(pgmo, colidx, gradval, nlflag)

def gmoGetObjQMat(pgmo, varidx1, varidx2, coefs):
    r"""gmoGetObjQMat(pgmo, varidx1, varidx2, coefs) -> int"""
    return _gmomcc.gmoGetObjQMat(pgmo, varidx1, varidx2, coefs)

def gmoGetObjQ(pgmo, varidx1, varidx2, coefs):
    r"""gmoGetObjQ(pgmo, varidx1, varidx2, coefs) -> int"""
    return _gmomcc.gmoGetObjQ(pgmo, varidx1, varidx2, coefs)

def gmoGetObjCVec(pgmo, varidx, coefs):
    r"""gmoGetObjCVec(pgmo, varidx, coefs) -> int"""
    return _gmomcc.gmoGetObjCVec(pgmo, varidx, coefs)

def gmoGetObjL(pgmo):
    r"""gmoGetObjL(pgmo) -> double"""
    return _gmomcc.gmoGetObjL(pgmo)

def gmoGetEquL(pgmo, e):
    r"""gmoGetEquL(pgmo, e) -> int"""
    return _gmomcc.gmoGetEquL(pgmo, e)

def gmoGetEquLOne(pgmo, si):
    r"""gmoGetEquLOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetEquLOne(pgmo, si)

def gmoSetEquL(pgmo, el):
    r"""gmoSetEquL(pgmo, el) -> int"""
    return _gmomcc.gmoSetEquL(pgmo, el)

def gmoSetEquLOne(pgmo, si, el):
    r"""gmoSetEquLOne(pgmo, si, el)"""
    return _gmomcc.gmoSetEquLOne(pgmo, si, el)

def gmoGetEquM(pgmo, pi):
    r"""gmoGetEquM(pgmo, pi) -> int"""
    return _gmomcc.gmoGetEquM(pgmo, pi)

def gmoGetEquMOne(pgmo, si):
    r"""gmoGetEquMOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetEquMOne(pgmo, si)

def gmoSetEquM(pgmo, emarg):
    r"""gmoSetEquM(pgmo, emarg) -> int"""
    return _gmomcc.gmoSetEquM(pgmo, emarg)

def gmoGetEquNameOne(pgmo, si):
    r"""gmoGetEquNameOne(pgmo, si) -> char *"""
    return _gmomcc.gmoGetEquNameOne(pgmo, si)

def gmoGetEquNameCustomOne(pgmo, si, suffix):
    r"""gmoGetEquNameCustomOne(pgmo, si, suffix) -> char *"""
    return _gmomcc.gmoGetEquNameCustomOne(pgmo, si, suffix)

def gmoGetRhs(pgmo, mdblvec):
    r"""gmoGetRhs(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoGetRhs(pgmo, mdblvec)

def gmoGetRhsOne(pgmo, si):
    r"""gmoGetRhsOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetRhsOne(pgmo, si)

def gmoGetRhsOneEx(pgmo, si):
    r"""gmoGetRhsOneEx(pgmo, si) -> double"""
    return _gmomcc.gmoGetRhsOneEx(pgmo, si)

def gmoSetAltRHS(pgmo, mdblvec):
    r"""gmoSetAltRHS(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoSetAltRHS(pgmo, mdblvec)

def gmoSetAltRHSOne(pgmo, si, erhs):
    r"""gmoSetAltRHSOne(pgmo, si, erhs)"""
    return _gmomcc.gmoSetAltRHSOne(pgmo, si, erhs)

def gmoGetEquSlack(pgmo, mdblvec):
    r"""gmoGetEquSlack(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoGetEquSlack(pgmo, mdblvec)

def gmoGetEquSlackOne(pgmo, si):
    r"""gmoGetEquSlackOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetEquSlackOne(pgmo, si)

def gmoSetEquSlack(pgmo, mdblvec):
    r"""gmoSetEquSlack(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoSetEquSlack(pgmo, mdblvec)

def gmoGetEquType(pgmo, mintvec):
    r"""gmoGetEquType(pgmo, mintvec) -> int"""
    return _gmomcc.gmoGetEquType(pgmo, mintvec)

def gmoGetEquTypeOne(pgmo, si):
    r"""gmoGetEquTypeOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquTypeOne(pgmo, si)

def gmoGetEquStat(pgmo, mintvec):
    r"""gmoGetEquStat(pgmo, mintvec)"""
    return _gmomcc.gmoGetEquStat(pgmo, mintvec)

def gmoGetEquStatOne(pgmo, si):
    r"""gmoGetEquStatOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquStatOne(pgmo, si)

def gmoSetEquStat(pgmo, mintvec):
    r"""gmoSetEquStat(pgmo, mintvec)"""
    return _gmomcc.gmoSetEquStat(pgmo, mintvec)

def gmoGetEquCStat(pgmo, mintvec):
    r"""gmoGetEquCStat(pgmo, mintvec)"""
    return _gmomcc.gmoGetEquCStat(pgmo, mintvec)

def gmoGetEquCStatOne(pgmo, si):
    r"""gmoGetEquCStatOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquCStatOne(pgmo, si)

def gmoSetEquCStat(pgmo, mintvec):
    r"""gmoSetEquCStat(pgmo, mintvec)"""
    return _gmomcc.gmoSetEquCStat(pgmo, mintvec)

def gmoGetEquMatch(pgmo, mintvec):
    r"""gmoGetEquMatch(pgmo, mintvec) -> int"""
    return _gmomcc.gmoGetEquMatch(pgmo, mintvec)

def gmoGetEquMatchOne(pgmo, si):
    r"""gmoGetEquMatchOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquMatchOne(pgmo, si)

def gmoGetEquScale(pgmo, mdblvec):
    r"""gmoGetEquScale(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoGetEquScale(pgmo, mdblvec)

def gmoGetEquScaleOne(pgmo, si):
    r"""gmoGetEquScaleOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetEquScaleOne(pgmo, si)

def gmoGetEquStage(pgmo, mdblvec):
    r"""gmoGetEquStage(pgmo, mdblvec) -> int"""
    return _gmomcc.gmoGetEquStage(pgmo, mdblvec)

def gmoGetEquStageOne(pgmo, si):
    r"""gmoGetEquStageOne(pgmo, si) -> double"""
    return _gmomcc.gmoGetEquStageOne(pgmo, si)

def gmoGetEquOrderOne(pgmo, si):
    r"""gmoGetEquOrderOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquOrderOne(pgmo, si)

def gmoGetRowSparse(pgmo, si, colidx, jacval, nlflag):
    r"""gmoGetRowSparse(pgmo, si, colidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetRowSparse(pgmo, si, colidx, jacval, nlflag)

def gmoGetRowSparseEx(pgmo, si, colidx, jacval, nlflag):
    r"""gmoGetRowSparseEx(pgmo, si, colidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetRowSparseEx(pgmo, si, colidx, jacval, nlflag)

def gmoGetRowJacInfoOne(pgmo, si, jacptr):
    r"""gmoGetRowJacInfoOne(pgmo, si, jacptr)"""
    return _gmomcc.gmoGetRowJacInfoOne(pgmo, si, jacptr)

def gmoGetRowQMat(pgmo, si, varidx1, varidx2, coefs):
    r"""gmoGetRowQMat(pgmo, si, varidx1, varidx2, coefs) -> int"""
    return _gmomcc.gmoGetRowQMat(pgmo, si, varidx1, varidx2, coefs)

def gmoGetRowQ(pgmo, si, varidx1, varidx2, coefs):
    r"""gmoGetRowQ(pgmo, si, varidx1, varidx2, coefs) -> int"""
    return _gmomcc.gmoGetRowQ(pgmo, si, varidx1, varidx2, coefs)

def gmoGetRowCVec(pgmo, si, varidx, coefs):
    r"""gmoGetRowCVec(pgmo, si, varidx, coefs) -> int"""
    return _gmomcc.gmoGetRowCVec(pgmo, si, varidx, coefs)

def gmoGetRowQConst(pgmo, si):
    r"""gmoGetRowQConst(pgmo, si) -> double"""
    return _gmomcc.gmoGetRowQConst(pgmo, si)

def gmoGetEquIntDotOpt(pgmo, optptr, dotopt, optvals):
    r"""gmoGetEquIntDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
    return _gmomcc.gmoGetEquIntDotOpt(pgmo, optptr, dotopt, optvals)

def gmoGetEquDblDotOpt(pgmo, optptr, dotopt, optvals):
    r"""gmoGetEquDblDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
    return _gmomcc.gmoGetEquDblDotOpt(pgmo, optptr, dotopt, optvals)

def gmoGetVarL(pgmo, x):
    r"""gmoGetVarL(pgmo, x) -> int"""
    return _gmomcc.gmoGetVarL(pgmo, x)

def gmoGetVarLOne(pgmo, sj):
    r"""gmoGetVarLOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarLOne(pgmo, sj)

def gmoSetVarL(pgmo, x):
    r"""gmoSetVarL(pgmo, x) -> int"""
    return _gmomcc.gmoSetVarL(pgmo, x)

def gmoSetVarLOne(pgmo, sj, vl):
    r"""gmoSetVarLOne(pgmo, sj, vl)"""
    return _gmomcc.gmoSetVarLOne(pgmo, sj, vl)

def gmoGetVarM(pgmo, dj):
    r"""gmoGetVarM(pgmo, dj) -> int"""
    return _gmomcc.gmoGetVarM(pgmo, dj)

def gmoGetVarMOne(pgmo, sj):
    r"""gmoGetVarMOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarMOne(pgmo, sj)

def gmoSetVarM(pgmo, dj):
    r"""gmoSetVarM(pgmo, dj) -> int"""
    return _gmomcc.gmoSetVarM(pgmo, dj)

def gmoSetVarMOne(pgmo, sj, vmarg):
    r"""gmoSetVarMOne(pgmo, sj, vmarg)"""
    return _gmomcc.gmoSetVarMOne(pgmo, sj, vmarg)

def gmoGetVarNameOne(pgmo, sj):
    r"""gmoGetVarNameOne(pgmo, sj) -> char *"""
    return _gmomcc.gmoGetVarNameOne(pgmo, sj)

def gmoGetVarNameCustomOne(pgmo, sj, suffix):
    r"""gmoGetVarNameCustomOne(pgmo, sj, suffix) -> char *"""
    return _gmomcc.gmoGetVarNameCustomOne(pgmo, sj, suffix)

def gmoGetVarLower(pgmo, lovec):
    r"""gmoGetVarLower(pgmo, lovec) -> int"""
    return _gmomcc.gmoGetVarLower(pgmo, lovec)

def gmoGetVarLowerOne(pgmo, sj):
    r"""gmoGetVarLowerOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarLowerOne(pgmo, sj)

def gmoGetVarUpper(pgmo, upvec):
    r"""gmoGetVarUpper(pgmo, upvec) -> int"""
    return _gmomcc.gmoGetVarUpper(pgmo, upvec)

def gmoGetVarUpperOne(pgmo, sj):
    r"""gmoGetVarUpperOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarUpperOne(pgmo, sj)

def gmoSetAltVarBounds(pgmo, lovec, upvec):
    r"""gmoSetAltVarBounds(pgmo, lovec, upvec) -> int"""
    return _gmomcc.gmoSetAltVarBounds(pgmo, lovec, upvec)

def gmoSetAltVarLowerOne(pgmo, sj, vlo):
    r"""gmoSetAltVarLowerOne(pgmo, sj, vlo)"""
    return _gmomcc.gmoSetAltVarLowerOne(pgmo, sj, vlo)

def gmoSetAltVarUpperOne(pgmo, sj, vup):
    r"""gmoSetAltVarUpperOne(pgmo, sj, vup)"""
    return _gmomcc.gmoSetAltVarUpperOne(pgmo, sj, vup)

def gmoGetVarType(pgmo, nintvec):
    r"""gmoGetVarType(pgmo, nintvec) -> int"""
    return _gmomcc.gmoGetVarType(pgmo, nintvec)

def gmoGetVarTypeOne(pgmo, sj):
    r"""gmoGetVarTypeOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarTypeOne(pgmo, sj)

def gmoSetAltVarType(pgmo, nintvec):
    r"""gmoSetAltVarType(pgmo, nintvec) -> int"""
    return _gmomcc.gmoSetAltVarType(pgmo, nintvec)

def gmoSetAltVarTypeOne(pgmo, sj, vtyp):
    r"""gmoSetAltVarTypeOne(pgmo, sj, vtyp)"""
    return _gmomcc.gmoSetAltVarTypeOne(pgmo, sj, vtyp)

def gmoGetVarStat(pgmo, nintvec):
    r"""gmoGetVarStat(pgmo, nintvec)"""
    return _gmomcc.gmoGetVarStat(pgmo, nintvec)

def gmoGetVarStatOne(pgmo, sj):
    r"""gmoGetVarStatOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarStatOne(pgmo, sj)

def gmoSetVarStat(pgmo, nintvec):
    r"""gmoSetVarStat(pgmo, nintvec)"""
    return _gmomcc.gmoSetVarStat(pgmo, nintvec)

def gmoSetVarStatOne(pgmo, sj, vstat):
    r"""gmoSetVarStatOne(pgmo, sj, vstat)"""
    return _gmomcc.gmoSetVarStatOne(pgmo, sj, vstat)

def gmoGetVarCStat(pgmo, nintvec):
    r"""gmoGetVarCStat(pgmo, nintvec)"""
    return _gmomcc.gmoGetVarCStat(pgmo, nintvec)

def gmoGetVarCStatOne(pgmo, sj):
    r"""gmoGetVarCStatOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarCStatOne(pgmo, sj)

def gmoSetVarCStat(pgmo, nintvec):
    r"""gmoSetVarCStat(pgmo, nintvec)"""
    return _gmomcc.gmoSetVarCStat(pgmo, nintvec)

def gmoGetVarMatch(pgmo, nintvec):
    r"""gmoGetVarMatch(pgmo, nintvec) -> int"""
    return _gmomcc.gmoGetVarMatch(pgmo, nintvec)

def gmoGetVarMatchOne(pgmo, sj):
    r"""gmoGetVarMatchOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarMatchOne(pgmo, sj)

def gmoGetVarPrior(pgmo, ndblvec):
    r"""gmoGetVarPrior(pgmo, ndblvec) -> int"""
    return _gmomcc.gmoGetVarPrior(pgmo, ndblvec)

def gmoGetVarPriorOne(pgmo, sj):
    r"""gmoGetVarPriorOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarPriorOne(pgmo, sj)

def gmoGetVarScale(pgmo, ndblvec):
    r"""gmoGetVarScale(pgmo, ndblvec) -> int"""
    return _gmomcc.gmoGetVarScale(pgmo, ndblvec)

def gmoGetVarScaleOne(pgmo, sj):
    r"""gmoGetVarScaleOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarScaleOne(pgmo, sj)

def gmoGetVarStage(pgmo, ndblvec):
    r"""gmoGetVarStage(pgmo, ndblvec) -> int"""
    return _gmomcc.gmoGetVarStage(pgmo, ndblvec)

def gmoGetVarStageOne(pgmo, sj):
    r"""gmoGetVarStageOne(pgmo, sj) -> double"""
    return _gmomcc.gmoGetVarStageOne(pgmo, sj)

def gmoGetSosConstraints(pgmo, sostype, sosbeg, sosind, soswt):
    r"""gmoGetSosConstraints(pgmo, sostype, sosbeg, sosind, soswt) -> int"""
    return _gmomcc.gmoGetSosConstraints(pgmo, sostype, sosbeg, sosind, soswt)

def gmoGetVarSosSetOne(pgmo, sj):
    r"""gmoGetVarSosSetOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarSosSetOne(pgmo, sj)

def gmoGetColSparse(pgmo, sj, rowidx, jacval, nlflag):
    r"""gmoGetColSparse(pgmo, sj, rowidx, jacval, nlflag) -> int"""
    return _gmomcc.gmoGetColSparse(pgmo, sj, rowidx, jacval, nlflag)

def gmoGetColJacInfoOne(pgmo, sj, jacptr):
    r"""gmoGetColJacInfoOne(pgmo, sj, jacptr)"""
    return _gmomcc.gmoGetColJacInfoOne(pgmo, sj, jacptr)

def gmoGetVarIntDotOpt(pgmo, optptr, dotopt, optvals):
    r"""gmoGetVarIntDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
    return _gmomcc.gmoGetVarIntDotOpt(pgmo, optptr, dotopt, optvals)

def gmoGetVarDblDotOpt(pgmo, optptr, dotopt, optvals):
    r"""gmoGetVarDblDotOpt(pgmo, optptr, dotopt, optvals) -> int"""
    return _gmomcc.gmoGetVarDblDotOpt(pgmo, optptr, dotopt, optvals)

def gmoEvalErrorMsg(pgmo, domsg):
    r"""gmoEvalErrorMsg(pgmo, domsg)"""
    return _gmomcc.gmoEvalErrorMsg(pgmo, domsg)

def gmoEvalErrorMsg_MT(pgmo, domsg, tidx):
    r"""gmoEvalErrorMsg_MT(pgmo, domsg, tidx)"""
    return _gmomcc.gmoEvalErrorMsg_MT(pgmo, domsg, tidx)

def gmoEvalErrorMaskLevel(pgmo, MaskLevel):
    r"""gmoEvalErrorMaskLevel(pgmo, MaskLevel)"""
    return _gmomcc.gmoEvalErrorMaskLevel(pgmo, MaskLevel)

def gmoEvalErrorMaskLevel_MT(pgmo, MaskLevel, tidx):
    r"""gmoEvalErrorMaskLevel_MT(pgmo, MaskLevel, tidx)"""
    return _gmomcc.gmoEvalErrorMaskLevel_MT(pgmo, MaskLevel, tidx)

def gmoEvalNewPoint(pgmo, x):
    r"""gmoEvalNewPoint(pgmo, x) -> int"""
    return _gmomcc.gmoEvalNewPoint(pgmo, x)

def gmoSetExtFuncs(pgmo, extfunmgr):
    r"""gmoSetExtFuncs(pgmo, extfunmgr)"""
    return _gmomcc.gmoSetExtFuncs(pgmo, extfunmgr)

def gmoGetQMakerStats(pgmo, winnerCount3Pass_out, winnerCountDblFwd_out):
    r"""gmoGetQMakerStats(pgmo, winnerCount3Pass_out, winnerCountDblFwd_out) -> int"""
    return _gmomcc.gmoGetQMakerStats(pgmo, winnerCount3Pass_out, winnerCountDblFwd_out)

def gmoEvalFunc(pgmo, si, x):
    r"""gmoEvalFunc(pgmo, si, x) -> int"""
    return _gmomcc.gmoEvalFunc(pgmo, si, x)

def gmoEvalFunc_MT(pgmo, si, x, tidx):
    r"""gmoEvalFunc_MT(pgmo, si, x, tidx) -> int"""
    return _gmomcc.gmoEvalFunc_MT(pgmo, si, x, tidx)

def gmoEvalFuncInt(pgmo, si):
    r"""gmoEvalFuncInt(pgmo, si) -> int"""
    return _gmomcc.gmoEvalFuncInt(pgmo, si)

def gmoEvalFuncInt_MT(pgmo, si, tidx):
    r"""gmoEvalFuncInt_MT(pgmo, si, tidx) -> int"""
    return _gmomcc.gmoEvalFuncInt_MT(pgmo, si, tidx)

def gmoEvalFuncNL(pgmo, si, x):
    r"""gmoEvalFuncNL(pgmo, si, x) -> int"""
    return _gmomcc.gmoEvalFuncNL(pgmo, si, x)

def gmoEvalFuncNL_MT(pgmo, si, x, tidx):
    r"""gmoEvalFuncNL_MT(pgmo, si, x, tidx) -> int"""
    return _gmomcc.gmoEvalFuncNL_MT(pgmo, si, x, tidx)

def gmoEvalFuncObj(pgmo, x):
    r"""gmoEvalFuncObj(pgmo, x) -> int"""
    return _gmomcc.gmoEvalFuncObj(pgmo, x)

def gmoEvalFuncNLObj(pgmo, x):
    r"""gmoEvalFuncNLObj(pgmo, x) -> int"""
    return _gmomcc.gmoEvalFuncNLObj(pgmo, x)

def gmoEvalFuncInterval(pgmo, si, xmin, xmax):
    r"""gmoEvalFuncInterval(pgmo, si, xmin, xmax) -> int"""
    return _gmomcc.gmoEvalFuncInterval(pgmo, si, xmin, xmax)

def gmoEvalFuncInterval_MT(pgmo, si, xmin, xmax, tidx):
    r"""gmoEvalFuncInterval_MT(pgmo, si, xmin, xmax, tidx) -> int"""
    return _gmomcc.gmoEvalFuncInterval_MT(pgmo, si, xmin, xmax, tidx)

def gmoEvalGrad(pgmo, si, x, g):
    r"""gmoEvalGrad(pgmo, si, x, g) -> int"""
    return _gmomcc.gmoEvalGrad(pgmo, si, x, g)

def gmoEvalGrad_MT(pgmo, si, x, g, tidx):
    r"""gmoEvalGrad_MT(pgmo, si, x, g, tidx) -> int"""
    return _gmomcc.gmoEvalGrad_MT(pgmo, si, x, g, tidx)

def gmoEvalGradNL(pgmo, si, x, g):
    r"""gmoEvalGradNL(pgmo, si, x, g) -> int"""
    return _gmomcc.gmoEvalGradNL(pgmo, si, x, g)

def gmoEvalGradNL_MT(pgmo, si, x, g, tidx):
    r"""gmoEvalGradNL_MT(pgmo, si, x, g, tidx) -> int"""
    return _gmomcc.gmoEvalGradNL_MT(pgmo, si, x, g, tidx)

def gmoEvalGradObj(pgmo, x, g):
    r"""gmoEvalGradObj(pgmo, x, g) -> int"""
    return _gmomcc.gmoEvalGradObj(pgmo, x, g)

def gmoEvalGradNLObj(pgmo, x, g):
    r"""gmoEvalGradNLObj(pgmo, x, g) -> int"""
    return _gmomcc.gmoEvalGradNLObj(pgmo, x, g)

def gmoEvalGradInterval(pgmo, si, xmin, xmax, gmin, gmax):
    r"""gmoEvalGradInterval(pgmo, si, xmin, xmax, gmin, gmax) -> int"""
    return _gmomcc.gmoEvalGradInterval(pgmo, si, xmin, xmax, gmin, gmax)

def gmoEvalGradInterval_MT(pgmo, si, xmin, xmax, gmin, gmax, tidx):
    r"""gmoEvalGradInterval_MT(pgmo, si, xmin, xmax, gmin, gmax, tidx) -> int"""
    return _gmomcc.gmoEvalGradInterval_MT(pgmo, si, xmin, xmax, gmin, gmax, tidx)

def gmoEvalGradNLUpdate(pgmo, rhsdelta, dojacupd):
    r"""gmoEvalGradNLUpdate(pgmo, rhsdelta, dojacupd) -> int"""
    return _gmomcc.gmoEvalGradNLUpdate(pgmo, rhsdelta, dojacupd)

def gmoGetJacUpdate(pgmo, rowidx, colidx, jacval, INOUT):
    r"""gmoGetJacUpdate(pgmo, rowidx, colidx, jacval, INOUT) -> int"""
    return _gmomcc.gmoGetJacUpdate(pgmo, rowidx, colidx, jacval, INOUT)

def gmoHessLoad(pgmo, maxJacMult, arg3, arg4):
    r"""gmoHessLoad(pgmo, maxJacMult, arg3, arg4) -> int"""
    return _gmomcc.gmoHessLoad(pgmo, maxJacMult, arg3, arg4)

def gmoHessUnload(pgmo):
    r"""gmoHessUnload(pgmo) -> int"""
    return _gmomcc.gmoHessUnload(pgmo)

def gmoHessDim(pgmo, si):
    r"""gmoHessDim(pgmo, si) -> int"""
    return _gmomcc.gmoHessDim(pgmo, si)

def gmoHessNz(pgmo, si):
    r"""gmoHessNz(pgmo, si) -> int"""
    return _gmomcc.gmoHessNz(pgmo, si)

def gmoHessNz64(pgmo, si):
    r"""gmoHessNz64(pgmo, si) -> INT64"""
    return _gmomcc.gmoHessNz64(pgmo, si)

def gmoHessStruct(pgmo, si, hridx, hcidx):
    r"""gmoHessStruct(pgmo, si, hridx, hcidx) -> int"""
    return _gmomcc.gmoHessStruct(pgmo, si, hridx, hcidx)

def gmoHessStruct64(pgmo, si, hridx, hcidx, hessnz_out):
    r"""gmoHessStruct64(pgmo, si, hridx, hcidx, hessnz_out) -> int"""
    return _gmomcc.gmoHessStruct64(pgmo, si, hridx, hcidx, hessnz_out)

def gmoHessValue(pgmo, si, hridx, hcidx, x, hessval):
    r"""gmoHessValue(pgmo, si, hridx, hcidx, x, hessval) -> int"""
    return _gmomcc.gmoHessValue(pgmo, si, hridx, hcidx, x, hessval)

def gmoHessValue64(pgmo, si, hridx, hcidx, hessnz_out, x, hessval):
    r"""gmoHessValue64(pgmo, si, hridx, hcidx, hessnz_out, x, hessval) -> int"""
    return _gmomcc.gmoHessValue64(pgmo, si, hridx, hcidx, hessnz_out, x, hessval)

def gmoHessVec(pgmo, si, x, dx, Wdx):
    r"""gmoHessVec(pgmo, si, x, dx, Wdx) -> int"""
    return _gmomcc.gmoHessVec(pgmo, si, x, dx, Wdx)

def gmoHessLagStruct(pgmo, WRindex, WCindex):
    r"""gmoHessLagStruct(pgmo, WRindex, WCindex) -> int"""
    return _gmomcc.gmoHessLagStruct(pgmo, WRindex, WCindex)

def gmoHessLagValue(pgmo, x, pi, w, objweight, conweight):
    r"""gmoHessLagValue(pgmo, x, pi, w, objweight, conweight) -> int"""
    return _gmomcc.gmoHessLagValue(pgmo, x, pi, w, objweight, conweight)

def gmoHessLagVec(pgmo, x, pi, dx, Wdx, objweight, conweight):
    r"""gmoHessLagVec(pgmo, x, pi, dx, Wdx, objweight, conweight) -> int"""
    return _gmomcc.gmoHessLagVec(pgmo, x, pi, dx, Wdx, objweight, conweight)

def gmoLoadEMPInfo(pgmo, empinfofname):
    r"""gmoLoadEMPInfo(pgmo, empinfofname) -> int"""
    return _gmomcc.gmoLoadEMPInfo(pgmo, empinfofname)

def gmoGetEquVI(pgmo, mintvec):
    r"""gmoGetEquVI(pgmo, mintvec) -> int"""
    return _gmomcc.gmoGetEquVI(pgmo, mintvec)

def gmoGetEquVIOne(pgmo, si):
    r"""gmoGetEquVIOne(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquVIOne(pgmo, si)

def gmoGetVarVI(pgmo, nintvec):
    r"""gmoGetVarVI(pgmo, nintvec) -> int"""
    return _gmomcc.gmoGetVarVI(pgmo, nintvec)

def gmoGetVarVIOne(pgmo, sj):
    r"""gmoGetVarVIOne(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarVIOne(pgmo, sj)

def gmoGetAgentType(pgmo, agentvec):
    r"""gmoGetAgentType(pgmo, agentvec) -> int"""
    return _gmomcc.gmoGetAgentType(pgmo, agentvec)

def gmoGetAgentTypeOne(pgmo, aidx):
    r"""gmoGetAgentTypeOne(pgmo, aidx) -> int"""
    return _gmomcc.gmoGetAgentTypeOne(pgmo, aidx)

def gmoGetBiLevelInfo(pgmo, nintvec, mintvec):
    r"""gmoGetBiLevelInfo(pgmo, nintvec, mintvec) -> int"""
    return _gmomcc.gmoGetBiLevelInfo(pgmo, nintvec, mintvec)

def gmoDumpEMPInfoToGDX(pgmo, gdxfname):
    r"""gmoDumpEMPInfoToGDX(pgmo, gdxfname) -> int"""
    return _gmomcc.gmoDumpEMPInfoToGDX(pgmo, gdxfname)

def gmoGetHeadnTail(pgmo, htrec):
    r"""gmoGetHeadnTail(pgmo, htrec) -> double"""
    return _gmomcc.gmoGetHeadnTail(pgmo, htrec)

def gmoSetHeadnTail(pgmo, htrec, dval):
    r"""gmoSetHeadnTail(pgmo, htrec, dval)"""
    return _gmomcc.gmoSetHeadnTail(pgmo, htrec, dval)

def gmoSetSolutionPrimal(pgmo, x):
    r"""gmoSetSolutionPrimal(pgmo, x) -> int"""
    return _gmomcc.gmoSetSolutionPrimal(pgmo, x)

def gmoSetSolution2(pgmo, x, pi):
    r"""gmoSetSolution2(pgmo, x, pi) -> int"""
    return _gmomcc.gmoSetSolution2(pgmo, x, pi)

def gmoSetSolution(pgmo, x, dj, pi, e):
    r"""gmoSetSolution(pgmo, x, dj, pi, e) -> int"""
    return _gmomcc.gmoSetSolution(pgmo, x, dj, pi, e)

def gmoSetSolution8(pgmo, x, dj, pi, e, xb, xs, yb, ys):
    r"""gmoSetSolution8(pgmo, x, dj, pi, e, xb, xs, yb, ys) -> int"""
    return _gmomcc.gmoSetSolution8(pgmo, x, dj, pi, e, xb, xs, yb, ys)

def gmoSetSolutionFixer(pgmo, modelstathint, x, pi, xb, yb, infTol, optTol):
    r"""gmoSetSolutionFixer(pgmo, modelstathint, x, pi, xb, yb, infTol, optTol) -> int"""
    return _gmomcc.gmoSetSolutionFixer(pgmo, modelstathint, x, pi, xb, yb, infTol, optTol)

def gmoGetSolutionVarRec(pgmo, sj):
    r"""gmoGetSolutionVarRec(pgmo, sj) -> int"""
    return _gmomcc.gmoGetSolutionVarRec(pgmo, sj)

def gmoSetSolutionVarRec(pgmo, sj, vl, vmarg, vstat, vcstat):
    r"""gmoSetSolutionVarRec(pgmo, sj, vl, vmarg, vstat, vcstat) -> int"""
    return _gmomcc.gmoSetSolutionVarRec(pgmo, sj, vl, vmarg, vstat, vcstat)

def gmoGetSolutionEquRec(pgmo, si):
    r"""gmoGetSolutionEquRec(pgmo, si) -> int"""
    return _gmomcc.gmoGetSolutionEquRec(pgmo, si)

def gmoSetSolutionEquRec(pgmo, si, el, emarg, estat, ecstat):
    r"""gmoSetSolutionEquRec(pgmo, si, el, emarg, estat, ecstat) -> int"""
    return _gmomcc.gmoSetSolutionEquRec(pgmo, si, el, emarg, estat, ecstat)

def gmoSetSolutionStatus(pgmo, xb, xs, yb, ys):
    r"""gmoSetSolutionStatus(pgmo, xb, xs, yb, ys) -> int"""
    return _gmomcc.gmoSetSolutionStatus(pgmo, xb, xs, yb, ys)

def gmoCompleteObjective(pgmo, locobjval):
    r"""gmoCompleteObjective(pgmo, locobjval)"""
    return _gmomcc.gmoCompleteObjective(pgmo, locobjval)

def gmoCompleteSolution(pgmo):
    r"""gmoCompleteSolution(pgmo) -> int"""
    return _gmomcc.gmoCompleteSolution(pgmo)

def gmoGetAbsoluteGap(pgmo):
    r"""gmoGetAbsoluteGap(pgmo) -> double"""
    return _gmomcc.gmoGetAbsoluteGap(pgmo)

def gmoGetRelativeGap(pgmo):
    r"""gmoGetRelativeGap(pgmo) -> double"""
    return _gmomcc.gmoGetRelativeGap(pgmo)

def gmoLoadSolutionLegacy(pgmo):
    r"""gmoLoadSolutionLegacy(pgmo) -> int"""
    return _gmomcc.gmoLoadSolutionLegacy(pgmo)

def gmoUnloadSolutionLegacy(pgmo):
    r"""gmoUnloadSolutionLegacy(pgmo) -> int"""
    return _gmomcc.gmoUnloadSolutionLegacy(pgmo)

def gmoLoadSolutionGDX(pgmo, gdxfname, dorows, docols, doht):
    r"""gmoLoadSolutionGDX(pgmo, gdxfname, dorows, docols, doht) -> int"""
    return _gmomcc.gmoLoadSolutionGDX(pgmo, gdxfname, dorows, docols, doht)

def gmoUnloadSolutionGDX(pgmo, gdxfname, dorows, docols, doht):
    r"""gmoUnloadSolutionGDX(pgmo, gdxfname, dorows, docols, doht) -> int"""
    return _gmomcc.gmoUnloadSolutionGDX(pgmo, gdxfname, dorows, docols, doht)

def gmoPrepareAllSolToGDX(pgmo, gdxfname, scengdx, dictid):
    r"""gmoPrepareAllSolToGDX(pgmo, gdxfname, scengdx, dictid) -> int"""
    return _gmomcc.gmoPrepareAllSolToGDX(pgmo, gdxfname, scengdx, dictid)

def gmoAddSolutionToGDX(pgmo, scenuel_in):
    r"""gmoAddSolutionToGDX(pgmo, scenuel_in) -> int"""
    return _gmomcc.gmoAddSolutionToGDX(pgmo, scenuel_in)

def gmoWriteSolDone(pgmo):
    r"""gmoWriteSolDone(pgmo) -> int"""
    return _gmomcc.gmoWriteSolDone(pgmo)

def gmoCheckSolPoolUEL(pgmo, prefix, INOUT):
    r"""gmoCheckSolPoolUEL(pgmo, prefix, INOUT) -> int"""
    return _gmomcc.gmoCheckSolPoolUEL(pgmo, prefix, INOUT)

def gmoPrepareSolPoolMerge(pgmo, gdxfname, numsol, prefix):
    r"""gmoPrepareSolPoolMerge(pgmo, gdxfname, numsol, prefix) -> void *"""
    return _gmomcc.gmoPrepareSolPoolMerge(pgmo, gdxfname, numsol, prefix)

def gmoPrepareSolPoolNextSym(pgmo, handle):
    r"""gmoPrepareSolPoolNextSym(pgmo, handle) -> int"""
    return _gmomcc.gmoPrepareSolPoolNextSym(pgmo, handle)

def gmoUnloadSolPoolSolution(pgmo, handle, numsol):
    r"""gmoUnloadSolPoolSolution(pgmo, handle, numsol) -> int"""
    return _gmomcc.gmoUnloadSolPoolSolution(pgmo, handle, numsol)

def gmoFinalizeSolPoolMerge(pgmo, handle):
    r"""gmoFinalizeSolPoolMerge(pgmo, handle) -> int"""
    return _gmomcc.gmoFinalizeSolPoolMerge(pgmo, handle)

def gmoGetVarTypeTxt(pgmo, sj):
    r"""gmoGetVarTypeTxt(pgmo, sj) -> int"""
    return _gmomcc.gmoGetVarTypeTxt(pgmo, sj)

def gmoGetEquTypeTxt(pgmo, si):
    r"""gmoGetEquTypeTxt(pgmo, si) -> int"""
    return _gmomcc.gmoGetEquTypeTxt(pgmo, si)

def gmoGetSolveStatusTxt(pgmo, solvestat):
    r"""gmoGetSolveStatusTxt(pgmo, solvestat) -> int"""
    return _gmomcc.gmoGetSolveStatusTxt(pgmo, solvestat)

def gmoGetModelStatusTxt(pgmo, modelstat):
    r"""gmoGetModelStatusTxt(pgmo, modelstat) -> int"""
    return _gmomcc.gmoGetModelStatusTxt(pgmo, modelstat)

def gmoGetModelTypeTxt(pgmo, modeltype):
    r"""gmoGetModelTypeTxt(pgmo, modeltype) -> int"""
    return _gmomcc.gmoGetModelTypeTxt(pgmo, modeltype)

def gmoGetHeadNTailTxt(pgmo, htrec):
    r"""gmoGetHeadNTailTxt(pgmo, htrec) -> int"""
    return _gmomcc.gmoGetHeadNTailTxt(pgmo, htrec)

def gmoMemUsed(pgmo):
    r"""gmoMemUsed(pgmo) -> double"""
    return _gmomcc.gmoMemUsed(pgmo)

def gmoPeakMemUsed(pgmo):
    r"""gmoPeakMemUsed(pgmo) -> double"""
    return _gmomcc.gmoPeakMemUsed(pgmo)

def gmoSetNLObject(pgmo, nlobject, nlpool):
    r"""gmoSetNLObject(pgmo, nlobject, nlpool) -> int"""
    return _gmomcc.gmoSetNLObject(pgmo, nlobject, nlpool)

def gmoDumpQMakerGDX(pgmo, gdxfname):
    r"""gmoDumpQMakerGDX(pgmo, gdxfname) -> int"""
    return _gmomcc.gmoDumpQMakerGDX(pgmo, gdxfname)

def gmoGetVarEquMap(pgmo, maptype, optptr, strict, INOUT, rowindex, colindex, mapval):
    r"""gmoGetVarEquMap(pgmo, maptype, optptr, strict, INOUT, rowindex, colindex, mapval) -> int"""
    return _gmomcc.gmoGetVarEquMap(pgmo, maptype, optptr, strict, INOUT, rowindex, colindex, mapval)

def gmoGetIndicatorMap(pgmo, optptr, indicstrict, INOUT, rowindic, colindic, indiconval):
    r"""gmoGetIndicatorMap(pgmo, optptr, indicstrict, INOUT, rowindic, colindic, indiconval) -> int"""
    return _gmomcc.gmoGetIndicatorMap(pgmo, optptr, indicstrict, INOUT, rowindic, colindic, indiconval)

def gmoCrudeness(pgmo):
    r"""gmoCrudeness(pgmo) -> int"""
    return _gmomcc.gmoCrudeness(pgmo)

def gmoDirtyGetRowFNLInstr(pgmo, si, opcode, field):
    r"""gmoDirtyGetRowFNLInstr(pgmo, si, opcode, field) -> int"""
    return _gmomcc.gmoDirtyGetRowFNLInstr(pgmo, si, opcode, field)

def gmoDirtyGetObjFNLInstr(pgmo, opcode, field):
    r"""gmoDirtyGetObjFNLInstr(pgmo, opcode, field) -> int"""
    return _gmomcc.gmoDirtyGetObjFNLInstr(pgmo, opcode, field)

def gmoDirtySetRowFNLInstr(pgmo, si, len, opcode, field, nlpool, nlpoolvec, len2):
    r"""gmoDirtySetRowFNLInstr(pgmo, si, len, opcode, field, nlpool, nlpoolvec, len2) -> int"""
    return _gmomcc.gmoDirtySetRowFNLInstr(pgmo, si, len, opcode, field, nlpool, nlpoolvec, len2)

def gmoGetExtrLibName(pgmo, libidx):
    r"""gmoGetExtrLibName(pgmo, libidx) -> char *"""
    return _gmomcc.gmoGetExtrLibName(pgmo, libidx)

def gmoGetExtrLibObjPtr(pgmo, libidx):
    r"""gmoGetExtrLibObjPtr(pgmo, libidx) -> void *"""
    return _gmomcc.gmoGetExtrLibObjPtr(pgmo, libidx)

def gmoGetExtrLibFuncName(pgmo, libidx, funcidx):
    r"""gmoGetExtrLibFuncName(pgmo, libidx, funcidx) -> char *"""
    return _gmomcc.gmoGetExtrLibFuncName(pgmo, libidx, funcidx)

def gmoLoadExtrLibEntry(pgmo, libidx, name):
    r"""gmoLoadExtrLibEntry(pgmo, libidx, name) -> void *"""
    return _gmomcc.gmoLoadExtrLibEntry(pgmo, libidx, name)

def gmoDict(pgmo):
    r"""gmoDict(pgmo) -> void *"""
    return _gmomcc.gmoDict(pgmo)

def gmoDictSet(pgmo, x):
    r"""gmoDictSet(pgmo, x)"""
    return _gmomcc.gmoDictSet(pgmo, x)

def gmoNameModel(pgmo):
    r"""gmoNameModel(pgmo) -> char *"""
    return _gmomcc.gmoNameModel(pgmo)

def gmoNameModelSet(pgmo, x):
    r"""gmoNameModelSet(pgmo, x)"""
    return _gmomcc.gmoNameModelSet(pgmo, x)

def gmoModelSeqNr(pgmo):
    r"""gmoModelSeqNr(pgmo) -> int"""
    return _gmomcc.gmoModelSeqNr(pgmo)

def gmoModelSeqNrSet(pgmo, x):
    r"""gmoModelSeqNrSet(pgmo, x)"""
    return _gmomcc.gmoModelSeqNrSet(pgmo, x)

def gmoModelType(pgmo):
    r"""gmoModelType(pgmo) -> int"""
    return _gmomcc.gmoModelType(pgmo)

def gmoModelTypeSet(pgmo, x):
    r"""gmoModelTypeSet(pgmo, x)"""
    return _gmomcc.gmoModelTypeSet(pgmo, x)

def gmoNLModelType(pgmo):
    r"""gmoNLModelType(pgmo) -> int"""
    return _gmomcc.gmoNLModelType(pgmo)

def gmoSense(pgmo):
    r"""gmoSense(pgmo) -> int"""
    return _gmomcc.gmoSense(pgmo)

def gmoSenseSet(pgmo, x):
    r"""gmoSenseSet(pgmo, x)"""
    return _gmomcc.gmoSenseSet(pgmo, x)

def gmoIsQP(pgmo):
    r"""gmoIsQP(pgmo) -> int"""
    return _gmomcc.gmoIsQP(pgmo)

def gmoOptFile(pgmo):
    r"""gmoOptFile(pgmo) -> int"""
    return _gmomcc.gmoOptFile(pgmo)

def gmoOptFileSet(pgmo, x):
    r"""gmoOptFileSet(pgmo, x)"""
    return _gmomcc.gmoOptFileSet(pgmo, x)

def gmoDictionary(pgmo):
    r"""gmoDictionary(pgmo) -> int"""
    return _gmomcc.gmoDictionary(pgmo)

def gmoDictionarySet(pgmo, x):
    r"""gmoDictionarySet(pgmo, x)"""
    return _gmomcc.gmoDictionarySet(pgmo, x)

def gmoScaleOpt(pgmo):
    r"""gmoScaleOpt(pgmo) -> int"""
    return _gmomcc.gmoScaleOpt(pgmo)

def gmoScaleOptSet(pgmo, x):
    r"""gmoScaleOptSet(pgmo, x)"""
    return _gmomcc.gmoScaleOptSet(pgmo, x)

def gmoPriorOpt(pgmo):
    r"""gmoPriorOpt(pgmo) -> int"""
    return _gmomcc.gmoPriorOpt(pgmo)

def gmoPriorOptSet(pgmo, x):
    r"""gmoPriorOptSet(pgmo, x)"""
    return _gmomcc.gmoPriorOptSet(pgmo, x)

def gmoHaveBasis(pgmo):
    r"""gmoHaveBasis(pgmo) -> int"""
    return _gmomcc.gmoHaveBasis(pgmo)

def gmoHaveBasisSet(pgmo, x):
    r"""gmoHaveBasisSet(pgmo, x)"""
    return _gmomcc.gmoHaveBasisSet(pgmo, x)

def gmoModelStat(pgmo):
    r"""gmoModelStat(pgmo) -> int"""
    return _gmomcc.gmoModelStat(pgmo)

def gmoModelStatSet(pgmo, x):
    r"""gmoModelStatSet(pgmo, x)"""
    return _gmomcc.gmoModelStatSet(pgmo, x)

def gmoSolveStat(pgmo):
    r"""gmoSolveStat(pgmo) -> int"""
    return _gmomcc.gmoSolveStat(pgmo)

def gmoSolveStatSet(pgmo, x):
    r"""gmoSolveStatSet(pgmo, x)"""
    return _gmomcc.gmoSolveStatSet(pgmo, x)

def gmoIsMPSGE(pgmo):
    r"""gmoIsMPSGE(pgmo) -> int"""
    return _gmomcc.gmoIsMPSGE(pgmo)

def gmoIsMPSGESet(pgmo, x):
    r"""gmoIsMPSGESet(pgmo, x)"""
    return _gmomcc.gmoIsMPSGESet(pgmo, x)

def gmoObjStyle(pgmo):
    r"""gmoObjStyle(pgmo) -> int"""
    return _gmomcc.gmoObjStyle(pgmo)

def gmoObjStyleSet(pgmo, x):
    r"""gmoObjStyleSet(pgmo, x)"""
    return _gmomcc.gmoObjStyleSet(pgmo, x)

def gmoInterface(pgmo):
    r"""gmoInterface(pgmo) -> int"""
    return _gmomcc.gmoInterface(pgmo)

def gmoInterfaceSet(pgmo, x):
    r"""gmoInterfaceSet(pgmo, x)"""
    return _gmomcc.gmoInterfaceSet(pgmo, x)

def gmoIndexBase(pgmo):
    r"""gmoIndexBase(pgmo) -> int"""
    return _gmomcc.gmoIndexBase(pgmo)

def gmoIndexBaseSet(pgmo, x):
    r"""gmoIndexBaseSet(pgmo, x)"""
    return _gmomcc.gmoIndexBaseSet(pgmo, x)

def gmoObjReform(pgmo):
    r"""gmoObjReform(pgmo) -> int"""
    return _gmomcc.gmoObjReform(pgmo)

def gmoObjReformSet(pgmo, x):
    r"""gmoObjReformSet(pgmo, x)"""
    return _gmomcc.gmoObjReformSet(pgmo, x)

def gmoEmptyOut(pgmo):
    r"""gmoEmptyOut(pgmo) -> int"""
    return _gmomcc.gmoEmptyOut(pgmo)

def gmoEmptyOutSet(pgmo, x):
    r"""gmoEmptyOutSet(pgmo, x)"""
    return _gmomcc.gmoEmptyOutSet(pgmo, x)

def gmoIgnXCDeriv(pgmo):
    r"""gmoIgnXCDeriv(pgmo) -> int"""
    return _gmomcc.gmoIgnXCDeriv(pgmo)

def gmoIgnXCDerivSet(pgmo, x):
    r"""gmoIgnXCDerivSet(pgmo, x)"""
    return _gmomcc.gmoIgnXCDerivSet(pgmo, x)

def gmoUseQ(pgmo):
    r"""gmoUseQ(pgmo) -> int"""
    return _gmomcc.gmoUseQ(pgmo)

def gmoUseQSet(pgmo, x):
    r"""gmoUseQSet(pgmo, x)"""
    return _gmomcc.gmoUseQSet(pgmo, x)

def gmoQExtractAlg(pgmo):
    r"""gmoQExtractAlg(pgmo) -> int"""
    return _gmomcc.gmoQExtractAlg(pgmo)

def gmoQExtractAlgSet(pgmo, x):
    r"""gmoQExtractAlgSet(pgmo, x)"""
    return _gmomcc.gmoQExtractAlgSet(pgmo, x)

def gmoQExtractDenseSwitchFactor(pgmo):
    r"""gmoQExtractDenseSwitchFactor(pgmo) -> double"""
    return _gmomcc.gmoQExtractDenseSwitchFactor(pgmo)

def gmoQExtractDenseSwitchFactorSet(pgmo, x):
    r"""gmoQExtractDenseSwitchFactorSet(pgmo, x)"""
    return _gmomcc.gmoQExtractDenseSwitchFactorSet(pgmo, x)

def gmoQExtractDenseSwitchLog(pgmo):
    r"""gmoQExtractDenseSwitchLog(pgmo) -> int"""
    return _gmomcc.gmoQExtractDenseSwitchLog(pgmo)

def gmoQExtractDenseSwitchLogSet(pgmo, x):
    r"""gmoQExtractDenseSwitchLogSet(pgmo, x)"""
    return _gmomcc.gmoQExtractDenseSwitchLogSet(pgmo, x)

def gmoAltBounds(pgmo):
    r"""gmoAltBounds(pgmo) -> int"""
    return _gmomcc.gmoAltBounds(pgmo)

def gmoAltBoundsSet(pgmo, x):
    r"""gmoAltBoundsSet(pgmo, x)"""
    return _gmomcc.gmoAltBoundsSet(pgmo, x)

def gmoAltRHS(pgmo):
    r"""gmoAltRHS(pgmo) -> int"""
    return _gmomcc.gmoAltRHS(pgmo)

def gmoAltRHSSet(pgmo, x):
    r"""gmoAltRHSSet(pgmo, x)"""
    return _gmomcc.gmoAltRHSSet(pgmo, x)

def gmoAltVarTypes(pgmo):
    r"""gmoAltVarTypes(pgmo) -> int"""
    return _gmomcc.gmoAltVarTypes(pgmo)

def gmoAltVarTypesSet(pgmo, x):
    r"""gmoAltVarTypesSet(pgmo, x)"""
    return _gmomcc.gmoAltVarTypesSet(pgmo, x)

def gmoForceLinear(pgmo):
    r"""gmoForceLinear(pgmo) -> int"""
    return _gmomcc.gmoForceLinear(pgmo)

def gmoForceLinearSet(pgmo, x):
    r"""gmoForceLinearSet(pgmo, x)"""
    return _gmomcc.gmoForceLinearSet(pgmo, x)

def gmoForceCont(pgmo):
    r"""gmoForceCont(pgmo) -> int"""
    return _gmomcc.gmoForceCont(pgmo)

def gmoForceContSet(pgmo, x):
    r"""gmoForceContSet(pgmo, x)"""
    return _gmomcc.gmoForceContSet(pgmo, x)

def gmoPermuteCols(pgmo):
    r"""gmoPermuteCols(pgmo) -> int"""
    return _gmomcc.gmoPermuteCols(pgmo)

def gmoPermuteColsSet(pgmo, x):
    r"""gmoPermuteColsSet(pgmo, x)"""
    return _gmomcc.gmoPermuteColsSet(pgmo, x)

def gmoPermuteRows(pgmo):
    r"""gmoPermuteRows(pgmo) -> int"""
    return _gmomcc.gmoPermuteRows(pgmo)

def gmoPermuteRowsSet(pgmo, x):
    r"""gmoPermuteRowsSet(pgmo, x)"""
    return _gmomcc.gmoPermuteRowsSet(pgmo, x)

def gmoPinf(pgmo):
    r"""gmoPinf(pgmo) -> double"""
    return _gmomcc.gmoPinf(pgmo)

def gmoPinfSet(pgmo, x):
    r"""gmoPinfSet(pgmo, x)"""
    return _gmomcc.gmoPinfSet(pgmo, x)

def gmoMinf(pgmo):
    r"""gmoMinf(pgmo) -> double"""
    return _gmomcc.gmoMinf(pgmo)

def gmoMinfSet(pgmo, x):
    r"""gmoMinfSet(pgmo, x)"""
    return _gmomcc.gmoMinfSet(pgmo, x)

def gmoQNaN(pgmo):
    r"""gmoQNaN(pgmo) -> double"""
    return _gmomcc.gmoQNaN(pgmo)

def gmoValNA(pgmo):
    r"""gmoValNA(pgmo) -> double"""
    return _gmomcc.gmoValNA(pgmo)

def gmoValNAInt(pgmo):
    r"""gmoValNAInt(pgmo) -> int"""
    return _gmomcc.gmoValNAInt(pgmo)

def gmoValUndf(pgmo):
    r"""gmoValUndf(pgmo) -> double"""
    return _gmomcc.gmoValUndf(pgmo)

def gmoM(pgmo):
    r"""gmoM(pgmo) -> int"""
    return _gmomcc.gmoM(pgmo)

def gmoQM(pgmo):
    r"""gmoQM(pgmo) -> int"""
    return _gmomcc.gmoQM(pgmo)

def gmoNLM(pgmo):
    r"""gmoNLM(pgmo) -> int"""
    return _gmomcc.gmoNLM(pgmo)

def gmoNRowMatch(pgmo):
    r"""gmoNRowMatch(pgmo) -> int"""
    return _gmomcc.gmoNRowMatch(pgmo)

def gmoN(pgmo):
    r"""gmoN(pgmo) -> int"""
    return _gmomcc.gmoN(pgmo)

def gmoNLN(pgmo):
    r"""gmoNLN(pgmo) -> int"""
    return _gmomcc.gmoNLN(pgmo)

def gmoNDisc(pgmo):
    r"""gmoNDisc(pgmo) -> int"""
    return _gmomcc.gmoNDisc(pgmo)

def gmoNFixed(pgmo):
    r"""gmoNFixed(pgmo) -> int"""
    return _gmomcc.gmoNFixed(pgmo)

def gmoNColMatch(pgmo):
    r"""gmoNColMatch(pgmo) -> int"""
    return _gmomcc.gmoNColMatch(pgmo)

def gmoNZ(pgmo):
    r"""gmoNZ(pgmo) -> int"""
    return _gmomcc.gmoNZ(pgmo)

def gmoNZ64(pgmo):
    r"""gmoNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoNZ64(pgmo)

def gmoNLNZ(pgmo):
    r"""gmoNLNZ(pgmo) -> int"""
    return _gmomcc.gmoNLNZ(pgmo)

def gmoNLNZ64(pgmo):
    r"""gmoNLNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoNLNZ64(pgmo)

def gmoLNZEx(pgmo):
    r"""gmoLNZEx(pgmo) -> int"""
    return _gmomcc.gmoLNZEx(pgmo)

def gmoLNZEx64(pgmo):
    r"""gmoLNZEx64(pgmo) -> INT64"""
    return _gmomcc.gmoLNZEx64(pgmo)

def gmoLNZ(pgmo):
    r"""gmoLNZ(pgmo) -> int"""
    return _gmomcc.gmoLNZ(pgmo)

def gmoLNZ64(pgmo):
    r"""gmoLNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoLNZ64(pgmo)

def gmoQNZ(pgmo):
    r"""gmoQNZ(pgmo) -> int"""
    return _gmomcc.gmoQNZ(pgmo)

def gmoQNZ64(pgmo):
    r"""gmoQNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoQNZ64(pgmo)

def gmoGNLNZ(pgmo):
    r"""gmoGNLNZ(pgmo) -> int"""
    return _gmomcc.gmoGNLNZ(pgmo)

def gmoGNLNZ64(pgmo):
    r"""gmoGNLNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoGNLNZ64(pgmo)

def gmoMaxQNZ(pgmo):
    r"""gmoMaxQNZ(pgmo) -> int"""
    return _gmomcc.gmoMaxQNZ(pgmo)

def gmoMaxQNZ64(pgmo):
    r"""gmoMaxQNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoMaxQNZ64(pgmo)

def gmoObjNZ(pgmo):
    r"""gmoObjNZ(pgmo) -> int"""
    return _gmomcc.gmoObjNZ(pgmo)

def gmoObjLNZ(pgmo):
    r"""gmoObjLNZ(pgmo) -> int"""
    return _gmomcc.gmoObjLNZ(pgmo)

def gmoObjQNZEx(pgmo):
    r"""gmoObjQNZEx(pgmo) -> int"""
    return _gmomcc.gmoObjQNZEx(pgmo)

def gmoObjNLNZ(pgmo):
    r"""gmoObjNLNZ(pgmo) -> int"""
    return _gmomcc.gmoObjNLNZ(pgmo)

def gmoObjNLNZEx(pgmo):
    r"""gmoObjNLNZEx(pgmo) -> int"""
    return _gmomcc.gmoObjNLNZEx(pgmo)

def gmoObjQMatNZ(pgmo):
    r"""gmoObjQMatNZ(pgmo) -> int"""
    return _gmomcc.gmoObjQMatNZ(pgmo)

def gmoObjQMatNZ64(pgmo):
    r"""gmoObjQMatNZ64(pgmo) -> INT64"""
    return _gmomcc.gmoObjQMatNZ64(pgmo)

def gmoObjQNZ(pgmo):
    r"""gmoObjQNZ(pgmo) -> int"""
    return _gmomcc.gmoObjQNZ(pgmo)

def gmoObjQDiagNZ(pgmo):
    r"""gmoObjQDiagNZ(pgmo) -> int"""
    return _gmomcc.gmoObjQDiagNZ(pgmo)

def gmoObjCVecNZ(pgmo):
    r"""gmoObjCVecNZ(pgmo) -> int"""
    return _gmomcc.gmoObjCVecNZ(pgmo)

def gmoNLConst(pgmo):
    r"""gmoNLConst(pgmo) -> int"""
    return _gmomcc.gmoNLConst(pgmo)

def gmoNLConstSet(pgmo, x):
    r"""gmoNLConstSet(pgmo, x)"""
    return _gmomcc.gmoNLConstSet(pgmo, x)

def gmoNLCodeSize(pgmo):
    r"""gmoNLCodeSize(pgmo) -> int"""
    return _gmomcc.gmoNLCodeSize(pgmo)

def gmoNLCodeSizeSet(pgmo, x):
    r"""gmoNLCodeSizeSet(pgmo, x)"""
    return _gmomcc.gmoNLCodeSizeSet(pgmo, x)

def gmoNLCodeSizeMaxRow(pgmo):
    r"""gmoNLCodeSizeMaxRow(pgmo) -> int"""
    return _gmomcc.gmoNLCodeSizeMaxRow(pgmo)

def gmoObjVar(pgmo):
    r"""gmoObjVar(pgmo) -> int"""
    return _gmomcc.gmoObjVar(pgmo)

def gmoObjVarSet(pgmo, x):
    r"""gmoObjVarSet(pgmo, x)"""
    return _gmomcc.gmoObjVarSet(pgmo, x)

def gmoObjRow(pgmo):
    r"""gmoObjRow(pgmo) -> int"""
    return _gmomcc.gmoObjRow(pgmo)

def gmoGetObjOrder(pgmo):
    r"""gmoGetObjOrder(pgmo) -> int"""
    return _gmomcc.gmoGetObjOrder(pgmo)

def gmoObjConst(pgmo):
    r"""gmoObjConst(pgmo) -> double"""
    return _gmomcc.gmoObjConst(pgmo)

def gmoObjConstEx(pgmo):
    r"""gmoObjConstEx(pgmo) -> double"""
    return _gmomcc.gmoObjConstEx(pgmo)

def gmoObjQConst(pgmo):
    r"""gmoObjQConst(pgmo) -> double"""
    return _gmomcc.gmoObjQConst(pgmo)

def gmoObjJacVal(pgmo):
    r"""gmoObjJacVal(pgmo) -> double"""
    return _gmomcc.gmoObjJacVal(pgmo)

def gmoEvalErrorMethod(pgmo):
    r"""gmoEvalErrorMethod(pgmo) -> int"""
    return _gmomcc.gmoEvalErrorMethod(pgmo)

def gmoEvalErrorMethodSet(pgmo, x):
    r"""gmoEvalErrorMethodSet(pgmo, x)"""
    return _gmomcc.gmoEvalErrorMethodSet(pgmo, x)

def gmoEvalMaxThreads(pgmo):
    r"""gmoEvalMaxThreads(pgmo) -> int"""
    return _gmomcc.gmoEvalMaxThreads(pgmo)

def gmoEvalMaxThreadsSet(pgmo, x):
    r"""gmoEvalMaxThreadsSet(pgmo, x)"""
    return _gmomcc.gmoEvalMaxThreadsSet(pgmo, x)

def gmoEvalFuncCount(pgmo):
    r"""gmoEvalFuncCount(pgmo) -> int"""
    return _gmomcc.gmoEvalFuncCount(pgmo)

def gmoEvalFuncTimeUsed(pgmo):
    r"""gmoEvalFuncTimeUsed(pgmo) -> double"""
    return _gmomcc.gmoEvalFuncTimeUsed(pgmo)

def gmoEvalGradCount(pgmo):
    r"""gmoEvalGradCount(pgmo) -> int"""
    return _gmomcc.gmoEvalGradCount(pgmo)

def gmoEvalGradTimeUsed(pgmo):
    r"""gmoEvalGradTimeUsed(pgmo) -> double"""
    return _gmomcc.gmoEvalGradTimeUsed(pgmo)

def gmoHessMaxDim(pgmo):
    r"""gmoHessMaxDim(pgmo) -> int"""
    return _gmomcc.gmoHessMaxDim(pgmo)

def gmoHessMaxNz(pgmo):
    r"""gmoHessMaxNz(pgmo) -> int"""
    return _gmomcc.gmoHessMaxNz(pgmo)

def gmoHessMaxNz64(pgmo):
    r"""gmoHessMaxNz64(pgmo) -> INT64"""
    return _gmomcc.gmoHessMaxNz64(pgmo)

def gmoHessLagDim(pgmo):
    r"""gmoHessLagDim(pgmo) -> int"""
    return _gmomcc.gmoHessLagDim(pgmo)

def gmoHessLagNz(pgmo):
    r"""gmoHessLagNz(pgmo) -> int"""
    return _gmomcc.gmoHessLagNz(pgmo)

def gmoHessLagNz64(pgmo):
    r"""gmoHessLagNz64(pgmo) -> INT64"""
    return _gmomcc.gmoHessLagNz64(pgmo)

def gmoHessLagDiagNz(pgmo):
    r"""gmoHessLagDiagNz(pgmo) -> int"""
    return _gmomcc.gmoHessLagDiagNz(pgmo)

def gmoHessInclQRows(pgmo):
    r"""gmoHessInclQRows(pgmo) -> int"""
    return _gmomcc.gmoHessInclQRows(pgmo)

def gmoHessInclQRowsSet(pgmo, x):
    r"""gmoHessInclQRowsSet(pgmo, x)"""
    return _gmomcc.gmoHessInclQRowsSet(pgmo, x)

def gmoNumVIFunc(pgmo):
    r"""gmoNumVIFunc(pgmo) -> int"""
    return _gmomcc.gmoNumVIFunc(pgmo)

def gmoNumAgents(pgmo):
    r"""gmoNumAgents(pgmo) -> int"""
    return _gmomcc.gmoNumAgents(pgmo)

def gmoNameOptFile(pgmo):
    r"""gmoNameOptFile(pgmo) -> char *"""
    return _gmomcc.gmoNameOptFile(pgmo)

def gmoNameOptFileSet(pgmo, x):
    r"""gmoNameOptFileSet(pgmo, x)"""
    return _gmomcc.gmoNameOptFileSet(pgmo, x)

def gmoNameSolFile(pgmo):
    r"""gmoNameSolFile(pgmo) -> char *"""
    return _gmomcc.gmoNameSolFile(pgmo)

def gmoNameSolFileSet(pgmo, x):
    r"""gmoNameSolFileSet(pgmo, x)"""
    return _gmomcc.gmoNameSolFileSet(pgmo, x)

def gmoNameXLib(pgmo):
    r"""gmoNameXLib(pgmo) -> char *"""
    return _gmomcc.gmoNameXLib(pgmo)

def gmoNameXLibSet(pgmo, x):
    r"""gmoNameXLibSet(pgmo, x)"""
    return _gmomcc.gmoNameXLibSet(pgmo, x)

def gmoNameMatrix(pgmo):
    r"""gmoNameMatrix(pgmo) -> char *"""
    return _gmomcc.gmoNameMatrix(pgmo)

def gmoNameDict(pgmo):
    r"""gmoNameDict(pgmo) -> char *"""
    return _gmomcc.gmoNameDict(pgmo)

def gmoNameDictSet(pgmo, x):
    r"""gmoNameDictSet(pgmo, x)"""
    return _gmomcc.gmoNameDictSet(pgmo, x)

def gmoNameInput(pgmo):
    r"""gmoNameInput(pgmo) -> char *"""
    return _gmomcc.gmoNameInput(pgmo)

def gmoNameInputSet(pgmo, x):
    r"""gmoNameInputSet(pgmo, x)"""
    return _gmomcc.gmoNameInputSet(pgmo, x)

def gmoNameOutput(pgmo):
    r"""gmoNameOutput(pgmo) -> char *"""
    return _gmomcc.gmoNameOutput(pgmo)

def gmoPPool(pgmo):
    r"""gmoPPool(pgmo) -> void *"""
    return _gmomcc.gmoPPool(pgmo)

def gmoIOMutex(pgmo):
    r"""gmoIOMutex(pgmo) -> void *"""
    return _gmomcc.gmoIOMutex(pgmo)

def gmoError(pgmo):
    r"""gmoError(pgmo) -> int"""
    return _gmomcc.gmoError(pgmo)

def gmoErrorSet(pgmo, x):
    r"""gmoErrorSet(pgmo, x)"""
    return _gmomcc.gmoErrorSet(pgmo, x)

def gmoErrorMessage(pgmo):
    r"""gmoErrorMessage(pgmo) -> char *"""
    return _gmomcc.gmoErrorMessage(pgmo)
GLOBAL_MAX_INDEX_DIM = _gmomcc.GLOBAL_MAX_INDEX_DIM

GLOBAL_UEL_IDENT_SIZE = _gmomcc.GLOBAL_UEL_IDENT_SIZE

ITERLIM_INFINITY = _gmomcc.ITERLIM_INFINITY

RESLIM_INFINITY = _gmomcc.RESLIM_INFINITY

GMS_MAX_SOLVERS = _gmomcc.GMS_MAX_SOLVERS

GMS_MAX_INDEX_DIM = _gmomcc.GMS_MAX_INDEX_DIM

GMS_UEL_IDENT_SIZE = _gmomcc.GMS_UEL_IDENT_SIZE

GMS_SSSIZE = _gmomcc.GMS_SSSIZE

GMS_VARTYPE_UNKNOWN = _gmomcc.GMS_VARTYPE_UNKNOWN

GMS_VARTYPE_BINARY = _gmomcc.GMS_VARTYPE_BINARY

GMS_VARTYPE_INTEGER = _gmomcc.GMS_VARTYPE_INTEGER

GMS_VARTYPE_POSITIVE = _gmomcc.GMS_VARTYPE_POSITIVE

GMS_VARTYPE_NEGATIVE = _gmomcc.GMS_VARTYPE_NEGATIVE

GMS_VARTYPE_FREE = _gmomcc.GMS_VARTYPE_FREE

GMS_VARTYPE_SOS1 = _gmomcc.GMS_VARTYPE_SOS1

GMS_VARTYPE_SOS2 = _gmomcc.GMS_VARTYPE_SOS2

GMS_VARTYPE_SEMICONT = _gmomcc.GMS_VARTYPE_SEMICONT

GMS_VARTYPE_SEMIINT = _gmomcc.GMS_VARTYPE_SEMIINT

GMS_VARTYPE_MAX = _gmomcc.GMS_VARTYPE_MAX

GMS_EQU_USERINFO_BASE = _gmomcc.GMS_EQU_USERINFO_BASE

GMS_EQUTYPE_E = _gmomcc.GMS_EQUTYPE_E

GMS_EQUTYPE_G = _gmomcc.GMS_EQUTYPE_G

GMS_EQUTYPE_L = _gmomcc.GMS_EQUTYPE_L

GMS_EQUTYPE_N = _gmomcc.GMS_EQUTYPE_N

GMS_EQUTYPE_X = _gmomcc.GMS_EQUTYPE_X

GMS_EQUTYPE_C = _gmomcc.GMS_EQUTYPE_C

GMS_EQUTYPE_B = _gmomcc.GMS_EQUTYPE_B

GMS_EQUTYPE_MAX = _gmomcc.GMS_EQUTYPE_MAX

GMS_EQUEOFFSET = _gmomcc.GMS_EQUEOFFSET

GMS_SETTYPE_DEFAULT = _gmomcc.GMS_SETTYPE_DEFAULT

GMS_SETTYPE_SINGLETON = _gmomcc.GMS_SETTYPE_SINGLETON

GMS_SETTYPE_MAX = _gmomcc.GMS_SETTYPE_MAX

GMS_VAL_LEVEL = _gmomcc.GMS_VAL_LEVEL

GMS_VAL_MARGINAL = _gmomcc.GMS_VAL_MARGINAL

GMS_VAL_LOWER = _gmomcc.GMS_VAL_LOWER

GMS_VAL_UPPER = _gmomcc.GMS_VAL_UPPER

GMS_VAL_SCALE = _gmomcc.GMS_VAL_SCALE

GMS_VAL_MAX = _gmomcc.GMS_VAL_MAX

sv_valund = _gmomcc.sv_valund

sv_valna = _gmomcc.sv_valna

sv_valpin = _gmomcc.sv_valpin

sv_valmin = _gmomcc.sv_valmin

sv_valeps = _gmomcc.sv_valeps

sv_normal = _gmomcc.sv_normal

sv_acronym = _gmomcc.sv_acronym

GMS_SVIDX_UNDEF = _gmomcc.GMS_SVIDX_UNDEF

GMS_SVIDX_NA = _gmomcc.GMS_SVIDX_NA

GMS_SVIDX_PINF = _gmomcc.GMS_SVIDX_PINF

GMS_SVIDX_MINF = _gmomcc.GMS_SVIDX_MINF

GMS_SVIDX_EPS = _gmomcc.GMS_SVIDX_EPS

GMS_SVIDX_NORMAL = _gmomcc.GMS_SVIDX_NORMAL

GMS_SVIDX_ACR = _gmomcc.GMS_SVIDX_ACR

GMS_SVIDX_MAX = _gmomcc.GMS_SVIDX_MAX

dt_set = _gmomcc.dt_set

dt_par = _gmomcc.dt_par

dt_var = _gmomcc.dt_var

dt_equ = _gmomcc.dt_equ

dt_alias = _gmomcc.dt_alias

GMS_DT_SET = _gmomcc.GMS_DT_SET

GMS_DT_PAR = _gmomcc.GMS_DT_PAR

GMS_DT_VAR = _gmomcc.GMS_DT_VAR

GMS_DT_EQU = _gmomcc.GMS_DT_EQU

GMS_DT_ALIAS = _gmomcc.GMS_DT_ALIAS

GMS_DT_MAX = _gmomcc.GMS_DT_MAX

GMS_SV_UNDEF = _gmomcc.GMS_SV_UNDEF

GMS_SV_NA = _gmomcc.GMS_SV_NA

GMS_SV_PINF = _gmomcc.GMS_SV_PINF

GMS_SV_MINF = _gmomcc.GMS_SV_MINF

GMS_SV_EPS = _gmomcc.GMS_SV_EPS

GMS_SV_ACR = _gmomcc.GMS_SV_ACR

GMS_SV_NAINT = _gmomcc.GMS_SV_NAINT

STAT_OK = _gmomcc.STAT_OK

STAT_NOPT = _gmomcc.STAT_NOPT

STAT_INFES = _gmomcc.STAT_INFES

STAT_UNBND = _gmomcc.STAT_UNBND

STAT_EVAL = _gmomcc.STAT_EVAL

STAT_UNKNW = _gmomcc.STAT_UNKNW

STAT_REDEF = _gmomcc.STAT_REDEF

STAT_DEPND = _gmomcc.STAT_DEPND

STAT_REDIR = _gmomcc.STAT_REDIR

STAT_MAX = _gmomcc.STAT_MAX

SS_MAX = _gmomcc.SS_MAX

MS_MAX = _gmomcc.MS_MAX


cvar = _gmomcc.cvar
gmsGdxTypeText = cvar.gmsGdxTypeText
gmsVarTypeText = cvar.gmsVarTypeText
gmsValTypeText = cvar.gmsValTypeText
gmsSVText = cvar.gmsSVText
gmsSpecialValues = cvar.gmsSpecialValues
gmsDefRecVar = cvar.gmsDefRecVar
gmsDefRecEqu = cvar.gmsDefRecEqu
rcStat = cvar.rcStat
solveStatusTxt = cvar.solveStatusTxt
modelStatusTxt = cvar.modelStatusTxt

