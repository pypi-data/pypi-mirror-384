[project]
name = "lionagi"
version = "0.18.1"
description = "An Intelligence Operating System."
authors = [
    { name = "HaiyangLi", email = "quantocean.li@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiocache>=0.12.0",
    "aiohttp>=3.11.0",
    "anyio>=4.7.0",
    "backoff>=2.0.0",
    "json-repair>=0.40.0",
    "msgspec>=0.18.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.8.0",
    "pydapter[pandas]>=1.2.0",
    "python-dotenv>=1.1.0",
    "tiktoken>=0.9.0",
]
license = {file = "LICENSE"}
classifiers=[
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Framework :: Pytest",
]

[dependency-groups]
dev = [
    "black[jupyter]>=24.10.0",
    "isort>=6.0.0",
    "pre-commit>=4.2.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=1.1.0",
    "sphinx-autobuild>=2024.10.3",
    "sphinx>=8.0.0",
    "furo>=2024.8.6",
    "ipython>=8.31.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "tqdm>=4.67.1",
    "pytest-cov>=6.1.1",
    "ruff>=0.12.0",
    "mkdocs>=1.6.1",
    "mkdocs-material[imaging]>=9.6.18",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-git-committers-plugin-2>=2.5.0",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.17.0",
    "trio>=0.30.0",
    "line-profiler>=5.0.0",
    "memory-profiler>=0.61.0",
    "hypothesis>=6.139.1",
    "pyarrow>=21.0.0",
    "pytest-xdist>=3.8.0",
    "pytest-timeout>=2.4.0",
    "pytest-benchmark>=5.1.0",
]

[project.optional-dependencies]

reader = [
    "docling>=2.15.0",
]

ollama = [
    "ollama>=0.4.0",
]

mcp = [
    "fastmcp>=2.10.5",
]

rich = [
    "rich>=13.0.0",
]

schema = [
    "datamodel-code-generator>=0.31.2",
]

postgres = [
    "pydapter[postgres]",
]

sqlite = [
    "aiosqlite>=0.21.0",
]

graph = [
    "matplotlib>=3.7.0",
    "networkx>=3.0.0",
]

xml = [
    "xmltodict>=0.12.0",
]


all = [
    "lionagi[reader]",
    "lionagi[ollama]",
    "lionagi[mcp]",
    "lionagi[rich]",
    "lionagi[schema]",
    "lionagi[postgres]",
    "lionagi[graph]",
    "lionagi[sqlite]",
    "lionagi[xml]"
]


[tool.black]
line-length = 79
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
ignore = ["E203", "W503", "E501", "E402"]
max-line-length = 79
exclude = [".git", "__pycache__", "build", "dist", ".venv"]

[tool.pytest.ini_options]
addopts = "-q -ra --strict-config --strict-markers --tb=short --maxfail=5 -n auto --dist loadfile"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
timeout = 300
timeout_method = "thread"
markers = [
    "performance: marks tests as performance benchmarks",
    "slow: marks tests as slow (> 1 second)",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
    "property: marks tests as property-based tests",
    "migration: marks tests as migration/compatibility tests",
    "network: marks tests requiring network calls",
]
filterwarnings = [
    # Ignore Pydantic deprecation warnings from external datamodel-code-generator
    "ignore:The `parse_obj` method is deprecated.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:The `dict` method is deprecated.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore:The `__fields_set__` attribute is deprecated.*:pydantic.warnings.PydanticDeprecatedSince20",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["lionagi"]

[tool.hatch.build]
exclude = [
    "dev/*",
    "data/*",
    "notebooks/*",
    "tests/*",
    "*.pyc",
    "__pycache__",
    "temp_logs/*",
    "logs/*"
]
