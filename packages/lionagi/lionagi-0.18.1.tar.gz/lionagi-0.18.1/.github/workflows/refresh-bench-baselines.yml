name: Refresh Bench Baselines

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv sync --all-extras

      - name: Run concurrency benchmarks (asyncio)
        run: |
          source .venv/bin/activate
          python -m benchmarks.concurrency_bench --repeat 100 --backend asyncio --output benchmarks/_ci_out/concurrency-asyncio.json

      - name: Run concurrency benchmarks (trio)
        run: |
          source .venv/bin/activate
          python -m benchmarks.concurrency_bench --repeat 100 --backend trio --output benchmarks/_ci_out/concurrency-trio.json

      - name: Run ln benchmarks (asyncio)
        run: |
          source .venv/bin/activate
          python -m benchmarks.ln_bench --repeat 10 --backend asyncio --output benchmarks/_ci_out/ln-asyncio.json

      - name: Run ln benchmarks (trio)
        run: |
          source .venv/bin/activate
          python -m benchmarks.ln_bench --repeat 10 --backend trio --output benchmarks/_ci_out/ln-trio.json

      - name: Run fuzzy benchmarks
        run: |
          source .venv/bin/activate
          python -m benchmarks.fuzzy_bench --repeat 10 --output benchmarks/_ci_out/fuzzy.json

      - name: Copy outputs to baselines
        run: |
          cp benchmarks/_ci_out/concurrency-asyncio.json benchmarks/baselines/concurrency-asyncio.json
          cp benchmarks/_ci_out/concurrency-trio.json benchmarks/baselines/concurrency-trio.json
          cp benchmarks/_ci_out/ln-asyncio.json benchmarks/baselines/ln-asyncio.json
          cp benchmarks/_ci_out/ln-trio.json benchmarks/baselines/ln-trio.json
          cp benchmarks/_ci_out/fuzzy.json benchmarks/baselines/fuzzy.json

      - name: Commit and create PR for updated baselines
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create a unique branch name with timestamp
          BRANCH_NAME="chore/refresh-baselines-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          
          # Add and commit changes
          git add benchmarks/baselines/*.json
          git commit -m "chore(benchmarks): refresh CI-native baselines [skip ci]"
          
          # Push the branch
          git push origin "$BRANCH_NAME"
          
          # Create pull request using GitHub CLI
          gh pr create \
            --title "chore(benchmarks): refresh CI-native baselines" \
            --body "Automated refresh of benchmark baselines from GitHub Actions workflow." \
            --label "enhancement" \
            --head "$BRANCH_NAME" \
            --base main

      - name: Upload baselines artifact (fallback)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: refreshed-bench-baselines
          path: benchmarks/baselines/*.json
