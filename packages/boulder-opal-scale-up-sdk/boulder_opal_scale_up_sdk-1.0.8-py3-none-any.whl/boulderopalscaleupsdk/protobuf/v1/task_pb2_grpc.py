# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from boulderopalscaleupsdk.protobuf.v1 import task_pb2 as boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2


class AgentManagerServiceStub(object):
    """Agents are responsible for communicating with the remote AgentManager service
    to determine a set of tasks to perform (generally, QPU tasks such as
    execution of quantum circuits / configuration). Importantly, to both simplify
    and ensure the security of the QPU adjacent host that the agent will run on,
    the agent must initiate all communications (as opposed to opening a port on
    the host).
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartSession = channel.unary_unary(
                '/boulderopalscaleupsdk.protobuf.v1.AgentManagerService/StartSession',
                request_serializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.StartSessionRequest.SerializeToString,
                response_deserializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.FromString,
                )
        self.UpdateSession = channel.unary_unary(
                '/boulderopalscaleupsdk.protobuf.v1.AgentManagerService/UpdateSession',
                request_serializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.UpdateSessionRequest.SerializeToString,
                response_deserializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.FromString,
                )


class AgentManagerServiceServicer(object):
    """Agents are responsible for communicating with the remote AgentManager service
    to determine a set of tasks to perform (generally, QPU tasks such as
    execution of quantum circuits / configuration). Importantly, to both simplify
    and ensure the security of the QPU adjacent host that the agent will run on,
    the agent must initiate all communications (as opposed to opening a port on
    the host).
    """

    def StartSession(self, request, context):
        """Start the session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSession(self, request, context):
        """Update the session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSession,
                    request_deserializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.StartSessionRequest.FromString,
                    response_serializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.SerializeToString,
            ),
            'UpdateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSession,
                    request_deserializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.UpdateSessionRequest.FromString,
                    response_serializer=boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'boulderopalscaleupsdk.protobuf.v1.AgentManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgentManagerService(object):
    """Agents are responsible for communicating with the remote AgentManager service
    to determine a set of tasks to perform (generally, QPU tasks such as
    execution of quantum circuits / configuration). Importantly, to both simplify
    and ensure the security of the QPU adjacent host that the agent will run on,
    the agent must initiate all communications (as opposed to opening a port on
    the host).
    """

    @staticmethod
    def StartSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/boulderopalscaleupsdk.protobuf.v1.AgentManagerService/StartSession',
            boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.StartSessionRequest.SerializeToString,
            boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/boulderopalscaleupsdk.protobuf.v1.AgentManagerService/UpdateSession',
            boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.UpdateSessionRequest.SerializeToString,
            boulderopalscaleupsdk_dot_protobuf_dot_v1_dot_task__pb2.AgentTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
