"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_javascript-extension_lib_index_js"],{

/***/ "../node_modules/@jupyterlab/javascript-extension/lib/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@jupyterlab/javascript-extension/lib/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APPLICATION_JAVASCRIPT_MIMETYPE: () => (/* binding */ APPLICATION_JAVASCRIPT_MIMETYPE),\n/* harmony export */   ExperimentalRenderedJavascript: () => (/* binding */ ExperimentalRenderedJavascript),\n/* harmony export */   TEXT_JAVASCRIPT_MIMETYPE: () => (/* binding */ TEXT_JAVASCRIPT_MIMETYPE),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   rendererFactory: () => (/* binding */ rendererFactory)\n/* harmony export */ });\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/rendermime */ \"webpack/sharing/consume/default/@jupyterlab/rendermime/@jupyterlab/rendermime\");\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module javascript-extension\n */\n\nconst TEXT_JAVASCRIPT_MIMETYPE = 'text/javascript';\nconst APPLICATION_JAVASCRIPT_MIMETYPE = 'application/javascript';\nfunction evalInContext(code, element, document, window) {\n    // eslint-disable-next-line\n    return eval(code);\n}\nclass ExperimentalRenderedJavascript extends _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_0__.RenderedJavaScript {\n    render(model) {\n        const trans = this.translator.load('jupyterlab');\n        const renderJavascript = () => {\n            try {\n                const data = model.data[this.mimeType];\n                if (data) {\n                    evalInContext(data, this.node, document, window);\n                }\n                return Promise.resolve();\n            }\n            catch (error) {\n                return Promise.reject(error);\n            }\n        };\n        if (!model.trusted) {\n            // If output is not trusted or if arbitrary Javascript execution is not enabled, render an informative error message\n            const pre = document.createElement('pre');\n            pre.textContent = trans.__('Are you sure that you want to run arbitrary Javascript within your JupyterLab session?');\n            const button = document.createElement('button');\n            button.textContent = trans.__('Run');\n            this.node.appendChild(pre);\n            this.node.appendChild(button);\n            button.onclick = event => {\n                this.node.textContent = '';\n                void renderJavascript();\n            };\n            return Promise.resolve();\n        }\n        return renderJavascript();\n    }\n}\n/**\n * A mime renderer factory for text/javascript data.\n */\nconst rendererFactory = {\n    safe: false,\n    mimeTypes: [TEXT_JAVASCRIPT_MIMETYPE, APPLICATION_JAVASCRIPT_MIMETYPE],\n    createRenderer: options => new ExperimentalRenderedJavascript(options)\n};\nconst extension = {\n    id: '@jupyterlab/javascript-extension:factory',\n    description: 'Adds renderer for JavaScript content.',\n    rendererFactory,\n    rank: 0,\n    dataType: 'string'\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (extension);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/javascript-extension/lib/index.js?");

/***/ })

}]);