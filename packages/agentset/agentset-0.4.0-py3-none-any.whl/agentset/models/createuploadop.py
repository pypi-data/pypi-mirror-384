"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .upload_result_schema import UploadResultSchema, UploadResultSchemaTypedDict
from agentset.types import BaseModel
from agentset.utils import FieldMetadata, PathParamMetadata, validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateUploadGlobalsTypedDict(TypedDict):
    namespace_id: NotRequired[str]
    r"""The id of the namespace (prefixed with ns_)"""


class CreateUploadGlobals(BaseModel):
    namespace_id: Annotated[
        Optional[str],
        pydantic.Field(alias="namespaceId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""The id of the namespace (prefixed with ns_)"""


class CreateUploadResponseTypedDict(TypedDict):
    r"""Presigned URL generated successfully"""

    data: UploadResultSchemaTypedDict
    success: Literal[True]


class CreateUploadResponse(BaseModel):
    r"""Presigned URL generated successfully"""

    data: UploadResultSchema

    SUCCESS: Annotated[
        Annotated[Literal[True], AfterValidator(validate_const(True))],
        pydantic.Field(alias="success"),
    ] = True
