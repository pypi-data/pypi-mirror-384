# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=64.0", "wheel", "torch>=2.6", "ninja", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "rhai-innovation-mini-trainer"
dynamic = ["version"] 
description = "Simple training repo which is used to house reference implementations of emerging training algorithms, such as Orthogonal Subspace Fine Tuning (OSFT)."
readme = "Readme.md"
requires-python = ">=3.11,<3.13"
license = {text = "MIT"}
authors = [
    {name = "Mini Trainer Contributors"}
]
keywords = ["machine learning", "training", "OSFT", "orthogonal subspace fine tuning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]


dependencies = [
    "torch>=2.6",
    "typer",
    "aiofiles",
    "deprecated",
    "numpy",
    "datasets",
    "transformers>=4.55.0",
    "ninja",
    "numba>=0.62.0",
    "rich",
]

[project.optional-dependencies]
cuda = [
    "flash-attn>=2.8.2",
    "liger-kernel>=0.5.10",  
    "kernels",  # for flash-attention-3
    "mamba-ssm[causal-conv1d]>=2.2.5"
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-mock",
]
dev = [
    "ruff",
    "ipython", 
    "ipykernel",
    "ipdb",
    "pytest",
    "tox",
    "tox-uv",
]
wandb = ["wandb"]

[project.urls]
Homepage = "https://github.com/Red-Hat-AI-Innovation-Team/mini_trainer"
Repository = "https://github.com/Red-Hat-AI-Innovation-Team/mini_trainer"
Issues = "https://github.com/Red-Hat-AI-Innovation-Team/mini_trainer/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["mini_trainer*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gpu: marks tests that require GPU",
    "multi_gpu: marks tests that require multiple GPUs",
]

# for dynamic versioning
[tool.setuptools_scm]
version_file = "src/mini_trainer/_version.py"
# do not include +gREV local version, required for Test PyPI upload
local_scheme = "no-local-version"
