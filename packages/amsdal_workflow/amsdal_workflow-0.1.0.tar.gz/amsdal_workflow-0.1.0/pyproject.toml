[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["amsdal_workflow"]
include = [
  "amsdal_workflow/py.typed",
]

[project]
name = "amsdal_workflow"
dynamic = ["version"]
description = "amsdal_workflow plugin for AMSDAL Framework"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "amsdal[cli]>=0.5.14",
    "langgraph>=0.6.8",
]

[project.optional-dependencies]
openai = [
    "langchain[openai]",
]

[dependency-groups]
dev = [
    "amsdal-glue-connections[async-sqlite]",
    "langgraph-checkpoint-sqlite>=2.0.11",
    "langsmith>=0.4.31",
    "coverage[toml]>=7.10",
    "amsdal_storages[s3]",
    "mypy>=1.17.0",
    "ruff>=0.12.4",
    "pytest==8.4.1",
    "pytest-mock==3.14.1",
    "pytest-asyncio==1.1.0",
    "types_docutils",
    "types-pytz",
    "types-Pygments",
    "types-PyYAML",
    "pandas-stubs",
    "numpy-typing-compat>=20250818.2.3",
    "optype>=0.14.0",
    "scipy-stubs>=1.16.2.3",
    "types-defusedxml>=0.7.0.20250822",
    "types-openpyxl>=3.1.5.20250919",
    "types-pexpect>=4.9.0.20250916",
    "types-psutil>=7.0.0.20251001",
    "types-python-dateutil>=2.9.0.20251008",
    "types-requests>=2.32.4.20250913",
    "types-xlrd>=2.0.0.20250914",
]

[tool.hatch.version]
path = "amsdal_workflow/__about__.py"

[[tool.hatch.envs.all.matrix]]
python = ["3.11", "3.12"]

[tool.hatch.envs.default]
installer = "uv"
path = ".venv"
python = "3.12"

[tool.hatch.envs.default.scripts]
sync = "uv sync --group dev"
lock = "uv lock"
lock-upgrade = "uv lock --upgrade"
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]
typing = "uv run mypy --install-types --non-interactive {args:amsdal_workflow/}"
style = [
    "uv run ruff check {args:.}",
]
fmt = [
    "uv run ruff check --fix {args:.}",
    "uv run ruff format {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.hatch.envs.build]
python = "3.12"
installer = "pip"

[tool.hatch.envs.default.build]
sync = "sync --group dev"
lock = "lock"
lock-upgrade = "lock --upgrade"
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]
typing = "mypy --install-types --non-interactive {args:amsdal_workflow/}"
style = [
    "ruff check {args:.}",
]
fmt = [
    "ruff check --fix {args:.}",
    "ruff format {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
    "amsdal_workflow/migrations",
]

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    "A005",
    "PLC0415",
    "RUF100",
    "UP045",
    "Q000",
    "Q003",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "N803", "EM101", "N805", "N802", "ARG001", "ARG002", "FBT001"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = true

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
