# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TransactionCoboCategory(str, Enum):
    """
    The transaction category defined by Cobo. Possible values include:    - `AutoSweep`: An auto-sweep transaction.   - `AutoFueling`: A transaction where Fee Station pays transaction fees to an address within your MPC Wallets.   - `AutoFuelingRefund`: A refund for an auto-fueling transaction.   - `SafeTxMessage`: A message signing transaction initiated by an MPC wallet to authorize a Smart Contract Wallet (Safe\\{Wallet\\}) transaction.   - `BillPayment`: A transaction to pay Cobo bills through Fee Station.   - `BillRefund`: A refund for a previously made bill payment.   - `CommissionFeeCharge`: A transaction to charge commission fees via Fee Station.   - `CommissionFeeRefund`: A refund of previously charged commission fees.   - `StakingBabylonBtcDelegation`: A transaction for delegating BTC in Babylon staking.   - `StakingBabylonBtcSignBabylon`: A transaction for signing Babylon operations with BTC.   - `StakingBabylonClaim`: A transaction for claiming rewards from Babylon staking.   - `StakingBabylonSlashing`: A transaction related to slashing penalties in Babylon staking.   - `StakingBabylonStake`: A transaction for staking assets in the Babylon platform.   - `StakingBabylonUnstake`: A transaction for unstaking assets from the Babylon platform.   - `StakingBabylonWithdraw`: A transaction for withdrawing assets from Babylon staking.   - `StakingBithiveClaim`: A transaction for claiming rewards from BitHive staking.   - `StakingBithiveStake`: A transaction for staking assets in the BitHive platform.   - `StakingBithiveUnstake`: A transaction for unstaking assets from the BitHive platform.   - `StakingBithiveWithdraw`: A transaction for withdrawing assets from BitHive staking.   - `StakingCoreStake`: A transaction for staking assets in the Core staking platform.   - `StakingCoreWithdraw`: A transaction for withdrawing assets from Core staking.   - `StakingEthClaim`: A transaction for claiming rewards from ETH staking.   - `StakingEthStake`: A transaction for staking ETH assets.   - `StakingEthUnstake`: A transaction for unstaking ETH assets.   - `StakingSkyfarmClaim`: A transaction for claiming rewards from Skyfarm staking.   - `StakingSkyfarmStake`: A transaction for staking assets in the Skyfarm platform.   - `StakingSkyfarmUnstake`: A transaction for unstaking assets from the Skyfarm platform.   - `ScreenAppRefund`: A refund transaction initiated through the Screening App.   - `ScreenAppIsolate`: An isolation transaction initiated through the Screening App.   - `ComplianceRefund`: A refund transaction initiated by Cobo KYT.   - `ComplianceIsolate`: An isolation transaction initiated by Cobo KYT.   - `StellarChangeTrust`: A transaction to manage trustlines on the Stellar network. 
    """

    """
    allowed enum values
    """
    AUTOFUELING = 'AutoFueling'
    AUTOFUELINGREFUND = 'AutoFuelingRefund'
    AUTOSWEEP = 'AutoSweep'
    BILLPAYMENT = 'BillPayment'
    BILLREFUND = 'BillRefund'
    COMMISSIONFEECHARGE = 'CommissionFeeCharge'
    COMMISSIONFEEREFUND = 'CommissionFeeRefund'
    SAFETXMESSAGE = 'SafeTxMessage'
    STAKINGBABYLONBTCDELEGATION = 'StakingBabylonBtcDelegation'
    STAKINGBABYLONBTCSIGNBABYLON = 'StakingBabylonBtcSignBabylon'
    STAKINGBABYLONCLAIM = 'StakingBabylonClaim'
    STAKINGBABYLONSLASHING = 'StakingBabylonSlashing'
    STAKINGBABYLONSTAKE = 'StakingBabylonStake'
    STAKINGBABYLONUNSTAKE = 'StakingBabylonUnstake'
    STAKINGBABYLONWITHDRAW = 'StakingBabylonWithdraw'
    STAKINGBITHIVECLAIM = 'StakingBithiveClaim'
    STAKINGBITHIVESTAKE = 'StakingBithiveStake'
    STAKINGBITHIVEUNSTAKE = 'StakingBithiveUnstake'
    STAKINGBITHIVEWITHDRAW = 'StakingBithiveWithdraw'
    STAKINGCORESTAKE = 'StakingCoreStake'
    STAKINGCOREWITHDRAW = 'StakingCoreWithdraw'
    STAKINGETHCLAIM = 'StakingEthClaim'
    STAKINGETHSTAKE = 'StakingEthStake'
    STAKINGETHUNSTAKE = 'StakingEthUnstake'
    STAKINGSKYFARMCLAIM = 'StakingSkyfarmClaim'
    STAKINGSKYFARMSTAKE = 'StakingSkyfarmStake'
    STAKINGSKYFARMUNSTAKE = 'StakingSkyfarmUnstake'
    SCREENAPPREFUND = 'ScreenAppRefund'
    SCREENAPPISOLATE = 'ScreenAppIsolate'
    COMPLIANCEREFUND = 'ComplianceRefund'
    COMPLIANCEISOLATE = 'ComplianceIsolate'
    STELLARCHANGETRUST = 'StellarChangeTrust'

    UNKNOWN = None

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TransactionCoboCategory from a JSON string"""
        return cls(json.loads(json_str))

    @classmethod
    def _missing_(cls, value):
        return cls.UNKNOWN


