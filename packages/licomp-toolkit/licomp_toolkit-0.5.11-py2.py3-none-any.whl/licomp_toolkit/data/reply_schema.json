{
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "$id" : "",
  "title" : "Licomp Toolkit Reply",
  "type" : "object",
  "properties" : {
    "compatibility_report": {
      "type" : "object",
      "$ref": "#/$defs/compatibility_object"
    },
    "outbound" : {
      "$ref": "#/$defs/license",
      "description" : "The outbound license expression."
    },
    "inbound" : {
      "$ref": "#/$defs/license",
      "description" : "The inbound license expression."
    },
    "usecase" : {
      "type" : "string",
      "enum": ["library", "compiler", "snippet", "tool", "test"],
      "description" : "Usecase for the compatibility check, e.g. library (as in using the inbound licensed component as a library)"
    },
    "provisioning" : {
      "type" : "string",
      "enum": ["source-code-distribution", "binary-distribution", "local-use", "provide-service", "provide-webui"],
      "description" : "The way the component is provided to the user for the compatibility check, e.g. binary-distribution"
    },
    "modification" : {
      "type" : "string",
      "description" : "Has the component been modified. Currently not used/implemented.",
      "enum": [ "unmodified", "modified"]
    },
    "resources": {
      "description": "Which resources are available, regardless of context",
      "type": "array",
      "items": {
        "type" : "string"
      }
    },
    "available_resources": {
      "description": "Which resources are available given the context",
      "type": "array",
      "items": {
        "type" : "string"
      }
    },
    "unavailable_resources": {
      "description": "Which resources are not available given the context",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "description": "The resource name"
},
          "reasons": {
            "type": "string",
            "description": "The reason the resource is not available" }
        }
      }
    },
    "compatibility" : {
      "$ref": "#/$defs/compatibility",
      "description" : "The inbound license expression."
    }
  },
  "required" : [ "compatibility_report", "compatibility", "outbound", "inbound" , "usecase", "resources", "unavailable_resources", "available_resources" ],
  "additionalProperties" : false,
  "$defs": {
    "compatibility_object": {
      "type" : "object",
      "oneOf": [
        {
          "properties": {
            "compatibility": {
              "$ref": "#/$defs/compatibility",
              "description" : "The inbound license expression."
            },
            "compatibility_type": {
              "enum": [ "license" ],
              "description": "Describing what is being checked. Can be either expression or license. In this case the value is \"license\"."
            },
            "compatibility_check": {
              "$ref": "#/$defs/compatibility_check"
            },
            "inbound_license": {
              "$ref": "#/$defs/license",
              "description" : "The inbound license expression."
            },
            "outbound_license": {
              "$ref": "#/$defs/license",
              "description" : "The outbound license expression."
            },
            "compatibility_details": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "compatibilities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/licomp_object"
                      }
                    }
                  }
                },
                {
                  "type": "null"
                }
              ]
            },
            "compatibility_object": {
              "type" : "object",
              "anyOf": [
                {
                  "$ref": "#/$defs/compatibility_object"
                },
                {
                  "properties": {}
                }
              ]
            }
          },
          "required": [ "compatibility", "compatibility_type", "compatibility_check", "inbound_license" , "outbound_license", "compatibility_object", "compatibility_details"],
          "additionalProperties" : false
        },
        {
          "properties": {
            "compatibility" : {
              "$ref": "#/$defs/compatibility",
              "description" : "The inbound license expression."
            },
            "compatibility_type": {
              "enum": [ "expression" ],
              "description": "Describing what is being checked. Can be either expression or license. In this case the value is \"expression\"."
            },
            "compatibility_check": {
              "$ref": "#/$defs/compatibility_check"
            },
            "inbound_license": {
              "$ref": "#/$defs/license",
              "description" : "The inbound license expression."
            },
            "outbound_license": {
              "$ref": "#/$defs/license",
              "description" : "The inbound license expression."
            },
            "compatibility_details": {
              "type": "null"
            },
            "operator": {
              "enum": [ "AND", "OR" ],
              "description" : "The logical operator between two license expressions."
            },
            "operands": {
              "type": "array",
              "items": {
                "compatibility_object": {
                  "type" : "object",
                  "$ref": "#/$defs/compatibility_object"
                },
                "compatibility": { "type": "string" }
              },
              "description": "The operands for the operator. The operands can be either a license or an operator."
            }
          },
          "required": [ "compatibility", "compatibility_type", "compatibility_check", "inbound_license" , "outbound_license" , "operator", "operands" ],
          "additionalProperties" : false
        }
      ]
    },
    "compatibility" : {
      "type" : "string",
      "enum": [ "yes", "no", "depends", "unknown", "unsupported", "mixed", null],
      "description" : "The compatbility between the Outbound and Inbound license expressions"
    },
    "license" : {
      "type" : "string",
      "minLength": 1
    },
    "compatibility_check": {
      "type": "string",
      "enum": [
        "outbound-expression -> inbound-expression",
        "outbound-expression -> inbound-license",
        "outbound-license -> inbound-expression",
        "outbound-license -> inbound-license"
      ],
      "description" : "A text describing if outbound license or expression is checked for compatiblility against inbound license or expression."
    },
    "licomp_object": {
      "type" : "object",
      "properties" : {
        "status" : {
          "enum": [ "failure", "success" ],
          "description" : "Overall status indicating if the compatibility check succeeded."
        },
        "status_details" : {
          "type" : "object",
          "properties" : {
	    "provisioning_status": {
	      "enum": [ "failure", "success" ],
              "description" : "Status indicating if the provisioning is supported."
	    },
	    "usecase_status": {
	      "enum": [ "failure", "success" ],
              "description" : "Status indicating if the usecase is supported."
	    },
	    "license_supported_status": {
	      "enum": [ "failure", "success" ],
              "description" : "Status indicating if the licenses are supported."
	    }
          }
        },
        "outbound" : {
          "type" : "string",
          "minLength": 1,
          "description" : "The outbound license"
        },
        "inbound" : {
          "type" : "string",
          "minLength": 1,
          "description" : "The inbound license"
        },
        "usecase" : {
          "type" : "string",
          "enum": ["library", "compiler", "snippet", "tool", "test"],
          "description" : "Usecase for the compatibility check, e.g. library (as in using the inbound licensed component as a library)"
        },
        "provisioning" : {
          "type" : "string",
          "enum": ["source-code-distribution", "binary-distribution", "local-use", "provide-service", "provide-webui"],
          "description" : "The way the component is provided to the user for the compatibility check, e.g. binary-distribution"
        },
        "modification" : {
          "type" : "string",
          "description" : "Has the component been modified. Currently not used/implemented.",
          "enum": [ "unmodified", "modified"]
        },
        "compatibility_status" : {
          "enum": [ "yes", "no", "depends", "unknown", "unsupported", null],
          "description" : "The compatbility between the Outbound and Inbound license expressions"
        },
        "explanation" : {
          "type" : [ "string", "null" ],
          "description" : "A text describing the compatiblity, e.g. how the compatibility was determined"
        },
        "api_version" : {
          "type" : "string",
          "pattern": "^[0-9].[0-9](.[0-9]){0,1}$",
          "description" : "The api version of the program providing the reply"
        },
        "resource_name1" : {
          "type" : "string",
          "minLength": 1,
          "description" : "The name of the program providing the reply, e.g. licomp-osadl"
        },
        "resource_version" : {
          "type" : "string",
          "pattern": "^[0-9].[0-9](.[0-9]){0,1}$",
          "description" : "The versions of the program providing the reply, e.g. licomp-osadl"
        },
        "resource_disclaimer" : {
          "type" : "string",
          "minLength": 10,
          "description" : "A disclaimer of the program providing the reply."
        },
        "data_url" : {
          "type" : "string",
          "minLength": 10,
          "description" : "A URL pointing to the data used to provide the resulting compatibility."
        },
        "resource_url" : {
          "type" : "string",
          "minLength": 10,
          "description" : "A URL pointing to the project page (or similar) for the program providing the resulting compatibility."
        }
      },
      "required" : [ "status", "status_details", "outbound", "inbound", "usecase", "provisioning", "modification", "compatibility_status", "explanation", "api_version", "resource_name1", "resource_version", "resource_disclaimer", "data_url", "resource_url"],
      "additionalProperties" : false  
    }
  }
}
