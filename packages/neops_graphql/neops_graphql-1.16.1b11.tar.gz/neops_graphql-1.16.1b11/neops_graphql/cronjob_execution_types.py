# Generated by ariadne-codegen
# Source: ../graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CronExecuteTypeEnum


class CronjobExecutionTypes(BaseModel):
    cronjob_execution_types: Optional["CronjobExecutionTypesCronjobExecutionTypes"] = (
        Field(alias="cronjobExecutionTypes")
    )


class CronjobExecutionTypesCronjobExecutionTypes(BaseModel):
    results: Optional[
        List[Optional["CronjobExecutionTypesCronjobExecutionTypesResults"]]
    ]
    total_count: Optional[int] = Field(alias="totalCount")


class CronjobExecutionTypesCronjobExecutionTypesResults(BaseModel):
    form: Optional[Any]
    cron_execute_type: CronExecuteTypeEnum = Field(alias="cronExecuteType")


CronjobExecutionTypes.model_rebuild()
CronjobExecutionTypesCronjobExecutionTypes.model_rebuild()
