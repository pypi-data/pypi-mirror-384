# Generated by ariadne-codegen
# Source: ../graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import EntityType


class Reports(BaseModel):
    reports: Optional["ReportsReports"]


class ReportsReports(BaseModel):
    results: Optional[List[Optional["ReportsReportsResults"]]]


class ReportsReportsResults(BaseModel):
    id: str
    name: Optional[str]
    extension: Optional[str]
    uniquereportname: Optional[str]
    jinja_template: Optional[str] = Field(alias="jinjaTemplate")
    entity_type: Optional[EntityType] = Field(alias="entityType")
    scope: Optional["ReportsReportsResultsScope"]
    permission: Optional[int]
    updated_at: Optional[Any] = Field(alias="updatedAt")
    created_at: Optional[Any] = Field(alias="createdAt")


class ReportsReportsResultsScope(BaseModel):
    id: str
    name: Optional[str]


Reports.model_rebuild()
ReportsReports.model_rebuild()
ReportsReportsResults.model_rebuild()
