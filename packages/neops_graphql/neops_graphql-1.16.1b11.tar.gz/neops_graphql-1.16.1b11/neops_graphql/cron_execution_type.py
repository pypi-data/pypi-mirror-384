# Generated by ariadne-codegen
# Source: ../graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CronExecuteTypeEnum


class CronExecutionType(BaseModel):
    cronjob_execution_types: Optional["CronExecutionTypeCronjobExecutionTypes"] = Field(
        alias="cronjobExecutionTypes"
    )


class CronExecutionTypeCronjobExecutionTypes(BaseModel):
    results: Optional[List[Optional["CronExecutionTypeCronjobExecutionTypesResults"]]]
    total_count: Optional[int] = Field(alias="totalCount")


class CronExecutionTypeCronjobExecutionTypesResults(BaseModel):
    form: Optional[Any]
    cron_execute_type: CronExecuteTypeEnum = Field(alias="cronExecuteType")


CronExecutionType.model_rebuild()
CronExecutionTypeCronjobExecutionTypes.model_rebuild()
