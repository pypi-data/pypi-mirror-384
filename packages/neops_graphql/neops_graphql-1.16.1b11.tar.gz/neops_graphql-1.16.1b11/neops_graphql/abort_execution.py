# Generated by ariadne-codegen
# Source: ../graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ExecutionStateEnum


class AbortExecution(BaseModel):
    abort_execution: Optional["AbortExecutionAbortExecution"] = Field(
        alias="abortExecution"
    )


class AbortExecutionAbortExecution(BaseModel):
    executions: Optional[List[Optional["AbortExecutionAbortExecutionExecutions"]]]


class AbortExecutionAbortExecutionExecutions(BaseModel):
    id: str
    name: Optional[str]
    state: Optional[ExecutionStateEnum]
    neops_task: Optional["AbortExecutionAbortExecutionExecutionsNeopsTask"] = Field(
        alias="neopsTask"
    )


class AbortExecutionAbortExecutionExecutionsNeopsTask(BaseModel):
    id: str
    name: Optional[str]


AbortExecution.model_rebuild()
AbortExecutionAbortExecution.model_rebuild()
AbortExecutionAbortExecutionExecutions.model_rebuild()
