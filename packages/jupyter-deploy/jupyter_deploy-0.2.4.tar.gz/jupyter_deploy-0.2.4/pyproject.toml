[project]
name = "jupyter-deploy"
version = "0.2.4"
description = "CLI based tool to deploy Jupyter applications that integrates with infrastructure as code frameworks."
readme = "README.md"
authors = [
    { name = "Jonathan Guinegagne", email = "jggg@amazon.com" },
    { name = "Michael Chin", email = "chnmch@amazon.com" },
    { name = "Brian Granger", email = "brgrange@amazon.com" }
]
requires-python = ">=3.12"
dependencies = [
    "decorator>=5.2.1",
    "click<8.2.0",
    "typer>=0.15.4",
    "pydantic>=2.11.5",
    "python-hcl2>=7.2.1",
    "packaging>=25.0",
    "jupyter_core>=5.0.0",
    "jupyter-deploy-tf-aws-ec2-base",
    "pyyaml>=6.0.2",
    "types-pyyaml>=6.0.12.20250516",
]

[project.scripts]
jupyter-deploy = "jupyter_deploy.cli.app:main"
jd = "jupyter_deploy.cli.app:main"

[project.entry-points."jupyter_core.subcommands"]
deploy = "jupyter_deploy.cli.app:main"

[project.optional-dependencies]
aws = [
    "boto3>=1.38.23",
    "boto3-stubs>=1.38.23",
    "mypy-boto3-ec2>=1.40.4",
    "mypy-boto3-ssm>=1.38.5",
]

[tool.uv.sources]
jupyter-deploy-tf-aws-ec2-base = { workspace = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["jupyter_deploy"]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
    "parameterized>=0.9.0",
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
mypy_path = ["."]
packages = ["jupyter_deploy"]

[tool.ruff]
extend-exclude = [".conda/"]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pydocstyle
    "F",  # pyflakes
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "SIM",  # flake8-simplify
    "I"   # isort
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

docstring-code-format = true
docstring-code-line-length = 40

[tool.pytest.ini_options]
addopts = "--cov=jupyter_deploy --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = ["tests/unit"]

[tool.coverage.run]
source = ["jupyter_deploy"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true
