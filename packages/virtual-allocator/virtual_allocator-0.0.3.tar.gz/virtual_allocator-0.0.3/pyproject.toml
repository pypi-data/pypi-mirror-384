[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "virtual-allocator"
description = "Python allocator for a virtual memory range"
version = "0.0.3"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
keywords = ["memory", "allocator"]
authors = [{ name = "Jonas Ehrlich", email = "jonas.ehrlich@gmail.com" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
]

[project.urls]
Homepage = "https://github.com/jonasehrlich/virtual-allocator"
Repository = "https://github.com/jonasehrlich/virtual-allocator"

[dependency-groups]
dev = [
  "mypy>=1.18.2",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-subtests>=0.14.2",
  "ruff>=0.14.0",
]
[tool.uv]
default-groups = ["dev"]

[tool.coverage.report]
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
  "^\\s+\\.\\.\\.",
  # Don't complain about type check guarded imports
  "if ((ty)(ping)?.)?TYPE_CHECKING:",
]
fail_under = 90

[tool.coverage.run]
branch = true
source = ["virtual_allocator"]

[tool.coverage.xml]
output = "coverage.xml"

[tool.isort]
profile = "black"
line_length = 120
src_paths = ["virtual_allocator", "test"]


[tool.mypy]
packages = ["virtual_allocator"]
strict = true

[tool.ruff]
line-length = 120
