"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Definitions for bounds.

Copyright:
Copyright 2023 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Bounds(google.protobuf.message.Message):
    """A set of lower and upper bounds for any metric.
    The units of the bounds are always the same as the related metric.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOWER_FIELD_NUMBER: builtins.int
    UPPER_FIELD_NUMBER: builtins.int
    lower: builtins.float
    """The lower bound.
    If absent, there is no lower bound.
    """
    upper: builtins.float
    """The upper bound.
    If absent, there is no upper bound.
    """
    def __init__(
        self,
        *,
        lower: builtins.float | None = ...,
        upper: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_lower", b"_lower", "_upper", b"_upper", "lower", b"lower", "upper", b"upper"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_lower", b"_lower", "_upper", b"_upper", "lower", b"lower", "upper", b"upper"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_lower", b"_lower"]) -> typing.Literal["lower"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_upper", b"_upper"]) -> typing.Literal["upper"] | None: ...

global___Bounds = Bounds
