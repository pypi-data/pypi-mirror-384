# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: frequenz/api/common/v1/microgrid/components/components.proto
# Protobuf Python Version: 6.30.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    0,
    '',
    'frequenz/api/common/v1/microgrid/components/components.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from frequenz.api.common.v1.metrics import bounds_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_metrics_dot_bounds__pb2
from frequenz.api.common.v1.metrics import metric_sample_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_metrics_dot_metric__sample__pb2
from frequenz.api.common.v1.microgrid.components import battery_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_battery__pb2
from frequenz.api.common.v1.microgrid.components import ev_charger_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_ev__charger__pb2
from frequenz.api.common.v1.microgrid.components import fuse_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_fuse__pb2
from frequenz.api.common.v1.microgrid.components import grid_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_grid__pb2
from frequenz.api.common.v1.microgrid.components import inverter_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_inverter__pb2
from frequenz.api.common.v1.microgrid.components import transformer_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_transformer__pb2
from frequenz.api.common.v1.microgrid import lifetime_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_lifetime__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n<frequenz/api/common/v1/microgrid/components/components.proto\x12+frequenz.api.common.v1.microgrid.components\x1a+frequenz/api/common/v1/metrics/bounds.proto\x1a\x32\x66requenz/api/common/v1/metrics/metric_sample.proto\x1a\x39\x66requenz/api/common/v1/microgrid/components/battery.proto\x1a<frequenz/api/common/v1/microgrid/components/ev_charger.proto\x1a\x36\x66requenz/api/common/v1/microgrid/components/fuse.proto\x1a\x36\x66requenz/api/common/v1/microgrid/components/grid.proto\x1a:frequenz/api/common/v1/microgrid/components/inverter.proto\x1a=frequenz/api/common/v1/microgrid/components/transformer.proto\x1a/frequenz/api/common/v1/microgrid/lifetime.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x85\x04\n ComponentCategoryMetadataVariant\x12G\n\x07\x62\x61ttery\x18\x01 \x01(\x0b\x32\x34.frequenz.api.common.v1.microgrid.components.BatteryH\x00\x12L\n\nev_charger\x18\x02 \x01(\x0b\x32\x36.frequenz.api.common.v1.microgrid.components.EvChargerH\x00\x12\x41\n\x04\x66use\x18\x03 \x01(\x0b\x32\x31.frequenz.api.common.v1.microgrid.components.FuseH\x00\x12P\n\x04grid\x18\x04 \x01(\x0b\x32@.frequenz.api.common.v1.microgrid.components.GridConnectionPointH\x00\x12I\n\x08inverter\x18\x05 \x01(\x0b\x32\x35.frequenz.api.common.v1.microgrid.components.InverterH\x00\x12^\n\x13voltage_transformer\x18\x06 \x01(\x0b\x32?.frequenz.api.common.v1.microgrid.components.VoltageTransformerH\x00\x42\n\n\x08metadata\"\x94\x04\n\tComponent\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x14\n\x0cmicrogrid_id\x18\x02 \x01(\x04\x12\x0c\n\x04name\x18\x03 \x01(\t\x12P\n\x08\x63\x61tegory\x18\x04 \x01(\x0e\x32>.frequenz.api.common.v1.microgrid.components.ComponentCategory\x12\x64\n\rcategory_type\x18\x05 \x01(\x0b\x32M.frequenz.api.common.v1.microgrid.components.ComponentCategoryMetadataVariant\x12\x14\n\x0cmanufacturer\x18\x06 \x01(\t\x12\x12\n\nmodel_name\x18\x07 \x01(\t\x12L\n\x06status\x18\x08 \x01(\x0e\x32<.frequenz.api.common.v1.microgrid.components.ComponentStatus\x12H\n\x14operational_lifetime\x18\t \x01(\x0b\x32*.frequenz.api.common.v1.microgrid.Lifetime\x12]\n\x14metric_config_bounds\x18\n \x03(\x0b\x32?.frequenz.api.common.v1.microgrid.components.MetricConfigBounds\"\x8b\x01\n\x12MetricConfigBounds\x12\x36\n\x06metric\x18\x01 \x01(\x0e\x32&.frequenz.api.common.v1.metrics.Metric\x12=\n\rconfig_bounds\x18\x02 \x01(\x0b\x32&.frequenz.api.common.v1.metrics.Bounds\"\x9e\x01\n\x13\x43omponentConnection\x12\x1b\n\x13source_component_id\x18\x01 \x01(\x04\x12 \n\x18\x64\x65stination_component_id\x18\x02 \x01(\x04\x12H\n\x14operational_lifetime\x18\x03 \x01(\x0b\x32*.frequenz.api.common.v1.microgrid.Lifetime\"\xb8\x01\n\rComponentData\x12\x14\n\x0c\x63omponent_id\x18\x01 \x01(\x04\x12\x44\n\x0emetric_samples\x18\x02 \x03(\x0b\x32,.frequenz.api.common.v1.metrics.MetricSample\x12K\n\x06states\x18\x03 \x03(\x0b\x32;.frequenz.api.common.v1.microgrid.components.ComponentState\"\xb5\x02\n\x0e\x43omponentState\x12.\n\nsampled_at\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12O\n\x06states\x18\x02 \x03(\x0e\x32?.frequenz.api.common.v1.microgrid.components.ComponentStateCode\x12Q\n\x08warnings\x18\x03 \x03(\x0e\x32?.frequenz.api.common.v1.microgrid.components.ComponentErrorCode\x12O\n\x06\x65rrors\x18\x04 \x03(\x0e\x32?.frequenz.api.common.v1.microgrid.components.ComponentErrorCode*\x85\x04\n\x11\x43omponentCategory\x12\"\n\x1e\x43OMPONENT_CATEGORY_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x43OMPONENT_CATEGORY_GRID\x10\x01\x12\x1c\n\x18\x43OMPONENT_CATEGORY_METER\x10\x02\x12\x1f\n\x1b\x43OMPONENT_CATEGORY_INVERTER\x10\x03\x12 \n\x1c\x43OMPONENT_CATEGORY_CONVERTER\x10\x04\x12\x1e\n\x1a\x43OMPONENT_CATEGORY_BATTERY\x10\x05\x12!\n\x1d\x43OMPONENT_CATEGORY_EV_CHARGER\x10\x06\x12#\n\x1f\x43OMPONENT_CATEGORY_CRYPTO_MINER\x10\x08\x12#\n\x1f\x43OMPONENT_CATEGORY_ELECTROLYZER\x10\t\x12\x1a\n\x16\x43OMPONENT_CATEGORY_CHP\x10\n\x12\x1c\n\x18\x43OMPONENT_CATEGORY_RELAY\x10\x0b\x12!\n\x1d\x43OMPONENT_CATEGORY_PRECHARGER\x10\x0c\x12\x1b\n\x17\x43OMPONENT_CATEGORY_FUSE\x10\r\x12*\n&COMPONENT_CATEGORY_VOLTAGE_TRANSFORMER\x10\x0e\x12\x1b\n\x17\x43OMPONENT_CATEGORY_HVAC\x10\x0f*o\n\x0f\x43omponentStatus\x12 \n\x1c\x43OMPONENT_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x43OMPONENT_STATUS_ACTIVE\x10\x01\x12\x1d\n\x19\x43OMPONENT_STATUS_INACTIVE\x10\x02*\x93\x07\n\x12\x43omponentStateCode\x12$\n COMPONENT_STATE_CODE_UNSPECIFIED\x10\x00\x12 \n\x1c\x43OMPONENT_STATE_CODE_UNKNOWN\x10\x01\x12$\n COMPONENT_STATE_CODE_UNAVAILABLE\x10\x02\x12&\n\"COMPONENT_STATE_CODE_SWITCHING_OFF\x10\x03\x12\x1c\n\x18\x43OMPONENT_STATE_CODE_OFF\x10\x04\x12%\n!COMPONENT_STATE_CODE_SWITCHING_ON\x10\x05\x12 \n\x1c\x43OMPONENT_STATE_CODE_STANDBY\x10\x06\x12\x1e\n\x1a\x43OMPONENT_STATE_CODE_READY\x10\x07\x12!\n\x1d\x43OMPONENT_STATE_CODE_CHARGING\x10\x08\x12$\n COMPONENT_STATE_CODE_DISCHARGING\x10\t\x12\x1e\n\x1a\x43OMPONENT_STATE_CODE_ERROR\x10\n\x12\x34\n0COMPONENT_STATE_CODE_EV_CHARGING_CABLE_UNPLUGGED\x10\x14\x12=\n9COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_STATION\x10\x15\x12\x38\n4COMPONENT_STATE_CODE_EV_CHARGING_CABLE_PLUGGED_AT_EV\x10\x16\x12<\n8COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_STATION\x10\x17\x12\x37\n3COMPONENT_STATE_CODE_EV_CHARGING_CABLE_LOCKED_AT_EV\x10\x18\x12#\n\x1f\x43OMPONENT_STATE_CODE_RELAY_OPEN\x10\x1e\x12%\n!COMPONENT_STATE_CODE_RELAY_CLOSED\x10\x1f\x12(\n$COMPONENT_STATE_CODE_PRECHARGER_OPEN\x10(\x12/\n+COMPONENT_STATE_CODE_PRECHARGER_PRECHARGING\x10)\x12*\n&COMPONENT_STATE_CODE_PRECHARGER_CLOSED\x10**\xd9\x0c\n\x12\x43omponentErrorCode\x12$\n COMPONENT_ERROR_CODE_UNSPECIFIED\x10\x00\x12 \n\x1c\x43OMPONENT_ERROR_CODE_UNKNOWN\x10\x01\x12(\n$COMPONENT_ERROR_CODE_SWITCH_ON_FAULT\x10\x02\x12%\n!COMPONENT_ERROR_CODE_UNDERVOLTAGE\x10\x03\x12$\n COMPONENT_ERROR_CODE_OVERVOLTAGE\x10\x04\x12$\n COMPONENT_ERROR_CODE_OVERCURRENT\x10\x05\x12-\n)COMPONENT_ERROR_CODE_OVERCURRENT_CHARGING\x10\x06\x12\x30\n,COMPONENT_ERROR_CODE_OVERCURRENT_DISCHARGING\x10\x07\x12(\n$COMPONENT_ERROR_CODE_OVERTEMPERATURE\x10\x08\x12)\n%COMPONENT_ERROR_CODE_UNDERTEMPERATURE\x10\t\x12&\n\"COMPONENT_ERROR_CODE_HIGH_HUMIDITY\x10\n\x12#\n\x1f\x43OMPONENT_ERROR_CODE_FUSE_ERROR\x10\x0b\x12(\n$COMPONENT_ERROR_CODE_PRECHARGE_ERROR\x10\x0c\x12+\n\'COMPONENT_ERROR_CODE_PLAUSIBILITY_ERROR\x10\r\x12.\n*COMPONENT_ERROR_CODE_UNDERVOLTAGE_SHUTDOWN\x10\x0e\x12\x34\n0COMPONENT_ERROR_CODE_EV_UNEXPECTED_PILOT_FAILURE\x10\x0f\x12&\n\"COMPONENT_ERROR_CODE_FAULT_CURRENT\x10\x10\x12&\n\"COMPONENT_ERROR_CODE_SHORT_CIRCUIT\x10\x11\x12%\n!COMPONENT_ERROR_CODE_CONFIG_ERROR\x10\x12\x12?\n;COMPONENT_ERROR_CODE_ILLEGAL_COMPONENT_STATE_CODE_REQUESTED\x10\x13\x12.\n*COMPONENT_ERROR_CODE_HARDWARE_INACCESSIBLE\x10\x14\x12!\n\x1d\x43OMPONENT_ERROR_CODE_INTERNAL\x10\x15\x12%\n!COMPONENT_ERROR_CODE_UNAUTHORIZED\x10\x16\x12\x41\n=COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_STATION\x10(\x12<\n8COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_UNPLUGGED_FROM_EV\x10)\x12\x36\n2COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_LOCK_FAILED\x10*\x12\x32\n.COMPONENT_ERROR_CODE_EV_CHARGING_CABLE_INVALID\x10+\x12\x31\n-COMPONENT_ERROR_CODE_EV_CONSUMER_INCOMPATIBLE\x10,\x12*\n&COMPONENT_ERROR_CODE_BATTERY_IMBALANCE\x10\x32\x12(\n$COMPONENT_ERROR_CODE_BATTERY_LOW_SOH\x10\x33\x12,\n(COMPONENT_ERROR_CODE_BATTERY_BLOCK_ERROR\x10\x34\x12\x31\n-COMPONENT_ERROR_CODE_BATTERY_CONTROLLER_ERROR\x10\x35\x12,\n(COMPONENT_ERROR_CODE_BATTERY_RELAY_ERROR\x10\x36\x12\x33\n/COMPONENT_ERROR_CODE_BATTERY_CALIBRATION_NEEDED\x10\x38\x12\x32\n.COMPONENT_ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED\x10<b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'frequenz.api.common.v1.microgrid.components.components_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_COMPONENTCATEGORY']._serialized_start=2502
  _globals['_COMPONENTCATEGORY']._serialized_end=3019
  _globals['_COMPONENTSTATUS']._serialized_start=3021
  _globals['_COMPONENTSTATUS']._serialized_end=3132
  _globals['_COMPONENTSTATECODE']._serialized_start=3135
  _globals['_COMPONENTSTATECODE']._serialized_end=4050
  _globals['_COMPONENTERRORCODE']._serialized_start=4053
  _globals['_COMPONENTERRORCODE']._serialized_end=5678
  _globals['_COMPONENTCATEGORYMETADATAVARIANT']._serialized_start=645
  _globals['_COMPONENTCATEGORYMETADATAVARIANT']._serialized_end=1162
  _globals['_COMPONENT']._serialized_start=1165
  _globals['_COMPONENT']._serialized_end=1697
  _globals['_METRICCONFIGBOUNDS']._serialized_start=1700
  _globals['_METRICCONFIGBOUNDS']._serialized_end=1839
  _globals['_COMPONENTCONNECTION']._serialized_start=1842
  _globals['_COMPONENTCONNECTION']._serialized_end=2000
  _globals['_COMPONENTDATA']._serialized_start=2003
  _globals['_COMPONENTDATA']._serialized_end=2187
  _globals['_COMPONENTSTATE']._serialized_start=2190
  _globals['_COMPONENTSTATE']._serialized_end=2499
# @@protoc_insertion_point(module_scope)
