"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz definitions for EV chargers.

Copyright:
Copyright 2023 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _EvChargerType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EvChargerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EvChargerType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    EV_CHARGER_TYPE_UNSPECIFIED: _EvChargerType.ValueType  # 0
    """Default type."""
    EV_CHARGER_TYPE_AC: _EvChargerType.ValueType  # 1
    """The EV charging station supports AC charging only."""
    EV_CHARGER_TYPE_DC: _EvChargerType.ValueType  # 2
    """The EV charging station supports DC charging only."""
    EV_CHARGER_TYPE_HYBRID: _EvChargerType.ValueType  # 3
    """The EV charging station supports both AC and DC."""

class EvChargerType(_EvChargerType, metaclass=_EvChargerTypeEnumTypeWrapper):
    """Enumerated EV charger types."""

EV_CHARGER_TYPE_UNSPECIFIED: EvChargerType.ValueType  # 0
"""Default type."""
EV_CHARGER_TYPE_AC: EvChargerType.ValueType  # 1
"""The EV charging station supports AC charging only."""
EV_CHARGER_TYPE_DC: EvChargerType.ValueType  # 2
"""The EV charging station supports DC charging only."""
EV_CHARGER_TYPE_HYBRID: EvChargerType.ValueType  # 3
"""The EV charging station supports both AC and DC."""
global___EvChargerType = EvChargerType

@typing.final
class EvCharger(google.protobuf.message.Message):
    """A representation of an EV chaging station."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    type: global___EvChargerType.ValueType
    """The EV charger type."""
    def __init__(
        self,
        *,
        type: global___EvChargerType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["type", b"type"]) -> None: ...

global___EvCharger = EvCharger
