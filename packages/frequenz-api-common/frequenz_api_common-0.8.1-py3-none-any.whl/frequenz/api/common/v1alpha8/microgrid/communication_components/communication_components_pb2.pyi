"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz microgrid communication components definitions.

Copyright:
Copyright 2025 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CommunicationComponentStateCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CommunicationComponentStateCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommunicationComponentStateCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    COMMUNICATION_COMPONENT_STATE_CODE_UNSPECIFIED: _CommunicationComponentStateCode.ValueType  # 0
    """Default unset value."""
    COMMUNICATION_COMPONENT_STATE_CODE_UNKNOWN: _CommunicationComponentStateCode.ValueType  # 1
    """The component's internal status is unknown."""
    COMMUNICATION_COMPONENT_STATE_CODE_ONLINE: _CommunicationComponentStateCode.ValueType  # 2
    """The component is powered on and responding to network traffic."""
    COMMUNICATION_COMPONENT_STATE_CODE_OFFLINE: _CommunicationComponentStateCode.ValueType  # 3
    """The component is powered off, unreachable, or administratively disabled."""
    COMMUNICATION_COMPONENT_STATE_CODE_CONNECTING: _CommunicationComponentStateCode.ValueType  # 4
    """The component is in the process of establishing connections."""
    COMMUNICATION_COMPONENT_STATE_CODE_DISCONNECTING: _CommunicationComponentStateCode.ValueType  # 5
    """The component is in the process of shutting down connections."""
    COMMUNICATION_COMPONENT_STATE_CODE_MAINTENANCE: _CommunicationComponentStateCode.ValueType  # 6
    """The component is undergoing maintenance (e.g., firmware upgrade)."""
    COMMUNICATION_COMPONENT_STATE_CODE_DEGRADED: _CommunicationComponentStateCode.ValueType  # 7
    """The component is up but experiencing degraded performance (e.g., high packet loss)."""

class CommunicationComponentStateCode(_CommunicationComponentStateCode, metaclass=_CommunicationComponentStateCodeEnumTypeWrapper):
    """Defines the high-level operational state of a communication component.
    These codes can be used in a one-shot snapshot to show its current condition.
    """

COMMUNICATION_COMPONENT_STATE_CODE_UNSPECIFIED: CommunicationComponentStateCode.ValueType  # 0
"""Default unset value."""
COMMUNICATION_COMPONENT_STATE_CODE_UNKNOWN: CommunicationComponentStateCode.ValueType  # 1
"""The component's internal status is unknown."""
COMMUNICATION_COMPONENT_STATE_CODE_ONLINE: CommunicationComponentStateCode.ValueType  # 2
"""The component is powered on and responding to network traffic."""
COMMUNICATION_COMPONENT_STATE_CODE_OFFLINE: CommunicationComponentStateCode.ValueType  # 3
"""The component is powered off, unreachable, or administratively disabled."""
COMMUNICATION_COMPONENT_STATE_CODE_CONNECTING: CommunicationComponentStateCode.ValueType  # 4
"""The component is in the process of establishing connections."""
COMMUNICATION_COMPONENT_STATE_CODE_DISCONNECTING: CommunicationComponentStateCode.ValueType  # 5
"""The component is in the process of shutting down connections."""
COMMUNICATION_COMPONENT_STATE_CODE_MAINTENANCE: CommunicationComponentStateCode.ValueType  # 6
"""The component is undergoing maintenance (e.g., firmware upgrade)."""
COMMUNICATION_COMPONENT_STATE_CODE_DEGRADED: CommunicationComponentStateCode.ValueType  # 7
"""The component is up but experiencing degraded performance (e.g., high packet loss)."""
global___CommunicationComponentStateCode = CommunicationComponentStateCode

class _CommunicationComponentDiagnosticCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CommunicationComponentDiagnosticCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommunicationComponentDiagnosticCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNSPECIFIED: _CommunicationComponentDiagnosticCode.ValueType  # 0
    """Default value; no specific diagnostic is specified."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNREACHABLE: _CommunicationComponentDiagnosticCode.ValueType  # 1
    """Component is unreachable (e.g., no heartbeat from device, network down)."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNKNOWN: _CommunicationComponentDiagnosticCode.ValueType  # 2
    """Communication component is unknown. This could happen in cases where the
    status could be read from the component, but it could not be identified
    as a known state.
    """
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_AUTHENTICATION_ERR: _CommunicationComponentDiagnosticCode.ValueType  # 3
    """Authentication error (e.g., invalid credentials, certificate issues)."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_CONFIGURATION_ERR: _CommunicationComponentDiagnosticCode.ValueType  # 4
    """Configuration error detected (e.g., invalid VLAN, IP conflict)."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_PACKET_LOSS: _CommunicationComponentDiagnosticCode.ValueType  # 5
    """High packet loss detected over a sustained period."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_HIGH_LATENCY: _CommunicationComponentDiagnosticCode.ValueType  # 6
    """Excessive latency observed (e.g., ping time above threshold)."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_HARDWARE_GENERIC_FAULT: _CommunicationComponentDiagnosticCode.ValueType  # 7
    """Hardware fault reported by device (e.g., port error, cable disconnected)."""
    COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_OVER_TEMPERATURE: _CommunicationComponentDiagnosticCode.ValueType  # 8
    """Hardware fault due to overheating."""

class CommunicationComponentDiagnosticCode(_CommunicationComponentDiagnosticCode, metaclass=_CommunicationComponentDiagnosticCodeEnumTypeWrapper):
    """Enumerated diagnostic codes for communication components.

    These codes indicate common network- or device-level faults that may affect
    connectivity.
    """

COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNSPECIFIED: CommunicationComponentDiagnosticCode.ValueType  # 0
"""Default value; no specific diagnostic is specified."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNREACHABLE: CommunicationComponentDiagnosticCode.ValueType  # 1
"""Component is unreachable (e.g., no heartbeat from device, network down)."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_UNKNOWN: CommunicationComponentDiagnosticCode.ValueType  # 2
"""Communication component is unknown. This could happen in cases where the
status could be read from the component, but it could not be identified
as a known state.
"""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_AUTHENTICATION_ERR: CommunicationComponentDiagnosticCode.ValueType  # 3
"""Authentication error (e.g., invalid credentials, certificate issues)."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_CONFIGURATION_ERR: CommunicationComponentDiagnosticCode.ValueType  # 4
"""Configuration error detected (e.g., invalid VLAN, IP conflict)."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_PACKET_LOSS: CommunicationComponentDiagnosticCode.ValueType  # 5
"""High packet loss detected over a sustained period."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_HIGH_LATENCY: CommunicationComponentDiagnosticCode.ValueType  # 6
"""Excessive latency observed (e.g., ping time above threshold)."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_HARDWARE_GENERIC_FAULT: CommunicationComponentDiagnosticCode.ValueType  # 7
"""Hardware fault reported by device (e.g., port error, cable disconnected)."""
COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_OVER_TEMPERATURE: CommunicationComponentDiagnosticCode.ValueType  # 8
"""Hardware fault due to overheating."""
global___CommunicationComponentDiagnosticCode = CommunicationComponentDiagnosticCode

class _CommunicationComponentCategory:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CommunicationComponentCategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommunicationComponentCategory.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    COMMUNICATION_COMPONENT_CATEGORY_UNSPECIFIED: _CommunicationComponentCategory.ValueType  # 0
    """Unspecified communication component category.

    !!! caution
        This default value should never be used explicitly and indicates that
        the category has not been properly defined.
    """
    COMMUNICATION_COMPONENT_CATEGORY_MODBUS_GATEWAY: _CommunicationComponentCategory.ValueType  # 1
    """Modbus Gateway used for protocol translation and managing Modbus
    communication.
    """
    COMMUNICATION_COMPONENT_CATEGORY_ROUTER: _CommunicationComponentCategory.ValueType  # 2
    """LTE Router providing cellular connectivity (LTE, 4G, 5G) for the microgrid."""
    COMMUNICATION_COMPONENT_CATEGORY_ETHERNET_SWITCH: _CommunicationComponentCategory.ValueType  # 3
    """Ethernet Switch enabling wired network connections within the microgrid."""
    COMMUNICATION_COMPONENT_CATEGORY_DIO_GATEWAY: _CommunicationComponentCategory.ValueType  # 4
    """Digital Input/Output (DIO) Gateway enabling communication and control
    of digital signals between microgrid devices.
    """
    COMMUNICATION_COMPONENT_CATEGORY_PLC: _CommunicationComponentCategory.ValueType  # 5
    """Programmable Logic Controller (PLC) used for automation tasks,
    process control, and operational logic in the microgrid.
    """
    COMMUNICATION_COMPONENT_CATEGORY_SERIAL_GATEWAY: _CommunicationComponentCategory.ValueType  # 6
    """Serial Gateway (RS-232, RS-485, etc.) facilitating serial communication
    between legacy equipment and modern network infrastructures.
    """

class CommunicationComponentCategory(_CommunicationComponentCategory, metaclass=_CommunicationComponentCategoryEnumTypeWrapper):
    """`CommunicationComponentCategory` enumerates possible types of communication
    components within the microgrid.

    Categories help distinguish communication devices according to their roles,
    capabilities, and protocols they handle within the microgrid infrastructure.
    """

COMMUNICATION_COMPONENT_CATEGORY_UNSPECIFIED: CommunicationComponentCategory.ValueType  # 0
"""Unspecified communication component category.

!!! caution
    This default value should never be used explicitly and indicates that
    the category has not been properly defined.
"""
COMMUNICATION_COMPONENT_CATEGORY_MODBUS_GATEWAY: CommunicationComponentCategory.ValueType  # 1
"""Modbus Gateway used for protocol translation and managing Modbus
communication.
"""
COMMUNICATION_COMPONENT_CATEGORY_ROUTER: CommunicationComponentCategory.ValueType  # 2
"""LTE Router providing cellular connectivity (LTE, 4G, 5G) for the microgrid."""
COMMUNICATION_COMPONENT_CATEGORY_ETHERNET_SWITCH: CommunicationComponentCategory.ValueType  # 3
"""Ethernet Switch enabling wired network connections within the microgrid."""
COMMUNICATION_COMPONENT_CATEGORY_DIO_GATEWAY: CommunicationComponentCategory.ValueType  # 4
"""Digital Input/Output (DIO) Gateway enabling communication and control
of digital signals between microgrid devices.
"""
COMMUNICATION_COMPONENT_CATEGORY_PLC: CommunicationComponentCategory.ValueType  # 5
"""Programmable Logic Controller (PLC) used for automation tasks,
process control, and operational logic in the microgrid.
"""
COMMUNICATION_COMPONENT_CATEGORY_SERIAL_GATEWAY: CommunicationComponentCategory.ValueType  # 6
"""Serial Gateway (RS-232, RS-485, etc.) facilitating serial communication
between legacy equipment and modern network infrastructures.
"""
global___CommunicationComponentCategory = CommunicationComponentCategory

@typing.final
class CommunicationComponent(google.protobuf.message.Message):
    """`CommunicationComponent` represents a communication component within a
    microgrid.

    Communication components are networked devices responsible for enabling
    communication between electrical components, sensors, controllers, and other
    network devices.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MICROGRID_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    IP_ADDRESSES_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Unique identifier of the communication component."""
    microgrid_id: builtins.int
    """Unique identifier of the parent microgrid."""
    name: builtins.str
    """Human-readable name of the communication component."""
    category: global___CommunicationComponentCategory.ValueType
    """Category identifying the type of the communication component."""
    @property
    def ip_addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of IP addresses assigned to this communication component."""

    def __init__(
        self,
        *,
        id: builtins.int = ...,
        microgrid_id: builtins.int = ...,
        name: builtins.str = ...,
        category: global___CommunicationComponentCategory.ValueType = ...,
        ip_addresses: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["category", b"category", "id", b"id", "ip_addresses", b"ip_addresses", "microgrid_id", b"microgrid_id", "name", b"name"]) -> None: ...

global___CommunicationComponent = CommunicationComponent

@typing.final
class CommunicationComponentDiagnostic(google.protobuf.message.Message):
    """Represents an error or warning condition reported by a microgrid
    communication component.

    This message extends a standardized diagnostic code with optional
    vendor-specific codes and contextual information for troubleshooting.

    !!! example "Typical Communication Component Warning"
        ```json
        {
          "diagnosticCode": "COMMUNICATION_COMPONENT_DIAGNOSTIC_CODE_CONFIGURATION_ERR",
          "vendorDiagnosticCode": "ERR_1002",
          "message": "VLAN mismatch detected on port 3"
        }
        ```

    !!! note "Vendor-Specific Codes"
        When available, `vendor_error_code` reflects manufacturer-defined error
        identifiers.
        These codes are vendor- and firmware-specific and must be interpreted
        using the vendor's official documentation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIAGNOSTIC_CODE_FIELD_NUMBER: builtins.int
    VENDOR_DIAGNOSTIC_CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    diagnostic_code: global___CommunicationComponentDiagnosticCode.ValueType
    """A standardized diagnostic code representing the category of the issue."""
    vendor_diagnostic_code: builtins.str
    """Optional vendor-provided code for more granular diagnostics."""
    message: builtins.str
    """Human-readable message providing additional context."""
    def __init__(
        self,
        *,
        diagnostic_code: global___CommunicationComponentDiagnosticCode.ValueType = ...,
        vendor_diagnostic_code: builtins.str | None = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_vendor_diagnostic_code", b"_vendor_diagnostic_code", "vendor_diagnostic_code", b"vendor_diagnostic_code"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_vendor_diagnostic_code", b"_vendor_diagnostic_code", "diagnostic_code", b"diagnostic_code", "message", b"message", "vendor_diagnostic_code", b"vendor_diagnostic_code"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_vendor_diagnostic_code", b"_vendor_diagnostic_code"]) -> typing.Literal["vendor_diagnostic_code"] | None: ...

global___CommunicationComponentDiagnostic = CommunicationComponentDiagnostic

@typing.final
class CommunicationComponentStateSnapshot(google.protobuf.message.Message):
    """A single snapshot of a communication component's state, diagnostics, and timing.

    !!! note "snapshot semantics"
        all fields in this message represent the component's view at one point
        in time, so there is only a single `snapshot_time`. any parallel reads
        happening to produce this data are collapsed under that timestamp.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_TIME_FIELD_NUMBER: builtins.int
    STATES_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def origin_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The UTC time when the state was originally captured."""

    @property
    def states(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___CommunicationComponentStateCode.ValueType]:
        """one or more high-level state codes active at snapshot_time.

        !!! note
            typical usage is a single state (e.g., online), but multiple may
            apply (e.g., connecting + degraded) if that makes sense.
        """

    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommunicationComponentDiagnostic]:
        """non-critical warnings detected for the component.

        !!! note
            warnings may coexist with an online state, indicating potential
            issues that do not prevent basic operation.
        """

    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommunicationComponentDiagnostic]:
        """critical errors currently affecting the component.

        !!! note
            an error state code should accompany entries here.
        """

    def __init__(
        self,
        *,
        origin_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        states: collections.abc.Iterable[global___CommunicationComponentStateCode.ValueType] | None = ...,
        warnings: collections.abc.Iterable[global___CommunicationComponentDiagnostic] | None = ...,
        errors: collections.abc.Iterable[global___CommunicationComponentDiagnostic] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["origin_time", b"origin_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["errors", b"errors", "origin_time", b"origin_time", "states", b"states", "warnings", b"warnings"]) -> None: ...

global___CommunicationComponentStateSnapshot = CommunicationComponentStateSnapshot
