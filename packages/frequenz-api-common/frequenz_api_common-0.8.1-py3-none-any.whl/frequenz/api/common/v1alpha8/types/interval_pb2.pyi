"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
A time interval filter.

Copyright 2025 Frequenz Energy-as-a-Service GmbH

Licensed under the MIT License (the "License");
you may not use this file except in compliance with the License.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Interval(google.protobuf.message.Message):
    """Represents a time interval filter.

    The interval includes the start time and excludes the end time.
    This follows the convention used in ISO 8601 for time intervals,
    Pandas slicing, and Python slicing: [start_time, end_time).

    * If `start_time` is omitted, the interval is
      considered unbounded at the start.
    * If `end_time` is omitted, the interval is
      considered unbounded at the end.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The beginning of the time interval (inclusive).

        Must be a UTC timestamp.
        """

    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The end of the time interval (exclusive).

        Must be a UTC timestamp.
        """

    def __init__(
        self,
        *,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["end_time", b"end_time", "start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["end_time", b"end_time", "start_time", b"start_time"]) -> None: ...

global___Interval = Interval
