* This file is autogenerated by optipopt.
accept_after_max_steps integer 0 -1 -1 maxint 1 9 Accept a trial point after maximal this number of steps even if it does not satisfy line search conditions.
accept_every_trial_step enumstr 0 "no" 1 9 Always accept the first trial step.
 "yes" 1
 "no" 1
acceptable_compl_inf_tol double 0 0.01 0 maxdouble 1 1 "Acceptance" threshold for the complementarity conditions.
acceptable_constr_viol_tol double 0 0.01 0 maxdouble 1 1 "Acceptance" threshold for the constraint violation.
acceptable_dual_inf_tol double 0 1e+10 0 maxdouble 1 1 "Acceptance" threshold for the dual infeasibility.
acceptable_iter integer 0 0 0 maxint 1 1 Number of "acceptable" iterates before triggering termination.
acceptable_obj_change_tol double 0 1e+20 0 maxdouble 1 1 "Acceptance" stopping criterion based on objective function change.
acceptable_tol double 0 1e-06 0 maxdouble 1 1 "Acceptable" convergence tolerance (relative).
adaptive_mu_globalization enumstr 0 "obj-constr-filter" 1 8 Globalization strategy for the adaptive mu selection mode.
 "kkt-error" 1 nonmonotone decrease of kkt-error
 "obj-constr-filter" 1 2-dim filter for objective and constraint violation
 "never-monotone-mode" 1 disables globalization
adaptive_mu_kkt_norm_type enumstr 0 "2-norm-squared" 1 8 Norm used for the KKT error in the adaptive mu globalization strategies.
 "1-norm" 1 use the 1-norm (abs sum)
 "2-norm-squared" 1 use the 2-norm squared (sum of squares)
 "max-norm" 1 use the infinity norm (max)
 "2-norm" 1 use 2-norm
adaptive_mu_kkterror_red_fact double 0 0.9999 0 1 1 8 Sufficient decrease factor for "kkt-error" globalization strategy.
adaptive_mu_kkterror_red_iters integer 0 4 0 maxint 1 8 Maximum number of iterations requiring sufficient progress.
adaptive_mu_monotone_init_factor double 0 0.8 0 maxdouble 1 8 Determines the initial value of the barrier parameter when switching to the monotone mode.
adaptive_mu_restore_previous_iterate enumstr 0 "no" 1 8 Indicates if the previous accepted iterate should be restored if the monotone mode is entered.
 "yes" 1
 "no" 1
alpha_for_y enumstr 0 "primal" 1 9 Method to determine the step size for constraint multipliers (alpha_y) .
 "primal" 1 use primal step size
 "bound-mult" 1 use step size for the bound multipliers (good for LPs)
 "min" 1 use the min of primal and bound multipliers
 "max" 1 use the max of primal and bound multipliers
 "full" 1 take a full step of size one
 "min-dual-infeas" 1 choose step size minimizing new dual infeasibility
 "safer-min-dual-infeas" 1 like "min_dual_infeas", but safeguarded by "min" and "max"
 "primal-and-full" 1 use the primal step size, and full step if delta_x <= alpha_for_y_tol
 "dual-and-full" 1 use the dual step size, and full step if delta_x <= alpha_for_y_tol
 "acceptor" 1 Call LSAcceptor to get step size for y
alpha_for_y_tol double 0 10 0 maxdouble 1 9 Tolerance for switching to full equality multiplier steps.
alpha_min_frac double 0 0.05 0 1 1 9 Safety factor for the minimal step size (before switching to restoration phase).
alpha_red_factor double 0 0.5 0 1 1 9 Fractional reduction of the trial step size in the backtracking line search.
barrier_tol_factor double 0 10 0 maxdouble 1 8 Factor for mu in barrier stop test.
bound_frac double 0 0.01 0 0.5 1 5 Desired minimum relative distance from the initial point to bound.
bound_mult_init_method enumstr 0 "constant" 1 5 Initialization method for bound multipliers
 "constant" 1 set all bound multipliers to the value of bound_mult_init_val
 "mu-based" 1 initialize to mu_init/x_slack
bound_mult_init_val double 0 1 0 maxdouble 1 5 Initial value for the bound multipliers.
bound_mult_reset_threshold double 0 1000 0 maxdouble 1 12 Threshold for resetting bound multipliers after the restoration phase.
bound_push double 0 0.01 0 maxdouble 1 5 Desired minimum absolute distance from the initial point to bound.
bound_relax_factor double 0 1e-10 0 maxdouble 1 3 Factor for initial relaxation of the bounds.
check_derivatives_for_naninf enumstr 0 "no" 1 3 Indicates whether it is desired to check for Nan/Inf in derivative matrices
 "yes" 1
 "no" 1
compl_inf_tol double 0 0.0001 0 maxdouble 1 1 Desired threshold for the complementarity conditions.
constr_mult_init_max double 0 1000 0 maxdouble 1 5 Maximum allowed least-square guess of constraint multipliers.
constr_mult_reset_threshold double 0 0 0 maxdouble 1 12 Threshold for resetting equality and inequality multipliers after restoration phase.
constr_viol_tol double 0 1e-06 0 maxdouble 1 1 Desired threshold for the constraint and variable bound violation.
constraint_violation_norm_type enumstr 0 "1-norm" 1 9 Norm to be used for the constraint violation in the line search.
 "1-norm" 1 use the 1-norm
 "2-norm" 1 use the 2-norm
 "max-norm" 1 use the infinity norm
corrector_compl_avrg_red_fact double 0 1 0 maxdouble 1 9 Complementarity tolerance factor for accepting corrector step.
corrector_type enumstr 0 "none" 1 9 The type of corrector steps that should be taken.
 "none" 1 no corrector
 "affine" 1 corrector step towards mu=0
 "primal-dual" 1 corrector step towards current mu
delta double 0 1 0 maxdouble 1 9 Multiplier for constraint violation in the switching rule.
dependency_detection_with_rhs enumstr 0 "no" 1 3 Indicates if the right hand sides of the constraints should be considered in addition to gradients during dependency detection
 "yes" 1
 "no" 1
dependency_detector enumstr 0 "none" 1 3 Indicates which linear solver should be used to detect linearly dependent equality constraints.
 "none" 1 don't check; no extra work at beginning
 "mumps" 1 use MUMPS
diverging_iterates_tol double 0 1e+20 0 maxdouble 1 1 Threshold for maximal value of primal iterates.
dual_inf_tol double 0 1 0 maxdouble 1 1 Desired threshold for the dual infeasibility.
eta_phi double 0 1e-08 0 0.5 1 9 Relaxation factor in the Armijo condition.
evaluate_orig_obj_at_resto_trial enumstr 0 "yes" 1 12 Determines if the original objective function should be evaluated at restoration phase trial points.
 "yes" 1
 "no" 1
expect_infeasible_problem enumstr 0 "no" 1 12 Enable heuristics to quickly detect an infeasible problem.
 "yes" 1
 "no" 1
expect_infeasible_problem_ctol double 0 0.001 0 maxdouble 1 12 Threshold for disabling "expect_infeasible_problem" option.
expect_infeasible_problem_ytol double 0 1e+08 0 maxdouble 1 12 Multiplier threshold for activating "expect_infeasible_problem" option.
fast_step_computation enumstr 0 "no" 1 11 Indicates if the linear system should be solved quickly.
 "yes" 1
 "no" 1
filter_margin_fact double 0 1e-05 0 1 1 8 Factor determining width of margin for obj-constr-filter adaptive globalization strategy.
filter_max_margin double 0 1 0 maxdouble 1 8 Maximum width of margin in obj-constr-filter adaptive globalization strategy.
filter_reset_trigger integer 0 5 1 maxint 1 9 Number of iterations that trigger the filter reset.
first_hessian_perturbation double 0 0.0001 0 maxdouble 1 11 Size of first x-s perturbation tried.
fixed_mu_oracle enumstr 0 "average_compl" 1 8 Oracle for the barrier parameter when switching to fixed mode.
 "probing" 1 Mehrotra's probing heuristic
 "loqo" 1 LOQO's centrality rule
 "quality-function" 1 minimize a quality function
 "average_compl" 1 base on current average complementarity
fixed_variable_treatment enumstr 0 "make_parameter" 1 3 Determines how fixed variables should be handled.
 "make_parameter" 1 Remove fixed variable from optimization variables
 "make_parameter_nodual" 1 Remove fixed variable from optimization variables and do not compute bound multipliers for fixed variables
 "make_constraint" 1 Add equality constraints fixing variables
 "relax_bounds" 1 Relax fixing bound constraints
gamma_phi double 0 1e-08 0 1 1 9 Relaxation factor in the filter margin for the barrier function.
gamma_theta double 0 1e-05 0 1 1 9 Relaxation factor in the filter margin for the constraint violation.
hessian_approximation enumstr 0 "exact" 1 13 Indicates what Hessian information is to be used.
 "exact" 1 Use second derivatives provided by the NLP.
 "limited-memory" 1 Perform a limited-memory quasi-Newton approximation
hessian_approximation_space enumstr 0 "nonlinear-variables" 1 13 Indicates in which subspace the Hessian information is to be approximated.
 "nonlinear-variables" 1 only in space of nonlinear variables.
 "all-variables" 1 in space of all variables (without slacks)
honor_original_bounds enumstr 0 "no" 1 3 Indicates whether final points should be projected into original bounds.
 "yes" 1
 "no" 1
hsllib string 0 "libhsl.so" 1 10 Name of library containing HSL routines for load at runtime
inf_pr_output enumstr 0 "original" 1 2 Determines what value is printed in the "inf_pr" output column.
 "internal" 1 max-norm of violation of internal equality constraints
 "original" 1 maximal constraint violation in original NLP
jacobian_regularization_exponent double 0 0.25 0 maxdouble 1 11 Exponent for mu in the regularization for rank-deficient constraint Jacobians.
jacobian_regularization_value double 0 1e-08 0 maxdouble 1 11 Size of the regularization for rank-deficient constraint Jacobians.
kappa_d double 0 1e-05 0 maxdouble 1 3 Weight for linear damping term (to handle one-sided bounds).
kappa_sigma double 0 1e+10 0 maxdouble 1 9 Factor limiting the deviation of dual variables from primal estimates.
kappa_soc double 0 0.99 0 maxdouble 1 9 Factor in the sufficient reduction rule for second order correction.
least_square_init_duals enumstr 0 "no" 1 5 Least square initialization of all dual variables
 "no" 1 use bound_mult_init_val and least-square equality constraint multipliers
 "yes" 1 overwrite user-provided point with least-square estimates
least_square_init_primal enumstr 0 "no" 1 5 Least square initialization of the primal variables
 "no" 1 take user-provided point
 "yes" 1 overwrite user-provided point with least-square estimates
limited_memory_aug_solver enumstr 0 "sherman-morrison" 1 13 Strategy for solving the augmented system for low-rank Hessian.
 "sherman-morrison" 1 use Sherman-Morrison formula
 "extended" 1 use an extended augmented system
limited_memory_init_val double 0 1 0 maxdouble 1 13 Value for B0 in low-rank update.
limited_memory_init_val_max double 0 1e+08 0 maxdouble 1 13 Upper bound on value for B0 in low-rank update.
limited_memory_init_val_min double 0 1e-08 0 maxdouble 1 13 Lower bound on value for B0 in low-rank update.
limited_memory_initialization enumstr 0 "scalar1" 1 13 Initialization strategy for the limited memory quasi-Newton approximation.
 "scalar1" 1 sigma = s^Ty/s^Ts
 "scalar2" 1 sigma = y^Ty/s^Ty
 "scalar3" 1 arithmetic average of scalar1 and scalar2
 "scalar4" 1 geometric average of scalar1 and scalar2
 "constant" 1 sigma = limited_memory_init_val
limited_memory_max_history integer 0 6 0 maxint 1 13 Maximum size of the history for the limited quasi-Newton Hessian approximation.
limited_memory_max_skipping integer 0 2 1 maxint 1 13 Threshold for successive iterations where update is skipped.
limited_memory_special_for_resto enumstr 0 "no" 1 13 Determines if the quasi-Newton updates should be special during the restoration phase.
 "yes" 1
 "no" 1
limited_memory_update_type enumstr 0 "bfgs" 1 13 Quasi-Newton update formula for the limited memory quasi-Newton approximation.
 "bfgs" 1 BFGS update (with skipping)
 "sr1" 1 SR1 (not working well)
line_search_method enumstr 0 "filter" 1 9 Globalization method used in backtracking line search
 "filter" 1 Filter method
 "cg-penalty" 1 Chen-Goldfarb penalty function
 "penalty" 1 Standard penalty function
linear_scaling_on_demand enumstr 0 "yes" 1 10 Flag indicating that linear scaling is only done if it seems required.
 "yes" 1
 "no" 1
linear_solver enumstr 0 "mumps" 1 10 Linear solver used for step computations.
 "ma27" 1 IpoptH: use the Harwell routine MA27; Ipopt: load the Harwell routine MA27 from user-provided library
 "ma57" 1 IpoptH: use the Harwell routine MA57; Ipopt: load the Harwell routine MA57 from user-provided library
 "ma77" 1 load the Harwell routine HSL_MA77 from user-provided library
 "ma86" 1 IpoptH: use the Harwell routine HSL_MA86; Ipopt: load the Harwell routine HSL_MA86 from user-provided library
 "ma97" 1 IpoptH: use the Harwell routine HSL_MA97; Ipopt: load the Harwell routine HSL_MA97 from user-provided library
 "pardiso" 1 load the Pardiso package from pardiso-project.org from user-provided library at runtime
 "pardisomkl" 1 use the Pardiso package from Intel MKL
 "mumps" 1 use the Mumps package
linear_system_scaling enumstr 0 "none" 1 10 Method for scaling the linear system.
 "none" 1 no scaling will be performed
 "mc19" 1 IpoptH: use the Harwell routine MC19; Ipopt: load the Harwell routine MC19 from user-provided library
 "slack-based" 1 use the slack values
ma27_ignore_singularity enumstr 0 "no" 1 14 Whether to use MA27's ability to solve a linear system even if the matrix is singular.
 "yes" 1
 "no" 1
ma27_la_init_factor double 0 5 1 maxdouble 1 14 Real workspace memory for MA27.
ma27_liw_init_factor double 0 5 1 maxdouble 1 14 Integer workspace memory for MA27.
ma27_meminc_factor double 0 2 1 maxdouble 1 14 Increment factor for workspace size for MA27.
ma27_pivtol double 0 1e-08 0 1 1 14 Pivot tolerance for the linear solver MA27.
ma27_pivtolmax double 0 0.0001 0 1 1 14 Maximum pivot tolerance for the linear solver MA27.
ma27_print_level integer 0 0 0 4 1 14 Debug printing level for the linear solver MA27
ma27_skip_inertia_check enumstr 0 "no" 1 14 Whether to always pretend that inertia is correct.
 "yes" 1
 "no" 1
ma57_automatic_scaling enumstr 0 "no" 1 15 Controls whether to enable automatic scaling in MA57
 "yes" 1
 "no" 1
ma57_block_size integer 0 16 1 maxint 1 15 Controls block size used by Level 3 BLAS in MA57BD
ma57_node_amalgamation integer 0 16 1 maxint 1 15 Node amalgamation parameter
ma57_pivot_order integer 0 5 0 5 1 15 Controls pivot order in MA57
ma57_pivtol double 0 1e-08 0 1 1 15 Pivot tolerance for the linear solver MA57.
ma57_pivtolmax double 0 0.0001 0 1 1 15 Maximum pivot tolerance for the linear solver MA57.
ma57_pre_alloc double 0 1.05 1 maxdouble 1 15 Safety factor for work space memory allocation for the linear solver MA57.
ma57_print_level integer 0 0 0 maxint 1 15 Debug printing level for the linear solver MA57
ma57_small_pivot_flag integer 0 0 0 1 1 15 Handling of small pivots
ma77_buffer_lpage integer 0 4096 1 maxint 1 16 Number of scalars per MA77 in-core buffer page in the out-of-core solver MA77
ma77_buffer_npage integer 0 1600 1 maxint 1 16 Number of pages that make up MA77 buffer
ma77_file_size integer 0 2097152 1 maxint 1 16 Target size of each temporary file for MA77, scalars per type
ma77_maxstore integer 0 0 0 maxint 1 16 Maximum storage size for MA77 in-core mode
ma77_nemin integer 0 8 1 maxint 1 16 Node Amalgamation parameter
ma77_order enumstr 0 "metis" 1 16 Controls type of ordering used by MA77
 "amd" 1 Use the HSL_MC68 approximate minimum degree algorithm
 "metis" 1 Use the MeTiS nested dissection algorithm (if available)
ma77_print_level integer 0 -1 minint maxint 1 16 Debug printing level for the linear solver MA77
ma77_small double 0 1e-20 0 maxdouble 1 16 Zero Pivot Threshold
ma77_static double 0 0 0 maxdouble 1 16 Static Pivoting Threshold
ma77_u double 0 1e-08 0 0.5 1 16 Pivoting Threshold
ma77_umax double 0 0.0001 0 0.5 1 16 Maximum Pivoting Threshold
ma86_nemin integer 0 32 1 maxint 1 17 Node Amalgamation parameter
ma86_order enumstr 0 "auto" 1 17 Controls type of ordering
 "auto" 1 Try both AMD and MeTiS, pick best
 "amd" 1 Use the HSL_MC68 approximate minimum degree algorithm
 "metis" 1 Use the MeTiS nested dissection algorithm (if available)
ma86_print_level integer 0 -1 minint maxint 1 17 Debug printing level
ma86_scaling enumstr 0 "mc64" 1 17 Controls scaling of matrix
 "none" 1 Do not scale the linear system matrix
 "mc64" 1 Scale linear system matrix using MC64
 "mc77" 1 Scale linear system matrix using MC77 [1,3,0]
ma86_small double 0 1e-20 0 maxdouble 1 17 Zero Pivot Threshold
ma86_static double 0 0 0 maxdouble 1 17 Static Pivoting Threshold
ma86_u double 0 1e-08 0 0.5 1 17 Pivoting Threshold
ma86_umax double 0 0.0001 0 0.5 1 17 Maximum Pivoting Threshold
ma97_nemin integer 0 8 1 maxint 1 18 Node Amalgamation parameter
ma97_order enumstr 0 "auto" 1 18 Controls type of ordering
 "auto" 1 Use HSL_MA97 heuristic to guess best of AMD and METIS
 "best" 1 Try both AMD and MeTiS, pick best
 "amd" 1 Use the HSL_MC68 approximate minimum degree algorithm
 "metis" 1 Use the MeTiS nested dissection algorithm
 "matched-auto" 1 Use the HSL_MC80 matching with heuristic choice of AMD or METIS
 "matched-metis" 1 Use the HSL_MC80 matching based ordering with METIS
 "matched-amd" 1 Use the HSL_MC80 matching based ordering with AMD
ma97_print_level integer 0 -1 minint maxint 1 18 Debug printing level
ma97_scaling enumstr 0 "dynamic" 1 18 Specifies strategy for scaling
 "none" 1 Do not scale the linear system matrix
 "mc30" 1 Scale all linear system matrices using MC30
 "mc64" 1 Scale all linear system matrices using MC64
 "mc77" 1 Scale all linear system matrices using MC77 [1,3,0]
 "dynamic" 1 Dynamically select scaling according to rules specified by ma97_scalingX and ma97_switchX options.
ma97_scaling1 enumstr 0 "mc64" 1 18 First scaling.
 "none" 1 No scaling
 "mc30" 1 Scale linear system matrix using MC30
 "mc64" 1 Scale linear system matrix using MC64
 "mc77" 1 Scale linear system matrix using MC77 [1,3,0]
ma97_scaling2 enumstr 0 "mc64" 1 18 Second scaling.
 "none" 1 No scaling
 "mc30" 1 Scale linear system matrix using MC30
 "mc64" 1 Scale linear system matrix using MC64
 "mc77" 1 Scale linear system matrix using MC77 [1,3,0]
ma97_scaling3 enumstr 0 "mc64" 1 18 Third scaling.
 "none" 1 No scaling
 "mc30" 1 Scale linear system matrix using MC30
 "mc64" 1 Scale linear system matrix using MC64
 "mc77" 1 Scale linear system matrix using MC77 [1,3,0]
ma97_small double 0 1e-20 0 maxdouble 1 18 Zero Pivot Threshold
ma97_solve_blas3 enumstr 0 "no" 1 18 Controls if blas2 or blas3 routines are used for solve
 "no" 1 Use BLAS2 (faster, some implementations bit incompatible)
 "yes" 1 Use BLAS3 (slower)
ma97_switch1 enumstr 0 "od_hd_reuse" 1 18 First switch, determine when ma97_scaling1 is enabled.
 "never" 1 Scaling is never enabled.
 "at_start" 1 Scaling to be used from the very start.
 "at_start_reuse" 1 Scaling to be used on first iteration, then reused thereafter.
 "on_demand" 1 Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
 "on_demand_reuse" 1 As on_demand, but reuse scaling from previous itr
 "high_delay" 1 Scaling to be used after more than 0.05*n delays are present
 "high_delay_reuse" 1 Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
 "od_hd" 1 Combination of on_demand and high_delay
 "od_hd_reuse" 1 Combination of on_demand_reuse and high_delay_reuse
ma97_switch2 enumstr 0 "never" 1 18 Second switch, determine when ma97_scaling2 is enabled.
 "never" 1 Scaling is never enabled.
 "at_start" 1 Scaling to be used from the very start.
 "at_start_reuse" 1 Scaling to be used on first iteration, then reused thereafter.
 "on_demand" 1 Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
 "on_demand_reuse" 1 As on_demand, but reuse scaling from previous itr
 "high_delay" 1 Scaling to be used after more than 0.05*n delays are present
 "high_delay_reuse" 1 Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
 "od_hd" 1 Combination of on_demand and high_delay
 "od_hd_reuse" 1 Combination of on_demand_reuse and high_delay_reuse
ma97_switch3 enumstr 0 "never" 1 18 Third switch, determine when ma97_scaling3 is enabled.
 "never" 1 Scaling is never enabled.
 "at_start" 1 Scaling to be used from the very start.
 "at_start_reuse" 1 Scaling to be used on first iteration, then reused thereafter.
 "on_demand" 1 Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
 "on_demand_reuse" 1 As on_demand, but reuse scaling from previous itr
 "high_delay" 1 Scaling to be used after more than 0.05*n delays are present
 "high_delay_reuse" 1 Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
 "od_hd" 1 Combination of on_demand and high_delay
 "od_hd_reuse" 1 Combination of on_demand_reuse and high_delay_reuse
ma97_u double 0 1e-08 0 0.5 1 18 Pivoting Threshold
ma97_umax double 0 0.0001 0 0.5 1 18 Maximum Pivoting Threshold
max_cpu_time double 0 1e+20 0 maxdouble 1 1 Maximum number of CPU seconds.
max_filter_resets integer 0 5 0 maxint 1 9 Maximal allowed number of filter resets
max_hessian_perturbation double 0 1e+20 0 maxdouble 1 11 Maximum value of regularization parameter for handling negative curvature.
max_iter integer 0 maxint 0 maxint 1 1 Maximum number of iterations.
max_refinement_steps integer 0 10 0 maxint 1 11 Maximum number of iterative refinement steps per linear system solve.
max_resto_iter integer 0 3000000 0 maxint 1 12 Maximum number of successive iterations in restoration phase.
max_soc integer 0 4 0 maxint 1 9 Maximum number of second order correction trial steps at each iteration.
max_soft_resto_iters integer 0 10 0 maxint 1 12 Maximum number of iterations performed successively in soft restoration phase.
max_wall_time double 0 1e+10 0 maxdouble 1 1 Maximum number of walltime clock seconds.
mehrotra_algorithm enumstr 0 "no" 1 11 Indicates whether to do Mehrotra's predictor-corrector algorithm.
 "yes" 1
 "no" 1
min_hessian_perturbation double 0 1e-20 0 maxdouble 1 11 Smallest perturbation of the Hessian block.
min_refinement_steps integer 0 1 0 maxint 1 11 Minimum number of iterative refinement steps per linear system solve.
mu_allow_fast_monotone_decrease enumstr 0 "yes" 1 8 Allow skipping of barrier problem if barrier test is already met.
 "no" 1 Take at least one iteration per barrier problem even if the barrier test is already met for the updated barrier parameter
 "yes" 1 Allow fast decrease of mu if barrier test it met
mu_init double 0 0.1 0 maxdouble 1 8 Initial value for the barrier parameter.
mu_linear_decrease_factor double 0 0.2 0 1 1 8 Determines linear decrease rate of barrier parameter.
mu_max double 0 100000 0 maxdouble 1 8 Maximum value for barrier parameter.
mu_max_fact double 0 1000 0 maxdouble 1 8 Factor for initialization of maximum value for barrier parameter.
mu_min double 0 1e-11 0 maxdouble 1 8 Minimum value for barrier parameter.
mu_oracle enumstr 0 "quality-function" 1 8 Oracle for a new barrier parameter in the adaptive strategy.
 "probing" 1 Mehrotra's probing heuristic
 "loqo" 1 LOQO's centrality rule
 "quality-function" 1 minimize a quality function
mu_strategy enumstr 0 "adaptive" 1 8 Update strategy for barrier parameter.
 "monotone" 1 use the monotone (Fiacco-McCormick) strategy
 "adaptive" 1 use the adaptive update strategy
mu_superlinear_decrease_power double 0 1.5 1 2 1 8 Determines superlinear decrease rate of barrier parameter.
mu_target double 0 0 0 maxdouble 1 1 Desired value of complementarity.
mumps_dep_tol double 0 0 mindouble maxdouble 1 21 Threshold to consider a pivot at zero in detection of linearly dependent constraints with MUMPS.
mumps_mem_percent integer 0 1000 0 maxint 1 21 Percentage increase in the estimated working space for MUMPS.
mumps_permuting_scaling integer 0 7 0 7 1 21 Controls permuting and scaling in MUMPS
mumps_pivot_order integer 0 7 0 7 1 21 Controls pivot order in MUMPS
mumps_pivtol double 0 1e-06 0 1 1 21 Pivot tolerance for the linear solver MUMPS.
mumps_pivtolmax double 0 0.1 0 1 1 21 Maximum pivot tolerance for the linear solver MUMPS.
mumps_print_level integer 0 0 0 maxint 1 21 Debug printing level for the linear solver MUMPS
mumps_scaling integer 0 77 -2 77 1 21 Controls scaling in MUMPS
neg_curv_test_reg enumstr 0 "yes" 1 11 Whether to do the curvature test with the primal regularization (see Zavala and Chiang, 2014).
 "yes" 1 use primal regularization with the inertia-free curvature test
 "no" 1 use original IPOPT approach, in which the primal regularization is ignored
neg_curv_test_tol double 0 0 0 maxdouble 1 11 Tolerance for heuristic to ignore wrong inertia.
nlp_scaling_constr_target_gradient double 0 0 0 maxdouble 1 4 Target value for constraint function gradient size.
nlp_scaling_max_gradient double 0 100 0 maxdouble 1 4 Maximum gradient after NLP scaling.
nlp_scaling_method enumstr 0 "gradient-based" 1 4 Select the technique used for scaling the NLP.
 "none" 1 no problem scaling will be performed
 "gradient-based" 1 scale the problem so the maximum gradient at the starting point is nlp_scaling_max_gradient
 "equilibration-based" 1 scale the problem so that first derivatives are of order 1 at random points (GAMS/Ipopt: requires user-provided library with HSL routine MC19)
nlp_scaling_min_value double 0 1e-08 0 maxdouble 1 4 Minimum value of gradient-based scaling values.
nlp_scaling_obj_target_gradient double 0 0 0 maxdouble 1 4 Target value for objective function gradient size.
nu_inc double 0 0.0001 0 maxdouble 1 9 Increment of the penalty parameter.
nu_init double 0 1e-06 0 maxdouble 1 9 Initial value of the penalty parameter.
obj_max_inc double 0 5 1 maxdouble 1 9 Determines the upper bound on the acceptable increase of barrier objective function.
pardiso_iter_coarse_size integer 0 5000 1 maxint 1 19 Maximum Size of Coarse Grid Matrix
pardiso_iter_dropping_factor double 0 0.5 0 1 1 19 dropping value for incomplete factor
pardiso_iter_dropping_schur double 0 0.1 0 1 1 19 dropping value for sparsify schur complement factor
pardiso_iter_inverse_norm_factor double 0 5e+06 1 maxdouble 1 19 
pardiso_iter_max_levels integer 0 10 1 maxint 1 19 Maximum Size of Grid Levels
pardiso_iter_max_row_fill integer 0 10000000 1 maxint 1 19 max fill for each row
pardiso_iter_relative_tol double 0 1e-06 0 1 1 19 Relative Residual Convergence
pardiso_iterative enumstr 0 "no" 1 19 Switch for iterative solver in Pardiso library
 "yes" 1
 "no" 1
pardiso_matching_strategy enumstr 0 "complete+2x2" 1 19 Matching strategy to be used by Pardiso
 "complete" 1 Match complete (IPAR(13)=1)
 "complete+2x2" 1 Match complete+2x2 (IPAR(13)=2)
 "constraints" 1 Match constraints (IPAR(13)=3)
pardiso_max_droptol_corrections integer 0 4 1 maxint 1 19 Maximal number of decreases of drop tolerance during one solve.
pardiso_max_iter integer 0 500 1 maxint 1 19 Maximum number of Krylov-Subspace Iteration
pardiso_max_iterative_refinement_steps integer 0 0 minint maxint 1 19 Limit on number of iterative refinement steps.
pardiso_msglvl integer 0 0 0 maxint 1 19 Pardiso message level
pardiso_order enumstr 0 "metis" 1 19 Controls the fill-in reduction ordering algorithm for the input matrix.
 "amd" 1 minimum degree algorithm
 "one" 1
 "metis" 1 MeTiS nested dissection algorithm
 "pmetis" 1 parallel (OpenMP) version of MeTiS nested dissection algorithm
 "four" 1
 "five" 1
pardiso_redo_symbolic_fact_only_if_inertia_wrong enumstr 0 "no" 1 19 Toggle for handling case when elements were perturbed by Pardiso.
 "no" 1 Always redo symbolic factorization when elements were perturbed
 "yes" 1 Only redo symbolic factorization when elements were perturbed if also the inertia was wrong
pardiso_repeated_perturbation_means_singular enumstr 0 "no" 1 19 Whether to assume that matrix is singular if elements were perturbed after recent symbolic factorization.
 "yes" 1
 "no" 1
pardiso_skip_inertia_check enumstr 0 "no" 1 19 Whether to pretend that inertia is correct.
 "yes" 1
 "no" 1
pardisolib string 0 "libpardiso.so" 1 10 Name of library containing Pardiso routines (from pardiso-project.org) for load at runtime
pardisomkl_matching_strategy enumstr 0 "complete+2x2" 1 20 Matching strategy to be used by Pardiso
 "complete" 1 Match complete (IPAR(13)=1)
 "complete+2x2" 1 Match complete+2x2 (IPAR(13)=2)
 "constraints" 1 Match constraints (IPAR(13)=3)
pardisomkl_max_iterative_refinement_steps integer 0 1 minint maxint 1 20 Limit on number of iterative refinement steps.
pardisomkl_msglvl integer 0 0 0 maxint 1 20 Pardiso message level
pardisomkl_order enumstr 0 "metis" 1 20 Controls the fill-in reduction ordering algorithm for the input matrix.
 "amd" 1 minimum degree algorithm
 "one" 1 undocumented
 "metis" 1 MeTiS nested dissection algorithm
 "pmetis" 1 parallel (OpenMP) version of MeTiS nested dissection algorithm
pardisomkl_redo_symbolic_fact_only_if_inertia_wrong enumstr 0 "no" 1 20 Toggle for handling case when elements were perturbed by Pardiso.
 "no" 1 Always redo symbolic factorization when elements were perturbed
 "yes" 1 Only redo symbolic factorization when elements were perturbed if also the inertia was wrong
pardisomkl_repeated_perturbation_means_singular enumstr 0 "no" 1 20 Whether to assume that matrix is singular if elements were perturbed after recent symbolic factorization.
 "yes" 1
 "no" 1
pardisomkl_skip_inertia_check enumstr 0 "no" 1 20 Whether to pretend that inertia is correct.
 "yes" 1
 "no" 1
perturb_always_cd enumstr 0 "no" 1 11 Active permanent perturbation of constraint linearization.
 "yes" 1
 "no" 1
perturb_dec_fact double 0 0.333333 0 1 1 11 Decrease factor for x-s perturbation.
perturb_inc_fact double 0 8 1 maxdouble 1 11 Increase factor for x-s perturbation.
perturb_inc_fact_first double 0 100 1 maxdouble 1 11 Increase factor for x-s perturbation for very first perturbation.
print_advanced_options enumstr 0 "no" 1 2 whether to print also advanced options
 "yes" 1
 "no" 1
print_eval_error enumstr 0 "yes" 1 2 Switch to enable printing information about function evaluation errors into the GAMS listing file.
 "no" 1
 "yes" 1
print_frequency_iter integer 0 1 1 maxint 1 2 Determines at which iteration frequency the summarizing iteration output line should be printed.
print_frequency_time double 0 0 0 maxdouble 1 2 Determines at which time frequency the summarizing iteration output line should be printed.
print_info_string enumstr 0 "no" 1 2 Enables printing of additional info string at end of iteration output.
 "yes" 1
 "no" 1
print_level integer 0 5 0 12 1 2 Output verbosity level.
print_options_mode enumstr 0 "text" 1 2 format in which to print options documentation
 "text" 1 Ordinary text
 "latex" 1 LaTeX formatted
 "doxygen" 1 Doxygen (markdown) formatted
print_timing_statistics enumstr 0 "no" 1 2 Switch to print timing statistics.
 "yes" 1
 "no" 1
quality_function_balancing_term enumstr 0 "none" 1 8 The balancing term included in the quality function for centrality.
 "none" 1 no balancing term is added
 "cubic" 1 Max(0,Max(dual_inf,primal_inf)-compl)^3
quality_function_centrality enumstr 0 "none" 1 8 The penalty term for centrality that is included in quality function.
 "none" 1 no penalty term is added
 "log" 1 complementarity * the log of the centrality measure
 "reciprocal" 1 complementarity * the reciprocal of the centrality measure
 "cubed-reciprocal" 1 complementarity * the reciprocal of the centrality measure cubed
quality_function_max_section_steps integer 0 8 0 maxint 1 8 Maximum number of search steps during direct search procedure determining the optimal centering parameter.
quality_function_norm_type enumstr 0 "2-norm-squared" 1 8 Norm used for components of the quality function.
 "1-norm" 1 use the 1-norm (abs sum)
 "2-norm-squared" 1 use the 2-norm squared (sum of squares)
 "max-norm" 1 use the infinity norm (max)
 "2-norm" 1 use 2-norm
quality_function_section_qf_tol double 0 0 0 1 1 8 Tolerance for the golden section search procedure determining the optimal centering parameter (in the function value space).
quality_function_section_sigma_tol double 0 0.01 0 1 1 8 Tolerance for the section search procedure determining the optimal centering parameter (in sigma space).
recalc_y enumstr 0 "no" 1 9 Tells the algorithm to recalculate the equality and inequality multipliers as least square estimates.
 "no" 1 use the Newton step to update the multipliers
 "yes" 1 use least-square multiplier estimates
recalc_y_feas_tol double 0 1e-06 0 maxdouble 1 9 Feasibility threshold for recomputation of multipliers.
replace_bounds enumstr 0 "no" 1 7 Whether all variable bounds should be replaced by inequality constraints
 "yes" 1
 "no" 1
report_mininfeas_solution enumstr 0 "no" 1 2 Switch to report intermediate solution with minimal constraint violation to GAMS if the final solution is not feasible.
 "no" 1
 "yes" 1
required_infeasibility_reduction double 0 0.9 0 1 1 12 Required reduction of infeasibility before leaving restoration phase.
residual_improvement_factor double 0 1 0 maxdouble 1 11 Minimal required reduction of residual test ratio in iterative refinement.
residual_ratio_max double 0 1e-10 0 maxdouble 1 11 Iterative refinement tolerance
residual_ratio_singular double 0 1e-05 0 maxdouble 1 11 Threshold for declaring linear system singular after failed iterative refinement.
resto_failure_feasibility_threshold double 0 0 0 maxdouble 1 12 Threshold for primal infeasibility to declare failure of restoration phase.
resto_penalty_parameter double 0 1000 0 maxdouble 1 12 Penalty parameter in the restoration phase objective function.
resto_proximity_weight double 0 1 0 maxdouble 1 12 Weighting factor for the proximity term in restoration phase objective.
rho double 0 0.1 0 1 1 9 Value in penalty parameter update formula.
s_max double 0 100 0 maxdouble 1 1 Scaling threshold for the NLP error.
s_phi double 0 2.3 1 maxdouble 1 9 Exponent for linear barrier function model in the switching rule.
s_theta double 0 1.1 1 maxdouble 1 9 Exponent for current constraint violation in the switching rule.
sigma_max double 0 100 0 maxdouble 1 8 Maximum value of the centering parameter.
sigma_min double 0 1e-06 0 maxdouble 1 8 Minimum value of the centering parameter.
skip_corr_if_neg_curv enumstr 0 "yes" 1 9 Whether to skip the corrector step in negative curvature iteration.
 "yes" 1
 "no" 1
skip_corr_in_monotone_mode enumstr 0 "yes" 1 9 Whether to skip the corrector step during monotone barrier parameter mode.
 "yes" 1
 "no" 1
slack_bound_frac double 0 0.01 0 0.5 1 5 Desired minimum relative distance from the initial slack to bound.
slack_bound_push double 0 0.01 0 maxdouble 1 5 Desired minimum absolute distance from the initial slack to bound.
slack_move double 0 1.81899e-12 0 maxdouble 1 9 Correction size for very small slacks.
soc_method integer 0 0 0 1 1 9 Ways to apply second order correction
soft_resto_pderror_reduction_factor double 0 0.9999 0 maxdouble 1 12 Required reduction in primal-dual error in the soft restoration phase.
start_with_resto enumstr 0 "no" 1 12 Whether to switch to restoration phase in first iteration.
 "yes" 1
 "no" 1
tau_min double 0 0.99 0 1 1 8 Lower bound on fraction-to-the-boundary parameter tau.
theta_max_fact double 0 10000 0 maxdouble 1 9 Determines upper bound for constraint violation in the filter.
theta_min_fact double 0 0.0001 0 maxdouble 1 9 Determines constraint violation threshold in the switching rule.
timing_statistics enumstr 0 "no" 1 7 Indicates whether to measure time spend in components of Ipopt and NLP evaluation
 "yes" 1
 "no" 1
tiny_step_tol double 0 2.22045e-15 0 maxdouble 1 9 Tolerance for detecting numerically insignificant steps.
tiny_step_y_tol double 0 0.01 0 maxdouble 1 9 Tolerance for quitting because of numerically insignificant steps.
tol double 0 1e-08 0 maxdouble 1 1 Desired convergence tolerance (relative).
warm_start_bound_frac double 0 0.001 0 0.5 1 6 same as bound_frac for the regular initializer
warm_start_bound_push double 0 0.001 0 maxdouble 1 6 same as bound_push for the regular initializer
warm_start_init_point enumstr 0 "no" 1 6 Warm-start for initial point
 "no" 1 do not use the warm start initialization
 "yes" 1 use the warm start initialization
warm_start_mult_bound_push double 0 0.001 0 maxdouble 1 6 same as mult_bound_push for the regular initializer
warm_start_mult_init_max double 0 1e+06 mindouble maxdouble 1 6 Maximum initial value for the equality multipliers.
warm_start_slack_bound_frac double 0 0.001 0 0.5 1 6 same as slack_bound_frac for the regular initializer
warm_start_slack_bound_push double 0 0.001 0 maxdouble 1 6 same as slack_bound_push for the regular initializer
warm_start_target_mu double 0 0 mindouble maxdouble 1 6 
watchdog_shortened_iter_trigger integer 0 10 0 maxint 1 9 Number of shortened iterations that trigger the watchdog.
watchdog_trial_iter_max integer 0 3 1 maxint 1 9 Maximum number of watchdog iterations.
*
* indicator section
*
myeolchar EOLCOMM #
indicator SEPARATOR " "
indicator STRINGQUOTE 
*
* Groups
*
gr_Termination group 1 1 Termination
gr_Output group 2 1 Output
gr_NLP group 3 1 NLP
gr_NLP_Scaling group 4 1 NLP Scaling
gr_Initialization group 5 1 Initialization
gr_Warm_Start group 6 1 Warm Start
gr_Miscellaneous group 7 1 Miscellaneous
gr_Barrier_Parameter_Update group 8 1 Barrier Parameter Update
gr_Line_Search group 9 1 Line Search
gr_Linear_Solver group 10 1 Linear Solver
gr_Step_Calculation group 11 1 Step Calculation
gr_Restoration_Phase group 12 1 Restoration Phase
gr_Hessian_Approximation group 13 1 Hessian Approximation
gr_MA27_Linear_Solver group 14 1 MA27 Linear Solver
gr_MA57_Linear_Solver group 15 1 MA57 Linear Solver
gr_MA77_Linear_Solver group 16 1 MA77 Linear Solver
gr_MA86_Linear_Solver group 17 1 MA86 Linear Solver
gr_MA97_Linear_Solver group 18 1 MA97 Linear Solver
gr_Pardiso__pardiso_project_org__Linear_Solver group 19 1 Pardiso (pardiso-project.org) Linear Solver
gr_Pardiso__MKL__Linear_Solver group 20 1 Pardiso (MKL) Linear Solver
gr_Mumps_Linear_Solver group 21 1 Mumps Linear Solver
