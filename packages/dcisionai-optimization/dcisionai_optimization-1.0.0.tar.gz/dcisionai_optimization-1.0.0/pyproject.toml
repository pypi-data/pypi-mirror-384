[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dcisionai-optimization"
version = "1.0.0"
description = "Optimization Intelligence for AI Workflows via Model Context Protocol (MCP)"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DcisionAI", email = "contact@dcisionai.com"}
]
maintainers = [
    {name = "DcisionAI", email = "contact@dcisionai.com"}
]
keywords = [
    "optimization",
    "mathematical-programming", 
    "mcp",
    "model-context-protocol",
    "ai",
    "artificial-intelligence",
    "decision-making",
    "operations-research",
    "linear-programming",
    "manufacturing",
    "healthcare",
    "retail",
    "marketing",
    "financial",
    "logistics",
    "energy"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "requests>=2.28.0",
    "numpy>=1.21.0",
    "scipy>=1.9.0",
    "pandas>=1.5.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
    "asyncio-mqtt>=0.13.0",
    "websockets>=11.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://www.dcisionai.com"
Documentation = "https://docs.dcisionai.com"
Repository = "https://github.com/dcisionai/dcisionai-mcp-platform"
"Bug Tracker" = "https://github.com/dcisionai/dcisionai-mcp-platform/issues"
Changelog = "https://github.com/dcisionai/dcisionai-mcp-platform/blob/main/CHANGELOG.md"

[project.scripts]
dcisionai-mcp = "dcisionai_mcp_server.robust_mcp:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mcp.*",
    "requests.*",
    "numpy.*",
    "scipy.*",
    "pandas.*",
    "fastapi.*",
    "uvicorn.*",
    "websockets.*",
    "rich.*",
    "typer.*",
]
ignore_missing_imports = true
