# pyproject.toml

# ==============================================================================
# Build System Configuration (PEP 517)
# ------------------------------------------------------------------------------
# This section is mandatory. It tells tools like pip what build system to use.
# `setuptools` is a classic and robust choice. `hatch`, `flit`, or `poetry`
# are other popular alternatives.
# ==============================================================================
[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"


# ==============================================================================
# Project Metadata (PEP 621)
# ------------------------------------------------------------------------------
# This is the modern, standardized way to define your project's core metadata.
# It replaces the need for most arguments in a setup.py file.
# ==============================================================================
[project]
name = "pymfoil"
# version = "0.0.1"  # Add this placeholder version
dynamic = ["version"]
authors = [
  {name = "N. Papadakis", email = "npapnet@gmail.com"},
]
description = "A Python package for aerodynamic airfoil analysis based on mfoil."
readme = "README.md"
requires-python = ">=3.8"
license = { text="MIT License" }
keywords = ["airfoil", "aerodynamics", "naca", "engineering"]

# Classifiers help users find your project on PyPI.
# Full list: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]

# Core dependencies required for your package to run.
dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "scipy",
]

# URLs that are displayed on your project's PyPI page.
[project.urls]
Homepage = "https://github.com/npapnet/pymfoil"
"Bug Tracker" = "https://github.com/npapnet/pymfoil/issues"
Repository = "https://github.com/npapnet/pymfoil"
Documentation = "https://npapnet.github.io/pymfoil/"
Source = "https://github.com/npapnet/pymfoil"


# ==============================================================================
# Optional Dependencies (Extras)
# ------------------------------------------------------------------------------
# These are sets of dependencies that are not required for the basic
# functionality but are needed for specific tasks like development or testing.
# They can be installed using `pip install .[dev]` or `pip install pymfoil[test]`.
# ==============================================================================
[project.optional-dependencies]
# dev = [
#     "pytest",        # For running tests
#     "ruff",          # High-performance linter and formatter
#     "mypy",          # For static type checking
#     "black",         # Opinionated code formatter (can be replaced by ruff format)
# ]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]
test = ["pytest"]

# Entry points are scripts that can be run from the command line.
[project.scripts]
# pymfoil_gui = "pymfoil.__main__:main"
#  WORK IN progress


# ==============================================================================
# Tool-specific Configurations
# ------------------------------------------------------------------------------
# This is where you configure various development tools. Centralizing
# configuration here keeps your project root directory clean.
# ==============================================================================

# --- Setuptools Configuration ---
# Tells setuptools how to find your package's code.
[tool.setuptools]
# This automatically finds your packages, assuming you have a `src/pymfoil`
# or `pymfoil` directory structure.
# packages = { find = {} }
packages = ["pymfoil"]


[tool.setuptools.package-dir]
"" = "src"


[tool.setuptools.dynamic]
version = {attr = "pymfoil.__version__"}


# # --- Ruff Linter/Formatter Configuration ---
# # Ruff is an extremely fast Python linter and code formatter, written in Rust.
# [tool.ruff]
# line-length = 88
# target-version = "py38"

# [tool.ruff.lint]
# # See https://docs.astral.sh/ruff/rules/ for all rules
# select = [
#     "E",  # pycodestyle errors
#     "F",  # pyflakes
#     "W",  # pycodestyle warnings
#     "I",  # isort (import sorting)
#     "UP", # pyupgrade
# ]
# ignore = []


# --- Pytest Configuration ---
[tool.pytest.ini_options]
minversion = "6.0"
# -v: verbose, -ra: report extra test summary info for all but passed tests
addopts = "-ra -v"
testpaths = [
    "tests",
]


# # --- Mypy (Static Type Checker) Configuration ---
# [tool.mypy]
# python_version = "3.8"
# warn_return_any = true
# warn_unused_configs = true

