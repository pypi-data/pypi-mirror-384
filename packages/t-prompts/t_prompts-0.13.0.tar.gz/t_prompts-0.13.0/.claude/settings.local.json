{
  "permissions": {
    "allow": [
      "Bash(python -m pytest tests/ -v)",
      "Bash(python:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "mcp__ide__getDiagnostics",
      "Bash(./test_notebooks.sh:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv run ruff:*)",
      "Bash(uv run:*)",
      "Bash(python3.14:*)",
      "Bash(gh pr create:*)",
      "Bash(pnpm install)",
      "Bash(pnpm build)",
      "Bash(pnpm test)",
      "Bash(pnpm lint)",
      "WebFetch(domain:playwright.dev)",
      "Bash(find:*)",
      "Bash(for file in \"demos/03-ir-visualization.ipynb\" \"demos/widget-test.ipynb\" \"developer/json-format.md\" \"developer/widget-architecture.md\" \"implementation-plan.md\" \"dedent-implementation-plan.md\" \"Widget proposal.md\" \"code-review.md\")",
      "Bash(do)",
      "Bash(if [ -f \"docs/$file\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(pnpm vitest run:*)",
      "Bash(node build.js)",
      "Bash(for nb in docs/demos/03-ir-visualization.ipynb docs/demos/topics/{few-shot-prompts,source-mapping,source-location,format-spec-mini-language,render-hints,advanced-composition}.ipynb)",
      "Bash(do echo \"=== $nb ===\" uv run jupyter nbconvert --execute --to notebook --inplace --ExecutePreprocessor.timeout=60 \"$nb\")",
      "Bash(./nb.sh:*)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(git mv:*)",
      "Bash(pnpm --filter @t-prompts/widgets lint:*)",
      "Bash(pnpm --filter @t-prompts/widgets test)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm --filter @t-prompts/widgets build)",
      "Bash(node:*)",
      "Bash(pnpm --filter @t-prompts/widgets test CodeView)",
      "Read(//Users/nehal/src/**)",
      "WebSearch",
      "Bash(chmod:*)",
      "Bash(./release.sh:*)",
      "Bash(uv sync:*)",
      "Bash(ls:*)",
      "WebFetch(domain:mdit-plugins.github.io)",
      "Bash(git rm:*)",
      "Bash(git check-ignore:*)",
      "Bash(pnpm test:coverage:*)"
    ],
    "deny": [],
    "ask": []
  }
}
