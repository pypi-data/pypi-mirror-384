# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .amount import Amount
from .create_credit_grant_interface_expiration import CreateCreditGrantInterfaceExpiration
from .credit_grant_subject_granting_config_interface import CreditGrantSubjectGrantingConfigInterface


class CreateCreditGrantInterface(UniversalBaseModel):
    name: str
    amount: Amount
    metadata: typing.Optional[typing.Dict[str, str]] = None
    subject_granting_config: typing.Optional[CreditGrantSubjectGrantingConfigInterface] = None
    schedule: typing.Optional[typing.Optional[typing.Any]] = None
    expiration: typing.Optional[CreateCreditGrantInterfaceExpiration] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
