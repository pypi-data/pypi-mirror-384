# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .price import Price
from .pricing_metric_interface import PricingMetricInterface


class SimpleUsageBasedRateInterface(UniversalBaseModel):
    id: str
    code: str = pydantic.Field()
    """
    Code of this rate to be used for overrides and external reference.
    """

    name: str
    description: str
    price: Price
    included_units: int
    pricing_metric: PricingMetricInterface

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
