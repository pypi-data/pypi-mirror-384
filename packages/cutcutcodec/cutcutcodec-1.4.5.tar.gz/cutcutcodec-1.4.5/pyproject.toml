[build-system]
requires = ["setuptools", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "cutcutcodec"
description = "video editing software"
dynamic = ["version"]
requires-python = ">=3.11,<3.15"
authors = [
  {name = "Robin RICHARD (robinechuca)", email = "serveurpython.oz@gmail.com"},
]
maintainers = [
  {name = "Robin RICHARD (robinechuca)", email = "serveurpython.oz@gmail.com"},
]
dependencies = [  # https://packaging.python.org/en/latest/specifications/dependency-specifiers/#dependency-specifiers
  "av>=14.1.0",  # to support float32 and yuv444p16le formats
  "black",
  "cairosvg",
  "click",
  "lpips",  # optional for lpips metric
  "networkx>=3.0",
  "numpy>=2.0",
  "opencv-contrib-python-headless",
  "pip>=23.0",
  "sympy>=1.10",
  "torch>=2.1",
  "torchvision",  # optional for uvq metric
  "tqdm",
  "unidecode",
]
readme = "README.rst"
license = {file = "LICENSE"}  # GPL-3.0-or-later
# license = "GPL-3.0-or-later"
keywords = [
  "audio",
  "colorspace",
  "effect",
  "eotf",
  "equation",
  "ffmpeg",
  "filtering",
  "fractal",
  "gamut",
  "graph",
  "lpips",
  "mandelbrot",
  "movie",
  "open source",
  "psnr",
  "ssim",
  "uvq",
  "video editing",
  "vmaf",
  "wiener",
]
classifiers = [  # all classifiers https://pypi.org/classifiers/
  "Development Status :: 5 - Production/Stable",
  "Environment :: GPU",
  "Environment :: X11 Applications :: Qt",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: C",
  "Programming Language :: Python :: 3",
  "Topic :: Multimedia :: Graphics :: Editors",
  "Topic :: Multimedia :: Graphics :: Graphics Conversion",
  "Topic :: Multimedia :: Sound/Audio :: Analysis",
  "Topic :: Multimedia :: Sound/Audio :: Conversion",
  "Topic :: Multimedia :: Sound/Audio :: Editors",
  "Topic :: Multimedia :: Sound/Audio :: Mixers",
  "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
  "Topic :: Multimedia :: Video :: Conversion",
  "Topic :: Multimedia :: Video :: Display",
  "Topic :: Multimedia :: Video :: Non-Linear Editor",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Software Development :: Code Generators",
]

[project.optional-dependencies]
doc = [
  "ipykernel",  # for nbsphinx
  "mathjax",  # for sphinx latex math
  "nbsphinx",
  "pandoc",  # for nbsphinx (sudo apt install pandoc)
  "recommonmark",
  "sphinx-copybutton",
  "sphinx-inline-tabs",
  "sphinx-rtd-dark-mode",
  "sphinx-rtd-theme",
  "sphinx==7.4.7",  # 8.2.0 failed on readthedoc
  "sphinxcontrib-video",
  "sphinxext-opengraph",
  "streamlit[charts]",  # for demo
]
test = [
  "colour-science",
  "jupyter",
  "matplotlib",
  "pydocstyle<=6.1.1",  # 6.1.2 bug on pylama 8.4.1
  "pylama[all,toml]",
  "pytest",
]

[project.scripts]
cutcutcodec = "cutcutcodec.__main__:main"
cutcutcodec-test = "cutcutcodec.testing.__main__:main"

[project.gui-scripts]
cutcutcodec-doc = "cutcutcodec.doc:main"

[project.urls]
Changelog = "https://framagit.org/robinechuca/cutcutcodec/-/blob/main/docs/changelog.rst"
Documentation = "https://cutcutcodec.readthedocs.io/stable"
Repository = "https://framagit.org/robinechuca/cutcutcodec"

[tool.setuptools.packages.find]
where = [""]
exclude = ["docs", "examples", "media"]

[tool.setuptools.package-data]
"*" = [
  "*.c",
  "*.h",
  "examples/*",
  "media/**/*",
  # "models/*",  # automaticaly downloaded
]

[tool.setuptools]
py-modules = ["c_build"]

[tool.setuptools.cmdclass]
build_py = "c_build.Build"

[tool.setuptools.dynamic]
version = {attr = "cutcutcodec.__version__"}

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:Module already imported:pytest.PytestAssertRewriteWarning"
]
markers = [
  "slow: marks tests as slow",
]

[tool.pylama]
sort = "E,W,D"
skip = "./doc, ./dist*"
linters = "mccabe,pycodestyle,pydocstyle,pyflakes,mypy,pylint"
# E226 false detection pycodestyle 2.11.1
# D212 and D213 are mutualy exclusive, PEP 257 is in favor of D212
# D211 and D203 are mutualy exclusive, PEP 257 is in favor of D211
# D107 is in contradiction with the numpy doc convention
# D413 disable in the google, numpy, and pep257 convention
# D301 use r""" if any backslashes in a docstring
ignore = "E226,D213,D203,D107,D413,D301"
max_line_length = 100

[tool.mypy]
cache_dir = "~/.cache/mypy_cache"
ignore_missing_imports = true
show_error_codes = true

[tool.pylint]
# E0611 failed to import c compiled modules
# C0103 method name not conform because qt impose the name
# E1101 'no member' failed in all c extensions
# E1102 'not callable' false detection in pylint 3.1.0
# E1133 'no iterable' false positive in pylint 3.1.0
# E1135 'doesn't support membership test' false positive in pylint 3.1.0
# C0415 'Import outside toplevel' to allow lazy import
disable = "E0611,C0103,E1101,E1102,E1133,E1135,C0415"
extension-pkg-allow-list = ["av"]
