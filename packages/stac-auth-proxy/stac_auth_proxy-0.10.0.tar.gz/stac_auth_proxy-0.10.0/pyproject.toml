[project]
authors = [{name = "Anthony Lukach", email = "anthonylukach@gmail.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "License :: OSI Approved :: MIT License",
]
dependencies = [
  "boto3>=1.37.16",
  "brotli>=1.1.0",
  "cql2>=0.3.6",
  "cryptography>=44.0.1",
  "fastapi>=0.115.5",
  "httpx[http2]>=0.28.0",
  "jinja2>=3.1.4",
  "pydantic-settings>=2.6.1",
  "pyjwt>=2.10.1",
  "starlette-cramjam>=0.4.0",
  "uvicorn>=0.32.1",
]
description = "STAC authentication proxy with FastAPI"
keywords = ["STAC", "FastAPI", "Authentication", "Proxy"]
license = {file = "LICENSE"}
name = "stac-auth-proxy"
readme = "README.md"
requires-python = ">=3.9"
version = "0.10.0"

[project.optional-dependencies]
docs = [
    "griffe-fieldz>=0.3.0",
    "griffe-inherited-docstrings>=1.1.1",
    "markdown-gfm-admonition>=0.1.1",
    "mkdocs>=1.6.1",
    "mkdocs-api-autonav>=0.3.0",
    "mkdocs-material[imaging]>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
]
lambda = [
    "mangum>=0.19.0",
]

[tool.coverage.run]
branch = true
source = ["src/stac_auth_proxy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
    "*/htmlcov/*",
    "*/lambda.py",  # Lambda entry point not tested in unit tests
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.isort]
known_first_party = ["stac_auth_proxy"]
profile = "black"

[tool.ruff.lint]
ignore = ["E501", "D203", "D205", "D212"]
select = ["D", "E", "F"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.12.0"]

[dependency-groups]
dev = [
  "jwcrypto>=1.5.6",
  "mypy>=1.3.0",
  "pre-commit>=3.5.0",
  "pytest-asyncio>=0.25.1",
  "pytest-cov>=5.0.0",
  "pytest-xdist>=3.6.1",
  "pytest>=8.3.3",
  "ruff>=0.0.238",
  "starlette-cramjam>=0.4.0",
  "types-simplejson",
  "types-attrs",
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src/stac_auth_proxy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
