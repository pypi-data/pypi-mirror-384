apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: example-extra-resources
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1beta1
    kind: XR
  mode: Pipeline
  pipeline:
  - step: render-templates
    functionRef:
      name: function-pythonic
    input:
      apiVersion: pythonic.fn.fortra.com/v1alpha1
      kind: Composite
      composite: |
        class Composite(BaseComposite):
          def compose(self):
            buckets = self.requireds.bucket('s3.aws.upbound.io/v1beta1', 'Bucket', name=f"my-awesome-{self.spec.environment}-bucket")
            for ix, bucket in enumerate(buckets):
              r = self.resources[f"bucket-configmap-{ix}"]('kubernetes.crossplane.io/v1alpha1', 'Object')
              r.spec.providerConfigRef.name = 'kubernetes'
              manifest = r.spec.forProvider.manifest
              manifest.apiVersion = 'v1'
              manifest.kind = 'ConfigMap'
              manifest.metadata.name = f"{bucket.metadata.name}-bucket"
              manifest.data.bucket = bucket.status.atProvider.id
            self.status.dummy = 'cool-status'
