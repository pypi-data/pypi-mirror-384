apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: python-conditions.example.crossplane.io
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1
    kind: XR
  mode: Pipeline
  pipeline:

  - step: python-update-conditions
    functionRef:
      name: function-pythonic
    input:
      apiVersion: pythonic.fn.fortra.com/v1alpha1
      kind: Composite
      step: conditions
      composite: |
        class Composite(BaseComposite):
          def compose(self):
            self.conditions.TestCondition('InstallFail', 'failed to install', False)
            self.conditions.ConditionTrue('TrueCondition', 'we are true', True, True)
            self.conditions.DatabaseReady('Ready', 'Database is ready', True)

            # Alternative ways to configure cconditions
            #self.conditions.TestCondition2(reason='InstallFail2', message='failed to install 2', status=False)
            #self.conditions['TestCondition3'](reason='InstallFail3', message='failed to install 3', status=False)
            #self.conditions.TestCondition4.reason = 'InstallFail4'
            #self.conditions.TestCondition4.message = 'failed to install 4'            
            #self.conditions.TestCondition4.status = False

  - step: automatically-detect-ready-composed-resources
    functionRef:
      name: function-auto-ready
