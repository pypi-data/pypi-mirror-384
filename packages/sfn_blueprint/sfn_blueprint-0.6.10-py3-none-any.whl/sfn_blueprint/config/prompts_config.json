{
  "suggestions_generator": {
    "openai": {
      "main": {
        "system_prompt": "You are an AI expert specializing in data analysis and providing intelligent suggestions across various domains including feature engineering, data quality improvement, performance optimization, and more.",
        "user_prompt_template": "Analyze the following dataset and provide suggestions for {task_type}.\n\nDataset information:\nColumns: {columns}\nSample records: {sample_records}\nStatistical summary: {describe_dict}\nDomain category: {category}\n\nProvide specific, actionable suggestions that are relevant to the {task_type} task type."
      },
      "validation": {
        "system_prompt": "You are a validation expert for suggestions generation. Your task is to validate that the generated suggestions are relevant, specific, and actionable.",
        "user_prompt_template": "Validation Task:\nAgent: SFNSuggestionsGeneratorAgent\nTask: Validate the generated suggestions\n\nInput Given: A dataset containing columns and sample records from a dataframe\nExpected Output Type: List of suggestions\nExpected Output Structure: [\n  \"suggestion1\",\n  \"suggestion2\",\n  ...\n]\n\nThe suggestions should be relevant to the task_type (e.g., 'feature_suggestion') and category provided in the input. The suggestions should be clear, actionable, and derived from the provided dataframe columns, sample records, and statistical summaries.\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is a list of suggestions\n2. Suggestions are related to the input data and the task_type\n3. Suggestions are clear, actionable, and meaningful\n4. Content is logically valid and consistent with the provided data\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    },
    "cortex": {
      "main": {
        "system_prompt": "You are an AI expert specializing in data analysis and providing intelligent suggestions across various domains including feature engineering, data quality improvement, performance optimization, and more.",
        "user_prompt_template": "Analyze the following dataset and provide suggestions for {task_type}.\n\nDataset information:\nColumns: {columns}\nSample records: {sample_records}\nStatistical summary: {describe_dict}\nDomain category: {category}\n\nProvide specific, actionable suggestions that are relevant to the {task_type} task type."
      },
      "validation": {
        "system_prompt": "You are a validation expert for suggestions generation. Your task is to validate that the generated suggestions are relevant, specific, and actionable.",
        "user_prompt_template": "Validation Task:\nAgent: SFNSuggestionsGeneratorAgent\nTask: Validate the generated suggestions\n\nInput Given: A dataset containing columns and sample records from a dataframe\nExpected Output Type: List of suggestions\nExpected Output Structure: [\n  \"suggestion1\",\n  \"suggestion2\",\n  ...\n]\n\nThe suggestions should be relevant to the task_type (e.g., 'feature_suggestion') and category provided in the input. The suggestions should be clear, actionable, and derived from the provided dataframe columns, sample records, and statistical summaries.\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is a list of suggestions\n2. Suggestions are related to the input data and the task_type\n3. Suggestions are clear, actionable, and meaningful\n4. Content is logically valid and consistent with the provided data\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    },
    "anthropic": {
      "main": {
        "system_prompt": "You are Claude, an AI expert in data analysis and providing intelligent suggestions across various domains including feature engineering, data quality improvement, performance optimization, and more.",
        "user_prompt_template": "Analyze the following dataset and provide suggestions for {task_type}.\n\nDataset information:\nColumns: {columns}\nSample records: {sample_records}\nStatistical summary: {describe_dict}\nDomain category: {category}\n\nProvide specific, actionable suggestions that are relevant to the {task_type} task type."
      },
      "validation": {
        "system_prompt": "You are a validation expert for suggestions generation.",
        "user_prompt_template": "Validation Task:\nAgent: SFNSuggestionsGeneratorAgent\nTask: Validate the generated suggestions\n\nInput Given: A dataset containing columns and sample records from a dataframe\nExpected Output Type: List of suggestions\nExpected Output Structure: [\n  \"suggestion1\",\n  \"suggestion2\",\n  ...\n]\n\nThe suggestions should be relevant to the task_type (e.g., 'feature_suggestion') and category provided in the input. The suggestions should be clear, actionable, and derived from the provided dataframe columns, sample records, and statistical summaries.\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is a list of suggestions\n2. Suggestions are related to the input data and the task_type\n3. Suggestions are clear, actionable, and meaningful\n4. Content is logically valid and consistent with the provided data\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    }
  },
  "code_generator": {
    "openai": {
      "main": {
        "system_prompt": "You are a Python code generator for feature engineering tasks.",
        "user_prompt_template": "Generate Python code to implement the following feature engineering suggestion:\n\n{suggestion}\n\nDataset information:\nColumns: {columns}\nData types: {dtypes}\nSample records: {sample_records}\n\nThe code should work with a pandas DataFrame named 'df'.\nOnly provide the Python code necessary to implement the feature.\nDo not include any print statements or explanatory comments.\nEnsure the new feature is added to the 'df' DataFrame.\nDo not include any markdown formatting or code block indicators.\nMake sure that the column names etc. are as per the provided dataset and NO GENERALIZATION IS DONE.\nIf there is looping needed, provide the entire code.\nWrite the code diligently like a proper developer, don't cut corners."
      },
      "validation": {
        "system_prompt": "You are a validation expert for Python code generation. Your task is to validate that the generated code is correct, efficient, and follows best practices.",
        "user_prompt_template": "Validation Task:\nAgent: SFNFeatureCodeGeneratorAgent\nTask: Validate the generated Python code\n\nInput Given: A suggestion to implement, along with the columns, data types, and sample records from a dataset\nExpected Output Type: Python code\nExpected Output Structure: A valid Python function or code block implementing the suggestion\n\nThe code should:\n1. Be syntactically correct\n2. Implement the given suggestion appropriately based on the input columns, data types, and sample records\n3. Avoid unnecessary print statements and comments\n4. Be clean and concise (no excessive whitespace or redundant lines)\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is valid Python code\n2. Code implements the suggestion correctly and logically\n3. Code follows proper Python syntax and standards\n4. Code is clean and free from unnecessary print statements and comments\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    },
    "cortex": {
      "main": {
        "system_prompt": "You are a Python code generator for feature engineering tasks.",
        "user_prompt_template": "Generate Python code to implement the following feature engineering suggestion:\n\n{suggestion}\n\nDataset information:\nColumns: {columns}\nData types: {dtypes}\nSample records: {sample_records}\n\nThe code should work with a pandas DataFrame named 'df'.\nOnly provide the Python code necessary to implement the feature.\nDo not include any print statements or explanatory comments.\nEnsure the new feature is added to the 'df' DataFrame.\nDo not include any markdown formatting or code block indicators.\nMake sure that the column names etc. are as per the provided dataset and NO GENERALIZATION IS DONE.\nIf there is looping needed, provide the entire code.\nWrite the code diligently like a proper developer, don't cut corners."
      },
      "validation": {
        "system_prompt": "You are a validation expert for Python code generation. Your task is to validate that the generated code is correct, efficient, and follows best practices.",
        "user_prompt_template": "Validation Task:\nAgent: SFNFeatureCodeGeneratorAgent\nTask: Validate the generated Python code\n\nInput Given: A suggestion to implement, along with the columns, data types, and sample records from a dataset\nExpected Output Type: Python code\nExpected Output Structure: A valid Python function or code block implementing the suggestion\n\nThe code should:\n1. Be syntactically correct\n2. Implement the given suggestion appropriately based on the input columns, data types, and sample records\n3. Avoid unnecessary print statements and comments\n4. Be clean and concise (no excessive whitespace or redundant lines)\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is valid Python code\n2. Code implements the suggestion correctly and logically\n3. Code follows proper Python syntax and standards\n4. Code is clean and free from unnecessary print statements and comments\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    },
    "anthropic": {
      "main": {
        "system_prompt": "You are Claude, a Python expert specializing in feature engineering code generation.",
        "user_prompt_template": "Generate Python code to implement the following feature engineering suggestion:\n\n{suggestion}\n\nDataset information:\nColumns: {columns}\nData types: {dtypes}\nSample records: {sample_records}\n\nThe code should work with a pandas DataFrame named 'df'.\nOnly provide the Python code necessary to implement the feature.\nDo not include any print statements or explanatory comments.\nEnsure the new feature is added to the 'df' DataFrame.\nDo not include any markdown formatting or code block indicators.\nMake sure that the column names etc. are as per the provided dataset and NO GENERALIZATION IS DONE.\nIf there is looping needed, provide the entire code.\nWrite the code diligently like a proper developer, don't cut corners."
      },
      "validation": {
        "system_prompt": "You are a validation expert for Python code generation.",
        "user_prompt_template": "Validation Task:\nAgent: SFNFeatureCodeGeneratorAgent\nTask: Validate the generated Python code\n\nInput Given: A suggestion to implement, along with the columns, data types, and sample records from a dataset\nExpected Output Type: Python code\nExpected Output Structure: A valid Python function or code block implementing the suggestion\n\nThe code should:\n1. Be syntactically correct\n2. Implement the given suggestion appropriately based on the input columns, data types, and sample records\n3. Avoid unnecessary print statements and comments\n4. Be clean and concise (no excessive whitespace or redundant lines)\n\nActual Output:\n{actual_output}\n\nReturn TRUE only if:\n1. Output is valid Python code\n2. Code implements the suggestion correctly and logically\n3. Code follows proper Python syntax and standards\n4. Code is clean and free from unnecessary print statements and comments\n\nReturn FALSE otherwise.\n\nResponse (TRUE/FALSE only):"
      }
    }
  },
  "context_analyzer": {
    "openai": {
      "main": {
        "system_prompt": "You are an AI expert specializing in context analysis and intelligent recommendations for data processing agents. Your role is to analyze enriched context data and provide domain-specific, agent-specific, and context-aware recommendations without any hardcoded assumptions.",
        "user_prompt_template": "Analyze the following enriched context data and provide intelligent recommendations for the {agent_type} agent.\n\nContext Information:\nDomain: {domain}\nWorkflow Goal: {workflow_goal}\nData Sensitivity: {data_sensitivity}\nCompliance Requirements: {compliance_requirements}\nBusiness Context: {business_context}\nWorkflow Complexity: {workflow_complexity}\nRisk Level: {risk_level}\nData Files: {data_files}\nConstraints: {constraints}\nStakeholders: {stakeholders}\n\nProvide recommendations in the following JSON format:\n{{\n  \"data_processing\": [\"recommendation1\", \"recommendation2\"],\n  \"quality_checks\": [\"recommendation1\", \"recommendation2\"],\n  \"optimization_strategies\": [\"recommendation1\", \"recommendation2\"],\n  \"risk_mitigation\": [\"recommendation1\", \"recommendation2\"],\n  \"compliance_measures\": [\"recommendation1\", \"recommendation2\"],\n  \"performance_tuning\": [\"recommendation1\", \"recommendation2\"]\n}}\n\nBase your recommendations solely on the provided context data. Do not make assumptions about specific domains, compliance frameworks, or industry standards unless they are explicitly mentioned in the context. If context is insufficient, indicate that agents must analyze the available information to make appropriate decisions."
      }
    },
    "cortex": {
      "main": {
        "system_prompt": "You are an AI expert specializing in context analysis and intelligent recommendations for data processing agents. Your role is to analyze enriched context data and provide domain-specific, agent-specific, and context-aware recommendations without any hardcoded assumptions.",
        "user_prompt_template": "Analyze the following enriched context data and provide intelligent recommendations for the {agent_type} agent.\n\nContext Information:\nDomain: {domain}\nWorkflow Goal: {workflow_goal}\nData Sensitivity: {data_sensitivity}\nCompliance Requirements: {compliance_requirements}\nBusiness Context: {business_context}\nWorkflow Complexity: {workflow_complexity}\nRisk Level: {risk_level}\nData Files: {data_files}\nConstraints: {constraints}\nStakeholders: {stakeholders}\n\nProvide recommendations in the following JSON format:\n{{\n  \"data_processing\": [\"recommendation1\", \"recommendation2\"],\n  \"quality_checks\": [\"recommendation1\", \"recommendation2\"],\n  \"optimization_strategies\": [\"recommendation1\", \"recommendation2\"],\n  \"risk_mitigation\": [\"recommendation1\", \"recommendation2\"],\n  \"compliance_measures\": [\"recommendation1\", \"recommendation2\"],\n  \"performance_tuning\": [\"recommendation1\", \"recommendation2\"]\n}}\n\nBase your recommendations solely on the provided context data. Do not make assumptions about specific domains, compliance frameworks, or industry standards unless they are explicitly mentioned in the context. If context is insufficient, indicate that agents must analyze the available information to make appropriate decisions."
      }
    },
    "anthropic": {
      "main": {
        "system_prompt": "You are Claude, an AI expert specializing in context analysis and intelligent recommendations for data processing agents. Your role is to analyze enriched context data and provide domain-specific, agent-specific, and context-aware recommendations without any hardcoded assumptions.",
        "user_prompt_template": "Analyze the following enriched context data and provide intelligent recommendations for the {agent_type} agent.\n\nContext Information:\nDomain: {domain}\nWorkflow Goal: {workflow_goal}\nData Sensitivity: {data_sensitivity}\nCompliance Requirements: {compliance_requirements}\nBusiness Context: {business_context}\nWorkflow Complexity: {workflow_complexity}\nRisk Level: {risk_level}\nData Files: {data_files}\nConstraints: {constraints}\nStakeholders: {stakeholders}\n\nProvide recommendations in the following JSON format:\n{{\n  \"data_processing\": [\"recommendation1\", \"recommendation2\"],\n  \"quality_checks\": [\"recommendation1\", \"recommendation2\"],\n  \"optimization_strategies\": [\"recommendation2\"],\n  \"risk_mitigation\": [\"recommendation1\", \"recommendation2\"],\n  \"compliance_measures\": [\"recommendation1\", \"recommendation2\"],\n  \"performance_tuning\": [\"recommendation1\", \"recommendation2\"]\n}}\n\nBase your recommendations solely on the provided context data. Do not make assumptions about specific domains, compliance frameworks, or industry standards unless they are explicitly mentioned in the context. If context is insufficient, indicate that agents must analyze the available information to make appropriate decisions."
      }
    }
  }
}