[build-system]
requires = ["hatchling>=0.7", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "module-qc-database-tools"
dynamic = ["version"]
authors = [
    { name = "Jay Chan", email = "jay.chan@cern.ch" },
]
maintainers = [
    { name = "Giordon Stark", email = "kratsg@gmail.com" },
    { name = "Elisabetta Pianori", email = "elisabetta.pianori@cern.ch" },
    { name = "Lingxin Meng", email = "lingxin.meng@cern.ch" }
]


description = "Python wrapper to interface with LocalDB and Production DB for common tasks for pixel modules."
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.9"
dependencies = [
    "itkdb>=0.6.16",  # for interface with production database
    "pandas",
    "pyarrow",
    "typer",
    "pymongo>=4.0.0",
    "jsondiff",
    "jsbeautifier", # for printing prettier chip config: linebreaks vs size
    "rich",
    'urllib3>=1.26.20,<2; "el7.x86_64" in platform_release', # see https://gitlab.cern.ch/atlas-itk/sw/db/itkdb/-/issues/13
    'itksn >= 0.4.2', # for parsing serial numbers
    'influxdb', # for influxdbtool-retrieve
    "cachecontrol<=0.14.1", # until https://gitlab.cern.ch/atlas-itk/sw/db/itkdb/-/issues/18 is fixed
    "arrow",
    "packaging",
    "typing_extensions >=4.0; python_version<'3.10'",
    "module_qc_data_tools>=1.4.0rc4",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Development Status :: 1 - Planning",
]

[project.urls]
Homepage = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-database-tools"
"Bug Tracker" = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-database-tools/issues"
Source = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-database-tools"
"Documentation" = "https://atlas-itk-pixel-mqdbt.docs.cern.ch/2.9/"

[project.scripts]
module-qc-database-tools = "module_qc_database_tools.cli:app"
mqdbt = "module_qc_database_tools.cli:app"
generateYARRConfig = "module_qc_database_tools.cli.generate_yarr_config:app"
registerComponent =  "module_qc_database_tools.cli.register_component:app"
influxdbtool-retrieve = "module_qc_database_tools.cli.influxdbtool_retrieve:main"
localdbtool-retrieve = "module_qc_database_tools.cli.localdbtool_retrieve:main"
localdbtool-upload = "module_qc_database_tools.cli.localdbtool_upload:main"
run-full-qc = "module_qc_database_tools.cli.run_full_qc:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/module_qc_database_tools/_version.py"

[tool.hatch.envs.default]
dependencies = [
    "tbump>=6.7.0",
    "pylint",
    "build",
    "twine",
]
installer = "uv"

[tool.hatch.envs.hatch-uv]
dependencies = [
  "uv!=0.6.7", # https://github.com/astral-sh/uv/issues/12260
]

[tool.hatch.envs.default.scripts]
tag = "tbump {args}"
lint = "pylint src"
build = "python -m build"
validate = "twine check dist/*"
# https://github.com/linkchecker/linkchecker/issues/678
build-check = [
  "build",
  "validate",
]
upload = "twine upload dist/*"

[tool.hatch.envs.dev]
template = "dev"
# pylint and pytest needs to be installed into package environment
detached = false
dependencies = [
    "pytest >=6",
]

[tool.hatch.envs.dev.scripts]
test = "pytest -ra {args}"

[[tool.hatch.envs.dev.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.9"]

[tool.hatch.envs.docs]
template = "docs"
dependencies = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.4.0",
    # Plugins
    "mkdocs-minify-plugin>=0.5.0",
    "mkdocs-git-revision-date-localized-plugin>=1.1.0",
    "mkdocstrings[python]>=0.18",
    "mkdocs-redirects>=1.1.0",
    "mkdocs-glightbox>=0.3.0",
    "mike>=2.0.0",
    # Extensions
    "mkdocs-click>=0.8.0",
    "pymdown-extensions>=10.6.0",
    # Necessary for syntax highlighting in code blocks
    "pygments>=2.13.0",
    # Validation
    # https://github.com/linkchecker/linkchecker/pull/669#issuecomment-1267236287
    "linkchecker @ git+https://github.com/linkchecker/linkchecker.git@d9265bb71c2054bf57b8c5734a4825d62505c779",
    # auto-generation of docs
    "mkdocs-gen-files>=0.4",
    "mkdocs-literate-nav>=0.5.0",
    "mkdocs-section-index>=0.3.4",
    "mdx-truly-sane-lists", # for 2-space indented lists (https://github.com/mkdocs/mkdocs/issues/545)
    # formatting signatures
    "black>23",
    # https://github.com/mkdocs/mkdocs-click/issues/78
    "mkdocs-autorefs",
]

[tool.hatch.envs.docs.env-vars]
MKDOCS_CONFIG = "mkdocs.yml"
MKDOCS_BRANCH = "pages"
[tool.hatch.envs.docs.scripts]
# --strict disabled for now, see https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/issues/101
build = "mkdocs build --config-file {env:MKDOCS_CONFIG} --clean {args}"
#build = "mkdocs build --config-file {env:MKDOCS_CONFIG} --clean --strict {args}"
serve = "mkdocs serve --config-file {env:MKDOCS_CONFIG} --dev-addr localhost:8000 {args}"
ci-build = "mike deploy --config-file {env:MKDOCS_CONFIG} --branch {env:MKDOCS_BRANCH} --update-aliases {args}"
deploy = "ci-build --push"
validate = "linkchecker --config .linkcheckerrc site"
# https://github.com/linkchecker/linkchecker/issues/678
build-check = [
  "build --no-directory-urls",
  "validate",
]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
typing-modules = ["module_qc_database_tools.typing_compat"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.Callable".msg = "Use collections.abc.Callable instead."
"typing.Iterator".msg = "Use collections.abc.Iterator instead."
"typing.Mapping".msg = "Use collections.abc.Mapping instead."
"typing.Sequence".msg = "Use collections.abc.Sequence instead."
"typing.Set".msg = "Use collections.abc.Set instead."
"importlib.abc".msg = "Use sp_repo_review._compat.importlib.resources.abc instead."
"importlib.resources.abc".msg = "Use sp_repo_review._compat.importlib.resources.abc instead."

[tool.ruff.lint.per-file-ignores]
"src/module_qc_database_tools/cli/*.py" = ["B008"]

[tool.pylint]
py-version = "3.9"
ignore-paths= ["src/module_qc_database_tools/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
  # others we should ignore in general
  "invalid-name",
]
good-names="kB,PC_NTC,DeltaT,rx"

[tool.pylint.main]
ignore-paths = [
  "src/module_qc_database_tools/yarr/",
  "src/module_qc_database_tools/cli/localdbtool_upload.py",
  "src/module_qc_database_tools/cli/localdbtool_retrieve.py",
  "src/module_qc_database_tools/cli/influxdbtool_retrieve.py"
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  'ignore:unclosed file:ResourceWarning',  # itkdb
]

testpaths = ["tests"]
log_cli_level = "INFO"

[tool.repo-review]
ignore = [
  "GH", # only if using GitHub
  "PC140", "MY100", # no typehints used
  "RTD100",
  "PC180",  # https://github.com/scientific-python/cookie/issues/439
]
