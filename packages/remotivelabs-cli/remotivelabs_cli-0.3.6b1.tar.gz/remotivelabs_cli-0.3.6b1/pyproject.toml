[tool.poetry]
name = "remotivelabs-cli"
version = "0.3.6b1"
description = "CLI for operating RemotiveCloud and RemotiveBroker"
authors = ["Johan Rask <johan.rask@remotivelabs.com>"]
readme = "README.md"

packages = [{ include = "cli" }]

[tool.poetry.scripts]
remotive = "cli.remotive:app"

[tool.poetry.dependencies]
python = ">=3.9,<4"
trogon = ">=0.5.0"
typer = "0.12.5"
click = "<8.2.0"
remotivelabs-broker = "0.9.2b4"
rich = "~=13.7.0"
pyjwt = "~=2.6"
zeroconf = "~=0.127.0"
websocket-client = "~=1.6"
plotext = "~=5.2"
python-socketio = ">=4.6.1"
python-can = ">=4.3.1"
grpc-stubs = ">=1.53.0.5"
mypy-protobuf = ">=3.0.0"
types-requests = "^2.32.0.20240622"
pydantic = "^2.11.7"
email-validator = "^2.2.0"
requests = "^2.32.4"
asyncer = "^0.0.9"

[tool.poetry.group.test.dependencies]
pytest = "^8.3"
pytest-cov = "^5.0"
friendlywords = "^1.1.3"

[tool.poetry.group.lint.dependencies]
ruff = "^0.9.3"
mypy = "^1.13.0"

# This fails on windows on github so take a look the workflow, we do manual installation of poethepoet
# https://github.com/python-poetry/poetry/issues/10028
[tool.poetry.requires-plugins]
poethepoet = ">=0.34.0"

[tool.poe.tasks]
format = [{ cmd = "ruff format ." }, { cmd = "ruff check --fix ." }]
ruff = [{ cmd = "ruff check ." }, { cmd = "ruff format --check --diff ." }]
mypy = [{ cmd = "mypy -p cli" }, { cmd = "mypy -p tests" }]
lint = ["ruff", "mypy"]
test = { cmd = "pytest --cov" }
itest = { cmd = "pytest --cov --itests" }

[tool.pytest.ini_options]
markers = ["itests: run tests with custom flag"]

[tool.ruff]
line-length = 140

[tool.ruff.lint]
select = [
  "ARG",
  "B034",
  "C901",
  "E",
  "EXE",
  "F",
  "FA",
  "I",
  "N",
  "UP032",
  "RET",
  "W",
  "PL",
]
ignore = ['PLR2004']

[tool.mypy]
python_version = "3.9"
packages = ["cli", "tests"]
strict = true
disallow_untyped_calls = false
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
hide_error_codes = false

[[tool.mypy.overrides]]
module = "friendlywords.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "trogon.*"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
